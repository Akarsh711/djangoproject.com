{"parents": [{"link": "../../", "title": "Django internals"}, {"link": "../", "title": "Contributing to Django"}], "prev": {"link": "../bugs-and-features/", "title": "Reporting bugs and requesting features"}, "next": {"link": "../writing-code/", "title": "Writing code"}, "title": "Triaging tickets", "meta": {}, "body": "<div class=\"section\" id=\"s-triaging-tickets\">\n<span id=\"triaging-tickets\"></span><h1>Triaging tickets<a class=\"headerlink\" href=\"#triaging-tickets\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Django uses <a class=\"reference external\" href=\"https://code.djangoproject.com/\">Trac</a> for managing the work on the code base. Trac is a\ncommunity-tended garden of the bugs people have found and the features people\nwould like to see added. As in any garden, sometimes there are weeds to be\npulled and sometimes there are flowers and vegetables that need picking. We need\nyour help to sort out one from the other, and in the end, we all benefit\ntogether.</p>\n<p>Like all gardens, we can aspire to perfection, but in reality there\u2019s no such\nthing. Even in the most pristine garden there are still snails and insects.\nIn a community garden there are also helpful people who \u2013 with the best of\nintentions \u2013 fertilize the weeds and poison the roses. It\u2019s the job of the\ncommunity as a whole to self-manage, keep the problems to a minimum, and\neducate those coming into the community so that they can become valuable\ncontributing members.</p>\n<p>Similarly, while we aim for Trac to be a perfect representation of the state of\nDjango\u2019s progress, we acknowledge that this will not happen. By distributing\nthe load of Trac maintenance to the community, we accept that there will be\nmistakes. Trac is \u201cmostly accurate\u201d, and we give allowances for the fact that\nsometimes it will be wrong. That\u2019s okay. We\u2019re perfectionists with deadlines.</p>\n<p>We rely on the community to keep participating, keep tickets as accurate as\npossible, and raise issues for discussion on our mailing lists when there is\nconfusion or disagreement.</p>\n<p>Django is a community project, and every contribution helps. We can\u2019t do this\nwithout <strong>you</strong>!</p>\n<div class=\"section\" id=\"s-triage-workflow\">\n<span id=\"triage-workflow\"></span><h2>Triage workflow<a class=\"headerlink\" href=\"#triage-workflow\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Unfortunately, not all bug reports and feature requests in the ticket tracker\nprovide all the <a class=\"reference internal\" href=\"../bugs-and-features/\"><span class=\"doc\">required details</span></a>. A number of\ntickets have patches, but those patches don\u2019t meet all the requirements of a\n<a class=\"reference internal\" href=\"../writing-code/submitting-patches/#patch-style\"><span class=\"std std-ref\">good patch</span></a>.</p>\n<p>One way to help out is to <em>triage</em> tickets that have been created by other\nusers.</p>\n<p>Most of the workflow is based around the concept of a ticket\u2019s\n<a class=\"reference internal\" href=\"#triage-stages\"><span class=\"std std-ref\">triage stages</span></a>. Each stage describes where in its\nlifetime a given ticket is at any time. Along with a handful of flags, this\nattribute easily tells us what and who each ticket is waiting on.</p>\n<p>Since a picture is worth a thousand words, let\u2019s start there:</p>\n<a class=\"reference internal image-reference\" href=\"../../../_images/triage_process.svg\"><img alt=\"Django's ticket triage workflow\" height=\"501\" src=\"../../../_images/triage_process.svg\" width=\"400\" /></a>\n<p>We\u2019ve got two roles in this diagram:</p>\n<ul class=\"simple\">\n<li>Mergers: people with commit access who are responsible for making the\nfinal decision to merge a patch.</li>\n<li>Ticket triagers: anyone in the Django community who chooses to\nbecome involved in Django\u2019s development process. Our Trac installation\nis intentionally left open to the public, and anyone can triage tickets.\nDjango is a community project, and we encourage <a class=\"reference internal\" href=\"#how-can-i-help-with-triaging\"><span class=\"std std-ref\">triage by the\ncommunity</span></a>.</li>\n</ul>\n<p>By way of example, here we see the lifecycle of an average ticket:</p>\n<ul class=\"simple\">\n<li>Alice creates a ticket and sends an incomplete pull request (no tests,\nincorrect implementation).</li>\n<li>Bob reviews the pull request, marks the ticket as \u201cAccepted\u201d, \u201cneeds tests\u201d,\nand \u201cpatch needs improvement\u201d, and leaves a comment telling Alice how the\npatch could be improved.</li>\n<li>Alice updates the pull request, adding tests (but not changing the\nimplementation). She removes the two flags.</li>\n<li>Charlie reviews the pull request and resets the \u201cpatch needs improvement\u201d\nflag with another comment about improving the implementation.</li>\n<li>Alice updates the pull request, fixing the implementation. She removes the\n\u201cpatch needs improvement\u201d flag.</li>\n<li>Daisy reviews the pull request and marks the ticket as \u201cReady for checkin\u201d.</li>\n<li>Jacob, a <a class=\"reference internal\" href=\"../../organization/#mergers-team\"><span class=\"std std-ref\">merger</span></a>, reviews the pull request and merges\nit.</li>\n</ul>\n<p>Some tickets require much less feedback than this, but then again some tickets\nrequire much much more.</p>\n</div>\n<div class=\"section\" id=\"s-triage-stages\">\n<span id=\"s-id1\"></span><span id=\"triage-stages\"></span><span id=\"id1\"></span><h2>Triage stages<a class=\"headerlink\" href=\"#triage-stages\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Below we describe in more detail the various stages that a ticket may flow\nthrough during its lifetime.</p>\n<div class=\"section\" id=\"s-unreviewed\">\n<span id=\"unreviewed\"></span><h3>Unreviewed<a class=\"headerlink\" href=\"#unreviewed\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The ticket has not been reviewed by anyone who felt qualified to make a\njudgment about whether the ticket contained a valid issue, a viable feature,\nor ought to be closed for any of the various reasons.</p>\n</div>\n<div class=\"section\" id=\"s-accepted\">\n<span id=\"accepted\"></span><h3>Accepted<a class=\"headerlink\" href=\"#accepted\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The big gray area! The absolute meaning of \u201caccepted\u201d is that the issue\ndescribed in the ticket is valid and is in some stage of being worked on.\nBeyond that there are several considerations:</p>\n<ul>\n<li><p class=\"first\"><strong>Accepted + No Flags</strong></p>\n<p>The ticket is valid, but no one has submitted a patch for it yet. Often this\nmeans you could safely start writing a patch for it. This is generally more\ntrue for the case of accepted bugs than accepted features. A ticket for a bug\nthat has been accepted means that the issue has been verified by at least one\ntriager as a legitimate bug - and should probably be fixed if possible. An\naccepted new feature may only mean that one triager thought the feature would\nbe good to have, but this alone does not represent a consensus view or imply\nwith any certainty that a patch will be accepted for that feature. Seek more\nfeedback before writing an extensive patch if you are in doubt.</p>\n</li>\n<li><p class=\"first\"><strong>Accepted + Has Patch</strong></p>\n<p>The ticket is waiting for people to review the supplied patch. This means\ndownloading the patch and trying it out, verifying that it contains tests\nand docs, running the test suite with the included patch, and leaving\nfeedback on the ticket.</p>\n</li>\n<li><p class=\"first\"><strong>Accepted + Has Patch + Needs \u2026</strong></p>\n<p>This means the ticket has been reviewed, and has been found to need further\nwork. \u201cNeeds tests\u201d and \u201cNeeds documentation\u201d are self-explanatory. \u201cPatch\nneeds improvement\u201d will generally be accompanied by a comment on the ticket\nexplaining what is needed to improve the code.</p>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-ready-for-checkin\">\n<span id=\"ready-for-checkin\"></span><h3>Ready For Checkin<a class=\"headerlink\" href=\"#ready-for-checkin\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The ticket was reviewed by any member of the community other than the person\nwho supplied the patch and found to meet all the requirements for a\ncommit-ready patch. A <a class=\"reference internal\" href=\"../../organization/#mergers-team\"><span class=\"std std-ref\">merger</span></a> now needs to give the patch\na final review prior to being committed.</p>\n<p>There are a lot of pull requests. It can take a while for your patch to get\nreviewed. See the <a class=\"reference internal\" href=\"../../../faq/contributing/#new-contributors-faq\"><span class=\"std std-ref\">contributing code FAQ</span></a> for some\nideas here.</p>\n</div>\n<div class=\"section\" id=\"s-someday-maybe\">\n<span id=\"someday-maybe\"></span><h3>Someday/Maybe<a class=\"headerlink\" href=\"#someday-maybe\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>This stage isn\u2019t shown on the diagram. It\u2019s used sparingly to keep track of\nhigh-level ideas or long-term feature requests.</p>\n<p>These tickets are uncommon and overall less useful since they don\u2019t describe\nconcrete actionable issues. They are enhancement requests that we might\nconsider adding someday to the framework if an excellent patch is submitted.\nThey are not a high priority.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-other-triage-attributes\">\n<span id=\"other-triage-attributes\"></span><h2>Other triage attributes<a class=\"headerlink\" href=\"#other-triage-attributes\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>A number of flags, appearing as checkboxes in Trac, can be set on a ticket:</p>\n<div class=\"section\" id=\"s-has-patch\">\n<span id=\"has-patch\"></span><h3>Has patch<a class=\"headerlink\" href=\"#has-patch\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>This means the ticket has an associated\n<a class=\"reference internal\" href=\"../writing-code/submitting-patches/\"><span class=\"doc\">patch</span></a>. These will be reviewed\nto see if the patch is \u201cgood\u201d.</p>\n<p>The following three fields (Needs documentation, Needs tests,\nPatch needs improvement) apply only if a patch has been supplied.</p>\n</div>\n<div class=\"section\" id=\"s-needs-documentation\">\n<span id=\"needs-documentation\"></span><h3>Needs documentation<a class=\"headerlink\" href=\"#needs-documentation\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>This flag is used for tickets with patches that need associated\ndocumentation. Complete documentation of features is a prerequisite\nbefore we can check them into the codebase.</p>\n</div>\n<div class=\"section\" id=\"s-needs-tests\">\n<span id=\"needs-tests\"></span><h3>Needs tests<a class=\"headerlink\" href=\"#needs-tests\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>This flags the patch as needing associated unit tests. Again, this\nis a required part of a valid patch.</p>\n</div>\n<div class=\"section\" id=\"s-patch-needs-improvement\">\n<span id=\"patch-needs-improvement\"></span><h3>Patch needs improvement<a class=\"headerlink\" href=\"#patch-needs-improvement\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>This flag means that although the ticket <em>has</em> a patch, it\u2019s not quite\nready for checkin. This could mean the patch no longer applies\ncleanly, there is a flaw in the implementation, or that the code\ndoesn\u2019t meet our standards.</p>\n</div>\n<div class=\"section\" id=\"s-easy-pickings\">\n<span id=\"easy-pickings\"></span><h3>Easy pickings<a class=\"headerlink\" href=\"#easy-pickings\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Tickets that would require small, easy, patches.</p>\n</div>\n<div class=\"section\" id=\"s-type\">\n<span id=\"type\"></span><h3>Type<a class=\"headerlink\" href=\"#type\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Tickets should be categorized by <em>type</em> between:</p>\n<ul class=\"simple\">\n<li><dl class=\"first docutils\">\n<dt>New Feature</dt><dd>For adding something new.</dd>\n</dl>\n</li>\n<li><dl class=\"first docutils\">\n<dt>Bug</dt><dd>For when an existing thing is broken or not behaving as expected.</dd>\n</dl>\n</li>\n<li><dl class=\"first docutils\">\n<dt>Cleanup/optimization</dt><dd>For when nothing is broken but something could be made cleaner,\nbetter, faster, stronger.</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-component\">\n<span id=\"component\"></span><h3>Component<a class=\"headerlink\" href=\"#component\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Tickets should be classified into <em>components</em> indicating which area of\nthe Django codebase they belong to. This makes tickets better organized and\neasier to find.</p>\n</div>\n<div class=\"section\" id=\"s-severity\">\n<span id=\"severity\"></span><h3>Severity<a class=\"headerlink\" href=\"#severity\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The <em>severity</em> attribute is used to identify blockers, that is, issues that\nshould get fixed before releasing the next version of Django. Typically those\nissues are bugs causing regressions from earlier versions or potentially\ncausing severe data losses. This attribute is quite rarely used and the vast\nmajority of tickets have a severity of \u201cNormal\u201d.</p>\n</div>\n<div class=\"section\" id=\"s-version\">\n<span id=\"version\"></span><h3>Version<a class=\"headerlink\" href=\"#version\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>It is possible to use the <em>version</em> attribute to indicate in which\nversion the reported bug was identified.</p>\n</div>\n<div class=\"section\" id=\"s-ui-ux\">\n<span id=\"ui-ux\"></span><h3>UI/UX<a class=\"headerlink\" href=\"#ui-ux\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>This flag is used for tickets that relate to User Interface and User\nExperiences questions. For example, this flag would be appropriate for\nuser-facing features in forms or the admin interface.</p>\n</div>\n<div class=\"section\" id=\"s-cc\">\n<span id=\"cc\"></span><h3>Cc<a class=\"headerlink\" href=\"#cc\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>You may add your username or email address to this field to be notified when\nnew contributions are made to the ticket.</p>\n</div>\n<div class=\"section\" id=\"s-keywords\">\n<span id=\"keywords\"></span><h3>Keywords<a class=\"headerlink\" href=\"#keywords\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>With this field you may label a ticket with multiple keywords. This can be\nuseful, for example, to group several tickets on the same theme. Keywords can\neither be comma or space separated. Keyword search finds the keyword string\nanywhere in the keywords. For example, clicking on a ticket with the keyword\n\u201cform\u201d will yield similar tickets tagged with keywords containing strings such\nas \u201cformset\u201d, \u201cmodelformset\u201d, and \u201cManagementForm\u201d.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-closing-tickets\">\n<span id=\"s-id2\"></span><span id=\"closing-tickets\"></span><span id=\"id2\"></span><h2>Closing Tickets<a class=\"headerlink\" href=\"#closing-tickets\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>When a ticket has completed its useful lifecycle, it\u2019s time for it to be\nclosed. Closing a ticket is a big responsibility, though. You have to be sure\nthat the issue is really resolved, and you need to keep in mind that the\nreporter of the ticket may not be happy to have their ticket closed (unless\nit\u2019s fixed!). If you\u2019re not certain about closing a ticket, leave a comment\nwith your thoughts instead.</p>\n<p>If you do close a ticket, you should always make sure of the following:</p>\n<ul class=\"simple\">\n<li>Be certain that the issue is resolved.</li>\n<li>Leave a comment explaining the decision to close the ticket.</li>\n<li>If there is a way they can improve the ticket to reopen it, let them know.</li>\n<li>If the ticket is a duplicate, reference the original ticket. Also\ncross-reference the closed ticket by leaving a comment in the original one\n\u2013 this allows to access more related information about the reported bug\nor requested feature.</li>\n<li><strong>Be polite.</strong> No one likes having their ticket closed. It can be\nfrustrating or even discouraging. The best way to avoid turning people\noff from contributing to Django is to be polite and friendly and to offer\nsuggestions for how they could improve this ticket and other tickets in\nthe future.</li>\n</ul>\n<p>A ticket can be resolved in a number of ways:</p>\n<ul class=\"simple\">\n<li><dl class=\"first docutils\">\n<dt>fixed</dt><dd>Used once a patch has been rolled into Django and the issue is fixed.</dd>\n</dl>\n</li>\n<li><dl class=\"first docutils\">\n<dt>invalid</dt><dd>Used if the ticket is found to be incorrect. This means that the\nissue in the ticket is actually the result of a user error, or\ndescribes a problem with something other than Django, or isn\u2019t\na bug report or feature request at all (for example, some new users\nsubmit support queries as tickets).</dd>\n</dl>\n</li>\n<li><dl class=\"first docutils\">\n<dt>wontfix</dt><dd>Used when someone decides that the request isn\u2019t appropriate for\nconsideration in Django. Sometimes a ticket is closed as \u201cwontfix\u201d with a\nrequest for the reporter to start a discussion on the <a class=\"reference external\" href=\"https://forum.djangoproject.com/\">Django Forum</a> or\n<a class=\"reference internal\" href=\"../../mailing-lists/#django-developers-mailing-list\"><span class=\"std std-ref\">django-developers</span></a> mailing list if they feel differently from the\nrationale provided by the person who closed the ticket. Other times, a\ndiscussion precedes the decision to close a ticket. Always use the forum\nor mailing list to get a consensus before reopening tickets closed as\n\u201cwontfix\u201d.</dd>\n</dl>\n</li>\n<li><dl class=\"first docutils\">\n<dt>duplicate</dt><dd>Used when another ticket covers the same issue. By closing duplicate\ntickets, we keep all the discussion in one place, which helps\neveryone.</dd>\n</dl>\n</li>\n<li><dl class=\"first docutils\">\n<dt>worksforme</dt><dd>Used when the ticket doesn\u2019t contain enough detail to replicate\nthe original bug.</dd>\n</dl>\n</li>\n<li><dl class=\"first docutils\">\n<dt>needsinfo</dt><dd>Used when the ticket does not contain enough information to replicate\nthe reported issue but is potentially still valid. The ticket\nshould be reopened when more information is supplied.</dd>\n</dl>\n</li>\n</ul>\n<p>If you believe that the ticket was closed in error \u2013 because you\u2019re\nstill having the issue, or it\u2019s popped up somewhere else, or the triagers have\nmade a mistake \u2013 please reopen the ticket and provide further information.\nAgain, please do not reopen tickets that have been marked as \u201cwontfix\u201d and\nbring the issue to the <a class=\"reference external\" href=\"https://forum.djangoproject.com/\">Django Forum</a> or <a class=\"reference internal\" href=\"../../mailing-lists/#django-developers-mailing-list\"><span class=\"std std-ref\">django-developers</span></a> instead.</p>\n</div>\n<div class=\"section\" id=\"s-how-can-i-help-with-triaging\">\n<span id=\"s-id3\"></span><span id=\"how-can-i-help-with-triaging\"></span><span id=\"id3\"></span><h2>How can I help with triaging?<a class=\"headerlink\" href=\"#how-can-i-help-with-triaging\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The triage process is primarily driven by community members. Really,\n<strong>ANYONE</strong> can help.</p>\n<p>To get involved, start by <a class=\"reference external\" href=\"https://www.djangoproject.com/accounts/register/\">creating an account on Trac</a>. If you have an\naccount but have forgotten your password, you can reset it using the <a class=\"reference external\" href=\"https://www.djangoproject.com/accounts/password/reset/\">password\nreset page</a>.</p>\n<p>Then, you can help out by:</p>\n<ul class=\"simple\">\n<li>Closing \u201cUnreviewed\u201d tickets as \u201cinvalid\u201d, \u201cworksforme\u201d, or \u201cduplicate\u201d, or\n\u201cwontfix\u201d.</li>\n<li>Closing \u201cUnreviewed\u201d tickets as \u201cneedsinfo\u201d when the description is too\nsparse to be actionable, or when they\u2019re feature requests requiring a\ndiscussion on the <a class=\"reference external\" href=\"https://forum.djangoproject.com/\">Django Forum</a> or <a class=\"reference internal\" href=\"../../mailing-lists/#django-developers-mailing-list\"><span class=\"std std-ref\">django-developers</span></a>.</li>\n<li>Correcting the \u201cNeeds tests\u201d, \u201cNeeds documentation\u201d, or \u201cHas patch\u201d\nflags for tickets where they are incorrectly set.</li>\n<li>Setting the \u201c<a class=\"reference external\" href=\"https://code.djangoproject.com/query?status=!closed&amp;easy=1\">Easy pickings</a>\u201d flag for tickets that are small and\nrelatively straightforward.</li>\n<li>Set the <em>type</em> of tickets that are still uncategorized.</li>\n<li>Checking that old tickets are still valid. If a ticket hasn\u2019t seen\nany activity in a long time, it\u2019s possible that the problem has been\nfixed but the ticket hasn\u2019t yet been closed.</li>\n<li>Identifying trends and themes in the tickets. If there are a lot of bug\nreports about a particular part of Django, it may indicate we should\nconsider refactoring that part of the code. If a trend is emerging,\nyou should raise it for discussion (referencing the relevant tickets)\non the <a class=\"reference external\" href=\"https://forum.djangoproject.com/\">Django Forum</a> or <a class=\"reference internal\" href=\"../../mailing-lists/#django-developers-mailing-list\"><span class=\"std std-ref\">django-developers</span></a>.</li>\n<li>Verify if patches submitted by other users are correct. If they are correct\nand also contain appropriate documentation and tests then move them to the\n\u201cReady for Checkin\u201d stage. If they are not correct then leave a comment to\nexplain why and set the corresponding flags (\u201cPatch needs improvement\u201d,\n\u201cNeeds tests\u201d etc.).</li>\n</ul>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p>The <a class=\"reference external\" href=\"https://code.djangoproject.com/wiki/Reports\">Reports page</a> contains links to many useful Trac queries, including\nseveral that are useful for triaging tickets and reviewing patches as\nsuggested above.</p>\n<p class=\"last\">You can also find more <a class=\"reference internal\" href=\"../new-contributors/\"><span class=\"doc\">Advice for new contributors</span></a>.</p>\n</div>\n<p>However, we do ask the following of all general community members working in\nthe ticket database:</p>\n<ul class=\"simple\">\n<li>Please <strong>don\u2019t</strong> promote your own tickets to \u201cReady for checkin\u201d. You\nmay mark other people\u2019s tickets that you\u2019ve reviewed as \u201cReady for\ncheckin\u201d, but you should get at minimum one other community member to\nreview a patch that you submit.</li>\n<li>Please <strong>don\u2019t</strong> reverse a decision without posting a message to the\n<a class=\"reference external\" href=\"https://forum.djangoproject.com/\">Django Forum</a> or <a class=\"reference internal\" href=\"../../mailing-lists/#django-developers-mailing-list\"><span class=\"std std-ref\">django-developers</span></a> to find consensus.</li>\n<li>If you\u2019re unsure if you should be making a change, don\u2019t make the\nchange but instead leave a comment with your concerns on the ticket,\nor post a message to the <a class=\"reference external\" href=\"https://forum.djangoproject.com/\">Django Forum</a> or <a class=\"reference internal\" href=\"../../mailing-lists/#django-developers-mailing-list\"><span class=\"std std-ref\">django-developers</span></a>. It\u2019s okay to\nbe unsure, but your input is still valuable.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-bisecting-a-regression\">\n<span id=\"bisecting-a-regression\"></span><h2>Bisecting a regression<a class=\"headerlink\" href=\"#bisecting-a-regression\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>A regression is a bug that\u2019s present in some newer version of Django but not in\nan older one. An extremely helpful piece of information is the commit that\nintroduced the regression. Knowing the commit that caused the change in\nbehavior helps identify if the change was intentional or if it was an\ninadvertent side-effect. Here\u2019s how you can determine this.</p>\n<p>Begin by writing a regression test for Django\u2019s test suite for the issue. For\nexample, we\u2019ll pretend we\u2019re debugging a regression in migrations. After you\u2019ve\nwritten the test and confirmed that it fails on the latest main branch, put it\nin a separate file that you can run standalone. For our example, we\u2019ll pretend\nwe created <code class=\"docutils literal notranslate\"><span class=\"pre\">tests/migrations/test_regression.py</span></code>, which can be run with:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>$ ./runtests.py migrations.test_regression\n</pre></div>\n</div>\n<p>Next, we mark the current point in history as being \u201cbad\u201d since the test fails:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>$ git bisect bad\nYou need to start by <span class=\"s2\">&quot;git bisect start&quot;</span>\nDo you want me to <span class=\"k\">do</span> it <span class=\"k\">for</span> you <span class=\"o\">[</span>Y/n<span class=\"o\">]</span>? y\n</pre></div>\n</div>\n<p>Now, we need to find a point in git history before the regression was\nintroduced (i.e. a point where the test passes). Use something like\n<code class=\"docutils literal notranslate\"><span class=\"pre\">git</span> <span class=\"pre\">checkout</span> <span class=\"pre\">HEAD~100</span></code> to check out an earlier revision (100 commits earlier,\nin this case). Check if the test fails. If so, mark that point as \u201cbad\u201d\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">git</span> <span class=\"pre\">bisect</span> <span class=\"pre\">bad</span></code>), then check out an earlier revision and recheck. Once you\nfind a revision where your test passes, mark it as \u201cgood\u201d:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>$ git bisect good\nBisecting: X revisions left to <span class=\"nb\">test</span> after this <span class=\"o\">(</span>roughly Y steps<span class=\"o\">)</span>\n...\n</pre></div>\n</div>\n<p>Now we\u2019re ready for the fun part: using <code class=\"docutils literal notranslate\"><span class=\"pre\">git</span> <span class=\"pre\">bisect</span> <span class=\"pre\">run</span></code> to automate the rest\nof the process:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>$ git bisect run tests/runtests.py migrations.test_regression\n</pre></div>\n</div>\n<p>You should see <code class=\"docutils literal notranslate\"><span class=\"pre\">git</span> <span class=\"pre\">bisect</span></code> use a binary search to automatically checkout\nrevisions between the good and bad commits until it finds the first \u201cbad\u201d\ncommit where the test fails.</p>\n<p>Now, report your results on the Trac ticket, and please include the regression\ntest as an attachment. When someone writes a fix for the bug, they\u2019ll already\nhave your test as a starting point.</p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["internals/contributing/writing-code/index", "Writing code", "N", "next"], ["internals/contributing/bugs-and-features", "Reporting bugs and requesting features", "P", "previous"]], "sourcename": "internals/contributing/triaging-tickets.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Triaging tickets</a><ul>\n<li><a class=\"reference internal\" href=\"#triage-workflow\">Triage workflow</a></li>\n<li><a class=\"reference internal\" href=\"#triage-stages\">Triage stages</a><ul>\n<li><a class=\"reference internal\" href=\"#unreviewed\">Unreviewed</a></li>\n<li><a class=\"reference internal\" href=\"#accepted\">Accepted</a></li>\n<li><a class=\"reference internal\" href=\"#ready-for-checkin\">Ready For Checkin</a></li>\n<li><a class=\"reference internal\" href=\"#someday-maybe\">Someday/Maybe</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#other-triage-attributes\">Other triage attributes</a><ul>\n<li><a class=\"reference internal\" href=\"#has-patch\">Has patch</a></li>\n<li><a class=\"reference internal\" href=\"#needs-documentation\">Needs documentation</a></li>\n<li><a class=\"reference internal\" href=\"#needs-tests\">Needs tests</a></li>\n<li><a class=\"reference internal\" href=\"#patch-needs-improvement\">Patch needs improvement</a></li>\n<li><a class=\"reference internal\" href=\"#easy-pickings\">Easy pickings</a></li>\n<li><a class=\"reference internal\" href=\"#type\">Type</a></li>\n<li><a class=\"reference internal\" href=\"#component\">Component</a></li>\n<li><a class=\"reference internal\" href=\"#severity\">Severity</a></li>\n<li><a class=\"reference internal\" href=\"#version\">Version</a></li>\n<li><a class=\"reference internal\" href=\"#ui-ux\">UI/UX</a></li>\n<li><a class=\"reference internal\" href=\"#cc\">Cc</a></li>\n<li><a class=\"reference internal\" href=\"#keywords\">Keywords</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#closing-tickets\">Closing Tickets</a></li>\n<li><a class=\"reference internal\" href=\"#how-can-i-help-with-triaging\">How can I help with triaging?</a></li>\n<li><a class=\"reference internal\" href=\"#bisecting-a-regression\">Bisecting a regression</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "internals/contributing/triaging-tickets", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
