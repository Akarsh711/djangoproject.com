{"parents": [{"link": "../", "title": "Release notes"}], "prev": {"link": "../1.9.12/", "title": "Django 1.9.12 release notes"}, "next": {"link": "../1.9.10/", "title": "Django 1.9.10 release notes"}, "title": "Django 1.9.11 release notes", "meta": {}, "body": "<div class=\"section\" id=\"s-django-1-9-11-release-notes\">\n<span id=\"django-1-9-11-release-notes\"></span><h1>Django 1.9.11 release notes<a class=\"headerlink\" href=\"#django-1-9-11-release-notes\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p><em>November 1, 2016</em></p>\n<p>Django 1.9.11 fixes two security issues in 1.9.10.</p>\n<div class=\"section\" id=\"s-user-with-hardcoded-password-created-when-running-tests-on-oracle\">\n<span id=\"user-with-hardcoded-password-created-when-running-tests-on-oracle\"></span><h2>User with hardcoded password created when running tests on Oracle<a class=\"headerlink\" href=\"#user-with-hardcoded-password-created-when-running-tests-on-oracle\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>When running tests with an Oracle database, Django creates a temporary database\nuser. In older versions, if a password isn\u2019t manually specified in the database\nsettings <code class=\"docutils literal notranslate\"><span class=\"pre\">TEST</span></code> dictionary, a hardcoded password is used. This could allow\nan attacker with network access to the database server to connect.</p>\n<p>This user is usually dropped after the test suite completes, but not when using\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">manage.py</span> <span class=\"pre\">test</span> <span class=\"pre\">--keepdb</span></code> option or if the user has an active session\n(such as an attacker\u2019s connection).</p>\n<p>A randomly generated password is now used for each test run.</p>\n</div>\n<div class=\"section\" id=\"s-dns-rebinding-vulnerability-when-debug-true\">\n<span id=\"dns-rebinding-vulnerability-when-debug-true\"></span><h2>DNS rebinding vulnerability when <code class=\"docutils literal notranslate\"><span class=\"pre\">DEBUG=True</span></code><a class=\"headerlink\" href=\"#dns-rebinding-vulnerability-when-debug-true\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Older versions of Django don\u2019t validate the <code class=\"docutils literal notranslate\"><span class=\"pre\">Host</span></code> header against\n<code class=\"docutils literal notranslate\"><span class=\"pre\">settings.ALLOWED_HOSTS</span></code> when <code class=\"docutils literal notranslate\"><span class=\"pre\">settings.DEBUG=True</span></code>. This makes them\nvulnerable to a <a class=\"reference external\" href=\"https://benmmurphy.github.io/blog/2016/07/11/rails-webconsole-dns-rebinding/\">DNS rebinding attack</a>.</p>\n<p>While Django doesn\u2019t ship a module that allows remote code execution, this is\nat least a cross-site scripting vector, which could be quite serious if\ndevelopers load a copy of the production database in development or connect to\nsome production services for which there\u2019s no development instance, for\nexample. If a project uses a package like the <code class=\"docutils literal notranslate\"><span class=\"pre\">django-debug-toolbar</span></code>, then\nthe attacker could execute arbitrary SQL, which could be especially bad if the\ndevelopers connect to the database with a superuser account.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">settings.ALLOWED_HOSTS</span></code> is now validated regardless of <code class=\"docutils literal notranslate\"><span class=\"pre\">DEBUG</span></code>. For\nconvenience, if <code class=\"docutils literal notranslate\"><span class=\"pre\">ALLOWED_HOSTS</span></code> is empty and <code class=\"docutils literal notranslate\"><span class=\"pre\">DEBUG=True</span></code>, the following\nvariations of localhost are allowed <code class=\"docutils literal notranslate\"><span class=\"pre\">['localhost',</span> <span class=\"pre\">'127.0.0.1',</span> <span class=\"pre\">'::1']</span></code>. If\nyour local settings file has your production <code class=\"docutils literal notranslate\"><span class=\"pre\">ALLOWED_HOSTS</span></code> value, you must\nnow omit it to get those fallback values.</p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["releases/1.9.10", "Django 1.9.10 release notes", "N", "next"], ["releases/1.9.12", "Django 1.9.12 release notes", "P", "previous"]], "sourcename": "releases/1.9.11.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Django 1.9.11 release notes</a><ul>\n<li><a class=\"reference internal\" href=\"#user-with-hardcoded-password-created-when-running-tests-on-oracle\">User with hardcoded password created when running tests on Oracle</a></li>\n<li><a class=\"reference internal\" href=\"#dns-rebinding-vulnerability-when-debug-true\">DNS rebinding vulnerability when <code class=\"docutils literal notranslate\"><span class=\"pre\">DEBUG=True</span></code></a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "releases/1.9.11", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}