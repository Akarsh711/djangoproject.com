{"parents": [{"link": "../", "title": "Release notes"}], "prev": {"link": "../1.0-porting-guide/", "title": "Porting your apps from Django 0.96 to 1.0"}, "next": {"link": "../0.95/", "title": "Django version 0.95 release notes"}, "title": "Django version 0.96 release notes", "meta": {}, "body": "<div class=\"section\" id=\"s-django-version-0-96-release-notes\">\n<span id=\"django-version-0-96-release-notes\"></span><h1>Django version 0.96 release notes<a class=\"headerlink\" href=\"#django-version-0-96-release-notes\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Welcome to Django 0.96!</p>\n<p>The primary goal for 0.96 is a cleanup and stabilization of the features\nintroduced in 0.95. There have been a few small <a class=\"reference internal\" href=\"#backwards-incompatible-changes\">backwards-incompatible\nchanges</a> since 0.95, but the upgrade process should be fairly simple\nand should not require major changes to existing applications.</p>\n<p>However, we\u2019re also releasing 0.96 now because we have a set of\nbackwards-incompatible changes scheduled for the near future. Once\ncompleted, they will involve some code changes for application\ndevelopers, so we recommend that you stick with Django 0.96 until the\nnext official release; then you\u2019ll be able to upgrade in one step\ninstead of needing to make incremental changes to keep up with the\ndevelopment version of Django.</p>\n<div class=\"section\" id=\"s-backwards-incompatible-changes\">\n<span id=\"backwards-incompatible-changes\"></span><h2>Backwards-incompatible changes<a class=\"headerlink\" href=\"#backwards-incompatible-changes\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The following changes may require you to update your code when you switch from\n0.95 to 0.96:</p>\n<div class=\"section\" id=\"s-mysqldb-version-requirement\">\n<span id=\"mysqldb-version-requirement\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">MySQLdb</span></code> version requirement<a class=\"headerlink\" href=\"#mysqldb-version-requirement\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Due to a bug in older versions of the <code class=\"docutils literal notranslate\"><span class=\"pre\">MySQLdb</span></code> Python module (which\nDjango uses to connect to MySQL databases), Django\u2019s MySQL backend now\nrequires version 1.2.1p2 or higher of <code class=\"docutils literal notranslate\"><span class=\"pre\">MySQLdb</span></code>, and will raise\nexceptions if you attempt to use an older version.</p>\n<p>If you\u2019re currently unable to upgrade your copy of <code class=\"docutils literal notranslate\"><span class=\"pre\">MySQLdb</span></code> to meet\nthis requirement, a separate, backwards-compatible backend, called\n\u201cmysql_old\u201d, has been added to Django. To use this backend, change\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">DATABASE_ENGINE</span></code> setting in your Django settings file from this:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">DATABASE_ENGINE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;mysql&quot;</span>\n</pre></div>\n</div>\n<p>to this:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">DATABASE_ENGINE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;mysql_old&quot;</span>\n</pre></div>\n</div>\n<p>However, we strongly encourage MySQL users to upgrade to a more recent\nversion of <code class=\"docutils literal notranslate\"><span class=\"pre\">MySQLdb</span></code> as soon as possible, The \u201cmysql_old\u201d backend is\nprovided only to ease this transition, and is considered deprecated;\naside from any necessary security fixes, it will not be actively\nmaintained, and it will be removed in a future release of Django.</p>\n<p>Also, note that some features, like the new <code class=\"docutils literal notranslate\"><span class=\"pre\">DATABASE_OPTIONS</span></code>\nsetting (see the <a class=\"reference internal\" href=\"../../ref/databases/\"><span class=\"doc\">databases documentation</span></a> for details),\nare only available on the \u201cmysql\u201d backend, and will not be made available for\n\u201cmysql_old\u201d.</p>\n</div>\n<div class=\"section\" id=\"s-database-constraint-names-changed\">\n<span id=\"database-constraint-names-changed\"></span><h3>Database constraint names changed<a class=\"headerlink\" href=\"#database-constraint-names-changed\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The format of the constraint names Django generates for foreign key\nreferences have changed slightly. These names are generally only used\nwhen it is not possible to put the reference directly on the affected\ncolumn, so they are not always visible.</p>\n<p>The effect of this change is that running <code class=\"docutils literal notranslate\"><span class=\"pre\">manage.py</span> <span class=\"pre\">reset</span></code> and\nsimilar commands against an existing database may generate SQL with\nthe new form of constraint name, while the database itself contains\nconstraints named in the old form; this will cause the database server\nto raise an error message about modifying nonexistent constraints.</p>\n<p>If you need to work around this, there are two methods available:</p>\n<ol class=\"arabic simple\">\n<li>Redirect the output of <code class=\"docutils literal notranslate\"><span class=\"pre\">manage.py</span></code> to a file, and edit the\ngenerated SQL to use the correct constraint names before\nexecuting it.</li>\n<li>Examine the output of <code class=\"docutils literal notranslate\"><span class=\"pre\">manage.py</span> <span class=\"pre\">sqlall</span></code> to see the new-style\nconstraint names, and use that as a guide to rename existing\nconstraints in your database.</li>\n</ol>\n</div>\n<div class=\"section\" id=\"s-name-changes-in-manage-py\">\n<span id=\"name-changes-in-manage-py\"></span><h3>Name changes in <code class=\"docutils literal notranslate\"><span class=\"pre\">manage.py</span></code><a class=\"headerlink\" href=\"#name-changes-in-manage-py\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>A few of the options to <code class=\"docutils literal notranslate\"><span class=\"pre\">manage.py</span></code> have changed with the addition of fixture\nsupport:</p>\n<ul class=\"simple\">\n<li>There are new <code class=\"docutils literal notranslate\"><span class=\"pre\">dumpdata</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">loaddata</span></code> commands which, as\nyou might expect, will dump and load data to/from the\ndatabase. These commands can operate against any of Django\u2019s\nsupported serialization formats.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">sqlinitialdata</span></code> command has been renamed to <code class=\"docutils literal notranslate\"><span class=\"pre\">sqlcustom</span></code> to\nemphasize that <code class=\"docutils literal notranslate\"><span class=\"pre\">loaddata</span></code> should be used for data (and <code class=\"docutils literal notranslate\"><span class=\"pre\">sqlcustom</span></code> for\nother custom SQL \u2013 views, stored procedures, etc.).</li>\n<li>The vestigial <code class=\"docutils literal notranslate\"><span class=\"pre\">install</span></code> command has been removed. Use <code class=\"docutils literal notranslate\"><span class=\"pre\">syncdb</span></code>.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-backslash-escaping-changed\">\n<span id=\"backslash-escaping-changed\"></span><h3>Backslash escaping changed<a class=\"headerlink\" href=\"#backslash-escaping-changed\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The Django database API now escapes backslashes given as query parameters. If\nyou have any database API code that matches backslashes, and it was working before\n(despite the lack of escaping), you\u2019ll have to change your code to \u201cunescape\u201d the\nslashes one level.</p>\n<p>For example, this used to work:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Find text containing a single backslash</span>\n<span class=\"n\">MyModel</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">text__contains</span><span class=\"o\">=</span><span class=\"s2\">&quot;</span><span class=\"se\">\\\\\\\\</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The above is now incorrect, and should be rewritten as:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Find text containing a single backslash</span>\n<span class=\"n\">MyModel</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">text__contains</span><span class=\"o\">=</span><span class=\"s2\">&quot;</span><span class=\"se\">\\\\</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-removed-enable-psyco-setting\">\n<span id=\"removed-enable-psyco-setting\"></span><h3>Removed ENABLE_PSYCO setting<a class=\"headerlink\" href=\"#removed-enable-psyco-setting\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">ENABLE_PSYCO</span></code> setting no longer exists. If your settings file includes\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ENABLE_PSYCO</span></code> it will have no effect; to use <a class=\"reference external\" href=\"http://psyco.sourceforge.net/\">Psyco</a>, we recommend\nwriting a middleware class to activate it.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-what-s-new-in-0-96\">\n<span id=\"what-s-new-in-0-96\"></span><h2>What\u2019s new in 0.96?<a class=\"headerlink\" href=\"#what-s-new-in-0-96\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>This revision represents over a thousand source commits and over four hundred\nbug fixes, so we can\u2019t possibly catalog all the changes. Here, we describe the\nmost notable changes in this release.</p>\n<div class=\"section\" id=\"s-new-forms-library\">\n<span id=\"new-forms-library\"></span><h3>New forms library<a class=\"headerlink\" href=\"#new-forms-library\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">django.newforms</span></code> is Django\u2019s new form-handling library. It\u2019s a\nreplacement for <code class=\"docutils literal notranslate\"><span class=\"pre\">django.forms</span></code>, the old form/manipulator/validation\nframework.  Both APIs are available in 0.96, but over the next two\nreleases we plan to switch completely to the new forms system, and\ndeprecate and remove the old system.</p>\n<p>There are three elements to this transition:</p>\n<ul>\n<li><p class=\"first\">We\u2019ve copied the current <code class=\"docutils literal notranslate\"><span class=\"pre\">django.forms</span></code> to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.oldforms</span></code>. This allows you to upgrade your code <em>now</em>\nrather than waiting for the backwards-incompatible change and\nrushing to fix your code after the fact.  Just change your\nimport statements like this:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>  <span class=\"c1\"># 0.95-style</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">oldforms</span> <span class=\"k\">as</span> <span class=\"n\">forms</span>  <span class=\"c1\"># 0.96-style</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">The next official release of Django will move the current\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.newforms</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">django.forms</span></code>. This will be a\nbackwards-incompatible change, and anyone still using the old\nversion of <code class=\"docutils literal notranslate\"><span class=\"pre\">django.forms</span></code> at that time will need to change\ntheir import statements as described above.</p>\n</li>\n<li><p class=\"first\">The next release after that will completely remove\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.oldforms</span></code>.</p>\n</li>\n</ul>\n<p>Although the <code class=\"docutils literal notranslate\"><span class=\"pre\">newforms</span></code> library will continue to evolve, it\u2019s ready for use\nfor most common cases. We recommend that anyone new to form handling skip the\nold forms system and start with the new.</p>\n<p>For more information about <code class=\"docutils literal notranslate\"><span class=\"pre\">django.newforms</span></code>, read the <a class=\"reference internal\" href=\"../../topics/forms/\"><span class=\"doc\">newforms\ndocumentation</span></a>.</p>\n</div>\n<div class=\"section\" id=\"s-urlconf-improvements\">\n<span id=\"urlconf-improvements\"></span><h3>URLconf improvements<a class=\"headerlink\" href=\"#urlconf-improvements\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>You can now use any callable as the callback in URLconfs (previously, only\nstrings that referred to callables were allowed). This allows a much more\nnatural use of URLconfs. For example, this URLconf:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.conf.urls.defaults</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"n\">patterns</span><span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s2\">&quot;^myview/$&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;mysite.myapp.views.myview&quot;</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<p>can now be rewritten as:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.conf.urls.defaults</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mysite.myapp.views</span> <span class=\"kn\">import</span> <span class=\"n\">myview</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"n\">patterns</span><span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s2\">&quot;^myview/$&quot;</span><span class=\"p\">,</span> <span class=\"n\">myview</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<p>One useful application of this can be seen when using decorators; this\nchange allows you to apply decorators to views <em>in your\nURLconf</em>. Thus, you can make a generic view require login very\neasily:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.conf.urls.defaults</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">login_required</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.views.generic.list_detail</span> <span class=\"kn\">import</span> <span class=\"n\">object_list</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mysite.myapp.models</span> <span class=\"kn\">import</span> <span class=\"n\">MyModel</span>\n\n<span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;queryset&quot;</span><span class=\"p\">:</span> <span class=\"n\">MyModel</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(),</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"n\">patterns</span><span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s2\">&quot;^myview/$&quot;</span><span class=\"p\">,</span> <span class=\"n\">login_required</span><span class=\"p\">(</span><span class=\"n\">object_list</span><span class=\"p\">),</span> <span class=\"n\">info</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<p>Note that both syntaxes (strings and callables) are valid, and will continue to\nbe valid for the foreseeable future.</p>\n</div>\n<div class=\"section\" id=\"s-the-test-framework\">\n<span id=\"the-test-framework\"></span><h3>The test framework<a class=\"headerlink\" href=\"#the-test-framework\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Django now includes a test framework so you can start transmuting fear into\nboredom (with apologies to Kent Beck). You can write tests based on\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/doctest.html#module-doctest\" title=\"(in Python v3.11)\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">doctest</span></code></a> or <a class=\"reference external\" href=\"https://docs.python.org/3/library/unittest.html#module-unittest\" title=\"(in Python v3.11)\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">unittest</span></code></a> and test your views with a simple test client.</p>\n<p>There is also new support for \u201cfixtures\u201d \u2013 initial data, stored in any of the\nsupported <a class=\"reference internal\" href=\"../../topics/serialization/\"><span class=\"doc\">serialization formats</span></a>, that will be\nloaded into your database at the start of your tests. This makes testing with\nreal data much easier.</p>\n<p>See <a class=\"reference internal\" href=\"../../topics/testing/\"><span class=\"doc\">the testing documentation</span></a> for the full details.</p>\n</div>\n<div class=\"section\" id=\"s-improvements-to-the-admin-interface\">\n<span id=\"improvements-to-the-admin-interface\"></span><h3>Improvements to the admin interface<a class=\"headerlink\" href=\"#improvements-to-the-admin-interface\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>A small change, but a very nice one: dedicated views for adding and\nupdating users have been added to the admin interface, so you no\nlonger need to worry about working with hashed passwords in the admin.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-thanks\">\n<span id=\"thanks\"></span><h2>Thanks<a class=\"headerlink\" href=\"#thanks\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Since 0.95, a number of people have stepped forward and taken a major\nnew role in Django\u2019s development. We\u2019d like to thank these people for\nall their hard work:</p>\n<ul class=\"simple\">\n<li>Russell Keith-Magee and Malcolm Tredinnick for their major code\ncontributions. This release wouldn\u2019t have been possible without them.</li>\n<li>Our new release manager, James Bennett, for his work in getting out\n0.95.1, 0.96, and (hopefully) future release.</li>\n<li>Our ticket managers Chris Beaven (aka SmileyChris), Simon Greenhill,\nMichael Radziej, and Gary Wilson. They agreed to take on the monumental\ntask of wrangling our tickets into nicely cataloged submission. Figuring\nout what to work on is now about a million times easier; thanks again,\nguys.</li>\n<li>Everyone who submitted a bug report, patch or ticket comment. We can\u2019t\npossibly thank everyone by name \u2013 over 200 developers submitted patches\nthat went into 0.96 \u2013 but everyone who\u2019s contributed to Django is listed\nin <a class=\"reference external\" href=\"https://github.com/django/django/blob/main/AUTHORS\">AUTHORS</a>.</li>\n</ul>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["releases/0.95", "Django version 0.95 release notes", "N", "next"], ["releases/1.0-porting-guide", "Porting your apps from Django 0.96 to 1.0", "P", "previous"]], "sourcename": "releases/0.96.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Django version 0.96 release notes</a><ul>\n<li><a class=\"reference internal\" href=\"#backwards-incompatible-changes\">Backwards-incompatible changes</a><ul>\n<li><a class=\"reference internal\" href=\"#mysqldb-version-requirement\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MySQLdb</span></code> version requirement</a></li>\n<li><a class=\"reference internal\" href=\"#database-constraint-names-changed\">Database constraint names changed</a></li>\n<li><a class=\"reference internal\" href=\"#name-changes-in-manage-py\">Name changes in <code class=\"docutils literal notranslate\"><span class=\"pre\">manage.py</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#backslash-escaping-changed\">Backslash escaping changed</a></li>\n<li><a class=\"reference internal\" href=\"#removed-enable-psyco-setting\">Removed ENABLE_PSYCO setting</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#what-s-new-in-0-96\">What\u2019s new in 0.96?</a><ul>\n<li><a class=\"reference internal\" href=\"#new-forms-library\">New forms library</a></li>\n<li><a class=\"reference internal\" href=\"#urlconf-improvements\">URLconf improvements</a></li>\n<li><a class=\"reference internal\" href=\"#the-test-framework\">The test framework</a></li>\n<li><a class=\"reference internal\" href=\"#improvements-to-the-admin-interface\">Improvements to the admin interface</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#thanks\">Thanks</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "releases/0.96", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
