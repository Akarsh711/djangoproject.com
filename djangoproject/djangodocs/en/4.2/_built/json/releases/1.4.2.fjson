{"parents": [{"link": "../", "title": "Release notes"}], "prev": {"link": "../1.4.3/", "title": "Django 1.4.3 release notes"}, "next": {"link": "../1.4.1/", "title": "Django 1.4.1 release notes"}, "title": "Django 1.4.2 release notes", "meta": {}, "body": "<div class=\"section\" id=\"s-django-1-4-2-release-notes\">\n<span id=\"django-1-4-2-release-notes\"></span><h1>Django 1.4.2 release notes<a class=\"headerlink\" href=\"#django-1-4-2-release-notes\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p><em>October 17, 2012</em></p>\n<p>This is the second security release in the Django 1.4 series.</p>\n<div class=\"section\" id=\"s-host-header-poisoning\">\n<span id=\"host-header-poisoning\"></span><h2>Host header poisoning<a class=\"headerlink\" href=\"#host-header-poisoning\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Some parts of Django \u2013 independent of end-user-written applications \u2013 make\nuse of full URLs, including domain name, which are generated from the HTTP Host\nheader. Some attacks against this are beyond Django\u2019s ability to control, and\nrequire the web server to be properly configured; Django\u2019s documentation has\nfor some time contained notes advising users on such configuration.</p>\n<p>Django\u2019s own built-in parsing of the Host header is, however, still vulnerable,\nas was reported to us recently. The Host header parsing in Django 1.3.3 and\nDjango 1.4.1 \u2013 specifically, <code class=\"docutils literal notranslate\"><span class=\"pre\">django.http.HttpRequest.get_host()</span></code> \u2013 was\nincorrectly handling username/password information in the header. Thus, for\nexample, the following Host header would be accepted by Django when running on\n<code class=\"docutils literal notranslate\"><span class=\"pre\">validsite.com</span></code>:</p>\n<div class=\"highlight-text notranslate\"><div class=\"highlight\"><pre><span></span>Host: validsite.com:random@evilsite.com\n</pre></div>\n</div>\n<p>Using this, an attacker can cause parts of Django \u2013 particularly the\npassword-reset mechanism \u2013 to generate and display arbitrary URLs to users.</p>\n<p>To remedy this, the parsing in <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest.get_host()</span></code> is being modified;\nHost headers which contain potentially dangerous content (such as\nusername/password pairs) now raise the exception\n<a class=\"reference internal\" href=\"../../ref/exceptions/#django.core.exceptions.SuspiciousOperation\" title=\"django.core.exceptions.SuspiciousOperation\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">django.core.exceptions.SuspiciousOperation</span></code></a>.</p>\n<p>Details of this issue were initially posted online as a <a class=\"reference external\" href=\"https://www.djangoproject.com/weblog/2012/oct/17/security/\">security advisory</a>.</p>\n</div>\n<div class=\"section\" id=\"s-backwards-incompatible-changes\">\n<span id=\"backwards-incompatible-changes\"></span><h2>Backwards incompatible changes<a class=\"headerlink\" href=\"#backwards-incompatible-changes\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul class=\"simple\">\n<li>The newly introduced <a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.GenericIPAddressField\" title=\"django.db.models.GenericIPAddressField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GenericIPAddressField</span></code></a>\nconstructor arguments have been adapted to match those of all other model\nfields. The first two keyword arguments are now verbose_name and name.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-other-bugfixes-and-changes\">\n<span id=\"other-bugfixes-and-changes\"></span><h2>Other bugfixes and changes<a class=\"headerlink\" href=\"#other-bugfixes-and-changes\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul class=\"simple\">\n<li>Subclass HTMLParser only for appropriate Python versions (#18239).</li>\n<li>Added batch_size argument to qs.bulk_create() (#17788).</li>\n<li>Fixed a small regression in the admin filters where wrongly formatted dates passed as url parameters caused an unhandled ValidationError (#18530).</li>\n<li>Fixed an endless loop bug when accessing permissions in templates (#18979)</li>\n<li>Fixed some Python 2.5 compatibility issues</li>\n<li>Fixed an issue with quoted filenames in Content-Disposition header (#19006)</li>\n<li>Made the context option in <code class=\"docutils literal notranslate\"><span class=\"pre\">trans</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">blocktrans</span></code> tags accept literals wrapped in single quotes (#18881).</li>\n<li>Numerous documentation improvements and fixes.</li>\n</ul>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["releases/1.4.1", "Django 1.4.1 release notes", "N", "next"], ["releases/1.4.3", "Django 1.4.3 release notes", "P", "previous"]], "sourcename": "releases/1.4.2.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Django 1.4.2 release notes</a><ul>\n<li><a class=\"reference internal\" href=\"#host-header-poisoning\">Host header poisoning</a></li>\n<li><a class=\"reference internal\" href=\"#backwards-incompatible-changes\">Backwards incompatible changes</a></li>\n<li><a class=\"reference internal\" href=\"#other-bugfixes-and-changes\">Other bugfixes and changes</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "releases/1.4.2", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}