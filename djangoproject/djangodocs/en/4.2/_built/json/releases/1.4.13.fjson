{"parents": [{"link": "../", "title": "Release notes"}], "prev": {"link": "../1.4.14/", "title": "Django 1.4.14 release notes"}, "next": {"link": "../1.4.12/", "title": "Django 1.4.12 release notes"}, "title": "Django 1.4.13 release notes", "meta": {}, "body": "<div class=\"section\" id=\"s-django-1-4-13-release-notes\">\n<span id=\"django-1-4-13-release-notes\"></span><h1>Django 1.4.13 release notes<a class=\"headerlink\" href=\"#django-1-4-13-release-notes\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p><em>May 14, 2014</em></p>\n<p>Django 1.4.13 fixes two security issues in 1.4.12.</p>\n<div class=\"section\" id=\"s-caches-may-incorrectly-be-allowed-to-store-and-serve-private-data\">\n<span id=\"caches-may-incorrectly-be-allowed-to-store-and-serve-private-data\"></span><h2>Caches may incorrectly be allowed to store and serve private data<a class=\"headerlink\" href=\"#caches-may-incorrectly-be-allowed-to-store-and-serve-private-data\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>In certain situations, Django may allow caches to store private data\nrelated to a particular session and then serve that data to requests\nwith a different session, or no session at all. This can lead to\ninformation disclosure and can be a vector for cache poisoning.</p>\n<p>When using Django sessions, Django will set a <code class=\"docutils literal notranslate\"><span class=\"pre\">Vary:</span> <span class=\"pre\">Cookie</span></code> header to\nensure caches do not serve cached data to requests from other sessions.\nHowever, older versions of Internet Explorer (most likely only Internet\nExplorer 6, and Internet Explorer 7 if run on Windows XP or Windows Server\n2003) are unable to handle the <code class=\"docutils literal notranslate\"><span class=\"pre\">Vary</span></code> header in combination with many content\ntypes. Therefore, Django would remove the header if the request was made by\nInternet Explorer.</p>\n<p>To remedy this, the special behavior for these older Internet Explorer versions\nhas been removed, and the <code class=\"docutils literal notranslate\"><span class=\"pre\">Vary</span></code> header is no longer stripped from the response.\nIn addition, modifications to the <code class=\"docutils literal notranslate\"><span class=\"pre\">Cache-Control</span></code> header for all Internet Explorer\nrequests with a <code class=\"docutils literal notranslate\"><span class=\"pre\">Content-Disposition</span></code> header have also been removed as they\nwere found to have similar issues.</p>\n</div>\n<div class=\"section\" id=\"s-malformed-redirect-urls-from-user-input-not-correctly-validated\">\n<span id=\"malformed-redirect-urls-from-user-input-not-correctly-validated\"></span><h2>Malformed redirect URLs from user input not correctly validated<a class=\"headerlink\" href=\"#malformed-redirect-urls-from-user-input-not-correctly-validated\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The validation for redirects did not correctly validate some malformed URLs,\nwhich are accepted by some browsers. This allows a user to be redirected to\nan unsafe URL unexpectedly.</p>\n<p>Django relies on user input in some cases (e.g.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.auth.views.login()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.comments</span></code>, and\n<a class=\"reference internal\" href=\"../../topics/i18n/\"><span class=\"doc\">i18n</span></a>) to redirect the user to an \u201con success\u201d URL.\nThe security checks for these redirects (namely\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.http.is_safe_url()</span></code>) did not correctly validate some malformed\nURLs, such as <code class=\"docutils literal notranslate\"><span class=\"pre\">http:\\\\\\\\\\\\djangoproject.com</span></code>, which are accepted by some\nbrowsers with more liberal URL parsing.</p>\n<p>To remedy this, the validation in <code class=\"docutils literal notranslate\"><span class=\"pre\">is_safe_url()</span></code> has been tightened to be able\nto handle and correctly validate these malformed URLs.</p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["releases/1.4.12", "Django 1.4.12 release notes", "N", "next"], ["releases/1.4.14", "Django 1.4.14 release notes", "P", "previous"]], "sourcename": "releases/1.4.13.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Django 1.4.13 release notes</a><ul>\n<li><a class=\"reference internal\" href=\"#caches-may-incorrectly-be-allowed-to-store-and-serve-private-data\">Caches may incorrectly be allowed to store and serve private data</a></li>\n<li><a class=\"reference internal\" href=\"#malformed-redirect-urls-from-user-input-not-correctly-validated\">Malformed redirect URLs from user input not correctly validated</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "releases/1.4.13", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}