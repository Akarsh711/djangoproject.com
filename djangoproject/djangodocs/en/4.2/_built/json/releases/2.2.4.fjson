{"parents": [{"link": "../", "title": "Release notes"}], "prev": {"link": "../2.2.5/", "title": "Django 2.2.5 release notes"}, "next": {"link": "../2.2.3/", "title": "Django 2.2.3 release notes"}, "title": "Django 2.2.4 release notes", "meta": {}, "body": "<div class=\"section\" id=\"s-django-2-2-4-release-notes\">\n<span id=\"django-2-2-4-release-notes\"></span><h1>Django 2.2.4 release notes<a class=\"headerlink\" href=\"#django-2-2-4-release-notes\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p><em>August 1, 2019</em></p>\n<p>Django 2.2.4 fixes security issues and several bugs in 2.2.3.</p>\n<div class=\"section\" id=\"s-cve-2019-14232-denial-of-service-possibility-in-django-utils-text-truncator\">\n<span id=\"cve-2019-14232-denial-of-service-possibility-in-django-utils-text-truncator\"></span><h2>CVE-2019-14232: Denial-of-service possibility in <code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.text.Truncator</span></code><a class=\"headerlink\" href=\"#cve-2019-14232-denial-of-service-possibility-in-django-utils-text-truncator\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.text.Truncator</span></code>\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">chars()</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">words()</span></code> methods\nwere passed the <code class=\"docutils literal notranslate\"><span class=\"pre\">html=True</span></code> argument, they were extremely slow to evaluate\ncertain inputs due to a catastrophic backtracking vulnerability in a regular\nexpression. The <code class=\"docutils literal notranslate\"><span class=\"pre\">chars()</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">words()</span></code> methods are used to implement the\n<a class=\"reference internal\" href=\"../../ref/templates/builtins/#std-templatefilter-truncatechars_html\"><code class=\"xref std std-tfilter docutils literal notranslate\"><span class=\"pre\">truncatechars_html</span></code></a> and <a class=\"reference internal\" href=\"../../ref/templates/builtins/#std-templatefilter-truncatewords_html\"><code class=\"xref std std-tfilter docutils literal notranslate\"><span class=\"pre\">truncatewords_html</span></code></a> template\nfilters, which were thus vulnerable.</p>\n<p>The regular expressions used by <code class=\"docutils literal notranslate\"><span class=\"pre\">Truncator</span></code> have been simplified in order to\navoid potential backtracking issues. As a consequence, trailing punctuation may\nnow at times be included in the truncated output.</p>\n</div>\n<div class=\"section\" id=\"s-cve-2019-14233-denial-of-service-possibility-in-strip-tags\">\n<span id=\"cve-2019-14233-denial-of-service-possibility-in-strip-tags\"></span><h2>CVE-2019-14233: Denial-of-service possibility in <code class=\"docutils literal notranslate\"><span class=\"pre\">strip_tags()</span></code><a class=\"headerlink\" href=\"#cve-2019-14233-denial-of-service-possibility-in-strip-tags\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Due to the behavior of the underlying <code class=\"docutils literal notranslate\"><span class=\"pre\">HTMLParser</span></code>,\n<a class=\"reference internal\" href=\"../../ref/utils/#django.utils.html.strip_tags\" title=\"django.utils.html.strip_tags\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.utils.html.strip_tags()</span></code></a> would be extremely slow to evaluate\ncertain inputs containing large sequences of nested incomplete HTML entities.\nThe <code class=\"docutils literal notranslate\"><span class=\"pre\">strip_tags()</span></code> method is used to implement the corresponding\n<a class=\"reference internal\" href=\"../../ref/templates/builtins/#std-templatefilter-striptags\"><code class=\"xref std std-tfilter docutils literal notranslate\"><span class=\"pre\">striptags</span></code></a> template filter, which was thus also vulnerable.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">strip_tags()</span></code> now avoids recursive calls to <code class=\"docutils literal notranslate\"><span class=\"pre\">HTMLParser</span></code> when progress\nremoving tags, but necessarily incomplete HTML entities, stops being made.</p>\n<p>Remember that absolutely NO guarantee is provided about the results of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">strip_tags()</span></code> being HTML safe. So NEVER mark safe the result of a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">strip_tags()</span></code> call without escaping it first, for example with\n<a class=\"reference internal\" href=\"../../ref/utils/#django.utils.html.escape\" title=\"django.utils.html.escape\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.utils.html.escape()</span></code></a>.</p>\n</div>\n<div class=\"section\" id=\"s-cve-2019-14234-sql-injection-possibility-in-key-and-index-lookups-for-jsonfield-hstorefield\">\n<span id=\"cve-2019-14234-sql-injection-possibility-in-key-and-index-lookups-for-jsonfield-hstorefield\"></span><h2>CVE-2019-14234: SQL injection possibility in key and index lookups for <code class=\"docutils literal notranslate\"><span class=\"pre\">JSONField</span></code>/<code class=\"docutils literal notranslate\"><span class=\"pre\">HStoreField</span></code><a class=\"headerlink\" href=\"#cve-2019-14234-sql-injection-possibility-in-key-and-index-lookups-for-jsonfield-hstorefield\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p><a class=\"reference internal\" href=\"../../topics/db/queries/#std-fieldlookup-jsonfield.key\"><code class=\"xref std std-lookup docutils literal notranslate\"><span class=\"pre\">Key</span> <span class=\"pre\">and</span> <span class=\"pre\">index</span> <span class=\"pre\">lookups</span></code></a> for\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.postgres.fields.JSONField</span></code> and <a class=\"reference internal\" href=\"../../ref/contrib/postgres/fields/#std-fieldlookup-hstorefield.key\"><code class=\"xref std std-lookup docutils literal notranslate\"><span class=\"pre\">key</span> <span class=\"pre\">lookups</span></code></a> for <a class=\"reference internal\" href=\"../../ref/contrib/postgres/fields/#django.contrib.postgres.fields.HStoreField\" title=\"django.contrib.postgres.fields.HStoreField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HStoreField</span></code></a>\nwere subject to SQL injection, using a suitably crafted dictionary, with\ndictionary expansion, as the <code class=\"docutils literal notranslate\"><span class=\"pre\">**kwargs</span></code> passed to <code class=\"docutils literal notranslate\"><span class=\"pre\">QuerySet.filter()</span></code>.</p>\n</div>\n<div class=\"section\" id=\"s-cve-2019-14235-potential-memory-exhaustion-in-django-utils-encoding-uri-to-iri\">\n<span id=\"cve-2019-14235-potential-memory-exhaustion-in-django-utils-encoding-uri-to-iri\"></span><h2>CVE-2019-14235: Potential memory exhaustion in <code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.encoding.uri_to_iri()</span></code><a class=\"headerlink\" href=\"#cve-2019-14235-potential-memory-exhaustion-in-django-utils-encoding-uri-to-iri\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>If passed certain inputs, <a class=\"reference internal\" href=\"../../ref/utils/#django.utils.encoding.uri_to_iri\" title=\"django.utils.encoding.uri_to_iri\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.utils.encoding.uri_to_iri()</span></code></a> could lead\nto significant memory usage due to excessive recursion when re-percent-encoding\ninvalid UTF-8 octet sequences.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">uri_to_iri()</span></code> now avoids recursion when re-percent-encoding invalid UTF-8\noctet sequences.</p>\n</div>\n<div class=\"section\" id=\"s-bugfixes\">\n<span id=\"bugfixes\"></span><h2>Bugfixes<a class=\"headerlink\" href=\"#bugfixes\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul class=\"simple\">\n<li>Fixed a regression in Django 2.2 when ordering a <code class=\"docutils literal notranslate\"><span class=\"pre\">QuerySet.union()</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">intersection()</span></code>, or <code class=\"docutils literal notranslate\"><span class=\"pre\">difference()</span></code> by a field type present more than\nonce results in the wrong ordering being used (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/30628\">#30628</a>).</li>\n<li>Fixed a migration crash on PostgreSQL when adding a check constraint\nwith a <code class=\"docutils literal notranslate\"><span class=\"pre\">contains</span></code> lookup on\n<a class=\"reference internal\" href=\"../../ref/contrib/postgres/fields/#django.contrib.postgres.fields.DateRangeField\" title=\"django.contrib.postgres.fields.DateRangeField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DateRangeField</span></code></a> or\n<a class=\"reference internal\" href=\"../../ref/contrib/postgres/fields/#django.contrib.postgres.fields.DateTimeRangeField\" title=\"django.contrib.postgres.fields.DateTimeRangeField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DateTimeRangeField</span></code></a>, if the right\nhand side of an expression is the same type (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/30621\">#30621</a>).</li>\n<li>Fixed a regression in Django 2.2 where auto-reloader crashes if a file path\ncontains null characters (<code class=\"docutils literal notranslate\"><span class=\"pre\">'\\x00'</span></code>) (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/30506\">#30506</a>).</li>\n<li>Fixed a regression in Django 2.2 where auto-reloader crashes if a translation\ndirectory cannot be resolved (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/30647\">#30647</a>).</li>\n</ul>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["releases/2.2.3", "Django 2.2.3 release notes", "N", "next"], ["releases/2.2.5", "Django 2.2.5 release notes", "P", "previous"]], "sourcename": "releases/2.2.4.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Django 2.2.4 release notes</a><ul>\n<li><a class=\"reference internal\" href=\"#cve-2019-14232-denial-of-service-possibility-in-django-utils-text-truncator\">CVE-2019-14232: Denial-of-service possibility in <code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.text.Truncator</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#cve-2019-14233-denial-of-service-possibility-in-strip-tags\">CVE-2019-14233: Denial-of-service possibility in <code class=\"docutils literal notranslate\"><span class=\"pre\">strip_tags()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#cve-2019-14234-sql-injection-possibility-in-key-and-index-lookups-for-jsonfield-hstorefield\">CVE-2019-14234: SQL injection possibility in key and index lookups for <code class=\"docutils literal notranslate\"><span class=\"pre\">JSONField</span></code>/<code class=\"docutils literal notranslate\"><span class=\"pre\">HStoreField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#cve-2019-14235-potential-memory-exhaustion-in-django-utils-encoding-uri-to-iri\">CVE-2019-14235: Potential memory exhaustion in <code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.encoding.uri_to_iri()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#bugfixes\">Bugfixes</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "releases/2.2.4", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
