{"parents": [{"link": "../", "title": "Django FAQ"}], "prev": {"link": "../", "title": "Django FAQ"}, "next": {"link": "../install/", "title": "FAQ: Installation"}, "title": "FAQ: General", "meta": {}, "body": "<div class=\"section\" id=\"s-faq-general\">\n<span id=\"faq-general\"></span><h1>FAQ: General<a class=\"headerlink\" href=\"#faq-general\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"s-why-does-this-project-exist\">\n<span id=\"why-does-this-project-exist\"></span><h2>Why does this project exist?<a class=\"headerlink\" href=\"#why-does-this-project-exist\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Django grew from a very practical need: World Online, a newspaper web\noperation, is responsible for building intensive web applications on journalism\ndeadlines. In the fast-paced newsroom, World Online often has only a matter of\nhours to take a complicated web application from concept to public launch.</p>\n<p>At the same time, the World Online web developers have consistently been\nperfectionists when it comes to following best practices of web development.</p>\n<p>In fall 2003, the World Online developers (Adrian Holovaty and Simon Willison)\nditched PHP and began using Python to develop its websites. As they built\nintensive, richly interactive sites such as Lawrence.com, they began to extract\na generic web development framework that let them build web applications more\nand more quickly. They tweaked this framework constantly, adding improvements\nover two years.</p>\n<p>In summer 2005, World Online decided to open-source the resulting software,\nDjango. Django would not be possible without a whole host of open-source\nprojects \u2013 <a class=\"reference external\" href=\"https://httpd.apache.org/\">Apache</a>, <a class=\"reference external\" href=\"https://www.python.org/\">Python</a>, and <a class=\"reference external\" href=\"https://www.postgresql.org/\">PostgreSQL</a> to name a few \u2013 and we\u2019re\nthrilled to be able to give something back to the open-source community.</p>\n</div>\n<div class=\"section\" id=\"s-what-does-django-mean-and-how-do-you-pronounce-it\">\n<span id=\"what-does-django-mean-and-how-do-you-pronounce-it\"></span><h2>What does \u201cDjango\u201d mean, and how do you pronounce it?<a class=\"headerlink\" href=\"#what-does-django-mean-and-how-do-you-pronounce-it\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Django is named after <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Django_Reinhardt\">Django Reinhardt</a>, a jazz manouche guitarist from the 1930s\nto early 1950s. To this day, he\u2019s considered one of the best guitarists of all time.</p>\n<p>Listen to his music. You\u2019ll like it.</p>\n<p>Django is pronounced <strong>JANG</strong>-oh. Rhymes with FANG-oh. The \u201cD\u201d is silent.</p>\n<p>We\u2019ve also recorded an <a class=\"reference external\" href=\"https://www.red-bean.com/~adrian/django_pronunciation.mp3\">audio clip of the pronunciation</a>.</p>\n</div>\n<div class=\"section\" id=\"s-is-django-stable\">\n<span id=\"is-django-stable\"></span><h2>Is Django stable?<a class=\"headerlink\" href=\"#is-django-stable\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Yes, it\u2019s quite stable. Companies like Disqus, Instagram, Pinterest, and\nMozilla have been using Django for many years. Sites built on Django have\nweathered traffic spikes of over 50 thousand hits per second.</p>\n</div>\n<div class=\"section\" id=\"s-does-django-scale\">\n<span id=\"does-django-scale\"></span><h2>Does Django scale?<a class=\"headerlink\" href=\"#does-django-scale\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Yes. Compared to development time, hardware is cheap, and so Django is\ndesigned to take advantage of as much hardware as you can throw at it.</p>\n<p>Django uses a \u201cshared-nothing\u201d architecture, which means you can add hardware\nat any level \u2013 database servers, caching servers or web/application servers.</p>\n<p>The framework cleanly separates components such as its database layer and\napplication layer. And it ships with a simple-yet-powerful\n<a class=\"reference internal\" href=\"../../topics/cache/\"><span class=\"doc\">cache framework</span></a>.</p>\n</div>\n<div class=\"section\" id=\"s-who-s-behind-this\">\n<span id=\"who-s-behind-this\"></span><h2>Who\u2019s behind this?<a class=\"headerlink\" href=\"#who-s-behind-this\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Django was originally developed at World Online, the web department of a\nnewspaper in Lawrence, Kansas, USA. Django\u2019s now run by an international\n<a class=\"reference external\" href=\"https://www.djangoproject.com/foundation/teams/\">team of volunteers</a>.</p>\n</div>\n<div class=\"section\" id=\"s-how-is-django-licensed\">\n<span id=\"how-is-django-licensed\"></span><h2>How is Django licensed?<a class=\"headerlink\" href=\"#how-is-django-licensed\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Django is distributed under <a class=\"reference external\" href=\"https://github.com/django/django/blob/main/LICENSE\">the 3-clause BSD license</a>. This\nis an open source license granting broad permissions to modify and redistribute\nDjango.</p>\n</div>\n<div class=\"section\" id=\"s-why-does-django-include-python-s-license-file\">\n<span id=\"why-does-django-include-python-s-license-file\"></span><h2>Why does Django include Python\u2019s license file?<a class=\"headerlink\" href=\"#why-does-django-include-python-s-license-file\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Django includes code from the Python standard library. Python is distributed\nunder a permissive open source license. <a class=\"reference external\" href=\"https://github.com/django/django/blob/main/LICENSE.python\">A copy of the Python license</a> is included with Django for compliance with Python\u2019s terms.</p>\n</div>\n<div class=\"section\" id=\"s-which-sites-use-django\">\n<span id=\"which-sites-use-django\"></span><h2>Which sites use Django?<a class=\"headerlink\" href=\"#which-sites-use-django\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p><a class=\"reference external\" href=\"https://djangosites.org\">DjangoSites.org</a> features a constantly growing list of Django-powered sites.</p>\n</div>\n<div class=\"section\" id=\"s-django-appears-to-be-a-mvc-framework-but-you-call-the-controller-the-view-and-the-view-the-template-how-come-you-don-t-use-the-standard-names\">\n<span id=\"s-faq-mtv\"></span><span id=\"django-appears-to-be-a-mvc-framework-but-you-call-the-controller-the-view-and-the-view-the-template-how-come-you-don-t-use-the-standard-names\"></span><span id=\"faq-mtv\"></span><h2>Django appears to be a MVC framework, but you call the Controller the \u201cview\u201d, and the View the \u201ctemplate\u201d. How come you don\u2019t use the standard names?<a class=\"headerlink\" href=\"#django-appears-to-be-a-mvc-framework-but-you-call-the-controller-the-view-and-the-view-the-template-how-come-you-don-t-use-the-standard-names\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Well, the standard names are debatable.</p>\n<p>In our interpretation of MVC, the \u201cview\u201d describes the data that gets presented\nto the user. It\u2019s not necessarily <em>how</em> the data <em>looks</em>, but <em>which</em> data is\npresented. The view describes <em>which data you see</em>, not <em>how you see it.</em> It\u2019s\na subtle distinction.</p>\n<p>So, in our case, a \u201cview\u201d is the Python callback function for a particular URL,\nbecause that callback function describes which data is presented.</p>\n<p>Furthermore, it\u2019s sensible to separate content from presentation \u2013 which is\nwhere templates come in. In Django, a \u201cview\u201d describes which data is presented,\nbut a view normally delegates to a template, which describes <em>how</em> the data is\npresented.</p>\n<p>Where does the \u201ccontroller\u201d fit in, then? In Django\u2019s case, it\u2019s probably the\nframework itself: the machinery that sends a request to the appropriate view,\naccording to the Django URL configuration.</p>\n<p>If you\u2019re hungry for acronyms, you might say that Django is a \u201cMTV\u201d framework\n\u2013 that is, \u201cmodel\u201d, \u201ctemplate\u201d, and \u201cview.\u201d That breakdown makes much more\nsense.</p>\n<p>At the end of the day, it comes down to getting stuff done. And, regardless of\nhow things are named, Django gets stuff done in a way that\u2019s most logical to\nus.</p>\n</div>\n<div class=\"section\" id=\"s-framework-x-does-feature-y-why-doesn-t-django\">\n<span id=\"framework-x-does-feature-y-why-doesn-t-django\"></span><h2>&lt;Framework X&gt; does &lt;feature Y&gt; \u2013 why doesn\u2019t Django?<a class=\"headerlink\" href=\"#framework-x-does-feature-y-why-doesn-t-django\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>We\u2019re well aware that there are other awesome web frameworks out there, and\nwe\u2019re not averse to borrowing ideas where appropriate. However, Django was\ndeveloped precisely because we were unhappy with the status quo, so please be\naware that \u201cbecause &lt;Framework X&gt; does it\u201d is not going to be sufficient reason\nto add a given feature to Django.</p>\n</div>\n<div class=\"section\" id=\"s-why-did-you-write-all-of-django-from-scratch-instead-of-using-other-python-libraries\">\n<span id=\"why-did-you-write-all-of-django-from-scratch-instead-of-using-other-python-libraries\"></span><h2>Why did you write all of Django from scratch, instead of using other Python libraries?<a class=\"headerlink\" href=\"#why-did-you-write-all-of-django-from-scratch-instead-of-using-other-python-libraries\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>When Django was originally written, Adrian and Simon spent quite a bit of time\nexploring the various Python web frameworks available.</p>\n<p>In our opinion, none of them were completely up to snuff.</p>\n<p>We\u2019re picky. You might even call us perfectionists. (With deadlines.)</p>\n<p>Over time, we stumbled across open-source libraries that did things we\u2019d\nalready implemented. It was reassuring to see other people solving similar\nproblems in similar ways, but it was too late to integrate outside code: We\u2019d\nalready written, tested and implemented our own framework bits in several\nproduction settings \u2013 and our own code met our needs delightfully.</p>\n<p>In most cases, however, we found that existing frameworks/tools inevitably had\nsome sort of fundamental, fatal flaw that made us squeamish. No tool fit our\nphilosophies 100%.</p>\n<p>Like we said: We\u2019re picky.</p>\n<p>We\u2019ve documented our philosophies on the\n<a class=\"reference internal\" href=\"../../misc/design-philosophies/\"><span class=\"doc\">design philosophies page</span></a>.</p>\n</div>\n<div class=\"section\" id=\"s-is-django-a-content-management-system-cms\">\n<span id=\"is-django-a-content-management-system-cms\"></span><h2>Is Django a content-management-system (CMS)?<a class=\"headerlink\" href=\"#is-django-a-content-management-system-cms\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>No, Django is not a CMS, or any sort of \u201cturnkey product\u201d in and of itself.\nIt\u2019s a web framework; it\u2019s a programming tool that lets you build websites.</p>\n<p>For example, it doesn\u2019t make much sense to compare Django to something like\n<a class=\"reference external\" href=\"https://www.drupal.org/\">Drupal</a>, because Django is something you use to <em>create</em> things like Drupal.</p>\n<p>Yes, Django\u2019s automatic admin site is fantastic and timesaving \u2013 but the admin\nsite is one module of Django the framework. Furthermore, although Django has\nspecial conveniences for building \u201cCMS-y\u201d apps, that doesn\u2019t mean it\u2019s not just\nas appropriate for building \u201cnon-CMS-y\u201d apps (whatever that means!).</p>\n</div>\n<div class=\"section\" id=\"s-how-can-i-download-the-django-documentation-to-read-it-offline\">\n<span id=\"how-can-i-download-the-django-documentation-to-read-it-offline\"></span><h2>How can I download the Django documentation to read it offline?<a class=\"headerlink\" href=\"#how-can-i-download-the-django-documentation-to-read-it-offline\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The Django docs are available in the <code class=\"docutils literal notranslate\"><span class=\"pre\">docs</span></code> directory of each Django tarball\nrelease. These docs are in reST (reStructuredText) format, and each text file\ncorresponds to a web page on the official Django site.</p>\n<p>Because the documentation is <a class=\"reference external\" href=\"https://github.com/django/django/blob/main/docs\">stored in revision control</a>, you\ncan browse documentation changes just like you can browse code changes.</p>\n<p>Technically, the docs on Django\u2019s site are generated from the latest development\nversions of those reST documents, so the docs on the Django site may offer more\ninformation than the docs that come with the latest Django release.</p>\n</div>\n<div class=\"section\" id=\"s-how-do-i-cite-django\">\n<span id=\"how-do-i-cite-django\"></span><h2>How do I cite Django?<a class=\"headerlink\" href=\"#how-do-i-cite-django\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>It\u2019s difficult to give an official citation format, for two reasons: citation\nformats can vary wildly between publications, and citation standards for\nsoftware are still a matter of some debate.</p>\n<p>For example, <a class=\"reference external\" href=\"https://apastyle.apa.org/\">APA style</a>,  would dictate something like:</p>\n<div class=\"highlight-text notranslate\"><div class=\"highlight\"><pre><span></span>Django (Version 1.5) [Computer Software]. (2013). Retrieved from https://www.djangoproject.com/.\n</pre></div>\n</div>\n<p>However, the only true guide is what your publisher will accept, so get a copy\nof those guidelines and fill in the gaps as best you can.</p>\n<p>If your referencing style guide requires a publisher name, use \u201cDjango Software\nFoundation\u201d.</p>\n<p>If you need a publishing location, use \u201cLawrence, Kansas\u201d.</p>\n<p>If you need a web address, use <a class=\"reference external\" href=\"https://www.djangoproject.com/\">https://www.djangoproject.com/</a>.</p>\n<p>If you need a name, just use \u201cDjango\u201d, without any tagline.</p>\n<p>If you need a publication date, use the year of release of the version you\u2019re\nreferencing (e.g., 2013 for v1.5)</p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["faq/install", "FAQ: Installation", "N", "next"], ["faq/index", "Django FAQ", "P", "previous"]], "sourcename": "faq/general.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">FAQ: General</a><ul>\n<li><a class=\"reference internal\" href=\"#why-does-this-project-exist\">Why does this project exist?</a></li>\n<li><a class=\"reference internal\" href=\"#what-does-django-mean-and-how-do-you-pronounce-it\">What does \u201cDjango\u201d mean, and how do you pronounce it?</a></li>\n<li><a class=\"reference internal\" href=\"#is-django-stable\">Is Django stable?</a></li>\n<li><a class=\"reference internal\" href=\"#does-django-scale\">Does Django scale?</a></li>\n<li><a class=\"reference internal\" href=\"#who-s-behind-this\">Who\u2019s behind this?</a></li>\n<li><a class=\"reference internal\" href=\"#how-is-django-licensed\">How is Django licensed?</a></li>\n<li><a class=\"reference internal\" href=\"#why-does-django-include-python-s-license-file\">Why does Django include Python\u2019s license file?</a></li>\n<li><a class=\"reference internal\" href=\"#which-sites-use-django\">Which sites use Django?</a></li>\n<li><a class=\"reference internal\" href=\"#django-appears-to-be-a-mvc-framework-but-you-call-the-controller-the-view-and-the-view-the-template-how-come-you-don-t-use-the-standard-names\">Django appears to be a MVC framework, but you call the Controller the \u201cview\u201d, and the View the \u201ctemplate\u201d. How come you don\u2019t use the standard names?</a></li>\n<li><a class=\"reference internal\" href=\"#framework-x-does-feature-y-why-doesn-t-django\">&lt;Framework X&gt; does &lt;feature Y&gt; \u2013 why doesn\u2019t Django?</a></li>\n<li><a class=\"reference internal\" href=\"#why-did-you-write-all-of-django-from-scratch-instead-of-using-other-python-libraries\">Why did you write all of Django from scratch, instead of using other Python libraries?</a></li>\n<li><a class=\"reference internal\" href=\"#is-django-a-content-management-system-cms\">Is Django a content-management-system (CMS)?</a></li>\n<li><a class=\"reference internal\" href=\"#how-can-i-download-the-django-documentation-to-read-it-offline\">How can I download the Django documentation to read it offline?</a></li>\n<li><a class=\"reference internal\" href=\"#how-do-i-cite-django\">How do I cite Django?</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "faq/general", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}