{"parents": [{"link": "../", "title": "Django FAQ"}], "prev": {"link": "../help/", "title": "FAQ: Getting Help"}, "next": {"link": "../admin/", "title": "FAQ: The admin"}, "title": "FAQ: Databases and models", "meta": {}, "body": "<div class=\"section\" id=\"s-faq-databases-and-models\">\n<span id=\"faq-databases-and-models\"></span><h1>FAQ: Databases and models<a class=\"headerlink\" href=\"#faq-databases-and-models\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"s-how-can-i-see-the-raw-sql-queries-django-is-running\">\n<span id=\"s-faq-see-raw-sql-queries\"></span><span id=\"how-can-i-see-the-raw-sql-queries-django-is-running\"></span><span id=\"faq-see-raw-sql-queries\"></span><h2>How can I see the raw SQL queries Django is running?<a class=\"headerlink\" href=\"#how-can-i-see-the-raw-sql-queries-django-is-running\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Make sure your Django <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-DEBUG\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEBUG</span></code></a> setting is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.\nThen do this:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">connection</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">queries</span>\n<span class=\"go\">[{&#39;sql&#39;: &#39;SELECT polls_polls.id, polls_polls.question, polls_polls.pub_date FROM polls_polls&#39;,</span>\n<span class=\"go\">&#39;time&#39;: &#39;0.002&#39;}]</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">connection.queries</span></code> is only available if <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-DEBUG\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEBUG</span></code></a> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.\nIt\u2019s a list of dictionaries in order of query execution. Each dictionary has\nthe following:</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">sql</span></code> - The raw SQL statement</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">time</span></code> - How long the statement took to execute, in seconds.</li>\n</ul>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">connection.queries</span></code> includes all SQL statements \u2013 INSERTs, UPDATES,\nSELECTs, etc. Each time your app hits the database, the query will be recorded.</p>\n<p>If you are using <a class=\"reference internal\" href=\"../../topics/db/multi-db/\"><span class=\"doc\">multiple databases</span></a>, you can use the\nsame interface on each member of the <code class=\"docutils literal notranslate\"><span class=\"pre\">connections</span></code> dictionary:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">connections</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">connections</span><span class=\"p\">[</span><span class=\"s2\">&quot;my_db_alias&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">queries</span>\n</pre></div>\n</div>\n<p>If you need to clear the query list manually at any point in your functions,\ncall <code class=\"docutils literal notranslate\"><span class=\"pre\">reset_queries()</span></code>, like this:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">reset_queries</span>\n\n<span class=\"n\">reset_queries</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-can-i-use-django-with-a-preexisting-database\">\n<span id=\"can-i-use-django-with-a-preexisting-database\"></span><h2>Can I use Django with a preexisting database?<a class=\"headerlink\" href=\"#can-i-use-django-with-a-preexisting-database\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Yes. See <a class=\"reference internal\" href=\"../../howto/legacy-databases/\"><span class=\"doc\">Integrating with a legacy database</span></a>.</p>\n</div>\n<div class=\"section\" id=\"s-if-i-make-changes-to-a-model-how-do-i-update-the-database\">\n<span id=\"if-i-make-changes-to-a-model-how-do-i-update-the-database\"></span><h2>If I make changes to a model, how do I update the database?<a class=\"headerlink\" href=\"#if-i-make-changes-to-a-model-how-do-i-update-the-database\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Take a look at Django\u2019s support for <a class=\"reference internal\" href=\"../../topics/migrations/#module-django.db.migrations\" title=\"django.db.migrations: Schema migration support for Django models\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">schema</span> <span class=\"pre\">migrations</span></code></a>.</p>\n<p>If you don\u2019t mind clearing data, your project\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">manage.py</span></code> utility has a\n<a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-flush\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">flush</span></code></a> option to reset the database to the state it was in\nimmediately after <a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-migrate\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">migrate</span></code></a> was executed.</p>\n</div>\n<div class=\"section\" id=\"s-do-django-models-support-multiple-column-primary-keys\">\n<span id=\"do-django-models-support-multiple-column-primary-keys\"></span><h2>Do Django models support multiple-column primary keys?<a class=\"headerlink\" href=\"#do-django-models-support-multiple-column-primary-keys\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>No. Only single-column primary keys are supported.</p>\n<p>But this isn\u2019t an issue in practice, because there\u2019s nothing stopping you from\nadding other constraints (using the <code class=\"docutils literal notranslate\"><span class=\"pre\">unique_together</span></code> model option or\ncreating the constraint directly in your database), and enforcing the\nuniqueness at that level. Single-column primary keys are needed for things such\nas the admin interface to work; e.g., you need a single value to specify\nan object to edit or delete.</p>\n</div>\n<div class=\"section\" id=\"s-does-django-support-nosql-databases\">\n<span id=\"does-django-support-nosql-databases\"></span><h2>Does Django support NoSQL databases?<a class=\"headerlink\" href=\"#does-django-support-nosql-databases\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>NoSQL databases are not officially supported by Django itself. There are,\nhowever, a number of side projects and forks which allow NoSQL functionality in\nDjango.</p>\n<p>You can take a look on <a class=\"reference external\" href=\"https://code.djangoproject.com/wiki/NoSqlSupport\">the wiki page</a> which discusses some projects.</p>\n</div>\n<div class=\"section\" id=\"s-how-do-i-add-database-specific-options-to-my-create-table-statements-such-as-specifying-myisam-as-the-table-type\">\n<span id=\"how-do-i-add-database-specific-options-to-my-create-table-statements-such-as-specifying-myisam-as-the-table-type\"></span><h2>How do I add database-specific options to my CREATE TABLE statements, such as specifying MyISAM as the table type?<a class=\"headerlink\" href=\"#how-do-i-add-database-specific-options-to-my-create-table-statements-such-as-specifying-myisam-as-the-table-type\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>We try to avoid adding special cases in the Django code to accommodate all the\ndatabase-specific options such as table type, etc. If you\u2019d like to use any of\nthese options, create a migration with a\n<a class=\"reference internal\" href=\"../../ref/migration-operations/#django.db.migrations.operations.RunSQL\" title=\"django.db.migrations.operations.RunSQL\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RunSQL</span></code></a> operation that contains\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ALTER</span> <span class=\"pre\">TABLE</span></code> statements that do what you want to do.</p>\n<p>For example, if you\u2019re using MySQL and want your tables to use the MyISAM table\ntype, use the following SQL:</p>\n<div class=\"highlight-sql notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">ALTER</span><span class=\"w\"> </span><span class=\"k\">TABLE</span><span class=\"w\"> </span><span class=\"n\">myapp_mytable</span><span class=\"w\"> </span><span class=\"n\">ENGINE</span><span class=\"o\">=</span><span class=\"n\">MyISAM</span><span class=\"p\">;</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["faq/admin", "FAQ: The admin", "N", "next"], ["faq/help", "FAQ: Getting Help", "P", "previous"]], "sourcename": "faq/models.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">FAQ: Databases and models</a><ul>\n<li><a class=\"reference internal\" href=\"#how-can-i-see-the-raw-sql-queries-django-is-running\">How can I see the raw SQL queries Django is running?</a></li>\n<li><a class=\"reference internal\" href=\"#can-i-use-django-with-a-preexisting-database\">Can I use Django with a preexisting database?</a></li>\n<li><a class=\"reference internal\" href=\"#if-i-make-changes-to-a-model-how-do-i-update-the-database\">If I make changes to a model, how do I update the database?</a></li>\n<li><a class=\"reference internal\" href=\"#do-django-models-support-multiple-column-primary-keys\">Do Django models support multiple-column primary keys?</a></li>\n<li><a class=\"reference internal\" href=\"#does-django-support-nosql-databases\">Does Django support NoSQL databases?</a></li>\n<li><a class=\"reference internal\" href=\"#how-do-i-add-database-specific-options-to-my-create-table-statements-such-as-specifying-myisam-as-the-table-type\">How do I add database-specific options to my CREATE TABLE statements, such as specifying MyISAM as the table type?</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "faq/models", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
