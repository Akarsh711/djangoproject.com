{"parents": [{"link": "../", "title": "Using Django"}], "prev": {"link": "../files/", "title": "Managing files"}, "next": {"link": "overview/", "title": "Writing and running tests"}, "title": "Testing in Django", "meta": {}, "body": "<div class=\"section\" id=\"s-testing-in-django\">\n<span id=\"testing-in-django\"></span><h1>Testing in Django<a class=\"headerlink\" href=\"#testing-in-django\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Automated testing is an extremely useful bug-killing tool for the modern\nweb developer. You can use a collection of tests \u2013 a <strong>test suite</strong> \u2013 to\nsolve, or avoid, a number of problems:</p>\n<ul class=\"simple\">\n<li>When you\u2019re writing new code, you can use tests to validate your code\nworks as expected.</li>\n<li>When you\u2019re refactoring or modifying old code, you can use tests to\nensure your changes haven\u2019t affected your application\u2019s behavior\nunexpectedly.</li>\n</ul>\n<p>Testing a web application is a complex task, because a web application is made\nof several layers of logic \u2013 from HTTP-level request handling, to form\nvalidation and processing, to template rendering. With Django\u2019s test-execution\nframework and assorted utilities, you can simulate requests, insert test data,\ninspect your application\u2019s output and generally verify your code is doing what\nit should be doing.</p>\n<p>The preferred way to write tests in Django is using the <a class=\"reference external\" href=\"https://docs.python.org/3/library/unittest.html#module-unittest\" title=\"(in Python v3.11)\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">unittest</span></code></a> module\nbuilt-in to the Python standard library. This is covered in detail in the\n<a class=\"reference internal\" href=\"overview/\"><span class=\"doc\">Writing and running tests</span></a> document.</p>\n<p>You can also use any <em>other</em> Python test framework; Django provides an API and\ntools for that kind of integration. They are described in the\n<a class=\"reference internal\" href=\"advanced/#other-testing-frameworks\"><span class=\"std std-ref\">Using different testing frameworks</span></a> section of <a class=\"reference internal\" href=\"advanced/\"><span class=\"doc\">Advanced testing topics</span></a>.</p>\n<div class=\"toctree-wrapper compound\">\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"overview/\">Writing and running tests</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"tools/\">Testing tools</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"advanced/\">Advanced testing topics</a></li>\n</ul>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["topics/testing/overview", "Writing and running tests", "N", "next"], ["topics/files", "Managing files", "P", "previous"]], "sourcename": "topics/testing/index.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Testing in Django</a></li>\n</ul>\n", "display_toc": false, "page_source_suffix": ".txt", "current_page_name": "topics/testing/index", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}