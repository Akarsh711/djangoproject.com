{"parents": [{"link": "../", "title": "Using Django"}], "prev": {"link": "../testing/advanced/", "title": "Advanced testing topics"}, "next": {"link": "default/", "title": "Using the Django authentication system"}, "title": "User authentication in Django", "meta": {}, "body": "<div class=\"section\" id=\"s-user-authentication-in-django\">\n<span id=\"user-authentication-in-django\"></span><h1>User authentication in Django<a class=\"headerlink\" href=\"#user-authentication-in-django\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"toctree-wrapper compound\">\n</div>\n<span class=\"target\" id=\"module-django.contrib.auth\"></span><p>Django comes with a user authentication system. It handles user accounts,\ngroups, permissions and cookie-based user sessions. This section of the\ndocumentation explains how the default implementation works out of the box, as\nwell as how to <a class=\"reference internal\" href=\"customizing/\"><span class=\"doc\">extend and customize</span></a> it to\nsuit your project\u2019s needs.</p>\n<div class=\"section\" id=\"s-overview\">\n<span id=\"overview\"></span><h2>Overview<a class=\"headerlink\" href=\"#overview\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The Django authentication system handles both authentication and authorization.\nBriefly, authentication verifies a user is who they claim to be, and\nauthorization determines what an authenticated user is allowed to do. Here the\nterm authentication is used to refer to both tasks.</p>\n<p>The auth system consists of:</p>\n<ul class=\"simple\">\n<li>Users</li>\n<li>Permissions: Binary (yes/no) flags designating whether a user may perform\na certain task.</li>\n<li>Groups: A generic way of applying labels and permissions to more than one\nuser.</li>\n<li>A configurable password hashing system</li>\n<li>Forms and view tools for logging in users, or restricting content</li>\n<li>A pluggable backend system</li>\n</ul>\n<p>The authentication system in Django aims to be very generic and doesn\u2019t provide\nsome features commonly found in web authentication systems. Solutions for some\nof these common problems have been implemented in third-party packages:</p>\n<ul class=\"simple\">\n<li>Password strength checking</li>\n<li>Throttling of login attempts</li>\n<li>Authentication against third-parties (OAuth, for example)</li>\n<li>Object-level permissions</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-installation\">\n<span id=\"installation\"></span><h2>Installation<a class=\"headerlink\" href=\"#installation\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Authentication support is bundled as a Django contrib module in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.auth</span></code>. By default, the required configuration is already\nincluded in the <code class=\"file docutils literal notranslate\"><span class=\"pre\">settings.py</span></code> generated by <a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-startproject\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">django-admin</span>\n<span class=\"pre\">startproject</span></code></a>, these consist of two items listed in your\n<a class=\"reference internal\" href=\"../../ref/settings/#std-setting-INSTALLED_APPS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">INSTALLED_APPS</span></code></a> setting:</p>\n<ol class=\"arabic simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">'django.contrib.auth'</span></code> contains the core of the authentication framework,\nand its default models.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">'django.contrib.contenttypes'</span></code> is the Django <a class=\"reference internal\" href=\"../../ref/contrib/contenttypes/\"><span class=\"doc\">content type system</span></a>, which allows permissions to be associated with\nmodels you create.</li>\n</ol>\n<p>and these items in your <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-MIDDLEWARE\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">MIDDLEWARE</span></code></a> setting:</p>\n<ol class=\"arabic simple\">\n<li><a class=\"reference internal\" href=\"../../ref/middleware/#django.contrib.sessions.middleware.SessionMiddleware\" title=\"django.contrib.sessions.middleware.SessionMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SessionMiddleware</span></code></a> manages\n<a class=\"reference internal\" href=\"../http/sessions/\"><span class=\"doc\">sessions</span></a> across requests.</li>\n<li><a class=\"reference internal\" href=\"../../ref/middleware/#django.contrib.auth.middleware.AuthenticationMiddleware\" title=\"django.contrib.auth.middleware.AuthenticationMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AuthenticationMiddleware</span></code></a> associates\nusers with requests using sessions.</li>\n</ol>\n<p>With these settings in place, running the command <code class=\"docutils literal notranslate\"><span class=\"pre\">manage.py</span> <span class=\"pre\">migrate</span></code> creates\nthe necessary database tables for auth related models and permissions for any\nmodels defined in your installed apps.</p>\n</div>\n<div class=\"section\" id=\"s-usage\">\n<span id=\"usage\"></span><h2>Usage<a class=\"headerlink\" href=\"#usage\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p><a class=\"reference internal\" href=\"default/\"><span class=\"doc\">Using Django\u2019s default implementation</span></a></p>\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"default/#user-objects\"><span class=\"std std-ref\">Working with User objects</span></a></li>\n<li><a class=\"reference internal\" href=\"default/#topic-authorization\"><span class=\"std std-ref\">Permissions and authorization</span></a></li>\n<li><a class=\"reference internal\" href=\"default/#auth-web-requests\"><span class=\"std std-ref\">Authentication in web requests</span></a></li>\n<li><a class=\"reference internal\" href=\"default/#auth-admin\"><span class=\"std std-ref\">Managing users in the admin</span></a></li>\n</ul>\n<p><a class=\"reference internal\" href=\"../../ref/contrib/auth/\"><span class=\"doc\">API reference for the default implementation</span></a></p>\n<p><a class=\"reference internal\" href=\"customizing/\"><span class=\"doc\">Customizing Users and authentication</span></a></p>\n<p><a class=\"reference internal\" href=\"passwords/\"><span class=\"doc\">Password management in Django</span></a></p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["topics/auth/default", "Using the Django authentication system", "N", "next"], ["topics/testing/advanced", "Advanced testing topics", "P", "previous"]], "sourcename": "topics/auth/index.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">User authentication in Django</a><ul>\n<li><a class=\"reference internal\" href=\"#overview\">Overview</a></li>\n<li><a class=\"reference internal\" href=\"#installation\">Installation</a></li>\n<li><a class=\"reference internal\" href=\"#usage\">Usage</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "topics/auth/index", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}