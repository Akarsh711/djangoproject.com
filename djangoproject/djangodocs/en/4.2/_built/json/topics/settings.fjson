{"parents": [{"link": "../", "title": "Using Django"}], "prev": {"link": "../serialization/", "title": "Serializing Django objects"}, "next": {"link": "../signals/", "title": "Signals"}, "title": "Django settings", "meta": {}, "body": "<div class=\"section\" id=\"s-django-settings\">\n<span id=\"django-settings\"></span><h1>Django settings<a class=\"headerlink\" href=\"#django-settings\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>A Django settings file contains all the configuration of your Django\ninstallation. This document explains how settings work and which settings are\navailable.</p>\n<div class=\"section\" id=\"s-the-basics\">\n<span id=\"the-basics\"></span><h2>The basics<a class=\"headerlink\" href=\"#the-basics\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>A settings file is just a Python module with module-level variables.</p>\n<p>Here are a couple of example settings:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">ALLOWED_HOSTS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;www.example.com&quot;</span><span class=\"p\">]</span>\n<span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"n\">DEFAULT_FROM_EMAIL</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;webmaster@example.com&quot;</span>\n</pre></div>\n</div>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">If you set <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-DEBUG\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEBUG</span></code></a> to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>, you also need to properly set\nthe <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-ALLOWED_HOSTS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">ALLOWED_HOSTS</span></code></a> setting.</p>\n</div>\n<p>Because a settings file is a Python module, the following apply:</p>\n<ul>\n<li><p class=\"first\">It doesn\u2019t allow for Python syntax errors.</p>\n</li>\n<li><p class=\"first\">It can assign settings dynamically using normal Python syntax.\nFor example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">MY_SETTING</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">)]</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">It can import values from other settings files.</p>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-designating-the-settings\">\n<span id=\"s-django-settings-module\"></span><span id=\"designating-the-settings\"></span><span id=\"django-settings-module\"></span><h2>Designating the settings<a class=\"headerlink\" href=\"#designating-the-settings\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"std envvar\">\n<dt class=\"sig sig-object std\" id=\"envvar-DJANGO_SETTINGS_MODULE\">\n<code class=\"sig-name descname\"><span class=\"pre\">DJANGO_SETTINGS_MODULE</span></code><a class=\"headerlink\" href=\"#envvar-DJANGO_SETTINGS_MODULE\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>When you use Django, you have to tell it which settings you\u2019re using. Do this\nby using an environment variable, <span class=\"target\" id=\"index-0\"></span><a class=\"reference internal\" href=\"#envvar-DJANGO_SETTINGS_MODULE\"><code class=\"xref std std-envvar docutils literal notranslate\"><span class=\"pre\">DJANGO_SETTINGS_MODULE</span></code></a>.</p>\n<p>The value of <span class=\"target\" id=\"index-1\"></span><a class=\"reference internal\" href=\"#envvar-DJANGO_SETTINGS_MODULE\"><code class=\"xref std std-envvar docutils literal notranslate\"><span class=\"pre\">DJANGO_SETTINGS_MODULE</span></code></a> should be in Python path syntax,\ne.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">mysite.settings</span></code>. Note that the settings module should be on the\nPython <a class=\"reference external\" href=\"https://diveinto.org/python3/your-first-python-program.html#importsearchpath\">import search path</a>.</p>\n<div class=\"section\" id=\"s-the-django-admin-utility\">\n<span id=\"the-django-admin-utility\"></span><h3>The <code class=\"docutils literal notranslate\"><span class=\"pre\">django-admin</span></code> utility<a class=\"headerlink\" href=\"#the-django-admin-utility\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>When using <a class=\"reference internal\" href=\"../../ref/django-admin/\"><span class=\"doc\">django-admin</span></a>, you can either set the\nenvironment variable once, or explicitly pass in the settings module each time\nyou run the utility.</p>\n<p>Example (Unix Bash shell):</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nb\">export</span> <span class=\"nv\">DJANGO_SETTINGS_MODULE</span><span class=\"o\">=</span>mysite.settings\ndjango-admin runserver\n</pre></div>\n</div>\n<p>Example (Windows shell):</p>\n<div class=\"highlight-doscon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"go\">set DJANGO_SETTINGS_MODULE=mysite.settings</span>\n<span class=\"go\">django-admin runserver</span>\n</pre></div>\n</div>\n<p>Use the <code class=\"docutils literal notranslate\"><span class=\"pre\">--settings</span></code> command-line argument to specify the settings manually:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>django-admin runserver --settings<span class=\"o\">=</span>mysite.settings\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-on-the-server-mod-wsgi\">\n<span id=\"on-the-server-mod-wsgi\"></span><h3>On the server (<code class=\"docutils literal notranslate\"><span class=\"pre\">mod_wsgi</span></code>)<a class=\"headerlink\" href=\"#on-the-server-mod-wsgi\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>In your live server environment, you\u2019ll need to tell your WSGI\napplication what settings file to use. Do that with <code class=\"docutils literal notranslate\"><span class=\"pre\">os.environ</span></code>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">&quot;DJANGO_SETTINGS_MODULE&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;mysite.settings&quot;</span>\n</pre></div>\n</div>\n<p>Read the <a class=\"reference internal\" href=\"../../howto/deployment/wsgi/modwsgi/\"><span class=\"doc\">Django mod_wsgi documentation</span></a> for more information and other common\nelements to a Django WSGI application.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-default-settings\">\n<span id=\"default-settings\"></span><h2>Default settings<a class=\"headerlink\" href=\"#default-settings\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>A Django settings file doesn\u2019t have to define any settings if it doesn\u2019t need\nto. Each setting has a sensible default value. These defaults live in the\nmodule <a class=\"reference external\" href=\"https://github.com/django/django/blob/main/django/conf/global_settings.py\">django/conf/global_settings.py</a>.</p>\n<p>Here\u2019s the algorithm Django uses in compiling settings:</p>\n<ul class=\"simple\">\n<li>Load settings from <code class=\"docutils literal notranslate\"><span class=\"pre\">global_settings.py</span></code>.</li>\n<li>Load settings from the specified settings file, overriding the global\nsettings as necessary.</li>\n</ul>\n<p>Note that a settings file should <em>not</em> import from <code class=\"docutils literal notranslate\"><span class=\"pre\">global_settings</span></code>, because\nthat\u2019s redundant.</p>\n<div class=\"section\" id=\"s-seeing-which-settings-you-ve-changed\">\n<span id=\"seeing-which-settings-you-ve-changed\"></span><h3>Seeing which settings you\u2019ve changed<a class=\"headerlink\" href=\"#seeing-which-settings-you-ve-changed\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The command <code class=\"docutils literal notranslate\"><span class=\"pre\">python</span> <span class=\"pre\">manage.py</span> <span class=\"pre\">diffsettings</span></code> displays differences between the\ncurrent settings file and Django\u2019s default settings.</p>\n<p>For more, see the <a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-diffsettings\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">diffsettings</span></code></a> documentation.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-using-settings-in-python-code\">\n<span id=\"using-settings-in-python-code\"></span><h2>Using settings in Python code<a class=\"headerlink\" href=\"#using-settings-in-python-code\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>In your Django apps, use settings by importing the object\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.conf.settings</span></code>. Example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n\n<span class=\"k\">if</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Do something</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p>Note that <code class=\"docutils literal notranslate\"><span class=\"pre\">django.conf.settings</span></code> isn\u2019t a module \u2013 it\u2019s an object. So\nimporting individual settings is not possible:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.conf.settings</span> <span class=\"kn\">import</span> <span class=\"n\">DEBUG</span>  <span class=\"c1\"># This won&#39;t work.</span>\n</pre></div>\n</div>\n<p>Also note that your code should <em>not</em> import from either <code class=\"docutils literal notranslate\"><span class=\"pre\">global_settings</span></code> or\nyour own settings file. <code class=\"docutils literal notranslate\"><span class=\"pre\">django.conf.settings</span></code> abstracts the concepts of\ndefault settings and site-specific settings; it presents a single interface.\nIt also decouples the code that uses settings from the location of your\nsettings.</p>\n</div>\n<div class=\"section\" id=\"s-altering-settings-at-runtime\">\n<span id=\"altering-settings-at-runtime\"></span><h2>Altering settings at runtime<a class=\"headerlink\" href=\"#altering-settings-at-runtime\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>You shouldn\u2019t alter settings in your applications at runtime. For example,\ndon\u2019t do this in a view:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n\n<span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>  <span class=\"c1\"># Don&#39;t do this!</span>\n</pre></div>\n</div>\n<p>The only place you should assign to settings is in a settings file.</p>\n</div>\n<div class=\"section\" id=\"s-security\">\n<span id=\"security\"></span><h2>Security<a class=\"headerlink\" href=\"#security\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Because a settings file contains sensitive information, such as the database\npassword, you should make every attempt to limit access to it. For example,\nchange its file permissions so that only you and your web server\u2019s user can\nread it. This is especially important in a shared-hosting environment.</p>\n</div>\n<div class=\"section\" id=\"s-available-settings\">\n<span id=\"available-settings\"></span><h2>Available settings<a class=\"headerlink\" href=\"#available-settings\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>For a full list of available settings, see the <a class=\"reference internal\" href=\"../../ref/settings/\"><span class=\"doc\">settings reference</span></a>.</p>\n</div>\n<div class=\"section\" id=\"s-creating-your-own-settings\">\n<span id=\"creating-your-own-settings\"></span><h2>Creating your own settings<a class=\"headerlink\" href=\"#creating-your-own-settings\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>There\u2019s nothing stopping you from creating your own settings, for your own\nDjango apps, but follow these guidelines:</p>\n<ul class=\"simple\">\n<li>Setting names must be all uppercase.</li>\n<li>Don\u2019t reinvent an already-existing setting.</li>\n</ul>\n<p>For settings that are sequences, Django itself uses lists, but this is only\na convention.</p>\n</div>\n<div class=\"section\" id=\"s-using-settings-without-setting-django-settings-module\">\n<span id=\"s-settings-without-django-settings-module\"></span><span id=\"using-settings-without-setting-django-settings-module\"></span><span id=\"settings-without-django-settings-module\"></span><h2>Using settings without setting <span class=\"target\" id=\"index-2\"></span><a class=\"reference internal\" href=\"#envvar-DJANGO_SETTINGS_MODULE\"><code class=\"xref std std-envvar docutils literal notranslate\"><span class=\"pre\">DJANGO_SETTINGS_MODULE</span></code></a><a class=\"headerlink\" href=\"#using-settings-without-setting-django-settings-module\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>In some cases, you might want to bypass the <span class=\"target\" id=\"index-3\"></span><a class=\"reference internal\" href=\"#envvar-DJANGO_SETTINGS_MODULE\"><code class=\"xref std std-envvar docutils literal notranslate\"><span class=\"pre\">DJANGO_SETTINGS_MODULE</span></code></a>\nenvironment variable. For example, if you\u2019re using the template system by\nitself, you likely don\u2019t want to have to set up an environment variable\npointing to a settings module.</p>\n<p>In these cases, you can configure Django\u2019s settings manually. Do this by\ncalling:</p>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.conf.settings.configure\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">django.conf.settings.</span></code><code class=\"sig-name descname\"><span class=\"pre\">configure</span></code>(<em><span class=\"n\"><span class=\"pre\">default_settings</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">settings</span></span></em>)<a class=\"headerlink\" href=\"#django.conf.settings.configure\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n\n<span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"n\">DEBUG</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Pass <code class=\"docutils literal notranslate\"><span class=\"pre\">configure()</span></code> as many keyword arguments as you\u2019d like, with each keyword\nargument representing a setting and its value. Each argument name should be all\nuppercase, with the same name as the settings described above. If a particular\nsetting is not passed to <code class=\"docutils literal notranslate\"><span class=\"pre\">configure()</span></code> and is needed at some later point,\nDjango will use the default setting value.</p>\n<p>Configuring Django in this fashion is mostly necessary \u2013 and, indeed,\nrecommended \u2013 when you\u2019re using a piece of the framework inside a larger\napplication.</p>\n<p>Consequently, when configured via <code class=\"docutils literal notranslate\"><span class=\"pre\">settings.configure()</span></code>, Django will not\nmake any modifications to the process environment variables (see the\ndocumentation of <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-TIME_ZONE\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">TIME_ZONE</span></code></a> for why this would normally occur). It\u2019s\nassumed that you\u2019re already in full control of your environment in these\ncases.</p>\n<div class=\"section\" id=\"s-custom-default-settings\">\n<span id=\"custom-default-settings\"></span><h3>Custom default settings<a class=\"headerlink\" href=\"#custom-default-settings\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>If you\u2019d like default values to come from somewhere other than\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.conf.global_settings</span></code>, you can pass in a module or class that\nprovides the default settings as the <code class=\"docutils literal notranslate\"><span class=\"pre\">default_settings</span></code> argument (or as the\nfirst positional argument) in the call to <code class=\"docutils literal notranslate\"><span class=\"pre\">configure()</span></code>.</p>\n<p>In this example, default settings are taken from <code class=\"docutils literal notranslate\"><span class=\"pre\">myapp_defaults</span></code>, and the\n<a class=\"reference internal\" href=\"../../ref/settings/#std-setting-DEBUG\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEBUG</span></code></a> setting is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, regardless of its value in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">myapp_defaults</span></code>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">myapp</span> <span class=\"kn\">import</span> <span class=\"n\">myapp_defaults</span>\n\n<span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"n\">default_settings</span><span class=\"o\">=</span><span class=\"n\">myapp_defaults</span><span class=\"p\">,</span> <span class=\"n\">DEBUG</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The following example, which uses <code class=\"docutils literal notranslate\"><span class=\"pre\">myapp_defaults</span></code> as a positional argument,\nis equivalent:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"n\">myapp_defaults</span><span class=\"p\">,</span> <span class=\"n\">DEBUG</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Normally, you will not need to override the defaults in this fashion. The\nDjango defaults are sufficiently tame that you can safely use them. Be aware\nthat if you do pass in a new default module, it entirely <em>replaces</em> the Django\ndefaults, so you must specify a value for every possible setting that might be\nused in the code you are importing. Check in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.conf.settings.global_settings</span></code> for the full list.</p>\n</div>\n<div class=\"section\" id=\"s-either-configure-or-django-settings-module-is-required\">\n<span id=\"either-configure-or-django-settings-module-is-required\"></span><h3>Either <code class=\"docutils literal notranslate\"><span class=\"pre\">configure()</span></code> or <span class=\"target\" id=\"index-4\"></span><a class=\"reference internal\" href=\"#envvar-DJANGO_SETTINGS_MODULE\"><code class=\"xref std std-envvar docutils literal notranslate\"><span class=\"pre\">DJANGO_SETTINGS_MODULE</span></code></a> is required<a class=\"headerlink\" href=\"#either-configure-or-django-settings-module-is-required\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>If you\u2019re not setting the <span class=\"target\" id=\"index-5\"></span><a class=\"reference internal\" href=\"#envvar-DJANGO_SETTINGS_MODULE\"><code class=\"xref std std-envvar docutils literal notranslate\"><span class=\"pre\">DJANGO_SETTINGS_MODULE</span></code></a> environment\nvariable, you <em>must</em> call <code class=\"docutils literal notranslate\"><span class=\"pre\">configure()</span></code> at some point before using any code\nthat reads settings.</p>\n<p>If you don\u2019t set <span class=\"target\" id=\"index-6\"></span><a class=\"reference internal\" href=\"#envvar-DJANGO_SETTINGS_MODULE\"><code class=\"xref std std-envvar docutils literal notranslate\"><span class=\"pre\">DJANGO_SETTINGS_MODULE</span></code></a> and don\u2019t call\n<code class=\"docutils literal notranslate\"><span class=\"pre\">configure()</span></code>, Django will raise an <code class=\"docutils literal notranslate\"><span class=\"pre\">ImportError</span></code> exception the first time\na setting is accessed.</p>\n<p>If you set <span class=\"target\" id=\"index-7\"></span><a class=\"reference internal\" href=\"#envvar-DJANGO_SETTINGS_MODULE\"><code class=\"xref std std-envvar docutils literal notranslate\"><span class=\"pre\">DJANGO_SETTINGS_MODULE</span></code></a>, access settings values somehow,\n<em>then</em> call <code class=\"docutils literal notranslate\"><span class=\"pre\">configure()</span></code>, Django will raise a <code class=\"docutils literal notranslate\"><span class=\"pre\">RuntimeError</span></code> indicating\nthat settings have already been configured. There is a property for this\npurpose:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.conf.settings.configured\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">django.conf.settings.</span></code><code class=\"sig-name descname\"><span class=\"pre\">configured</span></code><a class=\"headerlink\" href=\"#django.conf.settings.configured\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">configured</span><span class=\"p\">:</span>\n    <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"n\">myapp_defaults</span><span class=\"p\">,</span> <span class=\"n\">DEBUG</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Also, it\u2019s an error to call <code class=\"docutils literal notranslate\"><span class=\"pre\">configure()</span></code> more than once, or to call\n<code class=\"docutils literal notranslate\"><span class=\"pre\">configure()</span></code> after any setting has been accessed.</p>\n<p>It boils down to this: Use exactly one of either <code class=\"docutils literal notranslate\"><span class=\"pre\">configure()</span></code> or\n<span class=\"target\" id=\"index-8\"></span><a class=\"reference internal\" href=\"#envvar-DJANGO_SETTINGS_MODULE\"><code class=\"xref std std-envvar docutils literal notranslate\"><span class=\"pre\">DJANGO_SETTINGS_MODULE</span></code></a>. Not both, and not neither.</p>\n</div>\n<div class=\"section\" id=\"s-calling-django-setup-is-required-for-standalone-django-usage\">\n<span id=\"calling-django-setup-is-required-for-standalone-django-usage\"></span><h3>Calling <code class=\"docutils literal notranslate\"><span class=\"pre\">django.setup()</span></code> is required for \u201cstandalone\u201d Django usage<a class=\"headerlink\" href=\"#calling-django-setup-is-required-for-standalone-django-usage\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>If you\u2019re using components of Django \u201cstandalone\u201d \u2013 for example, writing a\nPython script which loads some Django templates and renders them, or uses the\nORM to fetch some data \u2013 there\u2019s one more step you\u2019ll need in addition to\nconfiguring settings.</p>\n<p>After you\u2019ve either set <span class=\"target\" id=\"index-9\"></span><a class=\"reference internal\" href=\"#envvar-DJANGO_SETTINGS_MODULE\"><code class=\"xref std std-envvar docutils literal notranslate\"><span class=\"pre\">DJANGO_SETTINGS_MODULE</span></code></a> or called\n<code class=\"docutils literal notranslate\"><span class=\"pre\">configure()</span></code>, you\u2019ll need to call <a class=\"reference internal\" href=\"../../ref/applications/#django.setup\" title=\"django.setup\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.setup()</span></code></a> to load your\nsettings and populate Django\u2019s application registry. For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">django</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">myapp</span> <span class=\"kn\">import</span> <span class=\"n\">myapp_defaults</span>\n\n<span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"n\">default_settings</span><span class=\"o\">=</span><span class=\"n\">myapp_defaults</span><span class=\"p\">,</span> <span class=\"n\">DEBUG</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">django</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Now this script or any imported module can use any part of Django it needs.</span>\n<span class=\"kn\">from</span> <span class=\"nn\">myapp</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n</pre></div>\n</div>\n<p>Note that calling <code class=\"docutils literal notranslate\"><span class=\"pre\">django.setup()</span></code> is only necessary if your code is truly\nstandalone. When invoked by your web server, or through <a class=\"reference internal\" href=\"../../ref/django-admin/\"><span class=\"doc\">django-admin</span></a>, Django will handle this for you.</p>\n<div class=\"admonition-django-setup-may-only-be-called-once admonition\">\n<p class=\"first admonition-title\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.setup()</span></code> may only be called once.</p>\n<p>Therefore, avoid putting reusable application logic in standalone scripts\nso that you have to import from the script elsewhere in your application.\nIf you can\u2019t avoid that, put the call to <code class=\"docutils literal notranslate\"><span class=\"pre\">django.setup()</span></code> inside an\n<code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> block:</p>\n<div class=\"last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">:</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">django</span>\n\n    <span class=\"n\">django</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</div>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<dl class=\"last docutils\">\n<dt><a class=\"reference internal\" href=\"../../ref/settings/\"><span class=\"doc\">The Settings Reference</span></a></dt><dd>Contains the complete list of core and contrib app settings.</dd>\n</dl>\n</div>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["topics/signals", "Signals", "N", "next"], ["topics/serialization", "Serializing Django objects", "P", "previous"]], "sourcename": "topics/settings.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Django settings</a><ul>\n<li><a class=\"reference internal\" href=\"#the-basics\">The basics</a></li>\n<li><a class=\"reference internal\" href=\"#designating-the-settings\">Designating the settings</a><ul>\n<li><a class=\"reference internal\" href=\"#the-django-admin-utility\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">django-admin</span></code> utility</a></li>\n<li><a class=\"reference internal\" href=\"#on-the-server-mod-wsgi\">On the server (<code class=\"docutils literal notranslate\"><span class=\"pre\">mod_wsgi</span></code>)</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#default-settings\">Default settings</a><ul>\n<li><a class=\"reference internal\" href=\"#seeing-which-settings-you-ve-changed\">Seeing which settings you\u2019ve changed</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#using-settings-in-python-code\">Using settings in Python code</a></li>\n<li><a class=\"reference internal\" href=\"#altering-settings-at-runtime\">Altering settings at runtime</a></li>\n<li><a class=\"reference internal\" href=\"#security\">Security</a></li>\n<li><a class=\"reference internal\" href=\"#available-settings\">Available settings</a></li>\n<li><a class=\"reference internal\" href=\"#creating-your-own-settings\">Creating your own settings</a></li>\n<li><a class=\"reference internal\" href=\"#using-settings-without-setting-django-settings-module\">Using settings without setting <code class=\"xref std std-envvar docutils literal notranslate\"><span class=\"pre\">DJANGO_SETTINGS_MODULE</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#custom-default-settings\">Custom default settings</a></li>\n<li><a class=\"reference internal\" href=\"#either-configure-or-django-settings-module-is-required\">Either <code class=\"docutils literal notranslate\"><span class=\"pre\">configure()</span></code> or <code class=\"xref std std-envvar docutils literal notranslate\"><span class=\"pre\">DJANGO_SETTINGS_MODULE</span></code> is required</a></li>\n<li><a class=\"reference internal\" href=\"#calling-django-setup-is-required-for-standalone-django-usage\">Calling <code class=\"docutils literal notranslate\"><span class=\"pre\">django.setup()</span></code> is required for \u201cstandalone\u201d Django usage</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "topics/settings", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}