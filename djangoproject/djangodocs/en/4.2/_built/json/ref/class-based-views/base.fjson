{"parents": [{"link": "../../", "title": "API Reference"}, {"link": "../", "title": "Built-in class-based views API"}], "prev": {"link": "../", "title": "Built-in class-based views API"}, "next": {"link": "../generic-display/", "title": "Generic display views"}, "title": "Base views", "meta": {}, "body": "<div class=\"section\" id=\"s-base-views\">\n<span id=\"base-views\"></span><h1>Base views<a class=\"headerlink\" href=\"#base-views\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>The following three classes provide much of the functionality needed to create\nDjango views. You may think of them as <em>parent</em> views, which can be used by\nthemselves or inherited from. They may not provide all the capabilities\nrequired for projects, in which case there are Mixins and Generic class-based\nviews.</p>\n<p>Many of Django\u2019s built-in class-based views inherit from other class-based\nviews or various mixins. Because this inheritance chain is very important, the\nancestor classes are  documented under the section title of <strong>Ancestors (MRO)</strong>.\nMRO is an acronym for Method Resolution Order.</p>\n<div class=\"section\" id=\"s-view\">\n<span id=\"view\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">View</span></code><a class=\"headerlink\" href=\"#view\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.View\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-prename descclassname\"><span class=\"pre\">django.views.generic.base.</span></code><code class=\"sig-name descname\"><span class=\"pre\">View</span></code><a class=\"headerlink\" href=\"#django.views.generic.base.View\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The base view class. All other class-based views inherit from this base\nclass. It isn\u2019t strictly a generic view and thus can also be imported from\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.views</span></code>.</p>\n<p><strong>Method Flowchart</strong></p>\n<ol class=\"arabic simple\">\n<li><a class=\"reference internal\" href=\"#django.views.generic.base.View.setup\" title=\"django.views.generic.base.View.setup\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">setup()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.views.generic.base.View.dispatch\" title=\"django.views.generic.base.View.dispatch\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">dispatch()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.views.generic.base.View.http_method_not_allowed\" title=\"django.views.generic.base.View.http_method_not_allowed\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">http_method_not_allowed()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.views.generic.base.View.options\" title=\"django.views.generic.base.View.options\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">options()</span></code></a></li>\n</ol>\n<p><strong>Example views.py</strong>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.http</span> <span class=\"kn\">import</span> <span class=\"n\">HttpResponse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.views</span> <span class=\"kn\">import</span> <span class=\"n\">View</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyView</span><span class=\"p\">(</span><span class=\"n\">View</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">HttpResponse</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello, World!&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p><strong>Example urls.py</strong>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">myapp.views</span> <span class=\"kn\">import</span> <span class=\"n\">MyView</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;mine/&quot;</span><span class=\"p\">,</span> <span class=\"n\">MyView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-view&quot;</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n</pre></div>\n</div>\n<p><strong>Attributes</strong></p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.View.http_method_names\">\n<code class=\"sig-name descname\"><span class=\"pre\">http_method_names</span></code><a class=\"headerlink\" href=\"#django.views.generic.base.View.http_method_names\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The list of HTTP method names that this view will accept.</p>\n<p>Default:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">[</span><span class=\"s2\">&quot;get&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;post&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;put&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;patch&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;delete&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;head&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;options&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;trace&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<p><strong>Methods</strong></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.View.as_view\">\n<em class=\"property\"><span class=\"pre\">classmethod</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">as_view</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">initkwargs</span></span></em>)<a class=\"headerlink\" href=\"#django.views.generic.base.View.as_view\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a callable view that takes a request and returns a response:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">MyView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">()(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The returned view has <code class=\"docutils literal notranslate\"><span class=\"pre\">view_class</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">view_initkwargs</span></code>\nattributes.</p>\n<p>When the view is called during the request/response cycle, the\n<a class=\"reference internal\" href=\"#django.views.generic.base.View.setup\" title=\"django.views.generic.base.View.setup\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">setup()</span></code></a> method assigns the <a class=\"reference internal\" href=\"../../request-response/#django.http.HttpRequest\" title=\"django.http.HttpRequest\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code></a> to\nthe view\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code> attribute, and any positional and/or keyword\narguments <a class=\"reference internal\" href=\"../../../topics/http/urls/#how-django-processes-a-request\"><span class=\"std std-ref\">captured from the URL pattern</span></a> to the <code class=\"docutils literal notranslate\"><span class=\"pre\">args</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">kwargs</span></code>\nattributes, respectively. Then <a class=\"reference internal\" href=\"#django.views.generic.base.View.dispatch\" title=\"django.views.generic.base.View.dispatch\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">dispatch()</span></code></a> is called.</p>\n<p>If a <code class=\"docutils literal notranslate\"><span class=\"pre\">View</span></code> subclass defines asynchronous (<code class=\"docutils literal notranslate\"><span class=\"pre\">async</span> <span class=\"pre\">def</span></code>) method\nhandlers, <code class=\"docutils literal notranslate\"><span class=\"pre\">as_view()</span></code> will mark the returned callable as a coroutine\nfunction. An <code class=\"docutils literal notranslate\"><span class=\"pre\">ImproperlyConfigured</span></code> exception will be raised if both\nasynchronous (<code class=\"docutils literal notranslate\"><span class=\"pre\">async</span> <span class=\"pre\">def</span></code>) and synchronous (<code class=\"docutils literal notranslate\"><span class=\"pre\">def</span></code>) handlers are\ndefined on a single view-class.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.View.setup\">\n<code class=\"sig-name descname\"><span class=\"pre\">setup</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"headerlink\" href=\"#django.views.generic.base.View.setup\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Performs key view initialization prior to <a class=\"reference internal\" href=\"#django.views.generic.base.View.dispatch\" title=\"django.views.generic.base.View.dispatch\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">dispatch()</span></code></a>.</p>\n<p>If overriding this method, you must call <code class=\"docutils literal notranslate\"><span class=\"pre\">super()</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.View.dispatch\">\n<code class=\"sig-name descname\"><span class=\"pre\">dispatch</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"headerlink\" href=\"#django.views.generic.base.View.dispatch\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">view</span></code> part of the view \u2013 the method that accepts a <code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code>\nargument plus arguments, and returns an HTTP response.</p>\n<p>The default implementation will inspect the HTTP method and attempt to\ndelegate to a method that matches the HTTP method; a <code class=\"docutils literal notranslate\"><span class=\"pre\">GET</span></code> will be\ndelegated to <code class=\"docutils literal notranslate\"><span class=\"pre\">get()</span></code>, a <code class=\"docutils literal notranslate\"><span class=\"pre\">POST</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">post()</span></code>, and so on.</p>\n<p>By default, a <code class=\"docutils literal notranslate\"><span class=\"pre\">HEAD</span></code> request will be delegated to <code class=\"docutils literal notranslate\"><span class=\"pre\">get()</span></code>.\nIf you need to handle <code class=\"docutils literal notranslate\"><span class=\"pre\">HEAD</span></code> requests in a different way than <code class=\"docutils literal notranslate\"><span class=\"pre\">GET</span></code>,\nyou can override the <code class=\"docutils literal notranslate\"><span class=\"pre\">head()</span></code> method. See\n<a class=\"reference internal\" href=\"../../../topics/class-based-views/#supporting-other-http-methods\"><span class=\"std std-ref\">Supporting other HTTP methods</span></a> for an example.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.View.http_method_not_allowed\">\n<code class=\"sig-name descname\"><span class=\"pre\">http_method_not_allowed</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"headerlink\" href=\"#django.views.generic.base.View.http_method_not_allowed\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>If the view was called with an HTTP method it doesn\u2019t support, this\nmethod is called instead.</p>\n<p>The default implementation returns <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpResponseNotAllowed</span></code> with a\nlist of allowed methods in plain text.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.View.options\">\n<code class=\"sig-name descname\"><span class=\"pre\">options</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"headerlink\" href=\"#django.views.generic.base.View.options\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Handles responding to requests for the OPTIONS HTTP verb. Returns a\nresponse with the <code class=\"docutils literal notranslate\"><span class=\"pre\">Allow</span></code> header containing a list of the view\u2019s\nallowed HTTP method names.</p>\n<p>If the other HTTP methods handlers on the class are asynchronous\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">async</span> <span class=\"pre\">def</span></code>) then the response will be wrapped in a coroutine\nfunction for use with <code class=\"docutils literal notranslate\"><span class=\"pre\">await</span></code>.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-templateview\">\n<span id=\"templateview\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">TemplateView</span></code><a class=\"headerlink\" href=\"#templateview\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.TemplateView\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-prename descclassname\"><span class=\"pre\">django.views.generic.base.</span></code><code class=\"sig-name descname\"><span class=\"pre\">TemplateView</span></code><a class=\"headerlink\" href=\"#django.views.generic.base.TemplateView\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Renders a given template, with the context containing parameters captured\nin the URL.</p>\n<p><strong>Ancestors (MRO)</strong></p>\n<p>This view inherits methods and attributes from the following views:</p>\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"../mixins-simple/#django.views.generic.base.TemplateResponseMixin\" title=\"django.views.generic.base.TemplateResponseMixin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.views.generic.base.TemplateResponseMixin</span></code></a></li>\n<li><a class=\"reference internal\" href=\"../mixins-simple/#django.views.generic.base.ContextMixin\" title=\"django.views.generic.base.ContextMixin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.views.generic.base.ContextMixin</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.views.generic.base.View\" title=\"django.views.generic.base.View\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.views.generic.base.View</span></code></a></li>\n</ul>\n<p><strong>Method Flowchart</strong></p>\n<ol class=\"arabic simple\">\n<li><a class=\"reference internal\" href=\"#django.views.generic.base.View.setup\" title=\"django.views.generic.base.View.setup\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">setup()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.views.generic.base.View.dispatch\" title=\"django.views.generic.base.View.dispatch\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">dispatch()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.views.generic.base.View.http_method_not_allowed\" title=\"django.views.generic.base.View.http_method_not_allowed\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">http_method_not_allowed()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"../mixins-simple/#django.views.generic.base.ContextMixin.get_context_data\" title=\"django.views.generic.base.ContextMixin.get_context_data\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_context_data()</span></code></a></li>\n</ol>\n<p><strong>Example views.py</strong>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.views.generic.base</span> <span class=\"kn\">import</span> <span class=\"n\">TemplateView</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">articles.models</span> <span class=\"kn\">import</span> <span class=\"n\">Article</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">HomePageView</span><span class=\"p\">(</span><span class=\"n\">TemplateView</span><span class=\"p\">):</span>\n    <span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;home.html&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_context_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_context_data</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s2\">&quot;latest_articles&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Article</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()[:</span><span class=\"mi\">5</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">context</span>\n</pre></div>\n</div>\n<p><strong>Example urls.py</strong>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">myapp.views</span> <span class=\"kn\">import</span> <span class=\"n\">HomePageView</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">HomePageView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;home&quot;</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n</pre></div>\n</div>\n<p><strong>Context</strong></p>\n<ul class=\"simple\">\n<li>Populated (through <a class=\"reference internal\" href=\"../mixins-simple/#django.views.generic.base.ContextMixin\" title=\"django.views.generic.base.ContextMixin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ContextMixin</span></code></a>) with\nthe keyword arguments captured from the URL pattern that served the view.</li>\n<li>You can also add context using the\n<a class=\"reference internal\" href=\"../mixins-simple/#django.views.generic.base.ContextMixin.extra_context\" title=\"django.views.generic.base.ContextMixin.extra_context\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">extra_context</span></code></a> keyword\nargument for <a class=\"reference internal\" href=\"#django.views.generic.base.View.as_view\" title=\"django.views.generic.base.View.as_view\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">as_view()</span></code></a>.</li>\n</ul>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-redirectview\">\n<span id=\"redirectview\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">RedirectView</span></code><a class=\"headerlink\" href=\"#redirectview\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.RedirectView\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-prename descclassname\"><span class=\"pre\">django.views.generic.base.</span></code><code class=\"sig-name descname\"><span class=\"pre\">RedirectView</span></code><a class=\"headerlink\" href=\"#django.views.generic.base.RedirectView\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Redirects to a given URL.</p>\n<p>The given URL may contain dictionary-style string formatting, which will be\ninterpolated against the parameters captured in the URL. Because keyword\ninterpolation is <em>always</em> done (even if no arguments are passed in), any\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;%&quot;</span></code> characters in the URL must be written as <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;%%&quot;</span></code> so that Python\nwill convert them to a single percent sign on output.</p>\n<p>If the given URL is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, Django will return an <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpResponseGone</span></code>\n(410).</p>\n<p><strong>Ancestors (MRO)</strong></p>\n<p>This view inherits methods and attributes from the following view:</p>\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"#django.views.generic.base.View\" title=\"django.views.generic.base.View\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.views.generic.base.View</span></code></a></li>\n</ul>\n<p><strong>Method Flowchart</strong></p>\n<ol class=\"arabic simple\">\n<li><a class=\"reference internal\" href=\"#django.views.generic.base.View.setup\" title=\"django.views.generic.base.View.setup\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">setup()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.views.generic.base.View.dispatch\" title=\"django.views.generic.base.View.dispatch\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">dispatch()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.views.generic.base.View.http_method_not_allowed\" title=\"django.views.generic.base.View.http_method_not_allowed\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">http_method_not_allowed()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.views.generic.base.RedirectView.get_redirect_url\" title=\"django.views.generic.base.RedirectView.get_redirect_url\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_redirect_url()</span></code></a></li>\n</ol>\n<p><strong>Example views.py</strong>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.shortcuts</span> <span class=\"kn\">import</span> <span class=\"n\">get_object_or_404</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.views.generic.base</span> <span class=\"kn\">import</span> <span class=\"n\">RedirectView</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">articles.models</span> <span class=\"kn\">import</span> <span class=\"n\">Article</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ArticleCounterRedirectView</span><span class=\"p\">(</span><span class=\"n\">RedirectView</span><span class=\"p\">):</span>\n    <span class=\"n\">permanent</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n    <span class=\"n\">query_string</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n    <span class=\"n\">pattern_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;article-detail&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_redirect_url</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">article</span> <span class=\"o\">=</span> <span class=\"n\">get_object_or_404</span><span class=\"p\">(</span><span class=\"n\">Article</span><span class=\"p\">,</span> <span class=\"n\">pk</span><span class=\"o\">=</span><span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;pk&quot;</span><span class=\"p\">])</span>\n        <span class=\"n\">article</span><span class=\"o\">.</span><span class=\"n\">update_counter</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_redirect_url</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p><strong>Example urls.py</strong>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.views.generic.base</span> <span class=\"kn\">import</span> <span class=\"n\">RedirectView</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">article.views</span> <span class=\"kn\">import</span> <span class=\"n\">ArticleCounterRedirectView</span><span class=\"p\">,</span> <span class=\"n\">ArticleDetailView</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span>\n        <span class=\"s2\">&quot;counter/&lt;int:pk&gt;/&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">ArticleCounterRedirectView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;article-counter&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">),</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;details/&lt;int:pk&gt;/&quot;</span><span class=\"p\">,</span> <span class=\"n\">ArticleDetailView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;article-detail&quot;</span><span class=\"p\">),</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span>\n        <span class=\"s2\">&quot;go-to-django/&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">RedirectView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://www.djangoproject.com/&quot;</span><span class=\"p\">),</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;go-to-django&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">),</span>\n<span class=\"p\">]</span>\n</pre></div>\n</div>\n<p><strong>Attributes</strong></p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.RedirectView.url\">\n<code class=\"sig-name descname\"><span class=\"pre\">url</span></code><a class=\"headerlink\" href=\"#django.views.generic.base.RedirectView.url\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The URL to redirect to, as a string. Or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> to raise a 410 (Gone)\nHTTP error.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.RedirectView.pattern_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">pattern_name</span></code><a class=\"headerlink\" href=\"#django.views.generic.base.RedirectView.pattern_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the URL pattern to redirect to. Reversing will be done\nusing the same args and kwargs as are passed in for this view.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.RedirectView.permanent\">\n<code class=\"sig-name descname\"><span class=\"pre\">permanent</span></code><a class=\"headerlink\" href=\"#django.views.generic.base.RedirectView.permanent\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether the redirect should be permanent. The only difference here is\nthe HTTP status code returned. If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, then the redirect will use\nstatus code 301. If <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>, then the redirect will use status code\n302. By default, <code class=\"docutils literal notranslate\"><span class=\"pre\">permanent</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.RedirectView.query_string\">\n<code class=\"sig-name descname\"><span class=\"pre\">query_string</span></code><a class=\"headerlink\" href=\"#django.views.generic.base.RedirectView.query_string\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether to pass along the GET query string to the new location. If\n<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, then the query string is appended to the URL. If <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>,\nthen the query string is discarded. By default, <code class=\"docutils literal notranslate\"><span class=\"pre\">query_string</span></code> is\n<code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd></dl>\n\n<p><strong>Methods</strong></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.RedirectView.get_redirect_url\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_redirect_url</span></code>(<em><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"headerlink\" href=\"#django.views.generic.base.RedirectView.get_redirect_url\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Constructs the target URL for redirection.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">args</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">kwargs</span></code> arguments are positional and/or keyword\narguments <a class=\"reference internal\" href=\"../../../topics/http/urls/#how-django-processes-a-request\"><span class=\"std std-ref\">captured from the URL pattern</span></a>, respectively.</p>\n<p>The default implementation uses <a class=\"reference internal\" href=\"#django.views.generic.base.RedirectView.url\" title=\"django.views.generic.base.RedirectView.url\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">url</span></code></a> as a starting\nstring and performs expansion of <code class=\"docutils literal notranslate\"><span class=\"pre\">%</span></code> named parameters in that string\nusing the named groups captured in the URL.</p>\n<p>If <a class=\"reference internal\" href=\"#django.views.generic.base.RedirectView.url\" title=\"django.views.generic.base.RedirectView.url\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">url</span></code></a> is not set, <code class=\"docutils literal notranslate\"><span class=\"pre\">get_redirect_url()</span></code> tries to reverse the\n<a class=\"reference internal\" href=\"#django.views.generic.base.RedirectView.pattern_name\" title=\"django.views.generic.base.RedirectView.pattern_name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">pattern_name</span></code></a> using what was captured in the URL (both named and\nunnamed groups are used).</p>\n<p>If requested by <a class=\"reference internal\" href=\"#django.views.generic.base.RedirectView.query_string\" title=\"django.views.generic.base.RedirectView.query_string\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">query_string</span></code></a>, it will also append the query\nstring to the generated URL.\nSubclasses may implement any behavior they wish, as long as the method\nreturns a redirect-ready URL string.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["ref/class-based-views/generic-display", "Generic display views", "N", "next"], ["ref/class-based-views/index", "Built-in class-based views API", "P", "previous"]], "sourcename": "ref/class-based-views/base.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Base views</a><ul>\n<li><a class=\"reference internal\" href=\"#view\"><code class=\"docutils literal notranslate\"><span class=\"pre\">View</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#templateview\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TemplateView</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#redirectview\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RedirectView</span></code></a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "ref/class-based-views/base", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
