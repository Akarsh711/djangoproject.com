{"parents": [{"link": "../../", "title": "API Reference"}, {"link": "../", "title": "Built-in class-based views API"}, {"link": "../mixins/", "title": "Class-based views mixins"}], "prev": {"link": "../mixins/", "title": "Class-based views mixins"}, "next": {"link": "../mixins-single-object/", "title": "Single object mixins"}, "title": "Simple mixins", "meta": {}, "body": "<div class=\"section\" id=\"s-simple-mixins\">\n<span id=\"simple-mixins\"></span><h1>Simple mixins<a class=\"headerlink\" href=\"#simple-mixins\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"s-contextmixin\">\n<span id=\"contextmixin\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">ContextMixin</span></code><a class=\"headerlink\" href=\"#contextmixin\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.ContextMixin\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-prename descclassname\"><span class=\"pre\">django.views.generic.base.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ContextMixin</span></code><a class=\"headerlink\" href=\"#django.views.generic.base.ContextMixin\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p><strong>Attributes</strong></p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.ContextMixin.extra_context\">\n<code class=\"sig-name descname\"><span class=\"pre\">extra_context</span></code><a class=\"headerlink\" href=\"#django.views.generic.base.ContextMixin.extra_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dictionary to include in the context. This is a convenient way of\nspecifying some context in\n<a class=\"reference internal\" href=\"../base/#django.views.generic.base.View.as_view\" title=\"django.views.generic.base.View.as_view\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">as_view()</span></code></a>. Example usage:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.views.generic</span> <span class=\"kn\">import</span> <span class=\"n\">TemplateView</span>\n\n<span class=\"n\">TemplateView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(</span><span class=\"n\">extra_context</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;title&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Custom Title&quot;</span><span class=\"p\">})</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<p><strong>Methods</strong></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.ContextMixin.get_context_data\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_context_data</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"headerlink\" href=\"#django.views.generic.base.ContextMixin.get_context_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a dictionary representing the template context. The keyword\narguments provided will make up the returned context. Example usage:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">get_context_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_context_data</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s2\">&quot;number&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randrange</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">context</span>\n</pre></div>\n</div>\n<p>The template context of all class-based generic views include a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">view</span></code> variable that points to the <code class=\"docutils literal notranslate\"><span class=\"pre\">View</span></code> instance.</p>\n<div class=\"admonition-use-alters-data-where-appropriate admonition\">\n<p class=\"first admonition-title\">Use <code class=\"docutils literal notranslate\"><span class=\"pre\">alters_data</span></code> where appropriate</p>\n<p class=\"last\">Note that having the view instance in the template context may\nexpose potentially hazardous methods to template authors.  To\nprevent methods like this from being called in the template, set\n<code class=\"docutils literal notranslate\"><span class=\"pre\">alters_data=True</span></code> on those methods.  For more information, read\nthe documentation on <a class=\"reference internal\" href=\"../../templates/api/#alters-data-description\"><span class=\"std std-ref\">rendering a template context</span></a>.</p>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-templateresponsemixin\">\n<span id=\"templateresponsemixin\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">TemplateResponseMixin</span></code><a class=\"headerlink\" href=\"#templateresponsemixin\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.TemplateResponseMixin\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-prename descclassname\"><span class=\"pre\">django.views.generic.base.</span></code><code class=\"sig-name descname\"><span class=\"pre\">TemplateResponseMixin</span></code><a class=\"headerlink\" href=\"#django.views.generic.base.TemplateResponseMixin\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Provides a mechanism to construct a\n<a class=\"reference internal\" href=\"../../template-response/#django.template.response.TemplateResponse\" title=\"django.template.response.TemplateResponse\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TemplateResponse</span></code></a>, given\nsuitable context. The template to use is configurable and can be\nfurther customized by subclasses.</p>\n<p><strong>Attributes</strong></p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.TemplateResponseMixin.template_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">template_name</span></code><a class=\"headerlink\" href=\"#django.views.generic.base.TemplateResponseMixin.template_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The full name of a template to use as defined by a string. Not defining\na <code class=\"docutils literal notranslate\"><span class=\"pre\">template_name</span></code> will raise a\n<a class=\"reference internal\" href=\"../../exceptions/#django.core.exceptions.ImproperlyConfigured\" title=\"django.core.exceptions.ImproperlyConfigured\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.core.exceptions.ImproperlyConfigured</span></code></a> exception.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.TemplateResponseMixin.template_engine\">\n<code class=\"sig-name descname\"><span class=\"pre\">template_engine</span></code><a class=\"headerlink\" href=\"#django.views.generic.base.TemplateResponseMixin.template_engine\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <a class=\"reference internal\" href=\"../../settings/#std-setting-TEMPLATES-NAME\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">NAME</span></code></a> of a template engine to use for\nloading the template. <code class=\"docutils literal notranslate\"><span class=\"pre\">template_engine</span></code> is passed as the <code class=\"docutils literal notranslate\"><span class=\"pre\">using</span></code>\nkeyword argument to <code class=\"docutils literal notranslate\"><span class=\"pre\">response_class</span></code>. Default is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, which\ntells Django to search for the template in all configured engines.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.TemplateResponseMixin.response_class\">\n<code class=\"sig-name descname\"><span class=\"pre\">response_class</span></code><a class=\"headerlink\" href=\"#django.views.generic.base.TemplateResponseMixin.response_class\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The response class to be returned by <code class=\"docutils literal notranslate\"><span class=\"pre\">render_to_response</span></code> method.\nDefault is <a class=\"reference internal\" href=\"../../template-response/#django.template.response.TemplateResponse\" title=\"django.template.response.TemplateResponse\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TemplateResponse</span></code></a>. The template and context\nof <code class=\"docutils literal notranslate\"><span class=\"pre\">TemplateResponse</span></code> instances can be altered later (e.g. in\n<a class=\"reference internal\" href=\"../../../topics/http/middleware/#template-response-middleware\"><span class=\"std std-ref\">template response middleware</span></a>).</p>\n<p>If you need custom template loading or custom context object\ninstantiation, create a <code class=\"docutils literal notranslate\"><span class=\"pre\">TemplateResponse</span></code> subclass and assign it to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">response_class</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.TemplateResponseMixin.content_type\">\n<code class=\"sig-name descname\"><span class=\"pre\">content_type</span></code><a class=\"headerlink\" href=\"#django.views.generic.base.TemplateResponseMixin.content_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The content type to use for the response. <code class=\"docutils literal notranslate\"><span class=\"pre\">content_type</span></code> is passed\nas a keyword argument to <code class=\"docutils literal notranslate\"><span class=\"pre\">response_class</span></code>. Default is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> \u2013\nmeaning that Django uses <code class=\"docutils literal notranslate\"><span class=\"pre\">'text/html'</span></code>.</p>\n</dd></dl>\n\n<p><strong>Methods</strong></p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.TemplateResponseMixin.render_to_response\">\n<code class=\"sig-name descname\"><span class=\"pre\">render_to_response</span></code>(<em><span class=\"n\"><span class=\"pre\">context</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">response_kwargs</span></span></em>)<a class=\"headerlink\" href=\"#django.views.generic.base.TemplateResponseMixin.render_to_response\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a <code class=\"docutils literal notranslate\"><span class=\"pre\">self.response_class</span></code> instance.</p>\n<p>If any keyword arguments are provided, they will be passed to the\nconstructor of the response class.</p>\n<p>Calls <a class=\"reference internal\" href=\"#django.views.generic.base.TemplateResponseMixin.get_template_names\" title=\"django.views.generic.base.TemplateResponseMixin.get_template_names\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_template_names()</span></code></a> to obtain the list of template names\nthat will be searched looking for an existent template.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.views.generic.base.TemplateResponseMixin.get_template_names\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_template_names</span></code>()<a class=\"headerlink\" href=\"#django.views.generic.base.TemplateResponseMixin.get_template_names\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a list of template names to search for when rendering the\ntemplate. The first template that is found will be used.</p>\n<p>The default implementation will return a list containing\n<a class=\"reference internal\" href=\"#django.views.generic.base.TemplateResponseMixin.template_name\" title=\"django.views.generic.base.TemplateResponseMixin.template_name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">template_name</span></code></a> (if it is specified).</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["ref/class-based-views/mixins-single-object", "Single object mixins", "N", "next"], ["ref/class-based-views/mixins", "Class-based views mixins", "P", "previous"]], "sourcename": "ref/class-based-views/mixins-simple.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Simple mixins</a><ul>\n<li><a class=\"reference internal\" href=\"#contextmixin\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ContextMixin</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#templateresponsemixin\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TemplateResponseMixin</span></code></a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "ref/class-based-views/mixins-simple", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
