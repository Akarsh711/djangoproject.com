{"parents": [{"link": "../", "title": "API Reference"}], "prev": {"link": "../middleware/", "title": "Middleware"}, "next": {"link": "../models/", "title": "Models"}, "title": "Migration Operations", "meta": {}, "body": "<div class=\"section\" id=\"s-module-django.db.migrations.operations\">\n<span id=\"s-migration-operations\"></span><span id=\"module-django.db.migrations.operations\"></span><span id=\"migration-operations\"></span><h1>Migration Operations<a class=\"headerlink\" href=\"#module-django.db.migrations.operations\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Migration files are composed of one or more <code class=\"docutils literal notranslate\"><span class=\"pre\">Operation</span></code>s, objects that\ndeclaratively record what the migration should do to your database.</p>\n<p>Django also uses these <code class=\"docutils literal notranslate\"><span class=\"pre\">Operation</span></code> objects to work out what your models\nlooked like historically, and to calculate what changes you\u2019ve made to\nyour models since the last migration so it can automatically write\nyour migrations; that\u2019s why they\u2019re declarative, as it means Django can\neasily load them all into memory and run through them without touching\nthe database to work out what your project should look like.</p>\n<p>There are also more specialized <code class=\"docutils literal notranslate\"><span class=\"pre\">Operation</span></code> objects which are for things like\n<a class=\"reference internal\" href=\"../../topics/migrations/#data-migrations\"><span class=\"std std-ref\">data migrations</span></a> and for advanced manual database\nmanipulation. You can also write your own <code class=\"docutils literal notranslate\"><span class=\"pre\">Operation</span></code> classes if you want\nto encapsulate a custom change you commonly make.</p>\n<p>If you need an empty migration file to write your own <code class=\"docutils literal notranslate\"><span class=\"pre\">Operation</span></code> objects\ninto, use <code class=\"docutils literal notranslate\"><span class=\"pre\">python</span> <span class=\"pre\">manage.py</span> <span class=\"pre\">makemigrations</span> <span class=\"pre\">--empty</span> <span class=\"pre\">yourappname</span></code>, but be aware\nthat manually adding schema-altering operations can confuse the migration\nautodetector and make resulting runs of <a class=\"reference internal\" href=\"../django-admin/#django-admin-makemigrations\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">makemigrations</span></code></a> output\nincorrect code.</p>\n<p>All of the core Django operations are available from the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.db.migrations.operations</span></code> module.</p>\n<p>For introductory material, see the <a class=\"reference internal\" href=\"../../topics/migrations/\"><span class=\"doc\">migrations topic guide</span></a>.</p>\n<div class=\"section\" id=\"s-schema-operations\">\n<span id=\"schema-operations\"></span><h2>Schema Operations<a class=\"headerlink\" href=\"#schema-operations\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-createmodel\">\n<span id=\"createmodel\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">CreateModel</span></code><a class=\"headerlink\" href=\"#createmodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.CreateModel\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">CreateModel</span></code>(<em><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">fields</span></span></em>, <em><span class=\"n\"><span class=\"pre\">options</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">bases</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">managers</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/models/#CreateModel\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.CreateModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Creates a new model in the project history and a corresponding table in the\ndatabase to match it.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> is the model name, as would be written in the <code class=\"docutils literal notranslate\"><span class=\"pre\">models.py</span></code> file.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">fields</span></code> is a list of 2-tuples of <code class=\"docutils literal notranslate\"><span class=\"pre\">(field_name,</span> <span class=\"pre\">field_instance)</span></code>.\nThe field instance should be an unbound field (so just\n<code class=\"docutils literal notranslate\"><span class=\"pre\">models.CharField(...)</span></code>, rather than a field taken from another model).</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">options</span></code> is an optional dictionary of values from the model\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta</span></code> class.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">bases</span></code> is an optional list of other classes to have this model inherit from;\nit can contain both class objects as well as strings in the format\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;appname.ModelName&quot;</span></code> if you want to depend on another model (so you inherit\nfrom the historical version). If it\u2019s not supplied, it defaults to inheriting\nfrom the standard <code class=\"docutils literal notranslate\"><span class=\"pre\">models.Model</span></code>.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">managers</span></code> takes a list of 2-tuples of <code class=\"docutils literal notranslate\"><span class=\"pre\">(manager_name,</span> <span class=\"pre\">manager_instance)</span></code>.\nThe first manager in the list will be the default manager for this model during\nmigrations.</p>\n</div>\n<div class=\"section\" id=\"s-deletemodel\">\n<span id=\"deletemodel\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">DeleteModel</span></code><a class=\"headerlink\" href=\"#deletemodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.DeleteModel\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">DeleteModel</span></code>(<em><span class=\"n\"><span class=\"pre\">name</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/models/#DeleteModel\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.DeleteModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Deletes the model from the project history and its table from the database.</p>\n</div>\n<div class=\"section\" id=\"s-renamemodel\">\n<span id=\"renamemodel\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">RenameModel</span></code><a class=\"headerlink\" href=\"#renamemodel\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.RenameModel\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">RenameModel</span></code>(<em><span class=\"n\"><span class=\"pre\">old_name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">new_name</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/models/#RenameModel\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.RenameModel\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Renames the model from an old name to a new one.</p>\n<p>You may have to manually add\nthis if you change the model\u2019s name and quite a few of its fields at once; to\nthe autodetector, this will look like you deleted a model with the old name\nand added a new one with a different name, and the migration it creates will\nlose any data in the old table.</p>\n</div>\n<div class=\"section\" id=\"s-altermodeltable\">\n<span id=\"altermodeltable\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">AlterModelTable</span></code><a class=\"headerlink\" href=\"#altermodeltable\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.AlterModelTable\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">AlterModelTable</span></code>(<em><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">table</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/models/#AlterModelTable\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.AlterModelTable\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Changes the model\u2019s table name (the <a class=\"reference internal\" href=\"../models/options/#django.db.models.Options.db_table\" title=\"django.db.models.Options.db_table\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">db_table</span></code></a>\noption on the <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta</span></code> subclass).</p>\n</div>\n<div class=\"section\" id=\"s-altermodeltablecomment\">\n<span id=\"altermodeltablecomment\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">AlterModelTableComment</span></code><a class=\"headerlink\" href=\"#altermodeltablecomment\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<div class=\"versionadded\">\n<span class=\"title\">New in Django 4.2.</span> </div>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.AlterModelTableComment\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">AlterModelTableComment</span></code>(<em><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">table_comment</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/models/#AlterModelTableComment\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.AlterModelTableComment\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Changes the model\u2019s table comment (the\n<a class=\"reference internal\" href=\"../models/options/#django.db.models.Options.db_table_comment\" title=\"django.db.models.Options.db_table_comment\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">db_table_comment</span></code></a> option on the <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta</span></code>\nsubclass).</p>\n</div>\n<div class=\"section\" id=\"s-alteruniquetogether\">\n<span id=\"alteruniquetogether\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">AlterUniqueTogether</span></code><a class=\"headerlink\" href=\"#alteruniquetogether\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.AlterUniqueTogether\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">AlterUniqueTogether</span></code>(<em><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">unique_together</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/models/#AlterUniqueTogether\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.AlterUniqueTogether\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Changes the model\u2019s set of unique constraints (the\n<a class=\"reference internal\" href=\"../models/options/#django.db.models.Options.unique_together\" title=\"django.db.models.Options.unique_together\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">unique_together</span></code></a> option on the <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta</span></code>\nsubclass).</p>\n</div>\n<div class=\"section\" id=\"s-alterindextogether\">\n<span id=\"alterindextogether\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">AlterIndexTogether</span></code><a class=\"headerlink\" href=\"#alterindextogether\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.AlterIndexTogether\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">AlterIndexTogether</span></code>(<em><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">index_together</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/models/#AlterIndexTogether\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.AlterIndexTogether\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Changes the model\u2019s set of custom indexes (the <code class=\"docutils literal notranslate\"><span class=\"pre\">index_together</span></code> option on the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Meta</span></code> subclass).</p>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p class=\"last\"><code class=\"docutils literal notranslate\"><span class=\"pre\">AlterIndexTogether</span></code> is officially supported only for pre-Django 4.2\nmigration files. For backward compatibility reasons, it\u2019s still part of the\npublic API, and there\u2019s no plan to deprecate or remove it, but it should\nnot be used for new migrations. Use\n<a class=\"reference internal\" href=\"#django.db.migrations.operations.AddIndex\" title=\"django.db.migrations.operations.AddIndex\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AddIndex</span></code></a> and\n<a class=\"reference internal\" href=\"#django.db.migrations.operations.RemoveIndex\" title=\"django.db.migrations.operations.RemoveIndex\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RemoveIndex</span></code></a> operations instead.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-alterorderwithrespectto\">\n<span id=\"alterorderwithrespectto\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">AlterOrderWithRespectTo</span></code><a class=\"headerlink\" href=\"#alterorderwithrespectto\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.AlterOrderWithRespectTo\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">AlterOrderWithRespectTo</span></code>(<em><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">order_with_respect_to</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/models/#AlterOrderWithRespectTo\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.AlterOrderWithRespectTo\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Makes or deletes the <code class=\"docutils literal notranslate\"><span class=\"pre\">_order</span></code> column needed for the\n<a class=\"reference internal\" href=\"../models/options/#django.db.models.Options.order_with_respect_to\" title=\"django.db.models.Options.order_with_respect_to\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">order_with_respect_to</span></code></a> option on the <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta</span></code>\nsubclass.</p>\n</div>\n<div class=\"section\" id=\"s-altermodeloptions\">\n<span id=\"altermodeloptions\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">AlterModelOptions</span></code><a class=\"headerlink\" href=\"#altermodeloptions\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.AlterModelOptions\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">AlterModelOptions</span></code>(<em><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">options</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/models/#AlterModelOptions\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.AlterModelOptions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Stores changes to miscellaneous model options (settings on a model\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta</span></code>)\nlike <code class=\"docutils literal notranslate\"><span class=\"pre\">permissions</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">verbose_name</span></code>. Does not affect the database, but\npersists these changes for <a class=\"reference internal\" href=\"#django.db.migrations.operations.RunPython\" title=\"django.db.migrations.operations.RunPython\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RunPython</span></code></a> instances to use. <code class=\"docutils literal notranslate\"><span class=\"pre\">options</span></code>\nshould be a dictionary mapping option names to values.</p>\n</div>\n<div class=\"section\" id=\"s-altermodelmanagers\">\n<span id=\"altermodelmanagers\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">AlterModelManagers</span></code><a class=\"headerlink\" href=\"#altermodelmanagers\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.AlterModelManagers\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">AlterModelManagers</span></code>(<em><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">managers</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/models/#AlterModelManagers\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.AlterModelManagers\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Alters the managers that are available during migrations.</p>\n</div>\n<div class=\"section\" id=\"s-addfield\">\n<span id=\"addfield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">AddField</span></code><a class=\"headerlink\" href=\"#addfield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.AddField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">AddField</span></code>(<em><span class=\"n\"><span class=\"pre\">model_name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">field</span></span></em>, <em><span class=\"n\"><span class=\"pre\">preserve_default</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/fields/#AddField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.AddField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Adds a field to a model. <code class=\"docutils literal notranslate\"><span class=\"pre\">model_name</span></code> is the model\u2019s name, <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> is\nthe field\u2019s name, and <code class=\"docutils literal notranslate\"><span class=\"pre\">field</span></code> is an unbound Field instance (the thing\nyou would put in the field declaration in <code class=\"docutils literal notranslate\"><span class=\"pre\">models.py</span></code> - for example,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">models.IntegerField(null=True)</span></code>.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">preserve_default</span></code> argument indicates whether the field\u2019s default\nvalue is permanent and should be baked into the project state (<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>),\nor if it is temporary and just for this migration (<code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>) - usually\nbecause the migration is adding a non-nullable field to a table and needs\na default value to put into existing rows. It does not affect the behavior\nof setting defaults in the database directly - Django never sets database\ndefaults and always applies them in the Django ORM code.</p>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p>On older databases, adding a field with a default value may cause a full\nrewrite of the table. This happens even for nullable fields and may have a\nnegative performance impact. To avoid that, the following steps should be\ntaken.</p>\n<ul class=\"last simple\">\n<li>Add the nullable field without the default value and run the\n<a class=\"reference internal\" href=\"../django-admin/#django-admin-makemigrations\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">makemigrations</span></code></a> command. This should generate a migration with\nan <code class=\"docutils literal notranslate\"><span class=\"pre\">AddField</span></code> operation.</li>\n<li>Add the default value to your field and run the <a class=\"reference internal\" href=\"../django-admin/#django-admin-makemigrations\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">makemigrations</span></code></a>\ncommand. This should generate a migration with an <code class=\"docutils literal notranslate\"><span class=\"pre\">AlterField</span></code>\noperation.</li>\n</ul>\n</div>\n</div>\n<div class=\"section\" id=\"s-removefield\">\n<span id=\"removefield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">RemoveField</span></code><a class=\"headerlink\" href=\"#removefield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.RemoveField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">RemoveField</span></code>(<em><span class=\"n\"><span class=\"pre\">model_name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">name</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/fields/#RemoveField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.RemoveField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Removes a field from a model.</p>\n<p>Bear in mind that when reversed, this is actually adding a field to a model.\nThe operation is reversible (apart from any data loss, which is irreversible)\nif the field is nullable or if it has a default value that can be used to\npopulate the recreated column. If the field is not nullable and does not have a\ndefault value, the operation is irreversible.</p>\n</div>\n<div class=\"section\" id=\"s-alterfield\">\n<span id=\"alterfield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">AlterField</span></code><a class=\"headerlink\" href=\"#alterfield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.AlterField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">AlterField</span></code>(<em><span class=\"n\"><span class=\"pre\">model_name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">field</span></span></em>, <em><span class=\"n\"><span class=\"pre\">preserve_default</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/fields/#AlterField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.AlterField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Alters a field\u2019s definition, including changes to its type,\n<a class=\"reference internal\" href=\"../models/fields/#django.db.models.Field.null\" title=\"django.db.models.Field.null\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">null</span></code></a>, <a class=\"reference internal\" href=\"../models/fields/#django.db.models.Field.unique\" title=\"django.db.models.Field.unique\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">unique</span></code></a>,\n<a class=\"reference internal\" href=\"../models/fields/#django.db.models.Field.db_column\" title=\"django.db.models.Field.db_column\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">db_column</span></code></a> and other field attributes.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">preserve_default</span></code> argument indicates whether the field\u2019s default\nvalue is permanent and should be baked into the project state (<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>),\nor if it is temporary and just for this migration (<code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>) - usually\nbecause the migration is altering a nullable field to a non-nullable one and\nneeds a default value to put into existing rows. It does not affect the\nbehavior of setting defaults in the database directly - Django never sets\ndatabase defaults and always applies them in the Django ORM code.</p>\n<p>Note that not all changes are possible on all databases - for example, you\ncannot change a text-type field like <code class=\"docutils literal notranslate\"><span class=\"pre\">models.TextField()</span></code> into a number-type\nfield like <code class=\"docutils literal notranslate\"><span class=\"pre\">models.IntegerField()</span></code> on most databases.</p>\n</div>\n<div class=\"section\" id=\"s-renamefield\">\n<span id=\"renamefield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">RenameField</span></code><a class=\"headerlink\" href=\"#renamefield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.RenameField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">RenameField</span></code>(<em><span class=\"n\"><span class=\"pre\">model_name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">old_name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">new_name</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/fields/#RenameField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.RenameField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Changes a field\u2019s name (and, unless <a class=\"reference internal\" href=\"../models/fields/#django.db.models.Field.db_column\" title=\"django.db.models.Field.db_column\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">db_column</span></code></a>\nis set, its column name).</p>\n</div>\n<div class=\"section\" id=\"s-addindex\">\n<span id=\"addindex\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">AddIndex</span></code><a class=\"headerlink\" href=\"#addindex\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.AddIndex\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">AddIndex</span></code>(<em><span class=\"n\"><span class=\"pre\">model_name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">index</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/models/#AddIndex\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.AddIndex\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Creates an index in the database table for the model with <code class=\"docutils literal notranslate\"><span class=\"pre\">model_name</span></code>.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">index</span></code> is an instance of the <a class=\"reference internal\" href=\"../models/indexes/#django.db.models.Index\" title=\"django.db.models.Index\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Index</span></code></a> class.</p>\n</div>\n<div class=\"section\" id=\"s-removeindex\">\n<span id=\"removeindex\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">RemoveIndex</span></code><a class=\"headerlink\" href=\"#removeindex\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.RemoveIndex\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">RemoveIndex</span></code>(<em><span class=\"n\"><span class=\"pre\">model_name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">name</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/models/#RemoveIndex\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.RemoveIndex\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Removes the index named <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> from the model with <code class=\"docutils literal notranslate\"><span class=\"pre\">model_name</span></code>.</p>\n</div>\n<div class=\"section\" id=\"s-renameindex\">\n<span id=\"renameindex\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">RenameIndex</span></code><a class=\"headerlink\" href=\"#renameindex\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.RenameIndex\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">RenameIndex</span></code>(<em><span class=\"n\"><span class=\"pre\">model_name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">new_name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">old_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">old_fields</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/models/#RenameIndex\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.RenameIndex\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Renames an index in the database table for the model with <code class=\"docutils literal notranslate\"><span class=\"pre\">model_name</span></code>.\nExactly one of <code class=\"docutils literal notranslate\"><span class=\"pre\">old_name</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">old_fields</span></code> can be provided. <code class=\"docutils literal notranslate\"><span class=\"pre\">old_fields</span></code>\nis an iterable of the strings, often corresponding to fields of\n<a class=\"reference internal\" href=\"../models/options/#django.db.models.Options.index_together\" title=\"django.db.models.Options.index_together\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">index_together</span></code></a>.</p>\n<p>On databases that don\u2019t support an index renaming statement (SQLite and MariaDB\n&lt; 10.5.2), the operation will drop and recreate the index, which can be\nexpensive.</p>\n</div>\n<div class=\"section\" id=\"s-addconstraint\">\n<span id=\"addconstraint\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">AddConstraint</span></code><a class=\"headerlink\" href=\"#addconstraint\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.AddConstraint\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">AddConstraint</span></code>(<em><span class=\"n\"><span class=\"pre\">model_name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">constraint</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/models/#AddConstraint\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.AddConstraint\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Creates a <a class=\"reference internal\" href=\"../models/constraints/\"><span class=\"doc\">constraint</span></a> in the database table for\nthe model with <code class=\"docutils literal notranslate\"><span class=\"pre\">model_name</span></code>.</p>\n</div>\n<div class=\"section\" id=\"s-removeconstraint\">\n<span id=\"removeconstraint\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">RemoveConstraint</span></code><a class=\"headerlink\" href=\"#removeconstraint\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.RemoveConstraint\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">RemoveConstraint</span></code>(<em><span class=\"n\"><span class=\"pre\">model_name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">name</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/models/#RemoveConstraint\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.RemoveConstraint\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Removes the constraint named <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> from the model with <code class=\"docutils literal notranslate\"><span class=\"pre\">model_name</span></code>.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-special-operations\">\n<span id=\"special-operations\"></span><h2>Special Operations<a class=\"headerlink\" href=\"#special-operations\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-runsql\">\n<span id=\"runsql\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">RunSQL</span></code><a class=\"headerlink\" href=\"#runsql\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.RunSQL\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">RunSQL</span></code>(<em><span class=\"n\"><span class=\"pre\">sql</span></span></em>, <em><span class=\"n\"><span class=\"pre\">reverse_sql</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">state_operations</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">hints</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">elidable</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/special/#RunSQL\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.RunSQL\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Allows running of arbitrary SQL on the database - useful for more advanced\nfeatures of database backends that Django doesn\u2019t support directly.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">sql</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_sql</span></code> if provided, should be strings of SQL to run on\nthe database. On most database backends (all but PostgreSQL), Django will\nsplit the SQL into individual statements prior to executing them.</p>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p class=\"last\">On PostgreSQL and SQLite, only use <code class=\"docutils literal notranslate\"><span class=\"pre\">BEGIN</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">COMMIT</span></code> in your SQL in\n<a class=\"reference internal\" href=\"../../howto/writing-migrations/#non-atomic-migrations\"><span class=\"std std-ref\">non-atomic migrations</span></a>, to avoid breaking\nDjango\u2019s transaction state.</p>\n</div>\n<p>You can also pass a list of strings or 2-tuples. The latter is used for passing\nqueries and parameters in the same way as <a class=\"reference internal\" href=\"../../topics/db/sql/#executing-custom-sql\"><span class=\"std std-ref\">cursor.execute()</span></a>. These three operations are equivalent:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">migrations</span><span class=\"o\">.</span><span class=\"n\">RunSQL</span><span class=\"p\">(</span><span class=\"s2\">&quot;INSERT INTO musician (name) VALUES (&#39;Reinhardt&#39;);&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">migrations</span><span class=\"o\">.</span><span class=\"n\">RunSQL</span><span class=\"p\">([(</span><span class=\"s2\">&quot;INSERT INTO musician (name) VALUES (&#39;Reinhardt&#39;);&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)])</span>\n<span class=\"n\">migrations</span><span class=\"o\">.</span><span class=\"n\">RunSQL</span><span class=\"p\">([(</span><span class=\"s2\">&quot;INSERT INTO musician (name) VALUES (</span><span class=\"si\">%s</span><span class=\"s2\">);&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Reinhardt&quot;</span><span class=\"p\">])])</span>\n</pre></div>\n</div>\n<p>If you want to include literal percent signs in the query, you have to double\nthem if you are passing parameters.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_sql</span></code> queries are executed when the migration is unapplied. They\nshould undo what is done by the <code class=\"docutils literal notranslate\"><span class=\"pre\">sql</span></code> queries. For example, to undo the above\ninsertion with a deletion:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">migrations</span><span class=\"o\">.</span><span class=\"n\">RunSQL</span><span class=\"p\">(</span>\n    <span class=\"n\">sql</span><span class=\"o\">=</span><span class=\"p\">[(</span><span class=\"s2\">&quot;INSERT INTO musician (name) VALUES (</span><span class=\"si\">%s</span><span class=\"s2\">);&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Reinhardt&quot;</span><span class=\"p\">])],</span>\n    <span class=\"n\">reverse_sql</span><span class=\"o\">=</span><span class=\"p\">[(</span><span class=\"s2\">&quot;DELETE FROM musician where name=</span><span class=\"si\">%s</span><span class=\"s2\">;&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Reinhardt&quot;</span><span class=\"p\">])],</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_sql</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> (the default), the <code class=\"docutils literal notranslate\"><span class=\"pre\">RunSQL</span></code> operation is\nirreversible.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">state_operations</span></code> argument allows you to supply operations that are\nequivalent to the SQL in terms of project state. For example, if you are\nmanually creating a column, you should pass in a list containing an <code class=\"docutils literal notranslate\"><span class=\"pre\">AddField</span></code>\noperation here so that the autodetector still has an up-to-date state of the\nmodel. If you don\u2019t, when you next run <code class=\"docutils literal notranslate\"><span class=\"pre\">makemigrations</span></code>, it won\u2019t see any\noperation that adds that field and so will try to run it again. For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">migrations</span><span class=\"o\">.</span><span class=\"n\">RunSQL</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;ALTER TABLE musician ADD COLUMN name varchar(255) NOT NULL;&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">state_operations</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">migrations</span><span class=\"o\">.</span><span class=\"n\">AddField</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;musician&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">),</span>\n        <span class=\"p\">),</span>\n    <span class=\"p\">],</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The optional <code class=\"docutils literal notranslate\"><span class=\"pre\">hints</span></code> argument will be passed as <code class=\"docutils literal notranslate\"><span class=\"pre\">**hints</span></code> to the\n<a class=\"reference internal\" href=\"../../topics/db/multi-db/#allow_migrate\" title=\"allow_migrate\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">allow_migrate()</span></code></a> method of database routers to assist them in making\nrouting decisions. See <a class=\"reference internal\" href=\"../../topics/db/multi-db/#topics-db-multi-db-hints\"><span class=\"std std-ref\">Hints</span></a> for more details on\ndatabase hints.</p>\n<p>The optional <code class=\"docutils literal notranslate\"><span class=\"pre\">elidable</span></code> argument determines whether or not the operation will\nbe removed (elided) when <a class=\"reference internal\" href=\"../../topics/migrations/#migration-squashing\"><span class=\"std std-ref\">squashing migrations</span></a>.</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.RunSQL.noop\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">RunSQL.</span></code><code class=\"sig-name descname\"><span class=\"pre\">noop</span></code><a class=\"headerlink\" href=\"#django.db.migrations.operations.RunSQL.noop\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Pass the <code class=\"docutils literal notranslate\"><span class=\"pre\">RunSQL.noop</span></code> attribute to <code class=\"docutils literal notranslate\"><span class=\"pre\">sql</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_sql</span></code> when you\nwant the operation not to do anything in the given direction. This is\nespecially useful in making the operation reversible.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-runpython\">\n<span id=\"runpython\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">RunPython</span></code><a class=\"headerlink\" href=\"#runpython\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.RunPython\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">RunPython</span></code>(<em><span class=\"n\"><span class=\"pre\">code</span></span></em>, <em><span class=\"n\"><span class=\"pre\">reverse_code</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">atomic</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">hints</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">elidable</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/special/#RunPython\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.RunPython\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Runs custom Python code in a historical context. <code class=\"docutils literal notranslate\"><span class=\"pre\">code</span></code> (and <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_code</span></code>\nif supplied) should be callable objects that accept two arguments; the first is\nan instance of <code class=\"docutils literal notranslate\"><span class=\"pre\">django.apps.registry.Apps</span></code> containing historical models that\nmatch the operation\u2019s place in the project history, and the second is an\ninstance of <a class=\"reference internal\" href=\"../schema-editor/#django.db.backends.base.schema.BaseDatabaseSchemaEditor\" title=\"django.db.backends.base.schema.BaseDatabaseSchemaEditor\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SchemaEditor</span></code></a>.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_code</span></code> argument is called when unapplying migrations. This\ncallable should undo what is done in the <code class=\"docutils literal notranslate\"><span class=\"pre\">code</span></code> callable so that the\nmigration is reversible. If <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_code</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> (the default), the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">RunPython</span></code> operation is irreversible.</p>\n<p>The optional <code class=\"docutils literal notranslate\"><span class=\"pre\">hints</span></code> argument will be passed as <code class=\"docutils literal notranslate\"><span class=\"pre\">**hints</span></code> to the\n<a class=\"reference internal\" href=\"../../topics/db/multi-db/#allow_migrate\" title=\"allow_migrate\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">allow_migrate()</span></code></a> method of database routers to assist them in making a\nrouting decision. See <a class=\"reference internal\" href=\"../../topics/db/multi-db/#topics-db-multi-db-hints\"><span class=\"std std-ref\">Hints</span></a> for more details on\ndatabase hints.</p>\n<p>The optional <code class=\"docutils literal notranslate\"><span class=\"pre\">elidable</span></code> argument determines whether or not the operation will\nbe removed (elided) when <a class=\"reference internal\" href=\"../../topics/migrations/#migration-squashing\"><span class=\"std std-ref\">squashing migrations</span></a>.</p>\n<p>You are advised to write the code as a separate function above the <code class=\"docutils literal notranslate\"><span class=\"pre\">Migration</span></code>\nclass in the migration file, and pass it to <code class=\"docutils literal notranslate\"><span class=\"pre\">RunPython</span></code>. Here\u2019s an example of\nusing <code class=\"docutils literal notranslate\"><span class=\"pre\">RunPython</span></code> to create some initial objects on a <code class=\"docutils literal notranslate\"><span class=\"pre\">Country</span></code> model:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">migrations</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">forwards_func</span><span class=\"p\">(</span><span class=\"n\">apps</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">):</span>\n    <span class=\"c1\"># We get the model from the versioned app registry;</span>\n    <span class=\"c1\"># if we directly import it, it&#39;ll be the wrong version</span>\n    <span class=\"n\">Country</span> <span class=\"o\">=</span> <span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_model</span><span class=\"p\">(</span><span class=\"s2\">&quot;myapp&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Country&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">db_alias</span> <span class=\"o\">=</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">alias</span>\n    <span class=\"n\">Country</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">using</span><span class=\"p\">(</span><span class=\"n\">db_alias</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">bulk_create</span><span class=\"p\">(</span>\n        <span class=\"p\">[</span>\n            <span class=\"n\">Country</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;USA&quot;</span><span class=\"p\">,</span> <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"s2\">&quot;us&quot;</span><span class=\"p\">),</span>\n            <span class=\"n\">Country</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;France&quot;</span><span class=\"p\">,</span> <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"s2\">&quot;fr&quot;</span><span class=\"p\">),</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">reverse_func</span><span class=\"p\">(</span><span class=\"n\">apps</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">):</span>\n    <span class=\"c1\"># forwards_func() creates two Country instances,</span>\n    <span class=\"c1\"># so reverse_func() should delete them.</span>\n    <span class=\"n\">Country</span> <span class=\"o\">=</span> <span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_model</span><span class=\"p\">(</span><span class=\"s2\">&quot;myapp&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Country&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">db_alias</span> <span class=\"o\">=</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">alias</span>\n    <span class=\"n\">Country</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">using</span><span class=\"p\">(</span><span class=\"n\">db_alias</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;USA&quot;</span><span class=\"p\">,</span> <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"s2\">&quot;us&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n    <span class=\"n\">Country</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">using</span><span class=\"p\">(</span><span class=\"n\">db_alias</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;France&quot;</span><span class=\"p\">,</span> <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"s2\">&quot;fr&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Migration</span><span class=\"p\">(</span><span class=\"n\">migrations</span><span class=\"o\">.</span><span class=\"n\">Migration</span><span class=\"p\">):</span>\n    <span class=\"n\">dependencies</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"n\">operations</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">migrations</span><span class=\"o\">.</span><span class=\"n\">RunPython</span><span class=\"p\">(</span><span class=\"n\">forwards_func</span><span class=\"p\">,</span> <span class=\"n\">reverse_func</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>This is generally the operation you would use to create\n<a class=\"reference internal\" href=\"../../topics/migrations/#data-migrations\"><span class=\"std std-ref\">data migrations</span></a>, run\ncustom data updates and alterations, and anything else you need access to an\nORM and/or Python code for.</p>\n<p>Much like <a class=\"reference internal\" href=\"#django.db.migrations.operations.RunSQL\" title=\"django.db.migrations.operations.RunSQL\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RunSQL</span></code></a>, ensure that if you change schema inside here you\u2019re\neither doing it outside the scope of the Django model system (e.g. triggers)\nor that you use <a class=\"reference internal\" href=\"#django.db.migrations.operations.SeparateDatabaseAndState\" title=\"django.db.migrations.operations.SeparateDatabaseAndState\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SeparateDatabaseAndState</span></code></a> to add in operations that will\nreflect your changes to the model state - otherwise, the versioned ORM and\nthe autodetector will stop working correctly.</p>\n<p>By default, <code class=\"docutils literal notranslate\"><span class=\"pre\">RunPython</span></code> will run its contents inside a transaction on\ndatabases that do not support DDL transactions (for example, MySQL and\nOracle). This should be safe, but may cause a crash if you attempt to use\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">schema_editor</span></code> provided on these backends; in this case, pass\n<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic=False</span></code> to the <code class=\"docutils literal notranslate\"><span class=\"pre\">RunPython</span></code> operation.</p>\n<p>On databases that do support DDL transactions (SQLite and PostgreSQL),\n<code class=\"docutils literal notranslate\"><span class=\"pre\">RunPython</span></code> operations do not have any transactions automatically added\nbesides the transactions created for each migration. Thus, on PostgreSQL, for\nexample, you should avoid combining schema changes and <code class=\"docutils literal notranslate\"><span class=\"pre\">RunPython</span></code> operations\nin the same migration or you may hit errors like <code class=\"docutils literal notranslate\"><span class=\"pre\">OperationalError:</span> <span class=\"pre\">cannot</span>\n<span class=\"pre\">ALTER</span> <span class=\"pre\">TABLE</span> <span class=\"pre\">&quot;mytable&quot;</span> <span class=\"pre\">because</span> <span class=\"pre\">it</span> <span class=\"pre\">has</span> <span class=\"pre\">pending</span> <span class=\"pre\">trigger</span> <span class=\"pre\">events</span></code>.</p>\n<p>If you have a different database and aren\u2019t sure if it supports DDL\ntransactions, check the <code class=\"docutils literal notranslate\"><span class=\"pre\">django.db.connection.features.can_rollback_ddl</span></code>\nattribute.</p>\n<p>If the <code class=\"docutils literal notranslate\"><span class=\"pre\">RunPython</span></code> operation is part of a <a class=\"reference internal\" href=\"../../howto/writing-migrations/#non-atomic-migrations\"><span class=\"std std-ref\">non-atomic migration</span></a>, the operation will only be executed in a transaction\nif <code class=\"docutils literal notranslate\"><span class=\"pre\">atomic=True</span></code> is passed to the <code class=\"docutils literal notranslate\"><span class=\"pre\">RunPython</span></code> operation.</p>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p class=\"last\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RunPython</span></code> does not magically alter the connection of the models for you;\nany model methods you call will go to the default database unless you\ngive them the current database alias (available from\n<code class=\"docutils literal notranslate\"><span class=\"pre\">schema_editor.connection.alias</span></code>, where <code class=\"docutils literal notranslate\"><span class=\"pre\">schema_editor</span></code> is the second\nargument to your function).</p>\n</div>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.RunPython.noop\">\n<em class=\"property\"><span class=\"pre\">static</span><span class=\"w\"> </span></em><code class=\"sig-prename descclassname\"><span class=\"pre\">RunPython.</span></code><code class=\"sig-name descname\"><span class=\"pre\">noop</span></code>()<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/special/#RunPython.noop\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.RunPython.noop\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Pass the <code class=\"docutils literal notranslate\"><span class=\"pre\">RunPython.noop</span></code> method to <code class=\"docutils literal notranslate\"><span class=\"pre\">code</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_code</span></code> when\nyou want the operation not to do anything in the given direction. This is\nespecially useful in making the operation reversible.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-separatedatabaseandstate\">\n<span id=\"separatedatabaseandstate\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">SeparateDatabaseAndState</span></code><a class=\"headerlink\" href=\"#separatedatabaseandstate\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.migrations.operations.SeparateDatabaseAndState\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">SeparateDatabaseAndState</span></code>(<em><span class=\"n\"><span class=\"pre\">database_operations</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">state_operations</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/db/migrations/operations/special/#SeparateDatabaseAndState\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.migrations.operations.SeparateDatabaseAndState\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>A highly specialized operation that lets you mix and match the database\n(schema-changing) and state (autodetector-powering) aspects of operations.</p>\n<p>It accepts two lists of operations. When asked to apply state, it will use the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">state_operations</span></code> list (this is a generalized version of <a class=\"reference internal\" href=\"#django.db.migrations.operations.RunSQL\" title=\"django.db.migrations.operations.RunSQL\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RunSQL</span></code></a>\u2019s\n<code class=\"docutils literal notranslate\"><span class=\"pre\">state_operations</span></code> argument). When asked to apply changes to the database, it\nwill use the <code class=\"docutils literal notranslate\"><span class=\"pre\">database_operations</span></code> list.</p>\n<p>If the actual state of the database and Django\u2019s view of the state get out of\nsync, this can break the migration framework, even leading to data loss. It\u2019s\nworth exercising caution and checking your database and state operations\ncarefully. You can use <a class=\"reference internal\" href=\"../django-admin/#django-admin-sqlmigrate\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">sqlmigrate</span></code></a> and <a class=\"reference internal\" href=\"../django-admin/#django-admin-dbshell\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">dbshell</span></code></a> to check\nyour database operations. You can use <a class=\"reference internal\" href=\"../django-admin/#django-admin-makemigrations\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">makemigrations</span></code></a>, especially\nwith <a class=\"reference internal\" href=\"../django-admin/#cmdoption-makemigrations-dry-run\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--dry-run</span></code></a>, to check your state\noperations.</p>\n<p>For an example using <code class=\"docutils literal notranslate\"><span class=\"pre\">SeparateDatabaseAndState</span></code>, see\n<a class=\"reference internal\" href=\"../../howto/writing-migrations/#changing-a-manytomanyfield-to-use-a-through-model\"><span class=\"std std-ref\">Changing a ManyToManyField to use a through model</span></a>.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-writing-your-own\">\n<span id=\"s-writing-your-own-migration-operation\"></span><span id=\"writing-your-own\"></span><span id=\"writing-your-own-migration-operation\"></span><h2>Writing your own<a class=\"headerlink\" href=\"#writing-your-own\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Operations have a relatively simple API, and they\u2019re designed so that you can\neasily write your own to supplement the built-in Django ones. The basic\nstructure of an <code class=\"docutils literal notranslate\"><span class=\"pre\">Operation</span></code> looks like this:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.db.migrations.operations.base</span> <span class=\"kn\">import</span> <span class=\"n\">Operation</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyCustomOperation</span><span class=\"p\">(</span><span class=\"n\">Operation</span><span class=\"p\">):</span>\n    <span class=\"c1\"># If this is False, it means that this operation will be ignored by</span>\n    <span class=\"c1\"># sqlmigrate; if true, it will be run and the SQL collected for its output.</span>\n    <span class=\"n\">reduces_to_sql</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"c1\"># If this is False, Django will refuse to reverse past this operation.</span>\n    <span class=\"n\">reversible</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Operations are usually instantiated with arguments in migration</span>\n        <span class=\"c1\"># files. Store the values of them on self for later use.</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">state_forwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">state</span><span class=\"p\">):</span>\n        <span class=\"c1\"># The Operation should take the &#39;state&#39; parameter (an instance of</span>\n        <span class=\"c1\"># django.db.migrations.state.ProjectState) and mutate it to match</span>\n        <span class=\"c1\"># any schema changes that have occurred.</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">database_forwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">from_state</span><span class=\"p\">,</span> <span class=\"n\">to_state</span><span class=\"p\">):</span>\n        <span class=\"c1\"># The Operation should use schema_editor to apply any changes it</span>\n        <span class=\"c1\"># wants to make to the database.</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">database_backwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">from_state</span><span class=\"p\">,</span> <span class=\"n\">to_state</span><span class=\"p\">):</span>\n        <span class=\"c1\"># If reversible is True, this is called when the operation is reversed.</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">describe</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># This is used to describe what the operation does in console output.</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Custom Operation&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">migration_name_fragment</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Optional. A filename part suitable for automatically naming a</span>\n        <span class=\"c1\"># migration containing this operation, or None if not applicable.</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;custom_operation_</span><span class=\"si\">%s</span><span class=\"s2\">_</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">arg2</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>You can take this template and work from it, though we suggest looking at the\nbuilt-in Django operations in <code class=\"docutils literal notranslate\"><span class=\"pre\">django.db.migrations.operations</span></code> - they cover\na lot of the example usage of semi-internal aspects of the migration framework\nlike <code class=\"docutils literal notranslate\"><span class=\"pre\">ProjectState</span></code> and the patterns used to get historical models, as well\nas <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelState</span></code> and the patterns used to mutate historical models in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">state_forwards()</span></code>.</p>\n<p>Some things to note:</p>\n<ul>\n<li><p class=\"first\">You don\u2019t need to learn too much about <code class=\"docutils literal notranslate\"><span class=\"pre\">ProjectState</span></code> to write migrations;\njust know that it has an <code class=\"docutils literal notranslate\"><span class=\"pre\">apps</span></code> property that gives access to an app\nregistry (which you can then call <code class=\"docutils literal notranslate\"><span class=\"pre\">get_model</span></code> on).</p>\n</li>\n<li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">database_forwards</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">database_backwards</span></code> both get two states passed\nto them; these represent the difference the <code class=\"docutils literal notranslate\"><span class=\"pre\">state_forwards</span></code> method would\nhave applied, but are given to you for convenience and speed reasons.</p>\n</li>\n<li><p class=\"first\">If you want to work with model classes or model instances from the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">from_state</span></code> argument in <code class=\"docutils literal notranslate\"><span class=\"pre\">database_forwards()</span></code> or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">database_backwards()</span></code>, you must render model states using the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">clear_delayed_apps_cache()</span></code> method to make related models available:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">database_forwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">from_state</span><span class=\"p\">,</span> <span class=\"n\">to_state</span><span class=\"p\">):</span>\n    <span class=\"c1\"># This operation should have access to all models. Ensure that all models are</span>\n    <span class=\"c1\"># reloaded in case any are delayed.</span>\n    <span class=\"n\">from_state</span><span class=\"o\">.</span><span class=\"n\">clear_delayed_apps_cache</span><span class=\"p\">()</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">to_state</span></code> in the database_backwards method is the <em>older</em> state; that is,\nthe one that will be the current state once the migration has finished reversing.</p>\n</li>\n<li><p class=\"first\">You might see implementations of <code class=\"docutils literal notranslate\"><span class=\"pre\">references_model</span></code> on the built-in\noperations; this is part of the autodetection code and does not matter for\ncustom operations.</p>\n</li>\n</ul>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p class=\"last\">For performance reasons, the <a class=\"reference internal\" href=\"../models/fields/#django.db.models.Field\" title=\"django.db.models.Field\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Field</span></code></a> instances in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ModelState.fields</span></code> are reused across migrations. You must never change\nthe attributes on these instances. If you need to mutate a field in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">state_forwards()</span></code>, you must remove the old instance from\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ModelState.fields</span></code> and add a new instance in its place. The same is true\nfor the <a class=\"reference internal\" href=\"../../topics/db/managers/#django.db.models.Manager\" title=\"django.db.models.Manager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Manager</span></code></a> instances in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ModelState.managers</span></code>.</p>\n</div>\n<p>As an example, let\u2019s make an operation that loads PostgreSQL extensions (which\ncontain some of PostgreSQL\u2019s more exciting features). Since there\u2019s no model\nstate changes, all it does is run one command:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.db.migrations.operations.base</span> <span class=\"kn\">import</span> <span class=\"n\">Operation</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">LoadExtension</span><span class=\"p\">(</span><span class=\"n\">Operation</span><span class=\"p\">):</span>\n    <span class=\"n\">reversible</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">state_forwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">state</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">database_forwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">from_state</span><span class=\"p\">,</span> <span class=\"n\">to_state</span><span class=\"p\">):</span>\n        <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"s2\">&quot;CREATE EXTENSION IF NOT EXISTS </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">database_backwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">from_state</span><span class=\"p\">,</span> <span class=\"n\">to_state</span><span class=\"p\">):</span>\n        <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"s2\">&quot;DROP EXTENSION </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">describe</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Creates extension </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">migration_name_fragment</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;create_extension_</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n</pre></div>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["ref/models/index", "Models", "N", "next"], ["ref/middleware", "Middleware", "P", "previous"]], "sourcename": "ref/migration-operations.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Migration Operations</a><ul>\n<li><a class=\"reference internal\" href=\"#schema-operations\">Schema Operations</a><ul>\n<li><a class=\"reference internal\" href=\"#createmodel\"><code class=\"docutils literal notranslate\"><span class=\"pre\">CreateModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#deletemodel\"><code class=\"docutils literal notranslate\"><span class=\"pre\">DeleteModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#renamemodel\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RenameModel</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#altermodeltable\"><code class=\"docutils literal notranslate\"><span class=\"pre\">AlterModelTable</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#altermodeltablecomment\"><code class=\"docutils literal notranslate\"><span class=\"pre\">AlterModelTableComment</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#alteruniquetogether\"><code class=\"docutils literal notranslate\"><span class=\"pre\">AlterUniqueTogether</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#alterindextogether\"><code class=\"docutils literal notranslate\"><span class=\"pre\">AlterIndexTogether</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#alterorderwithrespectto\"><code class=\"docutils literal notranslate\"><span class=\"pre\">AlterOrderWithRespectTo</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#altermodeloptions\"><code class=\"docutils literal notranslate\"><span class=\"pre\">AlterModelOptions</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#altermodelmanagers\"><code class=\"docutils literal notranslate\"><span class=\"pre\">AlterModelManagers</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#addfield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">AddField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#removefield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RemoveField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#alterfield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">AlterField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#renamefield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RenameField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#addindex\"><code class=\"docutils literal notranslate\"><span class=\"pre\">AddIndex</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#removeindex\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RemoveIndex</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#renameindex\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RenameIndex</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#addconstraint\"><code class=\"docutils literal notranslate\"><span class=\"pre\">AddConstraint</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#removeconstraint\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RemoveConstraint</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#special-operations\">Special Operations</a><ul>\n<li><a class=\"reference internal\" href=\"#runsql\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RunSQL</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#runpython\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RunPython</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#separatedatabaseandstate\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SeparateDatabaseAndState</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#writing-your-own\">Writing your own</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "ref/migration-operations", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
