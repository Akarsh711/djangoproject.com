{"parents": [{"link": "../../", "title": "API Reference"}, {"link": "../", "title": "Models"}], "prev": {"link": "../conditional-expressions/", "title": "Conditional Expressions"}, "next": {"link": "../../paginator/", "title": "Paginator"}, "title": "Database Functions", "meta": {}, "body": "<div class=\"section\" id=\"s-module-django.db.models.functions\">\n<span id=\"s-database-functions\"></span><span id=\"module-django.db.models.functions\"></span><span id=\"database-functions\"></span><h1>Database Functions<a class=\"headerlink\" href=\"#module-django.db.models.functions\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>The classes documented below provide a way for users to use functions provided\nby the underlying database as annotations, aggregations, or filters in Django.\nFunctions are also <a class=\"reference internal\" href=\"../expressions/\"><span class=\"doc\">expressions</span></a>, so they can be used and\ncombined with other expressions like <a class=\"reference internal\" href=\"../querysets/#aggregation-functions\"><span class=\"std std-ref\">aggregate functions</span></a>.</p>\n<p>We\u2019ll be using the following model in examples of each function:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Author</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n    <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">PositiveIntegerField</span><span class=\"p\">(</span><span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">alias</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">goes_by</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>We don\u2019t usually recommend allowing <code class=\"docutils literal notranslate\"><span class=\"pre\">null=True</span></code> for <code class=\"docutils literal notranslate\"><span class=\"pre\">CharField</span></code> since this\nallows the field to have two \u201cempty values\u201d, but it\u2019s important for the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Coalesce</span></code> example below.</p>\n<div class=\"section\" id=\"s-comparison-and-conversion-functions\">\n<span id=\"s-comparison-functions\"></span><span id=\"comparison-and-conversion-functions\"></span><span id=\"comparison-functions\"></span><h2>Comparison and conversion functions<a class=\"headerlink\" href=\"#comparison-and-conversion-functions\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-cast\">\n<span id=\"cast\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Cast</span></code><a class=\"headerlink\" href=\"#cast\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Cast\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Cast</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">output_field</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/comparison/#Cast\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Cast\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Forces the result type of <code class=\"docutils literal notranslate\"><span class=\"pre\">expression</span></code> to be the one from <code class=\"docutils literal notranslate\"><span class=\"pre\">output_field</span></code>.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">FloatField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Cast</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Margaret Smith&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">age_as_float</span><span class=\"o\">=</span><span class=\"n\">Cast</span><span class=\"p\">(</span><span class=\"s2\">&quot;age&quot;</span><span class=\"p\">,</span> <span class=\"n\">output_field</span><span class=\"o\">=</span><span class=\"n\">FloatField</span><span class=\"p\">()),</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">author</span><span class=\"o\">.</span><span class=\"n\">age_as_float</span><span class=\"p\">)</span>\n<span class=\"go\">25.0</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-coalesce\">\n<span id=\"coalesce\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Coalesce</span></code><a class=\"headerlink\" href=\"#coalesce\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Coalesce\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Coalesce</span></code>(<em><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">expressions</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/comparison/#Coalesce\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Coalesce\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Accepts a list of at least two field names or expressions and returns the\nfirst non-null value (note that an empty string is not considered a null\nvalue). Each argument must be of a similar type, so mixing text and numbers\nwill result in a database error.</p>\n<p>Usage examples:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get a screen name from least to most public</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">Sum</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Coalesce</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Margaret Smith&quot;</span><span class=\"p\">,</span> <span class=\"n\">goes_by</span><span class=\"o\">=</span><span class=\"s2\">&quot;Maggie&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">screen_name</span><span class=\"o\">=</span><span class=\"n\">Coalesce</span><span class=\"p\">(</span><span class=\"s2\">&quot;alias&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;goes_by&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">author</span><span class=\"o\">.</span><span class=\"n\">screen_name</span><span class=\"p\">)</span>\n<span class=\"go\">Maggie</span>\n\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Prevent an aggregate Sum() from returning None</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># The aggregate default argument uses Coalesce() under the hood.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">aggregated</span> <span class=\"o\">=</span> <span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">aggregate</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">combined_age</span><span class=\"o\">=</span><span class=\"n\">Sum</span><span class=\"p\">(</span><span class=\"s2\">&quot;age&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">combined_age_default</span><span class=\"o\">=</span><span class=\"n\">Sum</span><span class=\"p\">(</span><span class=\"s2\">&quot;age&quot;</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">combined_age_coalesce</span><span class=\"o\">=</span><span class=\"n\">Coalesce</span><span class=\"p\">(</span><span class=\"n\">Sum</span><span class=\"p\">(</span><span class=\"s2\">&quot;age&quot;</span><span class=\"p\">),</span> <span class=\"mi\">0</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">aggregated</span><span class=\"p\">[</span><span class=\"s2\">&quot;combined_age&quot;</span><span class=\"p\">])</span>\n<span class=\"go\">None</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">aggregated</span><span class=\"p\">[</span><span class=\"s2\">&quot;combined_age_default&quot;</span><span class=\"p\">])</span>\n<span class=\"go\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">aggregated</span><span class=\"p\">[</span><span class=\"s2\">&quot;combined_age_coalesce&quot;</span><span class=\"p\">])</span>\n<span class=\"go\">0</span>\n</pre></div>\n</div>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p>A Python value passed to <code class=\"docutils literal notranslate\"><span class=\"pre\">Coalesce</span></code> on MySQL may be converted to an\nincorrect type unless explicitly cast to the correct database type:</p>\n<div class=\"doctest last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">DateTimeField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Cast</span><span class=\"p\">,</span> <span class=\"n\">Coalesce</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.utils</span> <span class=\"kn\">import</span> <span class=\"n\">timezone</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">now</span> <span class=\"o\">=</span> <span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Coalesce</span><span class=\"p\">(</span><span class=\"s1\">&#39;updated&#39;</span><span class=\"p\">,</span> <span class=\"n\">Cast</span><span class=\"p\">(</span><span class=\"n\">now</span><span class=\"p\">,</span> <span class=\"n\">DateTimeField</span><span class=\"p\">()))</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"s-collate\">\n<span id=\"collate\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Collate</span></code><a class=\"headerlink\" href=\"#collate\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Collate\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Collate</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">collation</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/comparison/#Collate\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Collate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Takes an expression and a collation name to query against.</p>\n<p>For example, to filter case-insensitively in SQLite:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">Collate</span><span class=\"p\">(</span><span class=\"n\">Value</span><span class=\"p\">(</span><span class=\"s2\">&quot;john&quot;</span><span class=\"p\">),</span> <span class=\"s2\">&quot;nocase&quot;</span><span class=\"p\">))</span>\n<span class=\"go\">&lt;QuerySet [&lt;Author: John&gt;, &lt;Author: john&gt;]&gt;</span>\n</pre></div>\n</div>\n<p>It can also be used when ordering, for example with PostgreSQL:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">(</span><span class=\"n\">Collate</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;et-x-icu&quot;</span><span class=\"p\">))</span>\n<span class=\"go\">&lt;QuerySet [&lt;Author: Ursula&gt;, &lt;Author: Veronika&gt;, &lt;Author: \u00dclle&gt;]&gt;</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-greatest\">\n<span id=\"greatest\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Greatest</span></code><a class=\"headerlink\" href=\"#greatest\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Greatest\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Greatest</span></code>(<em><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">expressions</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/comparison/#Greatest\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Greatest\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Accepts a list of at least two field names or expressions and returns the\ngreatest value. Each argument must be of a similar type, so mixing text and\nnumbers will result in a database error.</p>\n<p>Usage example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Blog</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">()</span>\n    <span class=\"n\">modified</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateTimeField</span><span class=\"p\">(</span><span class=\"n\">auto_now</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Comment</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">()</span>\n    <span class=\"n\">modified</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateTimeField</span><span class=\"p\">(</span><span class=\"n\">auto_now</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">blog</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Blog</span><span class=\"p\">,</span> <span class=\"n\">on_delete</span><span class=\"o\">=</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CASCADE</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Greatest</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">blog</span> <span class=\"o\">=</span> <span class=\"n\">Blog</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s2\">&quot;Greatest is the best.&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">comment</span> <span class=\"o\">=</span> <span class=\"n\">Comment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s2\">&quot;No, Least is better.&quot;</span><span class=\"p\">,</span> <span class=\"n\">blog</span><span class=\"o\">=</span><span class=\"n\">blog</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">comments</span> <span class=\"o\">=</span> <span class=\"n\">Comment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">last_updated</span><span class=\"o\">=</span><span class=\"n\">Greatest</span><span class=\"p\">(</span><span class=\"s2\">&quot;modified&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;blog__modified&quot;</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">annotated_comment</span> <span class=\"o\">=</span> <span class=\"n\">comments</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">annotated_comment.last_updated</span></code> will be the most recent of <code class=\"docutils literal notranslate\"><span class=\"pre\">blog.modified</span></code>\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">comment.modified</span></code>.</p>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p>The behavior of <code class=\"docutils literal notranslate\"><span class=\"pre\">Greatest</span></code> when one or more expression may be <code class=\"docutils literal notranslate\"><span class=\"pre\">null</span></code>\nvaries between databases:</p>\n<ul class=\"simple\">\n<li>PostgreSQL: <code class=\"docutils literal notranslate\"><span class=\"pre\">Greatest</span></code> will return the largest non-null expression,\nor <code class=\"docutils literal notranslate\"><span class=\"pre\">null</span></code> if all expressions are <code class=\"docutils literal notranslate\"><span class=\"pre\">null</span></code>.</li>\n<li>SQLite, Oracle, and MySQL: If any expression is <code class=\"docutils literal notranslate\"><span class=\"pre\">null</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">Greatest</span></code>\nwill return <code class=\"docutils literal notranslate\"><span class=\"pre\">null</span></code>.</li>\n</ul>\n<p class=\"last\">The PostgreSQL behavior can be emulated using <code class=\"docutils literal notranslate\"><span class=\"pre\">Coalesce</span></code> if you know\na sensible minimum value to provide as a default.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-jsonobject\">\n<span id=\"jsonobject\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">JSONObject</span></code><a class=\"headerlink\" href=\"#jsonobject\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.JSONObject\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">JSONObject</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">fields</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/comparison/#JSONObject\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.JSONObject\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Takes a list of key-value pairs and returns a JSON object containing those\npairs.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">F</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">JSONObject</span><span class=\"p\">,</span> <span class=\"n\">Lower</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Margaret Smith&quot;</span><span class=\"p\">,</span> <span class=\"n\">alias</span><span class=\"o\">=</span><span class=\"s2\">&quot;msmith&quot;</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">json_object</span><span class=\"o\">=</span><span class=\"n\">JSONObject</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">Lower</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>        <span class=\"n\">alias</span><span class=\"o\">=</span><span class=\"s2\">&quot;alias&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>        <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"n\">F</span><span class=\"p\">(</span><span class=\"s2\">&quot;age&quot;</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"p\">)</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">author</span><span class=\"o\">.</span><span class=\"n\">json_object</span>\n<span class=\"go\">{&#39;name&#39;: &#39;margaret smith&#39;, &#39;alias&#39;: &#39;msmith&#39;, &#39;age&#39;: 50}</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-least\">\n<span id=\"least\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Least</span></code><a class=\"headerlink\" href=\"#least\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Least\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Least</span></code>(<em><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">expressions</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/comparison/#Least\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Least\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Accepts a list of at least two field names or expressions and returns the\nleast value. Each argument must be of a similar type, so mixing text and numbers\nwill result in a database error.</p>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p>The behavior of <code class=\"docutils literal notranslate\"><span class=\"pre\">Least</span></code> when one or more expression may be <code class=\"docutils literal notranslate\"><span class=\"pre\">null</span></code>\nvaries between databases:</p>\n<ul class=\"simple\">\n<li>PostgreSQL: <code class=\"docutils literal notranslate\"><span class=\"pre\">Least</span></code> will return the smallest non-null expression,\nor <code class=\"docutils literal notranslate\"><span class=\"pre\">null</span></code> if all expressions are <code class=\"docutils literal notranslate\"><span class=\"pre\">null</span></code>.</li>\n<li>SQLite, Oracle, and MySQL: If any expression is <code class=\"docutils literal notranslate\"><span class=\"pre\">null</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">Least</span></code>\nwill return <code class=\"docutils literal notranslate\"><span class=\"pre\">null</span></code>.</li>\n</ul>\n<p class=\"last\">The PostgreSQL behavior can be emulated using <code class=\"docutils literal notranslate\"><span class=\"pre\">Coalesce</span></code> if you know\na sensible maximum value to provide as a default.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-nullif\">\n<span id=\"nullif\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">NullIf</span></code><a class=\"headerlink\" href=\"#nullif\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.NullIf\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">NullIf</span></code>(<em><span class=\"n\"><span class=\"pre\">expression1</span></span></em>, <em><span class=\"n\"><span class=\"pre\">expression2</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/comparison/#NullIf\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.NullIf\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Accepts two expressions and returns <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> if they are equal, otherwise\nreturns <code class=\"docutils literal notranslate\"><span class=\"pre\">expression1</span></code>.</p>\n<div class=\"admonition-caveats-on-oracle admonition\">\n<p class=\"first admonition-title\">Caveats on Oracle</p>\n<p>Due to an <a class=\"reference internal\" href=\"../../databases/#oracle-null-empty-strings\"><span class=\"std std-ref\">Oracle convention</span></a>, this\nfunction returns the empty string instead of <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> when the expressions\nare of type <a class=\"reference internal\" href=\"../fields/#django.db.models.CharField\" title=\"django.db.models.CharField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CharField</span></code></a>.</p>\n<p class=\"last\">Passing <code class=\"docutils literal notranslate\"><span class=\"pre\">Value(None)</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">expression1</span></code> is prohibited on Oracle since\nOracle doesn\u2019t accept <code class=\"docutils literal notranslate\"><span class=\"pre\">NULL</span></code> as the first argument.</p>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"s-date-functions\">\n<span id=\"s-id1\"></span><span id=\"date-functions\"></span><span id=\"id1\"></span><h2>Date functions<a class=\"headerlink\" href=\"#date-functions\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>We\u2019ll be using the following model in examples of each function:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Experiment</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">start_datetime</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateTimeField</span><span class=\"p\">()</span>\n    <span class=\"n\">start_date</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateField</span><span class=\"p\">(</span><span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">start_time</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TimeField</span><span class=\"p\">(</span><span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">end_datetime</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateTimeField</span><span class=\"p\">(</span><span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">end_date</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateField</span><span class=\"p\">(</span><span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">end_time</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TimeField</span><span class=\"p\">(</span><span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"section\" id=\"s-extract\">\n<span id=\"extract\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Extract</span></code><a class=\"headerlink\" href=\"#extract\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Extract\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Extract</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">lookup_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#Extract\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Extract\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Extracts a component of a date as a number.</p>\n<p>Takes an <code class=\"docutils literal notranslate\"><span class=\"pre\">expression</span></code> representing a <code class=\"docutils literal notranslate\"><span class=\"pre\">DateField</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">TimeField</span></code>, or <code class=\"docutils literal notranslate\"><span class=\"pre\">DurationField</span></code> and a <code class=\"docutils literal notranslate\"><span class=\"pre\">lookup_name</span></code>, and returns the part\nof the date referenced by <code class=\"docutils literal notranslate\"><span class=\"pre\">lookup_name</span></code> as an <code class=\"docutils literal notranslate\"><span class=\"pre\">IntegerField</span></code>.\nDjango usually uses the databases\u2019 extract function, so you may use any\n<code class=\"docutils literal notranslate\"><span class=\"pre\">lookup_name</span></code> that your database supports. A <code class=\"docutils literal notranslate\"><span class=\"pre\">tzinfo</span></code> subclass, usually\nprovided by <a class=\"reference external\" href=\"https://docs.python.org/3/library/zoneinfo.html#module-zoneinfo\" title=\"(in Python v3.11)\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zoneinfo</span></code></a>, can be passed to extract a value in a specific\ntimezone.</p>\n<p>Given the datetime <code class=\"docutils literal notranslate\"><span class=\"pre\">2015-06-15</span> <span class=\"pre\">23:30:01.000321+00:00</span></code>, the built-in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">lookup_name</span></code>s return:</p>\n<ul class=\"simple\">\n<li>\u201cyear\u201d: 2015</li>\n<li>\u201ciso_year\u201d: 2015</li>\n<li>\u201cquarter\u201d: 2</li>\n<li>\u201cmonth\u201d: 6</li>\n<li>\u201cday\u201d: 15</li>\n<li>\u201cweek\u201d: 25</li>\n<li>\u201cweek_day\u201d: 2</li>\n<li>\u201ciso_week_day\u201d: 1</li>\n<li>\u201chour\u201d: 23</li>\n<li>\u201cminute\u201d: 30</li>\n<li>\u201csecond\u201d: 1</li>\n</ul>\n<p>If a different timezone like <code class=\"docutils literal notranslate\"><span class=\"pre\">Australia/Melbourne</span></code> is active in Django, then\nthe datetime is converted to the timezone before the value is extracted. The\ntimezone offset for Melbourne in the example date above is +10:00. The values\nreturned when this timezone is active will be the same as above except for:</p>\n<ul class=\"simple\">\n<li>\u201cday\u201d: 16</li>\n<li>\u201cweek_day\u201d: 3</li>\n<li>\u201ciso_week_day\u201d: 2</li>\n<li>\u201chour\u201d: 9</li>\n</ul>\n<div class=\"admonition-week-day-values admonition\">\n<p class=\"first admonition-title\"><code class=\"docutils literal notranslate\"><span class=\"pre\">week_day</span></code> values</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">week_day</span></code> <code class=\"docutils literal notranslate\"><span class=\"pre\">lookup_type</span></code> is calculated differently from most\ndatabases and from Python\u2019s standard functions. This function will return\n<code class=\"docutils literal notranslate\"><span class=\"pre\">1</span></code> for Sunday, <code class=\"docutils literal notranslate\"><span class=\"pre\">2</span></code> for Monday, through <code class=\"docutils literal notranslate\"><span class=\"pre\">7</span></code> for Saturday.</p>\n<p>The equivalent calculation in Python is:</p>\n<div class=\"last highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dt</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">isoweekday</span><span class=\"p\">()</span> <span class=\"o\">%</span> <span class=\"mi\">7</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n<span class=\"go\">2</span>\n</pre></div>\n</div>\n</div>\n<div class=\"admonition-week-values admonition\">\n<p class=\"first admonition-title\"><code class=\"docutils literal notranslate\"><span class=\"pre\">week</span></code> values</p>\n<p class=\"last\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">week</span></code> <code class=\"docutils literal notranslate\"><span class=\"pre\">lookup_type</span></code> is calculated based on <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/ISO-8601\">ISO-8601</a>, i.e.,\na week starts on a Monday. The first week of a year is the one that\ncontains the year\u2019s first Thursday, i.e. the first week has the majority\n(four or more) of its days in the year. The value returned is in the range\n1 to 52 or 53.</p>\n</div>\n<p>Each <code class=\"docutils literal notranslate\"><span class=\"pre\">lookup_name</span></code> above has a corresponding <code class=\"docutils literal notranslate\"><span class=\"pre\">Extract</span></code> subclass (listed\nbelow) that should typically be used instead of the more verbose equivalent,\ne.g. use <code class=\"docutils literal notranslate\"><span class=\"pre\">ExtractYear(...)</span></code> rather than <code class=\"docutils literal notranslate\"><span class=\"pre\">Extract(...,</span> <span class=\"pre\">lookup_name='year')</span></code>.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Extract</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">start_datetime</span><span class=\"o\">=</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"n\">start</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(),</span> <span class=\"n\">end_datetime</span><span class=\"o\">=</span><span class=\"n\">end</span><span class=\"p\">,</span> <span class=\"n\">end_date</span><span class=\"o\">=</span><span class=\"n\">end</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">()</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Add the experiment start year as a field in the QuerySet.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">experiment</span> <span class=\"o\">=</span> <span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">start_year</span><span class=\"o\">=</span><span class=\"n\">Extract</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;year&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">experiment</span><span class=\"o\">.</span><span class=\"n\">start_year</span>\n<span class=\"go\">2015</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># How many experiments completed in the same year in which they started?</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">start_datetime__year</span><span class=\"o\">=</span><span class=\"n\">Extract</span><span class=\"p\">(</span><span class=\"s2\">&quot;end_datetime&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;year&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">()</span>\n<span class=\"go\">1</span>\n</pre></div>\n</div>\n<div class=\"section\" id=\"s-datefield-extracts\">\n<span id=\"datefield-extracts\"></span><h4><code class=\"docutils literal notranslate\"><span class=\"pre\">DateField</span></code> extracts<a class=\"headerlink\" href=\"#datefield-extracts\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.ExtractYear\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ExtractYear</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#ExtractYear\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.ExtractYear\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">lookup_name</span> <span class=\"pre\">=</span> <span class=\"pre\">'year'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.ExtractIsoYear\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ExtractIsoYear</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#ExtractIsoYear\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.ExtractIsoYear\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the ISO-8601 week-numbering year.</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">lookup_name</span> <span class=\"pre\">=</span> <span class=\"pre\">'iso_year'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.ExtractMonth\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ExtractMonth</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#ExtractMonth\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.ExtractMonth\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">lookup_name</span> <span class=\"pre\">=</span> <span class=\"pre\">'month'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.ExtractDay\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ExtractDay</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#ExtractDay\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.ExtractDay\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">lookup_name</span> <span class=\"pre\">=</span> <span class=\"pre\">'day'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.ExtractWeekDay\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ExtractWeekDay</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#ExtractWeekDay\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.ExtractWeekDay\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">lookup_name</span> <span class=\"pre\">=</span> <span class=\"pre\">'week_day'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.ExtractIsoWeekDay\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ExtractIsoWeekDay</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#ExtractIsoWeekDay\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.ExtractIsoWeekDay\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the ISO-8601 week day with day 1 being Monday and day 7 being\nSunday.</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">lookup_name</span> <span class=\"pre\">=</span> <span class=\"pre\">'iso_week_day'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.ExtractWeek\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ExtractWeek</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#ExtractWeek\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.ExtractWeek\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">lookup_name</span> <span class=\"pre\">=</span> <span class=\"pre\">'week'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.ExtractQuarter\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ExtractQuarter</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#ExtractQuarter\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.ExtractQuarter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">lookup_name</span> <span class=\"pre\">=</span> <span class=\"pre\">'quarter'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<p>These are logically equivalent to <code class=\"docutils literal notranslate\"><span class=\"pre\">Extract('date_field',</span> <span class=\"pre\">lookup_name)</span></code>. Each\nclass is also a <code class=\"docutils literal notranslate\"><span class=\"pre\">Transform</span></code> registered on <code class=\"docutils literal notranslate\"><span class=\"pre\">DateField</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code>\nas <code class=\"docutils literal notranslate\"><span class=\"pre\">__(lookup_name)</span></code>, e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">__year</span></code>.</p>\n<p>Since <code class=\"docutils literal notranslate\"><span class=\"pre\">DateField</span></code>s don\u2019t have a time component, only <code class=\"docutils literal notranslate\"><span class=\"pre\">Extract</span></code> subclasses\nthat deal with date-parts can be used with <code class=\"docutils literal notranslate\"><span class=\"pre\">DateField</span></code>:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span><span class=\"p\">,</span> <span class=\"n\">timezone</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">ExtractDay</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">ExtractMonth</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">ExtractQuarter</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">ExtractWeek</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">ExtractIsoWeekDay</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">ExtractWeekDay</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">ExtractIsoYear</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">ExtractYear</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">start_2015</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">utc</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">end_2015</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">27</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">utc</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">start_datetime</span><span class=\"o\">=</span><span class=\"n\">start_2015</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"n\">start_2015</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">end_datetime</span><span class=\"o\">=</span><span class=\"n\">end_2015</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">end_date</span><span class=\"o\">=</span><span class=\"n\">end_2015</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(),</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">year</span><span class=\"o\">=</span><span class=\"n\">ExtractYear</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_date&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">isoyear</span><span class=\"o\">=</span><span class=\"n\">ExtractIsoYear</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_date&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">quarter</span><span class=\"o\">=</span><span class=\"n\">ExtractQuarter</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_date&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">month</span><span class=\"o\">=</span><span class=\"n\">ExtractMonth</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_date&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">week</span><span class=\"o\">=</span><span class=\"n\">ExtractWeek</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_date&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">day</span><span class=\"o\">=</span><span class=\"n\">ExtractDay</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_date&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">weekday</span><span class=\"o\">=</span><span class=\"n\">ExtractWeekDay</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_date&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">isoweekday</span><span class=\"o\">=</span><span class=\"n\">ExtractIsoWeekDay</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_date&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;year&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;isoyear&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;quarter&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;month&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;week&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;day&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;weekday&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;isoweekday&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">end_date__year</span><span class=\"o\">=</span><span class=\"n\">ExtractYear</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_date&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n<span class=\"go\">{&#39;year&#39;: 2015, &#39;isoyear&#39;: 2015, &#39;quarter&#39;: 2, &#39;month&#39;: 6, &#39;week&#39;: 25,</span>\n<span class=\"go\"> &#39;day&#39;: 15, &#39;weekday&#39;: 2, &#39;isoweekday&#39;: 1}</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-datetimefield-extracts\">\n<span id=\"datetimefield-extracts\"></span><h4><code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code> extracts<a class=\"headerlink\" href=\"#datetimefield-extracts\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>In addition to the following, all extracts for <code class=\"docutils literal notranslate\"><span class=\"pre\">DateField</span></code> listed above may\nalso be used on <code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code>s .</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.ExtractHour\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ExtractHour</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#ExtractHour\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.ExtractHour\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">lookup_name</span> <span class=\"pre\">=</span> <span class=\"pre\">'hour'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.ExtractMinute\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ExtractMinute</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#ExtractMinute\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.ExtractMinute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">lookup_name</span> <span class=\"pre\">=</span> <span class=\"pre\">'minute'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.ExtractSecond\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ExtractSecond</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#ExtractSecond\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.ExtractSecond\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">lookup_name</span> <span class=\"pre\">=</span> <span class=\"pre\">'second'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<p>These are logically equivalent to <code class=\"docutils literal notranslate\"><span class=\"pre\">Extract('datetime_field',</span> <span class=\"pre\">lookup_name)</span></code>.\nEach class is also a <code class=\"docutils literal notranslate\"><span class=\"pre\">Transform</span></code> registered on <code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code> as\n<code class=\"docutils literal notranslate\"><span class=\"pre\">__(lookup_name)</span></code>, e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">__minute</span></code>.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code> examples:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span><span class=\"p\">,</span> <span class=\"n\">timezone</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">ExtractDay</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">ExtractHour</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">ExtractMinute</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">ExtractMonth</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">ExtractQuarter</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">ExtractSecond</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">ExtractWeek</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">ExtractIsoWeekDay</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">ExtractWeekDay</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">ExtractIsoYear</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">ExtractYear</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">start_2015</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">utc</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">end_2015</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">27</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">utc</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">start_datetime</span><span class=\"o\">=</span><span class=\"n\">start_2015</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"n\">start_2015</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">end_datetime</span><span class=\"o\">=</span><span class=\"n\">end_2015</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">end_date</span><span class=\"o\">=</span><span class=\"n\">end_2015</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(),</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">year</span><span class=\"o\">=</span><span class=\"n\">ExtractYear</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">isoyear</span><span class=\"o\">=</span><span class=\"n\">ExtractIsoYear</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">quarter</span><span class=\"o\">=</span><span class=\"n\">ExtractQuarter</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">month</span><span class=\"o\">=</span><span class=\"n\">ExtractMonth</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">week</span><span class=\"o\">=</span><span class=\"n\">ExtractWeek</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">day</span><span class=\"o\">=</span><span class=\"n\">ExtractDay</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">weekday</span><span class=\"o\">=</span><span class=\"n\">ExtractWeekDay</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">isoweekday</span><span class=\"o\">=</span><span class=\"n\">ExtractIsoWeekDay</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">hour</span><span class=\"o\">=</span><span class=\"n\">ExtractHour</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">minute</span><span class=\"o\">=</span><span class=\"n\">ExtractMinute</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">second</span><span class=\"o\">=</span><span class=\"n\">ExtractSecond</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;year&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;isoyear&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;month&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;week&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;day&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;weekday&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;isoweekday&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;hour&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;minute&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;second&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">end_datetime__year</span><span class=\"o\">=</span><span class=\"n\">ExtractYear</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n<span class=\"go\">{&#39;year&#39;: 2015, &#39;isoyear&#39;: 2015, &#39;quarter&#39;: 2, &#39;month&#39;: 6, &#39;week&#39;: 25,</span>\n<span class=\"go\"> &#39;day&#39;: 15, &#39;weekday&#39;: 2, &#39;isoweekday&#39;: 1, &#39;hour&#39;: 23, &#39;minute&#39;: 30,</span>\n<span class=\"go\"> &#39;second&#39;: 1}</span>\n</pre></div>\n</div>\n<p>When <a class=\"reference internal\" href=\"../../settings/#std-setting-USE_TZ\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">USE_TZ</span></code></a> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> then datetimes are stored in the database\nin UTC. If a different timezone is active in Django, the datetime is converted\nto that timezone before the value is extracted. The example below converts to\nthe Melbourne timezone (UTC +10:00), which changes the day, weekday, and hour\nvalues that are returned:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.utils</span> <span class=\"kn\">import</span> <span class=\"n\">timezone</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">zoneinfo</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">melb</span> <span class=\"o\">=</span> <span class=\"n\">zoneinfo</span><span class=\"o\">.</span><span class=\"n\">ZoneInfo</span><span class=\"p\">(</span><span class=\"s2\">&quot;Australia/Melbourne&quot;</span><span class=\"p\">)</span>  <span class=\"c1\"># UTC+10:00</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">with</span> <span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">override</span><span class=\"p\">(</span><span class=\"n\">melb</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>        <span class=\"n\">day</span><span class=\"o\">=</span><span class=\"n\">ExtractDay</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>        <span class=\"n\">weekday</span><span class=\"o\">=</span><span class=\"n\">ExtractWeekDay</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>        <span class=\"n\">isoweekday</span><span class=\"o\">=</span><span class=\"n\">ExtractIsoWeekDay</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>        <span class=\"n\">hour</span><span class=\"o\">=</span><span class=\"n\">ExtractHour</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">(</span><span class=\"s2\">&quot;day&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;weekday&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;isoweekday&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;hour&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>        <span class=\"n\">end_datetime__year</span><span class=\"o\">=</span><span class=\"n\">ExtractYear</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">{&#39;day&#39;: 16, &#39;weekday&#39;: 3, &#39;isoweekday&#39;: 2, &#39;hour&#39;: 9}</span>\n</pre></div>\n</div>\n<p>Explicitly passing the timezone to the <code class=\"docutils literal notranslate\"><span class=\"pre\">Extract</span></code> function behaves in the same\nway, and takes priority over an active timezone:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">zoneinfo</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">melb</span> <span class=\"o\">=</span> <span class=\"n\">zoneinfo</span><span class=\"o\">.</span><span class=\"n\">ZoneInfo</span><span class=\"p\">(</span><span class=\"s2\">&quot;Australia/Melbourne&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">day</span><span class=\"o\">=</span><span class=\"n\">ExtractDay</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">melb</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">weekday</span><span class=\"o\">=</span><span class=\"n\">ExtractWeekDay</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">melb</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">isoweekday</span><span class=\"o\">=</span><span class=\"n\">ExtractIsoWeekDay</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">melb</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">hour</span><span class=\"o\">=</span><span class=\"n\">ExtractHour</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">melb</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">(</span><span class=\"s2\">&quot;day&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;weekday&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;isoweekday&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;hour&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">end_datetime__year</span><span class=\"o\">=</span><span class=\"n\">ExtractYear</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n<span class=\"go\">{&#39;day&#39;: 16, &#39;weekday&#39;: 3, &#39;isoweekday&#39;: 2, &#39;hour&#39;: 9}</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"s-now\">\n<span id=\"now\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Now</span></code><a class=\"headerlink\" href=\"#now\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Now\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Now</span></code><a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#Now\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Now\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the database server\u2019s current date and time when the query is executed,\ntypically using the SQL <code class=\"docutils literal notranslate\"><span class=\"pre\">CURRENT_TIMESTAMP</span></code>.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Now</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Article</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">published__lte</span><span class=\"o\">=</span><span class=\"n\">Now</span><span class=\"p\">())</span>\n<span class=\"go\">&lt;QuerySet [&lt;Article: How to Django&gt;]&gt;</span>\n</pre></div>\n</div>\n<div class=\"admonition-postgresql-considerations admonition\">\n<p class=\"first admonition-title\">PostgreSQL considerations</p>\n<p class=\"last\">On PostgreSQL, the SQL <code class=\"docutils literal notranslate\"><span class=\"pre\">CURRENT_TIMESTAMP</span></code> returns the time that the\ncurrent transaction started. Therefore for cross-database compatibility,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Now()</span></code> uses <code class=\"docutils literal notranslate\"><span class=\"pre\">STATEMENT_TIMESTAMP</span></code> instead. If you need the transaction\ntimestamp, use <a class=\"reference internal\" href=\"../../contrib/postgres/functions/#django.contrib.postgres.functions.TransactionNow\" title=\"django.contrib.postgres.functions.TransactionNow\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.contrib.postgres.functions.TransactionNow</span></code></a>.</p>\n</div>\n<div class=\"admonition-oracle admonition\">\n<p class=\"first admonition-title\">Oracle</p>\n<p class=\"last\">On Oracle, the SQL <code class=\"docutils literal notranslate\"><span class=\"pre\">LOCALTIMESTAMP</span></code> is used to avoid issues with casting\n<code class=\"docutils literal notranslate\"><span class=\"pre\">CURRENT_TIMESTAMP</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code>.</p>\n</div>\n<div class=\"versionchanged\">\n<span class=\"title\">Changed in Django 4.2:</span> <p>Support for microsecond precision on MySQL and millisecond precision on\nSQLite were added.</p>\n</div>\n<div class=\"versionchanged\">\n<span class=\"title\">Changed in Django Development version:</span> <p>In older versions, the SQL <code class=\"docutils literal notranslate\"><span class=\"pre\">CURRENT_TIMESTAMP</span></code> was used on Oracle instead\nof <code class=\"docutils literal notranslate\"><span class=\"pre\">LOCALTIMESTAMP</span></code>.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-trunc\">\n<span id=\"trunc\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Trunc</span></code><a class=\"headerlink\" href=\"#trunc\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Trunc\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Trunc</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">kind</span></span></em>, <em><span class=\"n\"><span class=\"pre\">output_field</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#Trunc\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Trunc\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Truncates a date up to a significant component.</p>\n<p>When you only care if something happened in a particular year, hour, or day,\nbut not the exact second, then <code class=\"docutils literal notranslate\"><span class=\"pre\">Trunc</span></code> (and its subclasses) can be useful to\nfilter or aggregate your data. For example, you can use <code class=\"docutils literal notranslate\"><span class=\"pre\">Trunc</span></code> to calculate\nthe number of sales per day.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">Trunc</span></code> takes a single <code class=\"docutils literal notranslate\"><span class=\"pre\">expression</span></code>, representing a <code class=\"docutils literal notranslate\"><span class=\"pre\">DateField</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">TimeField</span></code>, or <code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code>, a <code class=\"docutils literal notranslate\"><span class=\"pre\">kind</span></code> representing a date or time\npart, and an <code class=\"docutils literal notranslate\"><span class=\"pre\">output_field</span></code> that\u2019s either <code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeField()</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">TimeField()</span></code>, or <code class=\"docutils literal notranslate\"><span class=\"pre\">DateField()</span></code>. It returns a datetime, date, or time\ndepending on <code class=\"docutils literal notranslate\"><span class=\"pre\">output_field</span></code>, with fields up to <code class=\"docutils literal notranslate\"><span class=\"pre\">kind</span></code> set to their minimum\nvalue. If <code class=\"docutils literal notranslate\"><span class=\"pre\">output_field</span></code> is omitted, it will default to the <code class=\"docutils literal notranslate\"><span class=\"pre\">output_field</span></code>\nof <code class=\"docutils literal notranslate\"><span class=\"pre\">expression</span></code>. A <code class=\"docutils literal notranslate\"><span class=\"pre\">tzinfo</span></code> subclass, usually provided by <a class=\"reference external\" href=\"https://docs.python.org/3/library/zoneinfo.html#module-zoneinfo\" title=\"(in Python v3.11)\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zoneinfo</span></code></a>,\ncan be passed to truncate a value in a specific timezone.</p>\n<p>Given the datetime <code class=\"docutils literal notranslate\"><span class=\"pre\">2015-06-15</span> <span class=\"pre\">14:30:50.000321+00:00</span></code>, the built-in <code class=\"docutils literal notranslate\"><span class=\"pre\">kind</span></code>s\nreturn:</p>\n<ul class=\"simple\">\n<li>\u201cyear\u201d: 2015-01-01 00:00:00+00:00</li>\n<li>\u201cquarter\u201d: 2015-04-01 00:00:00+00:00</li>\n<li>\u201cmonth\u201d: 2015-06-01 00:00:00+00:00</li>\n<li>\u201cweek\u201d: 2015-06-15 00:00:00+00:00</li>\n<li>\u201cday\u201d: 2015-06-15 00:00:00+00:00</li>\n<li>\u201chour\u201d: 2015-06-15 14:00:00+00:00</li>\n<li>\u201cminute\u201d: 2015-06-15 14:30:00+00:00</li>\n<li>\u201csecond\u201d: 2015-06-15 14:30:50+00:00</li>\n</ul>\n<p>If a different timezone like <code class=\"docutils literal notranslate\"><span class=\"pre\">Australia/Melbourne</span></code> is active in Django, then\nthe datetime is converted to the new timezone before the value is truncated.\nThe timezone offset for Melbourne in the example date above is +10:00. The\nvalues returned when this timezone is active will be:</p>\n<ul class=\"simple\">\n<li>\u201cyear\u201d: 2015-01-01 00:00:00+11:00</li>\n<li>\u201cquarter\u201d: 2015-04-01 00:00:00+10:00</li>\n<li>\u201cmonth\u201d: 2015-06-01 00:00:00+10:00</li>\n<li>\u201cweek\u201d: 2015-06-16 00:00:00+10:00</li>\n<li>\u201cday\u201d: 2015-06-16 00:00:00+10:00</li>\n<li>\u201chour\u201d: 2015-06-16 00:00:00+10:00</li>\n<li>\u201cminute\u201d: 2015-06-16 00:30:00+10:00</li>\n<li>\u201csecond\u201d: 2015-06-16 00:30:50+10:00</li>\n</ul>\n<p>The year has an offset of +11:00 because the result transitioned into daylight\nsaving time.</p>\n<p>Each <code class=\"docutils literal notranslate\"><span class=\"pre\">kind</span></code> above has a corresponding <code class=\"docutils literal notranslate\"><span class=\"pre\">Trunc</span></code> subclass (listed below) that\nshould typically be used instead of the more verbose equivalent,\ne.g. use <code class=\"docutils literal notranslate\"><span class=\"pre\">TruncYear(...)</span></code> rather than <code class=\"docutils literal notranslate\"><span class=\"pre\">Trunc(...,</span> <span class=\"pre\">kind='year')</span></code>.</p>\n<p>The subclasses are all defined as transforms, but they aren\u2019t registered with\nany fields, because the lookup names are already reserved by the <code class=\"docutils literal notranslate\"><span class=\"pre\">Extract</span></code>\nsubclasses.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">Count</span><span class=\"p\">,</span> <span class=\"n\">DateTimeField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Trunc</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">start_datetime</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">321</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">start_datetime</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">123</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">start_datetime</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">27</span><span class=\"p\">,</span> <span class=\"mi\">999</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">experiments_per_day</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>        <span class=\"n\">start_day</span><span class=\"o\">=</span><span class=\"n\">Trunc</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;day&quot;</span><span class=\"p\">,</span> <span class=\"n\">output_field</span><span class=\"o\">=</span><span class=\"n\">DateTimeField</span><span class=\"p\">())</span>\n<span class=\"gp\">... </span>    <span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_day&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">experiments</span><span class=\"o\">=</span><span class=\"n\">Count</span><span class=\"p\">(</span><span class=\"s2\">&quot;id&quot;</span><span class=\"p\">))</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">exp</span> <span class=\"ow\">in</span> <span class=\"n\">experiments_per_day</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">exp</span><span class=\"p\">[</span><span class=\"s2\">&quot;start_day&quot;</span><span class=\"p\">],</span> <span class=\"n\">exp</span><span class=\"p\">[</span><span class=\"s2\">&quot;experiments&quot;</span><span class=\"p\">])</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">2015-06-15 00:00:00 2</span>\n<span class=\"go\">2015-12-25 00:00:00 1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">experiments</span> <span class=\"o\">=</span> <span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">start_day</span><span class=\"o\">=</span><span class=\"n\">Trunc</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;day&quot;</span><span class=\"p\">,</span> <span class=\"n\">output_field</span><span class=\"o\">=</span><span class=\"n\">DateTimeField</span><span class=\"p\">())</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">start_day</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">exp</span> <span class=\"ow\">in</span> <span class=\"n\">experiments</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">exp</span><span class=\"o\">.</span><span class=\"n\">start_datetime</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">2015-06-15 14:30:50.000321</span>\n<span class=\"go\">2015-06-15 14:40:02.000123</span>\n</pre></div>\n</div>\n<div class=\"section\" id=\"s-datefield-truncation\">\n<span id=\"datefield-truncation\"></span><h4><code class=\"docutils literal notranslate\"><span class=\"pre\">DateField</span></code> truncation<a class=\"headerlink\" href=\"#datefield-truncation\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.TruncYear\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">TruncYear</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">output_field</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#TruncYear\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.TruncYear\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">kind</span> <span class=\"pre\">=</span> <span class=\"pre\">'year'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.TruncMonth\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">TruncMonth</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">output_field</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#TruncMonth\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.TruncMonth\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">kind</span> <span class=\"pre\">=</span> <span class=\"pre\">'month'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.TruncWeek\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">TruncWeek</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">output_field</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#TruncWeek\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.TruncWeek\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Truncates to midnight on the Monday of the week.</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">kind</span> <span class=\"pre\">=</span> <span class=\"pre\">'week'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.TruncQuarter\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">TruncQuarter</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">output_field</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#TruncQuarter\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.TruncQuarter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">kind</span> <span class=\"pre\">=</span> <span class=\"pre\">'quarter'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<p>These are logically equivalent to <code class=\"docutils literal notranslate\"><span class=\"pre\">Trunc('date_field',</span> <span class=\"pre\">kind)</span></code>. They truncate\nall parts of the date up to <code class=\"docutils literal notranslate\"><span class=\"pre\">kind</span></code> which allows grouping or filtering dates\nwith less precision. <code class=\"docutils literal notranslate\"><span class=\"pre\">expression</span></code> can have an <code class=\"docutils literal notranslate\"><span class=\"pre\">output_field</span></code> of either\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DateField</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code>.</p>\n<p>Since <code class=\"docutils literal notranslate\"><span class=\"pre\">DateField</span></code>s don\u2019t have a time component, only <code class=\"docutils literal notranslate\"><span class=\"pre\">Trunc</span></code> subclasses\nthat deal with date-parts can be used with <code class=\"docutils literal notranslate\"><span class=\"pre\">DateField</span></code>:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span><span class=\"p\">,</span> <span class=\"n\">timezone</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">Count</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">TruncMonth</span><span class=\"p\">,</span> <span class=\"n\">TruncYear</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">start1</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2014</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">321</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">utc</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">start2</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">123</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">utc</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">start3</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">27</span><span class=\"p\">,</span> <span class=\"mi\">999</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">utc</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">start_datetime</span><span class=\"o\">=</span><span class=\"n\">start1</span><span class=\"p\">,</span> <span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"n\">start1</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">start_datetime</span><span class=\"o\">=</span><span class=\"n\">start2</span><span class=\"p\">,</span> <span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"n\">start2</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">start_datetime</span><span class=\"o\">=</span><span class=\"n\">start3</span><span class=\"p\">,</span> <span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"n\">start3</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">experiments_per_year</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">year</span><span class=\"o\">=</span><span class=\"n\">TruncYear</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_date&quot;</span><span class=\"p\">))</span>\n<span class=\"gp\">... </span>    <span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">(</span><span class=\"s2\">&quot;year&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">experiments</span><span class=\"o\">=</span><span class=\"n\">Count</span><span class=\"p\">(</span><span class=\"s2\">&quot;id&quot;</span><span class=\"p\">))</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">exp</span> <span class=\"ow\">in</span> <span class=\"n\">experiments_per_year</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">exp</span><span class=\"p\">[</span><span class=\"s2\">&quot;year&quot;</span><span class=\"p\">],</span> <span class=\"n\">exp</span><span class=\"p\">[</span><span class=\"s2\">&quot;experiments&quot;</span><span class=\"p\">])</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">2014-01-01 1</span>\n<span class=\"go\">2015-01-01 2</span>\n\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">zoneinfo</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">melb</span> <span class=\"o\">=</span> <span class=\"n\">zoneinfo</span><span class=\"o\">.</span><span class=\"n\">ZoneInfo</span><span class=\"p\">(</span><span class=\"s2\">&quot;Australia/Melbourne&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">experiments_per_month</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">month</span><span class=\"o\">=</span><span class=\"n\">TruncMonth</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">melb</span><span class=\"p\">))</span>\n<span class=\"gp\">... </span>    <span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">(</span><span class=\"s2\">&quot;month&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">experiments</span><span class=\"o\">=</span><span class=\"n\">Count</span><span class=\"p\">(</span><span class=\"s2\">&quot;id&quot;</span><span class=\"p\">))</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">exp</span> <span class=\"ow\">in</span> <span class=\"n\">experiments_per_month</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">exp</span><span class=\"p\">[</span><span class=\"s2\">&quot;month&quot;</span><span class=\"p\">],</span> <span class=\"n\">exp</span><span class=\"p\">[</span><span class=\"s2\">&quot;experiments&quot;</span><span class=\"p\">])</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">2015-06-01 00:00:00+10:00 1</span>\n<span class=\"go\">2016-01-01 00:00:00+11:00 1</span>\n<span class=\"go\">2014-06-01 00:00:00+10:00 1</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-datetimefield-truncation\">\n<span id=\"datetimefield-truncation\"></span><h4><code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code> truncation<a class=\"headerlink\" href=\"#datetimefield-truncation\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.TruncDate\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">TruncDate</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#TruncDate\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.TruncDate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">lookup_name</span> <span class=\"pre\">=</span> <span class=\"pre\">'date'</span></code></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">output_field</span> <span class=\"pre\">=</span> <span class=\"pre\">DateField()</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">TruncDate</span></code> casts <code class=\"docutils literal notranslate\"><span class=\"pre\">expression</span></code> to a date rather than using the built-in SQL\ntruncate function. It\u2019s also registered as a transform on  <code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code> as\n<code class=\"docutils literal notranslate\"><span class=\"pre\">__date</span></code>.</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.TruncTime\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">TruncTime</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#TruncTime\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.TruncTime\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">lookup_name</span> <span class=\"pre\">=</span> <span class=\"pre\">'time'</span></code></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">output_field</span> <span class=\"pre\">=</span> <span class=\"pre\">TimeField()</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">TruncTime</span></code> casts <code class=\"docutils literal notranslate\"><span class=\"pre\">expression</span></code> to a time rather than using the built-in SQL\ntruncate function. It\u2019s also registered as a transform on <code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code> as\n<code class=\"docutils literal notranslate\"><span class=\"pre\">__time</span></code>.</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.TruncDay\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">TruncDay</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">output_field</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#TruncDay\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.TruncDay\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">kind</span> <span class=\"pre\">=</span> <span class=\"pre\">'day'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.TruncHour\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">TruncHour</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">output_field</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#TruncHour\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.TruncHour\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">kind</span> <span class=\"pre\">=</span> <span class=\"pre\">'hour'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.TruncMinute\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">TruncMinute</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">output_field</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#TruncMinute\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.TruncMinute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">kind</span> <span class=\"pre\">=</span> <span class=\"pre\">'minute'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.TruncSecond\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">TruncSecond</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">output_field</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#TruncSecond\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.TruncSecond\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">kind</span> <span class=\"pre\">=</span> <span class=\"pre\">'second'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<p>These are logically equivalent to <code class=\"docutils literal notranslate\"><span class=\"pre\">Trunc('datetime_field',</span> <span class=\"pre\">kind)</span></code>. They\ntruncate all parts of the date up to <code class=\"docutils literal notranslate\"><span class=\"pre\">kind</span></code> and allow grouping or filtering\ndatetimes with less precision. <code class=\"docutils literal notranslate\"><span class=\"pre\">expression</span></code> must have an <code class=\"docutils literal notranslate\"><span class=\"pre\">output_field</span></code> of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code>.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">date</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"p\">,</span> <span class=\"n\">timezone</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">Count</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">TruncDate</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">TruncDay</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">TruncHour</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">TruncMinute</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">TruncSecond</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">zoneinfo</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">start1</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2014</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">321</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">utc</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">start_datetime</span><span class=\"o\">=</span><span class=\"n\">start1</span><span class=\"p\">,</span> <span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"n\">start1</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">melb</span> <span class=\"o\">=</span> <span class=\"n\">zoneinfo</span><span class=\"o\">.</span><span class=\"n\">ZoneInfo</span><span class=\"p\">(</span><span class=\"s2\">&quot;Australia/Melbourne&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">date</span><span class=\"o\">=</span><span class=\"n\">TruncDate</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">day</span><span class=\"o\">=</span><span class=\"n\">TruncDay</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">melb</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">hour</span><span class=\"o\">=</span><span class=\"n\">TruncHour</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">melb</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">minute</span><span class=\"o\">=</span><span class=\"n\">TruncMinute</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"n\">second</span><span class=\"o\">=</span><span class=\"n\">TruncSecond</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">(</span><span class=\"s2\">&quot;date&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;day&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;hour&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;minute&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;second&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"go\">{&#39;date&#39;: datetime.date(2014, 6, 15),</span>\n<span class=\"go\"> &#39;day&#39;: datetime.datetime(2014, 6, 16, 0, 0, tzinfo=zoneinfo.ZoneInfo(&#39;Australia/Melbourne&#39;)),</span>\n<span class=\"go\"> &#39;hour&#39;: datetime.datetime(2014, 6, 16, 0, 0, tzinfo=zoneinfo.ZoneInfo(&#39;Australia/Melbourne&#39;)),</span>\n<span class=\"go\"> &#39;minute&#39;: &#39;minute&#39;: datetime.datetime(2014, 6, 15, 14, 30, tzinfo=timezone.utc),</span>\n<span class=\"go\"> &#39;second&#39;: datetime.datetime(2014, 6, 15, 14, 30, 50, tzinfo=timezone.utc)</span>\n<span class=\"go\">}</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-timefield-truncation\">\n<span id=\"timefield-truncation\"></span><h4><code class=\"docutils literal notranslate\"><span class=\"pre\">TimeField</span></code> truncation<a class=\"headerlink\" href=\"#timefield-truncation\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">TruncHour</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">output_field</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#TruncHour\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">kind</span> <span class=\"pre\">=</span> <span class=\"pre\">'hour'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">TruncMinute</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">output_field</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#TruncMinute\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">kind</span> <span class=\"pre\">=</span> <span class=\"pre\">'minute'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">TruncSecond</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">output_field</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">tzinfo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/datetime/#TruncSecond\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\">\n<code class=\"sig-name descname\"><span class=\"pre\">kind</span> <span class=\"pre\">=</span> <span class=\"pre\">'second'</span></code></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<p>These are logically equivalent to <code class=\"docutils literal notranslate\"><span class=\"pre\">Trunc('time_field',</span> <span class=\"pre\">kind)</span></code>. They truncate\nall parts of the time up to <code class=\"docutils literal notranslate\"><span class=\"pre\">kind</span></code> which allows grouping or filtering times\nwith less precision. <code class=\"docutils literal notranslate\"><span class=\"pre\">expression</span></code> can have an <code class=\"docutils literal notranslate\"><span class=\"pre\">output_field</span></code> of either\n<code class=\"docutils literal notranslate\"><span class=\"pre\">TimeField</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code>.</p>\n<p>Since <code class=\"docutils literal notranslate\"><span class=\"pre\">TimeField</span></code>s don\u2019t have a date component, only <code class=\"docutils literal notranslate\"><span class=\"pre\">Trunc</span></code> subclasses\nthat deal with time-parts can be used with <code class=\"docutils literal notranslate\"><span class=\"pre\">TimeField</span></code>:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span><span class=\"p\">,</span> <span class=\"n\">timezone</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">Count</span><span class=\"p\">,</span> <span class=\"n\">TimeField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">TruncHour</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">start1</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2014</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"mi\">321</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">utc</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">start2</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2014</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">123</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">utc</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">start3</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">27</span><span class=\"p\">,</span> <span class=\"mi\">999</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">utc</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">start_datetime</span><span class=\"o\">=</span><span class=\"n\">start1</span><span class=\"p\">,</span> <span class=\"n\">start_time</span><span class=\"o\">=</span><span class=\"n\">start1</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">start_datetime</span><span class=\"o\">=</span><span class=\"n\">start2</span><span class=\"p\">,</span> <span class=\"n\">start_time</span><span class=\"o\">=</span><span class=\"n\">start2</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">start_datetime</span><span class=\"o\">=</span><span class=\"n\">start3</span><span class=\"p\">,</span> <span class=\"n\">start_time</span><span class=\"o\">=</span><span class=\"n\">start3</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">experiments_per_hour</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>        <span class=\"n\">hour</span><span class=\"o\">=</span><span class=\"n\">TruncHour</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">,</span> <span class=\"n\">output_field</span><span class=\"o\">=</span><span class=\"n\">TimeField</span><span class=\"p\">()),</span>\n<span class=\"gp\">... </span>    <span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">(</span><span class=\"s2\">&quot;hour&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">experiments</span><span class=\"o\">=</span><span class=\"n\">Count</span><span class=\"p\">(</span><span class=\"s2\">&quot;id&quot;</span><span class=\"p\">))</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">exp</span> <span class=\"ow\">in</span> <span class=\"n\">experiments_per_hour</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">exp</span><span class=\"p\">[</span><span class=\"s2\">&quot;hour&quot;</span><span class=\"p\">],</span> <span class=\"n\">exp</span><span class=\"p\">[</span><span class=\"s2\">&quot;experiments&quot;</span><span class=\"p\">])</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">14:00:00 2</span>\n<span class=\"go\">17:00:00 1</span>\n\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">zoneinfo</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">melb</span> <span class=\"o\">=</span> <span class=\"n\">zoneinfo</span><span class=\"o\">.</span><span class=\"n\">ZoneInfo</span><span class=\"p\">(</span><span class=\"s2\">&quot;Australia/Melbourne&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">experiments_per_hour</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">Experiment</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>        <span class=\"n\">hour</span><span class=\"o\">=</span><span class=\"n\">TruncHour</span><span class=\"p\">(</span><span class=\"s2\">&quot;start_datetime&quot;</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">melb</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>    <span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">(</span><span class=\"s2\">&quot;hour&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">experiments</span><span class=\"o\">=</span><span class=\"n\">Count</span><span class=\"p\">(</span><span class=\"s2\">&quot;id&quot;</span><span class=\"p\">))</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">exp</span> <span class=\"ow\">in</span> <span class=\"n\">experiments_per_hour</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">exp</span><span class=\"p\">[</span><span class=\"s2\">&quot;hour&quot;</span><span class=\"p\">],</span> <span class=\"n\">exp</span><span class=\"p\">[</span><span class=\"s2\">&quot;experiments&quot;</span><span class=\"p\">])</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">2014-06-16 00:00:00+10:00 2</span>\n<span class=\"go\">2016-01-01 04:00:00+11:00 1</span>\n</pre></div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"s-math-functions\">\n<span id=\"s-id2\"></span><span id=\"math-functions\"></span><span id=\"id2\"></span><h2>Math Functions<a class=\"headerlink\" href=\"#math-functions\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>We\u2019ll be using the following model in math function examples:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Vector</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">FloatField</span><span class=\"p\">()</span>\n    <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">FloatField</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"section\" id=\"s-abs\">\n<span id=\"abs\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Abs</span></code><a class=\"headerlink\" href=\"#abs\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Abs\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Abs</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#Abs\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Abs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the absolute value of a numeric field or expression.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Abs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=-</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mf\">1.1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">x_abs</span><span class=\"o\">=</span><span class=\"n\">Abs</span><span class=\"p\">(</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">),</span> <span class=\"n\">y_abs</span><span class=\"o\">=</span><span class=\"n\">Abs</span><span class=\"p\">(</span><span class=\"s2\">&quot;y&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">x_abs</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">y_abs</span>\n<span class=\"go\">(0.5, 1.1)</span>\n</pre></div>\n</div>\n<p>It can also be registered as a transform. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">FloatField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Abs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FloatField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">Abs</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get vectors inside the unit cube</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vectors</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">x__abs__lt</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">y__abs__lt</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-acos\">\n<span id=\"acos\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">ACos</span></code><a class=\"headerlink\" href=\"#acos\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.ACos\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ACos</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#ACos\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.ACos\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the arccosine of a numeric field or expression. The expression value\nmust be within the range -1 to 1.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">ACos</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=-</span><span class=\"mf\">0.9</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">x_acos</span><span class=\"o\">=</span><span class=\"n\">ACos</span><span class=\"p\">(</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">),</span> <span class=\"n\">y_acos</span><span class=\"o\">=</span><span class=\"n\">ACos</span><span class=\"p\">(</span><span class=\"s2\">&quot;y&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">x_acos</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">y_acos</span>\n<span class=\"go\">(1.0471975511965979, 2.6905658417935308)</span>\n</pre></div>\n</div>\n<p>It can also be registered as a transform. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">FloatField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">ACos</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FloatField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">ACos</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get vectors whose arccosine is less than 1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vectors</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">x__acos__lt</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">y__acos__lt</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-asin\">\n<span id=\"asin\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">ASin</span></code><a class=\"headerlink\" href=\"#asin\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.ASin\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ASin</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#ASin\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.ASin\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the arcsine of a numeric field or expression. The expression value must\nbe in the range -1 to 1.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">ASin</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">x_asin</span><span class=\"o\">=</span><span class=\"n\">ASin</span><span class=\"p\">(</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">),</span> <span class=\"n\">y_asin</span><span class=\"o\">=</span><span class=\"n\">ASin</span><span class=\"p\">(</span><span class=\"s2\">&quot;y&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">x_asin</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">y_asin</span>\n<span class=\"go\">(0.0, 1.5707963267948966)</span>\n</pre></div>\n</div>\n<p>It can also be registered as a transform. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">FloatField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">ASin</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FloatField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">ASin</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get vectors whose arcsine is less than 1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vectors</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">x__asin__lt</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">y__asin__lt</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-atan\">\n<span id=\"atan\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">ATan</span></code><a class=\"headerlink\" href=\"#atan\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.ATan\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ATan</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#ATan\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.ATan\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the arctangent of a numeric field or expression.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">ATan</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">3.12</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mf\">6.987</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">x_atan</span><span class=\"o\">=</span><span class=\"n\">ATan</span><span class=\"p\">(</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">),</span> <span class=\"n\">y_atan</span><span class=\"o\">=</span><span class=\"n\">ATan</span><span class=\"p\">(</span><span class=\"s2\">&quot;y&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">x_atan</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">y_atan</span>\n<span class=\"go\">(1.2606282660069106, 1.428638798133829)</span>\n</pre></div>\n</div>\n<p>It can also be registered as a transform. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">FloatField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">ATan</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FloatField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">ATan</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get vectors whose arctangent is less than 2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vectors</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">x__atan__lt</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">y__atan__lt</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-atan2\">\n<span id=\"atan2\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">ATan2</span></code><a class=\"headerlink\" href=\"#atan2\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.ATan2\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ATan2</span></code>(<em><span class=\"n\"><span class=\"pre\">expression1</span></span></em>, <em><span class=\"n\"><span class=\"pre\">expression2</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#ATan2\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.ATan2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the arctangent of <code class=\"docutils literal notranslate\"><span class=\"pre\">expression1</span> <span class=\"pre\">/</span> <span class=\"pre\">expression2</span></code>.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">ATan2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">2.5</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mf\">1.9</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">atan2</span><span class=\"o\">=</span><span class=\"n\">ATan2</span><span class=\"p\">(</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;y&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">atan2</span>\n<span class=\"go\">0.9209258773829491</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-ceil\">\n<span id=\"ceil\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Ceil</span></code><a class=\"headerlink\" href=\"#ceil\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Ceil\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Ceil</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#Ceil\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Ceil\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the smallest integer greater than or equal to a numeric field or\nexpression.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Ceil</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">3.12</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mf\">7.0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">x_ceil</span><span class=\"o\">=</span><span class=\"n\">Ceil</span><span class=\"p\">(</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">),</span> <span class=\"n\">y_ceil</span><span class=\"o\">=</span><span class=\"n\">Ceil</span><span class=\"p\">(</span><span class=\"s2\">&quot;y&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">x_ceil</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">y_ceil</span>\n<span class=\"go\">(4.0, 7.0)</span>\n</pre></div>\n</div>\n<p>It can also be registered as a transform. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">FloatField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Ceil</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FloatField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">Ceil</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get vectors whose ceil is less than 10</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vectors</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">x__ceil__lt</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">y__ceil__lt</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-cos\">\n<span id=\"cos\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Cos</span></code><a class=\"headerlink\" href=\"#cos\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Cos\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Cos</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#Cos\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Cos\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the cosine  of a numeric field or expression.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Cos</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=-</span><span class=\"mf\">8.0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mf\">3.1415926</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">x_cos</span><span class=\"o\">=</span><span class=\"n\">Cos</span><span class=\"p\">(</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">),</span> <span class=\"n\">y_cos</span><span class=\"o\">=</span><span class=\"n\">Cos</span><span class=\"p\">(</span><span class=\"s2\">&quot;y&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">x_cos</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">y_cos</span>\n<span class=\"go\">(-0.14550003380861354, -0.9999999999999986)</span>\n</pre></div>\n</div>\n<p>It can also be registered as a transform. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">FloatField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Cos</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FloatField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">Cos</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get vectors whose cosine is less than 0.5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vectors</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">x__cos__lt</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"n\">y__cos__lt</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-cot\">\n<span id=\"cot\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Cot</span></code><a class=\"headerlink\" href=\"#cot\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Cot\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Cot</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#Cot\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Cot\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the cotangent of a numeric field or expression.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Cot</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">12.0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">x_cot</span><span class=\"o\">=</span><span class=\"n\">Cot</span><span class=\"p\">(</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">),</span> <span class=\"n\">y_cot</span><span class=\"o\">=</span><span class=\"n\">Cot</span><span class=\"p\">(</span><span class=\"s2\">&quot;y&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">x_cot</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">y_cot</span>\n<span class=\"go\">(-1.5726734063976826, 0.642092615934331)</span>\n</pre></div>\n</div>\n<p>It can also be registered as a transform. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">FloatField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Cot</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FloatField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">Cot</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get vectors whose cotangent is less than 1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vectors</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">x__cot__lt</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">y__cot__lt</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-degrees\">\n<span id=\"degrees\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Degrees</span></code><a class=\"headerlink\" href=\"#degrees\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Degrees\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Degrees</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#Degrees\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Degrees\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Converts a numeric field or expression from radians to degrees.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Degrees</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=-</span><span class=\"mf\">1.57</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mf\">3.14</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">x_d</span><span class=\"o\">=</span><span class=\"n\">Degrees</span><span class=\"p\">(</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">),</span> <span class=\"n\">y_d</span><span class=\"o\">=</span><span class=\"n\">Degrees</span><span class=\"p\">(</span><span class=\"s2\">&quot;y&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">x_d</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">y_d</span>\n<span class=\"go\">(-89.95437383553924, 179.9087476710785)</span>\n</pre></div>\n</div>\n<p>It can also be registered as a transform. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">FloatField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Degrees</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FloatField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">Degrees</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get vectors whose degrees are less than 360</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vectors</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">x__degrees__lt</span><span class=\"o\">=</span><span class=\"mi\">360</span><span class=\"p\">,</span> <span class=\"n\">y__degrees__lt</span><span class=\"o\">=</span><span class=\"mi\">360</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-exp\">\n<span id=\"exp\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Exp</span></code><a class=\"headerlink\" href=\"#exp\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Exp\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Exp</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#Exp\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Exp\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the value of <code class=\"docutils literal notranslate\"><span class=\"pre\">e</span></code> (the natural logarithm base) raised to the power of\na numeric field or expression.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Exp</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">5.4</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=-</span><span class=\"mf\">2.0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">x_exp</span><span class=\"o\">=</span><span class=\"n\">Exp</span><span class=\"p\">(</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">),</span> <span class=\"n\">y_exp</span><span class=\"o\">=</span><span class=\"n\">Exp</span><span class=\"p\">(</span><span class=\"s2\">&quot;y&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">x_exp</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">y_exp</span>\n<span class=\"go\">(221.40641620418717, 0.1353352832366127)</span>\n</pre></div>\n</div>\n<p>It can also be registered as a transform. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">FloatField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Exp</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FloatField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">Exp</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get vectors whose exp() is greater than 10</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vectors</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">x__exp__gt</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">y__exp__gt</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-floor\">\n<span id=\"floor\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Floor</span></code><a class=\"headerlink\" href=\"#floor\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Floor\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Floor</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#Floor\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Floor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the largest integer value not greater than a numeric field or\nexpression.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Floor</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">5.4</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=-</span><span class=\"mf\">2.3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">x_floor</span><span class=\"o\">=</span><span class=\"n\">Floor</span><span class=\"p\">(</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">),</span> <span class=\"n\">y_floor</span><span class=\"o\">=</span><span class=\"n\">Floor</span><span class=\"p\">(</span><span class=\"s2\">&quot;y&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">x_floor</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">y_floor</span>\n<span class=\"go\">(5.0, -3.0)</span>\n</pre></div>\n</div>\n<p>It can also be registered as a transform. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">FloatField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Floor</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FloatField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">Floor</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get vectors whose floor() is greater than 10</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vectors</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">x__floor__gt</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">y__floor__gt</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-ln\">\n<span id=\"ln\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Ln</span></code><a class=\"headerlink\" href=\"#ln\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Ln\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Ln</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#Ln\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Ln\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the natural logarithm a numeric field or expression.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Ln</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">5.4</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mf\">233.0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">x_ln</span><span class=\"o\">=</span><span class=\"n\">Ln</span><span class=\"p\">(</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">),</span> <span class=\"n\">y_ln</span><span class=\"o\">=</span><span class=\"n\">Ln</span><span class=\"p\">(</span><span class=\"s2\">&quot;y&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">x_ln</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">y_ln</span>\n<span class=\"go\">(1.6863989535702288, 5.4510384535657)</span>\n</pre></div>\n</div>\n<p>It can also be registered as a transform. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">FloatField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Ln</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FloatField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">Ln</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get vectors whose value greater than e</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vectors</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">x__ln__gt</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">y__ln__gt</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-log\">\n<span id=\"log\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Log</span></code><a class=\"headerlink\" href=\"#log\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Log\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Log</span></code>(<em><span class=\"n\"><span class=\"pre\">expression1</span></span></em>, <em><span class=\"n\"><span class=\"pre\">expression2</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#Log\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Log\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Accepts two numeric fields or expressions and returns the logarithm of\nthe second to base of the first.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Log</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mf\">4.0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">log</span><span class=\"o\">=</span><span class=\"n\">Log</span><span class=\"p\">(</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;y&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">log</span>\n<span class=\"go\">2.0</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-mod\">\n<span id=\"mod\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Mod</span></code><a class=\"headerlink\" href=\"#mod\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Mod\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Mod</span></code>(<em><span class=\"n\"><span class=\"pre\">expression1</span></span></em>, <em><span class=\"n\"><span class=\"pre\">expression2</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#Mod\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Mod\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Accepts two numeric fields or expressions and returns the remainder of\nthe first divided by the second (modulo operation).</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Mod</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">5.4</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mf\">2.3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">mod</span><span class=\"o\">=</span><span class=\"n\">Mod</span><span class=\"p\">(</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;y&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">mod</span>\n<span class=\"go\">0.8</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-pi\">\n<span id=\"pi\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Pi</span></code><a class=\"headerlink\" href=\"#pi\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Pi\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Pi</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#Pi\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Pi\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the value of the mathematical constant <code class=\"docutils literal notranslate\"><span class=\"pre\">\u03c0</span></code>.</p>\n</div>\n<div class=\"section\" id=\"s-power\">\n<span id=\"power\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Power</span></code><a class=\"headerlink\" href=\"#power\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Power\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Power</span></code>(<em><span class=\"n\"><span class=\"pre\">expression1</span></span></em>, <em><span class=\"n\"><span class=\"pre\">expression2</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#Power\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Power\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Accepts two numeric fields or expressions and returns the value of the first\nraised to the power of the second.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Power</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=-</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">power</span><span class=\"o\">=</span><span class=\"n\">Power</span><span class=\"p\">(</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;y&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">power</span>\n<span class=\"go\">0.25</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-radians\">\n<span id=\"radians\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Radians</span></code><a class=\"headerlink\" href=\"#radians\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Radians\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Radians</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#Radians\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Radians\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Converts a numeric field or expression from degrees to radians.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Radians</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=-</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">180</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">x_r</span><span class=\"o\">=</span><span class=\"n\">Radians</span><span class=\"p\">(</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">),</span> <span class=\"n\">y_r</span><span class=\"o\">=</span><span class=\"n\">Radians</span><span class=\"p\">(</span><span class=\"s2\">&quot;y&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">x_r</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">y_r</span>\n<span class=\"go\">(-1.5707963267948966, 3.141592653589793)</span>\n</pre></div>\n</div>\n<p>It can also be registered as a transform. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">FloatField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Radians</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FloatField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">Radians</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get vectors whose radians are less than 1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vectors</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">x__radians__lt</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">y__radians__lt</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-random\">\n<span id=\"random\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Random</span></code><a class=\"headerlink\" href=\"#random\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Random\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Random</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#Random\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Random\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns a random value in the range <code class=\"docutils literal notranslate\"><span class=\"pre\">0.0</span> <span class=\"pre\">\u2264</span> <span class=\"pre\">x</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">1.0</span></code>.</p>\n</div>\n<div class=\"section\" id=\"s-round\">\n<span id=\"round\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Round</span></code><a class=\"headerlink\" href=\"#round\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Round\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Round</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">precision</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#Round\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Round\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Rounds a numeric field or expression to <code class=\"docutils literal notranslate\"><span class=\"pre\">precision</span></code> (must be an integer)\ndecimal places. By default, it rounds to the nearest integer. Whether half\nvalues are rounded up or down depends on the database.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Round</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">5.4</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=-</span><span class=\"mf\">2.37</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">x_r</span><span class=\"o\">=</span><span class=\"n\">Round</span><span class=\"p\">(</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">),</span> <span class=\"n\">y_r</span><span class=\"o\">=</span><span class=\"n\">Round</span><span class=\"p\">(</span><span class=\"s2\">&quot;y&quot;</span><span class=\"p\">,</span> <span class=\"n\">precision</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">x_r</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">y_r</span>\n<span class=\"go\">(5.0, -2.4)</span>\n</pre></div>\n</div>\n<p>It can also be registered as a transform. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">FloatField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Round</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FloatField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">Round</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get vectors whose round() is less than 20</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vectors</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">x__round__lt</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">y__round__lt</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-sign\">\n<span id=\"sign\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Sign</span></code><a class=\"headerlink\" href=\"#sign\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Sign\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Sign</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#Sign\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Sign\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the sign (-1, 0, 1) of a numeric field or expression.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Sign</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">5.4</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=-</span><span class=\"mf\">2.3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">x_sign</span><span class=\"o\">=</span><span class=\"n\">Sign</span><span class=\"p\">(</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">),</span> <span class=\"n\">y_sign</span><span class=\"o\">=</span><span class=\"n\">Sign</span><span class=\"p\">(</span><span class=\"s2\">&quot;y&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">x_sign</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">y_sign</span>\n<span class=\"go\">(1, -1)</span>\n</pre></div>\n</div>\n<p>It can also be registered as a transform. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">FloatField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Sign</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FloatField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">Sign</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get vectors whose signs of components are less than 0.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vectors</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">x__sign__lt</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y__sign__lt</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-sin\">\n<span id=\"sin\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Sin</span></code><a class=\"headerlink\" href=\"#sin\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Sin\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Sin</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#Sin\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Sin\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the sine of a numeric field or expression.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Sin</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">5.4</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=-</span><span class=\"mf\">2.3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">x_sin</span><span class=\"o\">=</span><span class=\"n\">Sin</span><span class=\"p\">(</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">),</span> <span class=\"n\">y_sin</span><span class=\"o\">=</span><span class=\"n\">Sin</span><span class=\"p\">(</span><span class=\"s2\">&quot;y&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">x_sin</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">y_sin</span>\n<span class=\"go\">(-0.7727644875559871, -0.7457052121767203)</span>\n</pre></div>\n</div>\n<p>It can also be registered as a transform. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">FloatField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Sin</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FloatField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">Sin</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get vectors whose sin() is less than 0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vectors</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">x__sin__lt</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y__sin__lt</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-sqrt\">\n<span id=\"sqrt\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Sqrt</span></code><a class=\"headerlink\" href=\"#sqrt\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Sqrt\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Sqrt</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#Sqrt\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Sqrt\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the square root of a nonnegative numeric field or expression.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Sqrt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mf\">4.0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mf\">12.0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">x_sqrt</span><span class=\"o\">=</span><span class=\"n\">Sqrt</span><span class=\"p\">(</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">),</span> <span class=\"n\">y_sqrt</span><span class=\"o\">=</span><span class=\"n\">Sqrt</span><span class=\"p\">(</span><span class=\"s2\">&quot;y&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">x_sqrt</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">y_sqrt</span>\n<span class=\"go\">(2.0, 3.46410)</span>\n</pre></div>\n</div>\n<p>It can also be registered as a transform. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">FloatField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Sqrt</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FloatField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">Sqrt</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get vectors whose sqrt() is less than 5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vectors</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">x__sqrt__lt</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">y__sqrt__lt</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-tan\">\n<span id=\"tan\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Tan</span></code><a class=\"headerlink\" href=\"#tan\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Tan\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Tan</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/math/#Tan\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Tan\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the tangent of a numeric field or expression.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Tan</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">x_tan</span><span class=\"o\">=</span><span class=\"n\">Tan</span><span class=\"p\">(</span><span class=\"s2\">&quot;x&quot;</span><span class=\"p\">),</span> <span class=\"n\">y_tan</span><span class=\"o\">=</span><span class=\"n\">Tan</span><span class=\"p\">(</span><span class=\"s2\">&quot;y&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">x_tan</span><span class=\"p\">,</span> <span class=\"n\">vector</span><span class=\"o\">.</span><span class=\"n\">y_tan</span>\n<span class=\"go\">(0.0, -0.6358599286615808)</span>\n</pre></div>\n</div>\n<p>It can also be registered as a transform. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">FloatField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Tan</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">FloatField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">Tan</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get vectors whose tangent is less than 0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vectors</span> <span class=\"o\">=</span> <span class=\"n\">Vector</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">x__tan__lt</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y__tan__lt</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"s-text-functions\">\n<span id=\"s-id3\"></span><span id=\"text-functions\"></span><span id=\"id3\"></span><h2>Text functions<a class=\"headerlink\" href=\"#text-functions\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-chr\">\n<span id=\"chr\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Chr</span></code><a class=\"headerlink\" href=\"#chr\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Chr\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Chr</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#Chr\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Chr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Accepts a numeric field or expression and returns the text representation of\nthe expression as a single character. It works the same as Python\u2019s <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#chr\" title=\"(in Python v3.11)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">chr()</span></code></a>\nfunction.</p>\n<p>Like <a class=\"reference internal\" href=\"#django.db.models.functions.Length\" title=\"django.db.models.functions.Length\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Length</span></code></a>, it can be registered as a transform on <code class=\"docutils literal notranslate\"><span class=\"pre\">IntegerField</span></code>.\nThe default lookup name is <code class=\"docutils literal notranslate\"><span class=\"pre\">chr</span></code>.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Chr</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Margaret Smith&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">name__startswith</span><span class=\"o\">=</span><span class=\"n\">Chr</span><span class=\"p\">(</span><span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"s2\">&quot;M&quot;</span><span class=\"p\">)))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">author</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"go\">Margaret Smith</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-concat\">\n<span id=\"concat\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Concat</span></code><a class=\"headerlink\" href=\"#concat\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Concat\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Concat</span></code>(<em><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">expressions</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#Concat\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Concat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Accepts a list of at least two text fields or expressions and returns the\nconcatenated text. Each argument must be of a text or char type. If you want\nto concatenate a <code class=\"docutils literal notranslate\"><span class=\"pre\">TextField()</span></code> with a <code class=\"docutils literal notranslate\"><span class=\"pre\">CharField()</span></code>, then be sure to tell\nDjango that the <code class=\"docutils literal notranslate\"><span class=\"pre\">output_field</span></code> should be a <code class=\"docutils literal notranslate\"><span class=\"pre\">TextField()</span></code>. Specifying an\n<code class=\"docutils literal notranslate\"><span class=\"pre\">output_field</span></code> is also required when concatenating a <code class=\"docutils literal notranslate\"><span class=\"pre\">Value</span></code> as in the\nexample below.</p>\n<p>This function will never have a null result. On backends where a null argument\nresults in the entire expression being null, Django will ensure that each null\npart is converted to an empty string first.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get the display name as &quot;name (goes_by)&quot;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">CharField</span><span class=\"p\">,</span> <span class=\"n\">Value</span> <span class=\"k\">as</span> <span class=\"n\">V</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Concat</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Margaret Smith&quot;</span><span class=\"p\">,</span> <span class=\"n\">goes_by</span><span class=\"o\">=</span><span class=\"s2\">&quot;Maggie&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">screen_name</span><span class=\"o\">=</span><span class=\"n\">Concat</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"n\">V</span><span class=\"p\">(</span><span class=\"s2\">&quot; (&quot;</span><span class=\"p\">),</span> <span class=\"s2\">&quot;goes_by&quot;</span><span class=\"p\">,</span> <span class=\"n\">V</span><span class=\"p\">(</span><span class=\"s2\">&quot;)&quot;</span><span class=\"p\">),</span> <span class=\"n\">output_field</span><span class=\"o\">=</span><span class=\"n\">CharField</span><span class=\"p\">())</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">author</span><span class=\"o\">.</span><span class=\"n\">screen_name</span><span class=\"p\">)</span>\n<span class=\"go\">Margaret Smith (Maggie)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-left\">\n<span id=\"left\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Left</span></code><a class=\"headerlink\" href=\"#left\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Left\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Left</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">length</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#Left\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Left\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the first <code class=\"docutils literal notranslate\"><span class=\"pre\">length</span></code> characters of the given text field or expression.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Left</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Margaret Smith&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">first_initial</span><span class=\"o\">=</span><span class=\"n\">Left</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">author</span><span class=\"o\">.</span><span class=\"n\">first_initial</span><span class=\"p\">)</span>\n<span class=\"go\">M</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-length\">\n<span id=\"length\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Length</span></code><a class=\"headerlink\" href=\"#length\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Length\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Length</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#Length\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Length\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Accepts a single text field or expression and returns the number of characters\nthe value has. If the expression is null, then the length will also be null.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get the length of the name and goes_by fields</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Length</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Margaret Smith&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">name_length</span><span class=\"o\">=</span><span class=\"n\">Length</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">),</span> <span class=\"n\">goes_by_length</span><span class=\"o\">=</span><span class=\"n\">Length</span><span class=\"p\">(</span><span class=\"s2\">&quot;goes_by&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">author</span><span class=\"o\">.</span><span class=\"n\">name_length</span><span class=\"p\">,</span> <span class=\"n\">author</span><span class=\"o\">.</span><span class=\"n\">goes_by_length</span><span class=\"p\">)</span>\n<span class=\"go\">(14, None)</span>\n</pre></div>\n</div>\n<p>It can also be registered as a transform. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">CharField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Length</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">CharField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">Length</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get authors whose name is longer than 7 characters</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">authors</span> <span class=\"o\">=</span> <span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">name__length__gt</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-lower\">\n<span id=\"lower\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Lower</span></code><a class=\"headerlink\" href=\"#lower\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Lower\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Lower</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#Lower\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Lower\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Accepts a single text field or expression and returns the lowercase\nrepresentation.</p>\n<p>It can also be registered as a transform as described in <a class=\"reference internal\" href=\"#django.db.models.functions.Length\" title=\"django.db.models.functions.Length\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Length</span></code></a>.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Lower</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Margaret Smith&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">name_lower</span><span class=\"o\">=</span><span class=\"n\">Lower</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">author</span><span class=\"o\">.</span><span class=\"n\">name_lower</span><span class=\"p\">)</span>\n<span class=\"go\">margaret smith</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-lpad\">\n<span id=\"lpad\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">LPad</span></code><a class=\"headerlink\" href=\"#lpad\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.LPad\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">LPad</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">length</span></span></em>, <em><span class=\"n\"><span class=\"pre\">fill_text</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">Value('</span> <span class=\"pre\">')</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#LPad\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.LPad\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the value of the given text field or expression padded on the left side\nwith <code class=\"docutils literal notranslate\"><span class=\"pre\">fill_text</span></code> so that the resulting value is <code class=\"docutils literal notranslate\"><span class=\"pre\">length</span></code> characters long.\nThe default <code class=\"docutils literal notranslate\"><span class=\"pre\">fill_text</span></code> is a space.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">Value</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">LPad</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;John&quot;</span><span class=\"p\">,</span> <span class=\"n\">alias</span><span class=\"o\">=</span><span class=\"s2\">&quot;j&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">LPad</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"n\">Value</span><span class=\"p\">(</span><span class=\"s2\">&quot;abc&quot;</span><span class=\"p\">)))</span>\n<span class=\"go\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">alias</span><span class=\"o\">=</span><span class=\"s2\">&quot;j&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"go\">abcaJohn</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-ltrim\">\n<span id=\"ltrim\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">LTrim</span></code><a class=\"headerlink\" href=\"#ltrim\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.LTrim\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">LTrim</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#LTrim\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.LTrim\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Similar to <a class=\"reference internal\" href=\"#django.db.models.functions.Trim\" title=\"django.db.models.functions.Trim\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Trim</span></code></a>, but removes only leading\nspaces.</p>\n</div>\n<div class=\"section\" id=\"s-md5\">\n<span id=\"md5\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">MD5</span></code><a class=\"headerlink\" href=\"#md5\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.MD5\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">MD5</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#MD5\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.MD5\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Accepts a single text field or expression and returns the MD5 hash of the\nstring.</p>\n<p>It can also be registered as a transform as described in <a class=\"reference internal\" href=\"#django.db.models.functions.Length\" title=\"django.db.models.functions.Length\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Length</span></code></a>.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">MD5</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Margaret Smith&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">name_md5</span><span class=\"o\">=</span><span class=\"n\">MD5</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">author</span><span class=\"o\">.</span><span class=\"n\">name_md5</span><span class=\"p\">)</span>\n<span class=\"go\">749fb689816b2db85f5b169c2055b247</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-ord\">\n<span id=\"ord\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Ord</span></code><a class=\"headerlink\" href=\"#ord\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Ord\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Ord</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#Ord\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Ord\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Accepts a single text field or expression and returns the Unicode code point\nvalue for the first character of that expression. It works similar to Python\u2019s\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#ord\" title=\"(in Python v3.11)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">ord()</span></code></a> function, but an exception isn\u2019t raised if the expression is more\nthan one character long.</p>\n<p>It can also be registered as a transform as described in <a class=\"reference internal\" href=\"#django.db.models.functions.Length\" title=\"django.db.models.functions.Length\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Length</span></code></a>.\nThe default lookup name is <code class=\"docutils literal notranslate\"><span class=\"pre\">ord</span></code>.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Ord</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Margaret Smith&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">name_code_point</span><span class=\"o\">=</span><span class=\"n\">Ord</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">author</span><span class=\"o\">.</span><span class=\"n\">name_code_point</span><span class=\"p\">)</span>\n<span class=\"go\">77</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-repeat\">\n<span id=\"repeat\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Repeat</span></code><a class=\"headerlink\" href=\"#repeat\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Repeat\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Repeat</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">number</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#Repeat\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Repeat\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the value of the given text field or expression repeated <code class=\"docutils literal notranslate\"><span class=\"pre\">number</span></code>\ntimes.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Repeat</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;John&quot;</span><span class=\"p\">,</span> <span class=\"n\">alias</span><span class=\"o\">=</span><span class=\"s2\">&quot;j&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">Repeat</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"go\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">alias</span><span class=\"o\">=</span><span class=\"s2\">&quot;j&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"go\">JohnJohnJohn</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-replace\">\n<span id=\"replace\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Replace</span></code><a class=\"headerlink\" href=\"#replace\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Replace\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Replace</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">text</span></span></em>, <em><span class=\"n\"><span class=\"pre\">replacement</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">Value('')</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#Replace\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Replace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Replaces all occurrences of <code class=\"docutils literal notranslate\"><span class=\"pre\">text</span></code> with <code class=\"docutils literal notranslate\"><span class=\"pre\">replacement</span></code> in <code class=\"docutils literal notranslate\"><span class=\"pre\">expression</span></code>.\nThe default replacement text is the empty string. The arguments to the function\nare case-sensitive.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">Value</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Replace</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Margaret Johnson&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Margaret Smith&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">Replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"n\">Value</span><span class=\"p\">(</span><span class=\"s2\">&quot;Margaret&quot;</span><span class=\"p\">),</span> <span class=\"n\">Value</span><span class=\"p\">(</span><span class=\"s2\">&quot;Margareth&quot;</span><span class=\"p\">)))</span>\n<span class=\"go\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;QuerySet [{&#39;name&#39;: &#39;Margareth Johnson&#39;}, {&#39;name&#39;: &#39;Margareth Smith&#39;}]&gt;</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-reverse\">\n<span id=\"reverse\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Reverse</span></code><a class=\"headerlink\" href=\"#reverse\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Reverse\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Reverse</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#Reverse\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Reverse\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Accepts a single text field or expression and returns the characters of that\nexpression in reverse order.</p>\n<p>It can also be registered as a transform as described in <a class=\"reference internal\" href=\"#django.db.models.functions.Length\" title=\"django.db.models.functions.Length\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Length</span></code></a>. The\ndefault lookup name is <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse</span></code>.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Reverse</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Margaret Smith&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">backward</span><span class=\"o\">=</span><span class=\"n\">Reverse</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">author</span><span class=\"o\">.</span><span class=\"n\">backward</span><span class=\"p\">)</span>\n<span class=\"go\">htimS teragraM</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-right\">\n<span id=\"right\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Right</span></code><a class=\"headerlink\" href=\"#right\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Right\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Right</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">length</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#Right\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Right\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the last <code class=\"docutils literal notranslate\"><span class=\"pre\">length</span></code> characters of the given text field or expression.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Right</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Margaret Smith&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">last_letter</span><span class=\"o\">=</span><span class=\"n\">Right</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">author</span><span class=\"o\">.</span><span class=\"n\">last_letter</span><span class=\"p\">)</span>\n<span class=\"go\">h</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-rpad\">\n<span id=\"rpad\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">RPad</span></code><a class=\"headerlink\" href=\"#rpad\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.RPad\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">RPad</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">length</span></span></em>, <em><span class=\"n\"><span class=\"pre\">fill_text</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">Value('</span> <span class=\"pre\">')</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#RPad\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.RPad\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Similar to <a class=\"reference internal\" href=\"#django.db.models.functions.LPad\" title=\"django.db.models.functions.LPad\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LPad</span></code></a>, but pads on the right\nside.</p>\n</div>\n<div class=\"section\" id=\"s-rtrim\">\n<span id=\"rtrim\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">RTrim</span></code><a class=\"headerlink\" href=\"#rtrim\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.RTrim\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">RTrim</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#RTrim\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.RTrim\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Similar to <a class=\"reference internal\" href=\"#django.db.models.functions.Trim\" title=\"django.db.models.functions.Trim\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Trim</span></code></a>, but removes only trailing\nspaces.</p>\n</div>\n<div class=\"section\" id=\"s-sha1-sha224-sha256-sha384-and-sha512\">\n<span id=\"sha1-sha224-sha256-sha384-and-sha512\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">SHA1</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">SHA224</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">SHA256</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">SHA384</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">SHA512</span></code><a class=\"headerlink\" href=\"#sha1-sha224-sha256-sha384-and-sha512\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.SHA1\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">SHA1</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#SHA1\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.SHA1\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.SHA224\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">SHA224</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#SHA224\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.SHA224\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.SHA256\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">SHA256</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#SHA256\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.SHA256\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.SHA384\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">SHA384</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#SHA384\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.SHA384\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.SHA512\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">SHA512</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#SHA512\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.SHA512\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Accepts a single text field or expression and returns the particular hash of\nthe string.</p>\n<p>They can also be registered as transforms as described in <a class=\"reference internal\" href=\"#django.db.models.functions.Length\" title=\"django.db.models.functions.Length\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Length</span></code></a>.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">SHA1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Margaret Smith&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">name_sha1</span><span class=\"o\">=</span><span class=\"n\">SHA1</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">author</span><span class=\"o\">.</span><span class=\"n\">name_sha1</span><span class=\"p\">)</span>\n<span class=\"go\">b87efd8a6c991c390be5a68e8a7945a7851c7e5c</span>\n</pre></div>\n</div>\n<div class=\"admonition-postgresql admonition\">\n<p class=\"first admonition-title\">PostgreSQL</p>\n<p class=\"last\">The <a class=\"reference external\" href=\"https://www.postgresql.org/docs/current/pgcrypto.html\">pgcrypto extension</a> must be installed. You can use the\n<a class=\"reference internal\" href=\"../../contrib/postgres/operations/#django.contrib.postgres.operations.CryptoExtension\" title=\"django.contrib.postgres.operations.CryptoExtension\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CryptoExtension</span></code></a> migration\noperation to install it.</p>\n</div>\n<div class=\"admonition-oracle admonition\">\n<p class=\"first admonition-title\">Oracle</p>\n<p class=\"last\">Oracle doesn\u2019t support the <code class=\"docutils literal notranslate\"><span class=\"pre\">SHA224</span></code> function.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-strindex\">\n<span id=\"strindex\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">StrIndex</span></code><a class=\"headerlink\" href=\"#strindex\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.StrIndex\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">StrIndex</span></code>(<em><span class=\"n\"><span class=\"pre\">string</span></span></em>, <em><span class=\"n\"><span class=\"pre\">substring</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#StrIndex\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.StrIndex\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns a positive integer corresponding to the 1-indexed position of the first\noccurrence of <code class=\"docutils literal notranslate\"><span class=\"pre\">substring</span></code> inside <code class=\"docutils literal notranslate\"><span class=\"pre\">string</span></code>, or 0 if <code class=\"docutils literal notranslate\"><span class=\"pre\">substring</span></code> is not\nfound.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">Value</span> <span class=\"k\">as</span> <span class=\"n\">V</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">StrIndex</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Margaret Smith&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Smith, Margaret&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Margaret Jackson&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Margaret Jackson&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">smith_index</span><span class=\"o\">=</span><span class=\"n\">StrIndex</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"n\">V</span><span class=\"p\">(</span><span class=\"s2\">&quot;Smith&quot;</span><span class=\"p\">))</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">smith_index</span>\n<span class=\"go\">0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">authors</span> <span class=\"o\">=</span> <span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">smith_index</span><span class=\"o\">=</span><span class=\"n\">StrIndex</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"n\">V</span><span class=\"p\">(</span><span class=\"s2\">&quot;Smith&quot;</span><span class=\"p\">)))</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">smith_index__gt</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n<span class=\"go\">&lt;QuerySet [&lt;Author: Margaret Smith&gt;, &lt;Author: Smith, Margaret&gt;]&gt;</span>\n</pre></div>\n</div>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p class=\"last\">In MySQL, a database table\u2019s <a class=\"reference internal\" href=\"../../databases/#mysql-collation\"><span class=\"std std-ref\">collation</span></a> determines\nwhether string comparisons (such as the <code class=\"docutils literal notranslate\"><span class=\"pre\">expression</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">substring</span></code> of\nthis function) are case-sensitive. Comparisons are case-insensitive by\ndefault.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-substr\">\n<span id=\"substr\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Substr</span></code><a class=\"headerlink\" href=\"#substr\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Substr\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Substr</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">pos</span></span></em>, <em><span class=\"n\"><span class=\"pre\">length</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#Substr\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Substr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns a substring of length <code class=\"docutils literal notranslate\"><span class=\"pre\">length</span></code> from the field or expression starting\nat position <code class=\"docutils literal notranslate\"><span class=\"pre\">pos</span></code>. The position is 1-indexed, so the position must be greater\nthan 0. If <code class=\"docutils literal notranslate\"><span class=\"pre\">length</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, then the rest of the string will be returned.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Set the alias to the first 5 characters of the name as lowercase</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Lower</span><span class=\"p\">,</span> <span class=\"n\">Substr</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Margaret Smith&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">alias</span><span class=\"o\">=</span><span class=\"n\">Lower</span><span class=\"p\">(</span><span class=\"n\">Substr</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)))</span>\n<span class=\"go\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Margaret Smith&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">)</span>\n<span class=\"go\">marga</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-trim\">\n<span id=\"trim\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Trim</span></code><a class=\"headerlink\" href=\"#trim\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Trim\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Trim</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#Trim\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Trim\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the value of the given text field or expression with leading and\ntrailing spaces removed.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Trim</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;  John  &quot;</span><span class=\"p\">,</span> <span class=\"n\">alias</span><span class=\"o\">=</span><span class=\"s2\">&quot;j&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">Trim</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">))</span>\n<span class=\"go\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">alias</span><span class=\"o\">=</span><span class=\"s2\">&quot;j&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"go\">John</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-upper\">\n<span id=\"upper\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Upper</span></code><a class=\"headerlink\" href=\"#upper\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Upper\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Upper</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/text/#Upper\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Upper\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Accepts a single text field or expression and returns the uppercase\nrepresentation.</p>\n<p>It can also be registered as a transform as described in <a class=\"reference internal\" href=\"#django.db.models.functions.Length\" title=\"django.db.models.functions.Length\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Length</span></code></a>.</p>\n<p>Usage example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Upper</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Margaret Smith&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">name_upper</span><span class=\"o\">=</span><span class=\"n\">Upper</span><span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">author</span><span class=\"o\">.</span><span class=\"n\">name_upper</span><span class=\"p\">)</span>\n<span class=\"go\">MARGARET SMITH</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"s-window-functions\">\n<span id=\"s-id4\"></span><span id=\"window-functions\"></span><span id=\"id4\"></span><h2>Window functions<a class=\"headerlink\" href=\"#window-functions\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>There are a number of functions to use in a\n<a class=\"reference internal\" href=\"../expressions/#django.db.models.expressions.Window\" title=\"django.db.models.expressions.Window\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Window</span></code></a> expression for computing the rank\nof elements or the <a class=\"reference internal\" href=\"#django.db.models.functions.Ntile\" title=\"django.db.models.functions.Ntile\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Ntile</span></code></a> of some rows.</p>\n<div class=\"section\" id=\"s-cumedist\">\n<span id=\"cumedist\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">CumeDist</span></code><a class=\"headerlink\" href=\"#cumedist\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.CumeDist\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">CumeDist</span></code>(<em><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">expressions</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/window/#CumeDist\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.CumeDist\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Calculates the cumulative distribution of a value within a window or partition.\nThe cumulative distribution is defined as the number of rows preceding or\npeered with the current row divided by the total number of rows in the frame.</p>\n</div>\n<div class=\"section\" id=\"s-denserank\">\n<span id=\"denserank\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">DenseRank</span></code><a class=\"headerlink\" href=\"#denserank\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.DenseRank\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">DenseRank</span></code>(<em><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">expressions</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/window/#DenseRank\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.DenseRank\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Equivalent to <a class=\"reference internal\" href=\"#django.db.models.functions.Rank\" title=\"django.db.models.functions.Rank\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Rank</span></code></a> but does not have gaps.</p>\n</div>\n<div class=\"section\" id=\"s-firstvalue\">\n<span id=\"firstvalue\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">FirstValue</span></code><a class=\"headerlink\" href=\"#firstvalue\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.FirstValue\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">FirstValue</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/window/#FirstValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.FirstValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Returns the value evaluated at the row that\u2019s the first row of the window\nframe, or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> if no such value exists.</p>\n</div>\n<div class=\"section\" id=\"s-lag\">\n<span id=\"lag\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Lag</span></code><a class=\"headerlink\" href=\"#lag\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Lag\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Lag</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em><span class=\"n\"><span class=\"pre\">default</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/window/#Lag\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Lag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Calculates the value offset by <code class=\"docutils literal notranslate\"><span class=\"pre\">offset</span></code>, and if no row exists there, returns\n<code class=\"docutils literal notranslate\"><span class=\"pre\">default</span></code>.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">default</span></code> must have the same type as the <code class=\"docutils literal notranslate\"><span class=\"pre\">expression</span></code>, however, this is\nonly validated by the database and not in Python.</p>\n<div class=\"admonition-mariadb-and-default admonition\">\n<p class=\"first admonition-title\">MariaDB and <code class=\"docutils literal notranslate\"><span class=\"pre\">default</span></code></p>\n<p class=\"last\">MariaDB <a class=\"reference external\" href=\"https://jira.mariadb.org/browse/MDEV-12981\">doesn\u2019t support</a>\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">default</span></code> parameter.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-lastvalue\">\n<span id=\"lastvalue\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">LastValue</span></code><a class=\"headerlink\" href=\"#lastvalue\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.LastValue\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">LastValue</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/window/#LastValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.LastValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Comparable to <a class=\"reference internal\" href=\"#django.db.models.functions.FirstValue\" title=\"django.db.models.functions.FirstValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FirstValue</span></code></a>, it calculates the last value in a given\nframe clause.</p>\n</div>\n<div class=\"section\" id=\"s-lead\">\n<span id=\"lead\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Lead</span></code><a class=\"headerlink\" href=\"#lead\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Lead\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Lead</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">offset</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em><span class=\"n\"><span class=\"pre\">default</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/window/#Lead\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Lead\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Calculates the leading value in a given <a class=\"reference internal\" href=\"../expressions/#window-frames\"><span class=\"std std-ref\">frame</span></a>. Both\n<code class=\"docutils literal notranslate\"><span class=\"pre\">offset</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">default</span></code> are evaluated with respect to the current row.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">default</span></code> must have the same type as the <code class=\"docutils literal notranslate\"><span class=\"pre\">expression</span></code>, however, this is\nonly validated by the database and not in Python.</p>\n<div class=\"admonition-mariadb-and-default admonition\">\n<p class=\"first admonition-title\">MariaDB and <code class=\"docutils literal notranslate\"><span class=\"pre\">default</span></code></p>\n<p class=\"last\">MariaDB <a class=\"reference external\" href=\"https://jira.mariadb.org/browse/MDEV-12981\">doesn\u2019t support</a>\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">default</span></code> parameter.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-nthvalue\">\n<span id=\"nthvalue\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">NthValue</span></code><a class=\"headerlink\" href=\"#nthvalue\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.NthValue\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">NthValue</span></code>(<em><span class=\"n\"><span class=\"pre\">expression</span></span></em>, <em><span class=\"n\"><span class=\"pre\">nth</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/window/#NthValue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.NthValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Computes the row relative to the offset <code class=\"docutils literal notranslate\"><span class=\"pre\">nth</span></code> (must be a positive value)\nwithin the window. Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> if no row exists.</p>\n<p>Some databases may handle a nonexistent nth-value differently. For example,\nOracle returns an empty string rather than <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> for character-based\nexpressions. Django doesn\u2019t do any conversions in these cases.</p>\n</div>\n<div class=\"section\" id=\"s-ntile\">\n<span id=\"ntile\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Ntile</span></code><a class=\"headerlink\" href=\"#ntile\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Ntile\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Ntile</span></code>(<em><span class=\"n\"><span class=\"pre\">num_buckets</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/window/#Ntile\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Ntile\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Calculates a partition for each of the rows in the frame clause, distributing\nnumbers as evenly as possible between 1 and <code class=\"docutils literal notranslate\"><span class=\"pre\">num_buckets</span></code>. If the rows don\u2019t\ndivide evenly into a number of buckets, one or more buckets will be represented\nmore frequently.</p>\n</div>\n<div class=\"section\" id=\"s-percentrank\">\n<span id=\"percentrank\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">PercentRank</span></code><a class=\"headerlink\" href=\"#percentrank\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.PercentRank\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">PercentRank</span></code>(<em><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">expressions</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/window/#PercentRank\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.PercentRank\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Computes the relative rank of the rows in the frame clause. This computation is\nequivalent to evaluating:</p>\n<div class=\"highlight-text notranslate\"><div class=\"highlight\"><pre><span></span>(rank - 1) / (total rows - 1)\n</pre></div>\n</div>\n<p>The following table explains the calculation for the relative rank of a row:</p>\n<table class=\"docutils\">\n<colgroup>\n<col width=\"13%\" />\n<col width=\"13%\" />\n<col width=\"10%\" />\n<col width=\"31%\" />\n<col width=\"33%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">Row #</th>\n<th class=\"head\">Value</th>\n<th class=\"head\">Rank</th>\n<th class=\"head\">Calculation</th>\n<th class=\"head\">Relative Rank</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td>1</td>\n<td>15</td>\n<td>1</td>\n<td>(1-1)/(7-1)</td>\n<td>0.0000</td>\n</tr>\n<tr class=\"row-odd\"><td>2</td>\n<td>20</td>\n<td>2</td>\n<td>(2-1)/(7-1)</td>\n<td>0.1666</td>\n</tr>\n<tr class=\"row-even\"><td>3</td>\n<td>20</td>\n<td>2</td>\n<td>(2-1)/(7-1)</td>\n<td>0.1666</td>\n</tr>\n<tr class=\"row-odd\"><td>4</td>\n<td>20</td>\n<td>2</td>\n<td>(2-1)/(7-1)</td>\n<td>0.1666</td>\n</tr>\n<tr class=\"row-even\"><td>5</td>\n<td>30</td>\n<td>5</td>\n<td>(5-1)/(7-1)</td>\n<td>0.6666</td>\n</tr>\n<tr class=\"row-odd\"><td>6</td>\n<td>30</td>\n<td>5</td>\n<td>(5-1)/(7-1)</td>\n<td>0.6666</td>\n</tr>\n<tr class=\"row-even\"><td>7</td>\n<td>40</td>\n<td>7</td>\n<td>(7-1)/(7-1)</td>\n<td>1.0000</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"s-rank\">\n<span id=\"rank\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Rank</span></code><a class=\"headerlink\" href=\"#rank\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.Rank\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Rank</span></code>(<em><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">expressions</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/window/#Rank\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.Rank\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Comparable to <code class=\"docutils literal notranslate\"><span class=\"pre\">RowNumber</span></code>, this function ranks rows in the window. The\ncomputed rank contains gaps. Use <a class=\"reference internal\" href=\"#django.db.models.functions.DenseRank\" title=\"django.db.models.functions.DenseRank\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DenseRank</span></code></a> to compute rank without\ngaps.</p>\n</div>\n<div class=\"section\" id=\"s-rownumber\">\n<span id=\"rownumber\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">RowNumber</span></code><a class=\"headerlink\" href=\"#rownumber\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.db.models.functions.RowNumber\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">RowNumber</span></code>(<em><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">expressions</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/db/models/functions/window/#RowNumber\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.db.models.functions.RowNumber\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Computes the row number according to the ordering of either the frame clause\nor the ordering of the whole query if there is no partitioning of the\n<a class=\"reference internal\" href=\"../expressions/#window-frames\"><span class=\"std std-ref\">window frame</span></a>.</p>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["ref/paginator", "Paginator", "N", "next"], ["ref/models/conditional-expressions", "Conditional Expressions", "P", "previous"]], "sourcename": "ref/models/database-functions.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Database Functions</a><ul>\n<li><a class=\"reference internal\" href=\"#comparison-and-conversion-functions\">Comparison and conversion functions</a><ul>\n<li><a class=\"reference internal\" href=\"#cast\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Cast</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#coalesce\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Coalesce</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#collate\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Collate</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#greatest\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Greatest</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#jsonobject\"><code class=\"docutils literal notranslate\"><span class=\"pre\">JSONObject</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#least\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Least</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#nullif\"><code class=\"docutils literal notranslate\"><span class=\"pre\">NullIf</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#date-functions\">Date functions</a><ul>\n<li><a class=\"reference internal\" href=\"#extract\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Extract</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#datefield-extracts\"><code class=\"docutils literal notranslate\"><span class=\"pre\">DateField</span></code> extracts</a></li>\n<li><a class=\"reference internal\" href=\"#datetimefield-extracts\"><code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code> extracts</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#now\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Now</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#trunc\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Trunc</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#datefield-truncation\"><code class=\"docutils literal notranslate\"><span class=\"pre\">DateField</span></code> truncation</a></li>\n<li><a class=\"reference internal\" href=\"#datetimefield-truncation\"><code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code> truncation</a></li>\n<li><a class=\"reference internal\" href=\"#timefield-truncation\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TimeField</span></code> truncation</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#math-functions\">Math Functions</a><ul>\n<li><a class=\"reference internal\" href=\"#abs\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Abs</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#acos\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ACos</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#asin\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ASin</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#atan\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ATan</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#atan2\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ATan2</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#ceil\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Ceil</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#cos\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Cos</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#cot\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Cot</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#degrees\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Degrees</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#exp\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Exp</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#floor\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Floor</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#ln\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Ln</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#log\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Log</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#mod\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Mod</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#pi\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Pi</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#power\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Power</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#radians\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Radians</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#random\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Random</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#round\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Round</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#sign\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Sign</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#sin\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Sin</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#sqrt\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Sqrt</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#tan\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Tan</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#text-functions\">Text functions</a><ul>\n<li><a class=\"reference internal\" href=\"#chr\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Chr</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#concat\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Concat</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#left\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Left</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#length\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Length</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#lower\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Lower</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#lpad\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LPad</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#ltrim\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LTrim</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#md5\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MD5</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#ord\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Ord</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#repeat\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Repeat</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#replace\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Replace</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#reverse\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Reverse</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#right\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Right</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#rpad\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RPad</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#rtrim\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RTrim</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#sha1-sha224-sha256-sha384-and-sha512\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SHA1</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">SHA224</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">SHA256</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">SHA384</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">SHA512</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#strindex\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StrIndex</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#substr\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Substr</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#trim\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Trim</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#upper\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Upper</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#window-functions\">Window functions</a><ul>\n<li><a class=\"reference internal\" href=\"#cumedist\"><code class=\"docutils literal notranslate\"><span class=\"pre\">CumeDist</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#denserank\"><code class=\"docutils literal notranslate\"><span class=\"pre\">DenseRank</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#firstvalue\"><code class=\"docutils literal notranslate\"><span class=\"pre\">FirstValue</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#lag\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Lag</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#lastvalue\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LastValue</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#lead\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Lead</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#nthvalue\"><code class=\"docutils literal notranslate\"><span class=\"pre\">NthValue</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#ntile\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Ntile</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#percentrank\"><code class=\"docutils literal notranslate\"><span class=\"pre\">PercentRank</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#rank\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Rank</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#rownumber\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RowNumber</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "ref/models/database-functions", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
