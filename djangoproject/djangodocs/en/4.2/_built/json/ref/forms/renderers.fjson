{"parents": [{"link": "../../", "title": "API Reference"}, {"link": "../", "title": "Forms"}], "prev": {"link": "../formsets/", "title": "Formset Functions"}, "next": {"link": "../widgets/", "title": "Widgets"}, "title": "The form rendering API", "meta": {}, "body": "<div class=\"section\" id=\"s-module-django.forms.renderers\">\n<span id=\"s-the-form-rendering-api\"></span><span id=\"module-django.forms.renderers\"></span><span id=\"the-form-rendering-api\"></span><h1>The form rendering API<a class=\"headerlink\" href=\"#module-django.forms.renderers\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Django\u2019s form widgets are rendered using Django\u2019s <a class=\"reference internal\" href=\"../../../topics/templates/\"><span class=\"doc\">template engines\nsystem</span></a>.</p>\n<p>The form rendering process can be customized at several levels:</p>\n<ul class=\"simple\">\n<li>Widgets can specify custom template names.</li>\n<li>Forms and widgets can specify custom renderer classes.</li>\n<li>A widget\u2019s template can be overridden by a project. (Reusable applications\ntypically shouldn\u2019t override built-in templates because they might conflict\nwith a project\u2019s custom templates.)</li>\n</ul>\n<div class=\"section\" id=\"s-the-low-level-render-api\">\n<span id=\"s-low-level-widget-render-api\"></span><span id=\"the-low-level-render-api\"></span><span id=\"low-level-widget-render-api\"></span><h2>The low-level render API<a class=\"headerlink\" href=\"#the-low-level-render-api\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The rendering of form templates is controlled by a customizable renderer class.\nA custom renderer can be specified by updating the <a class=\"reference internal\" href=\"../../settings/#std-setting-FORM_RENDERER\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">FORM_RENDERER</span></code></a>\nsetting. It defaults to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'</span></code><a class=\"reference internal\" href=\"#django.forms.renderers.DjangoTemplates\" title=\"django.forms.renderers.DjangoTemplates\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.forms.renderers.DjangoTemplates</span></code></a><code class=\"docutils literal notranslate\"><span class=\"pre\">'</span></code>.</p>\n<p>By specifying a custom form renderer and overriding\n<a class=\"reference internal\" href=\"#django.forms.renderers.BaseRenderer.form_template_name\" title=\"django.forms.renderers.BaseRenderer.form_template_name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">form_template_name</span></code></a> you can adjust the default form\nmarkup across your project from a single place.</p>\n<p>You can also provide a custom renderer per-form or per-widget by setting the\n<a class=\"reference internal\" href=\"../api/#django.forms.Form.default_renderer\" title=\"django.forms.Form.default_renderer\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Form.default_renderer</span></code></a> attribute or by using the <code class=\"docutils literal notranslate\"><span class=\"pre\">renderer</span></code> argument\nof <a class=\"reference internal\" href=\"../api/#django.forms.Form.render\" title=\"django.forms.Form.render\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">Form.render()</span></code></a>, or <a class=\"reference internal\" href=\"../widgets/#django.forms.Widget.render\" title=\"django.forms.Widget.render\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">Widget.render()</span></code></a>.</p>\n<p>Matching points apply to formset rendering. See <a class=\"reference internal\" href=\"../../../topics/forms/formsets/#formset-rendering\"><span class=\"std std-ref\">Using a formset in views and templates</span></a> for\ndiscussion.</p>\n<p>Use one of the <a class=\"reference internal\" href=\"#built-in-template-form-renderers\"><span class=\"std std-ref\">built-in template form renderers</span></a> or implement your own. Custom renderers\nmust implement a <code class=\"docutils literal notranslate\"><span class=\"pre\">render(template_name,</span> <span class=\"pre\">context,</span> <span class=\"pre\">request=None)</span></code> method. It\nshould return a rendered templates (as a string) or raise\n<a class=\"reference internal\" href=\"../../../topics/templates/#django.template.TemplateDoesNotExist\" title=\"django.template.TemplateDoesNotExist\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">TemplateDoesNotExist</span></code></a>.</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.renderers.BaseRenderer\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">BaseRenderer</span></code><a class=\"reference internal\" href=\"../../../_modules/django/forms/renderers/#BaseRenderer\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.renderers.BaseRenderer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The base class for the built-in form renderers.</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.renderers.BaseRenderer.form_template_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">form_template_name</span></code><a class=\"headerlink\" href=\"#django.forms.renderers.BaseRenderer.form_template_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The default name of the template to use to render a form.</p>\n<p>Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;django/forms/div.html&quot;</span></code> template.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.renderers.BaseRenderer.formset_template_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">formset_template_name</span></code><a class=\"headerlink\" href=\"#django.forms.renderers.BaseRenderer.formset_template_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The default name of the template to use to render a formset.</p>\n<p>Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;django/forms/formsets/div.html&quot;</span></code> template.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.renderers.BaseRenderer.field_template_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">field_template_name</span></code><a class=\"headerlink\" href=\"#django.forms.renderers.BaseRenderer.field_template_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"versionadded\">\n<span class=\"title\">New in Django Development version.</span> </div>\n<p>The default name of the template used to render a <code class=\"docutils literal notranslate\"><span class=\"pre\">BoundField</span></code>.</p>\n<p>Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;django/forms/field.html&quot;</span></code></p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.forms.renderers.BaseRenderer.get_template\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_template</span></code>(<em><span class=\"n\"><span class=\"pre\">template_name</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/renderers/#BaseRenderer.get_template\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.renderers.BaseRenderer.get_template\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Subclasses must implement this method with the appropriate template\nfinding logic.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.forms.renderers.BaseRenderer.render\">\n<code class=\"sig-name descname\"><span class=\"pre\">render</span></code>(<em><span class=\"n\"><span class=\"pre\">template_name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">context</span></span></em>, <em><span class=\"n\"><span class=\"pre\">request</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/renderers/#BaseRenderer.render\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.renderers.BaseRenderer.render\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Renders the given template, or raises\n<a class=\"reference internal\" href=\"../../../topics/templates/#django.template.TemplateDoesNotExist\" title=\"django.template.TemplateDoesNotExist\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">TemplateDoesNotExist</span></code></a>.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-built-in-template-form-renderers\">\n<span id=\"s-id1\"></span><span id=\"built-in-template-form-renderers\"></span><span id=\"id1\"></span><h2>Built-in-template form renderers<a class=\"headerlink\" href=\"#built-in-template-form-renderers\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-djangotemplates\">\n<span id=\"djangotemplates\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">DjangoTemplates</span></code><a class=\"headerlink\" href=\"#djangotemplates\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.renderers.DjangoTemplates\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">DjangoTemplates</span></code><a class=\"reference internal\" href=\"../../../_modules/django/forms/renderers/#DjangoTemplates\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.renderers.DjangoTemplates\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>This renderer uses a standalone\n<a class=\"reference internal\" href=\"../../../topics/templates/#django.template.backends.django.DjangoTemplates\" title=\"django.template.backends.django.DjangoTemplates\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DjangoTemplates</span></code></a>\nengine (unconnected to what you might have configured in the\n<a class=\"reference internal\" href=\"../../settings/#std-setting-TEMPLATES\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">TEMPLATES</span></code></a> setting). It loads templates first from the built-in form\ntemplates directory in <a class=\"reference external\" href=\"https://github.com/django/django/blob/main/django/forms/templates\">django/forms/templates</a> and then from the\ninstalled apps\u2019 templates directories using the <a class=\"reference internal\" href=\"../../templates/api/#django.template.loaders.app_directories.Loader\" title=\"django.template.loaders.app_directories.Loader\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">app_directories</span></code></a> loader.</p>\n<p>If you want to render templates with customizations from your\n<a class=\"reference internal\" href=\"../../settings/#std-setting-TEMPLATES\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">TEMPLATES</span></code></a> setting, such as context processors for example, use the\n<a class=\"reference internal\" href=\"#django.forms.renderers.TemplatesSetting\" title=\"django.forms.renderers.TemplatesSetting\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TemplatesSetting</span></code></a> renderer.</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.renderers.DjangoDivFormRenderer\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">DjangoDivFormRenderer</span></code><a class=\"reference internal\" href=\"../../../_modules/django/forms/renderers/#DjangoDivFormRenderer\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.renderers.DjangoDivFormRenderer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<div class=\"deprecated\">\n<p><span class=\"versionmodified deprecated\">Deprecated since version 5.0.</span></p>\n</div>\n<p>The alias of <a class=\"reference internal\" href=\"#django.forms.renderers.DjangoTemplates\" title=\"django.forms.renderers.DjangoTemplates\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DjangoTemplates</span></code></a>.</p>\n</div>\n<div class=\"section\" id=\"s-jinja2\">\n<span id=\"jinja2\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Jinja2</span></code><a class=\"headerlink\" href=\"#jinja2\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.renderers.Jinja2\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Jinja2</span></code><a class=\"reference internal\" href=\"../../../_modules/django/forms/renderers/#Jinja2\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.renderers.Jinja2\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>This renderer is the same as the <a class=\"reference internal\" href=\"#django.forms.renderers.DjangoTemplates\" title=\"django.forms.renderers.DjangoTemplates\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DjangoTemplates</span></code></a> renderer except that\nit uses a <a class=\"reference internal\" href=\"../../../topics/templates/#django.template.backends.jinja2.Jinja2\" title=\"django.template.backends.jinja2.Jinja2\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Jinja2</span></code></a> backend. Templates\nfor the built-in widgets are located in <a class=\"reference external\" href=\"https://github.com/django/django/blob/main/django/forms/jinja2\">django/forms/jinja2</a> and\ninstalled apps can provide templates in a <code class=\"docutils literal notranslate\"><span class=\"pre\">jinja2</span></code> directory.</p>\n<p>To use this backend, all the forms and widgets in your project and its\nthird-party apps must have Jinja2 templates. Unless you provide your own Jinja2\ntemplates for widgets that don\u2019t have any, you can\u2019t use this renderer. For\nexample, <a class=\"reference internal\" href=\"../../contrib/admin/#module-django.contrib.admin\" title=\"django.contrib.admin: Django's admin site.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.admin</span></code></a> doesn\u2019t include Jinja2 templates for its\nwidgets due to their usage of Django template tags.</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.renderers.Jinja2DivFormRenderer\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Jinja2DivFormRenderer</span></code><a class=\"reference internal\" href=\"../../../_modules/django/forms/renderers/#Jinja2DivFormRenderer\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.renderers.Jinja2DivFormRenderer\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<div class=\"deprecated\">\n<p><span class=\"versionmodified deprecated\">Deprecated since version 5.0.</span></p>\n</div>\n<p>The alias of <a class=\"reference internal\" href=\"#django.forms.renderers.Jinja2\" title=\"django.forms.renderers.Jinja2\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Jinja2</span></code></a>.</p>\n</div>\n<div class=\"section\" id=\"s-templatessetting\">\n<span id=\"templatessetting\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">TemplatesSetting</span></code><a class=\"headerlink\" href=\"#templatessetting\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.renderers.TemplatesSetting\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">TemplatesSetting</span></code><a class=\"reference internal\" href=\"../../../_modules/django/forms/renderers/#TemplatesSetting\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.renderers.TemplatesSetting\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>This renderer gives you complete control of how form and widget templates are\nsourced. It uses <a class=\"reference internal\" href=\"../../../topics/templates/#django.template.loader.get_template\" title=\"django.template.loader.get_template\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">get_template()</span></code></a> to find templates\nbased on what\u2019s configured in the <a class=\"reference internal\" href=\"../../settings/#std-setting-TEMPLATES\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">TEMPLATES</span></code></a> setting.</p>\n<p>Using this renderer along with the built-in templates requires either:</p>\n<ul>\n<li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">'django.forms'</span></code> in <a class=\"reference internal\" href=\"../../settings/#std-setting-INSTALLED_APPS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">INSTALLED_APPS</span></code></a> and at least one engine\nwith <a class=\"reference internal\" href=\"../../settings/#std-setting-TEMPLATES-APP_DIRS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">APP_DIRS=True</span></code></a>.</p>\n</li>\n<li><p class=\"first\">Adding the built-in templates directory in <a class=\"reference internal\" href=\"../../settings/#std-setting-TEMPLATES-DIRS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DIRS</span></code></a>\nof one of your template engines. To generate that path:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">django</span>\n\n<span class=\"n\">django</span><span class=\"o\">.</span><span class=\"n\">__path__</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/forms/templates&quot;</span>  <span class=\"c1\"># or &#39;/forms/jinja2&#39;</span>\n</pre></div>\n</div>\n</li>\n</ul>\n<p>Using this renderer requires you to make sure the form templates your project\nneeds can be located.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-context-available-in-formset-templates\">\n<span id=\"context-available-in-formset-templates\"></span><h2>Context available in formset templates<a class=\"headerlink\" href=\"#context-available-in-formset-templates\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Formset templates receive a context from <a class=\"reference internal\" href=\"../../../topics/forms/formsets/#django.forms.formsets.BaseFormSet.get_context\" title=\"django.forms.formsets.BaseFormSet.get_context\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">BaseFormSet.get_context()</span></code></a>. By\ndefault, formsets receive a dictionary with the following values:</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">formset</span></code>: The formset instance.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-context-available-in-form-templates\">\n<span id=\"context-available-in-form-templates\"></span><h2>Context available in form templates<a class=\"headerlink\" href=\"#context-available-in-form-templates\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Form templates receive a context from <a class=\"reference internal\" href=\"../api/#django.forms.Form.get_context\" title=\"django.forms.Form.get_context\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">Form.get_context()</span></code></a>. By default,\nforms receive a dictionary with the following values:</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">form</span></code>: The bound form.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">fields</span></code>: All bound fields, except the hidden fields.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">hidden_fields</span></code>: All hidden bound fields.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">errors</span></code>: All non field related or hidden field related form errors.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-context-available-in-field-templates\">\n<span id=\"context-available-in-field-templates\"></span><h2>Context available in field templates<a class=\"headerlink\" href=\"#context-available-in-field-templates\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"versionadded\">\n<span class=\"title\">New in Django Development version.</span> </div>\n<p>Field templates receive a context from <a class=\"reference internal\" href=\"../api/#django.forms.BoundField.get_context\" title=\"django.forms.BoundField.get_context\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">BoundField.get_context()</span></code></a>. By\ndefault, fields receive a dictionary with the following values:</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">field</span></code>: The <a class=\"reference internal\" href=\"../api/#django.forms.BoundField\" title=\"django.forms.BoundField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BoundField</span></code></a>.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-context-available-in-widget-templates\">\n<span id=\"context-available-in-widget-templates\"></span><h2>Context available in widget templates<a class=\"headerlink\" href=\"#context-available-in-widget-templates\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Widget templates receive a context from <a class=\"reference internal\" href=\"../widgets/#django.forms.Widget.get_context\" title=\"django.forms.Widget.get_context\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">Widget.get_context()</span></code></a>. By\ndefault, widgets receive a single value in the context, <code class=\"docutils literal notranslate\"><span class=\"pre\">widget</span></code>. This is a\ndictionary that contains values like:</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">attrs</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">is_hidden</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">template_name</span></code></li>\n</ul>\n<p>Some widgets add further information to the context. For instance, all widgets\nthat subclass <code class=\"docutils literal notranslate\"><span class=\"pre\">Input</span></code> defines <code class=\"docutils literal notranslate\"><span class=\"pre\">widget['type']</span></code> and <a class=\"reference internal\" href=\"../widgets/#django.forms.MultiWidget\" title=\"django.forms.MultiWidget\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MultiWidget</span></code></a>\ndefines <code class=\"docutils literal notranslate\"><span class=\"pre\">widget['subwidgets']</span></code> for looping purposes.</p>\n</div>\n<div class=\"section\" id=\"s-overriding-built-in-formset-templates\">\n<span id=\"s-id2\"></span><span id=\"overriding-built-in-formset-templates\"></span><span id=\"id2\"></span><h2>Overriding built-in formset templates<a class=\"headerlink\" href=\"#overriding-built-in-formset-templates\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p><a class=\"reference internal\" href=\"../../../topics/forms/formsets/#django.forms.formsets.BaseFormSet.template_name\" title=\"django.forms.formsets.BaseFormSet.template_name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">BaseFormSet.template_name</span></code></a></p>\n<p>To override formset templates, you must use the <a class=\"reference internal\" href=\"#django.forms.renderers.TemplatesSetting\" title=\"django.forms.renderers.TemplatesSetting\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TemplatesSetting</span></code></a>\nrenderer. Then overriding formset templates works <a class=\"reference internal\" href=\"../../../howto/overriding-templates/\"><span class=\"doc\">the same as</span></a> overriding any other template in your project.</p>\n</div>\n<div class=\"section\" id=\"s-overriding-built-in-form-templates\">\n<span id=\"s-id3\"></span><span id=\"overriding-built-in-form-templates\"></span><span id=\"id3\"></span><h2>Overriding built-in form templates<a class=\"headerlink\" href=\"#overriding-built-in-form-templates\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p><a class=\"reference internal\" href=\"../api/#django.forms.Form.template_name\" title=\"django.forms.Form.template_name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Form.template_name</span></code></a></p>\n<p>To override form templates, you must use the <a class=\"reference internal\" href=\"#django.forms.renderers.TemplatesSetting\" title=\"django.forms.renderers.TemplatesSetting\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TemplatesSetting</span></code></a>\nrenderer. Then overriding form templates works <a class=\"reference internal\" href=\"../../../howto/overriding-templates/\"><span class=\"doc\">the same as</span></a> overriding any other template in your project.</p>\n</div>\n<div class=\"section\" id=\"s-overriding-built-in-field-templates\">\n<span id=\"s-id4\"></span><span id=\"overriding-built-in-field-templates\"></span><span id=\"id4\"></span><h2>Overriding built-in field templates<a class=\"headerlink\" href=\"#overriding-built-in-field-templates\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"versionadded\">\n<span class=\"title\">New in Django Development version.</span> </div>\n<p><a class=\"reference internal\" href=\"../fields/#django.forms.Field.template_name\" title=\"django.forms.Field.template_name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Field.template_name</span></code></a></p>\n<p>To override field templates, you must use the <a class=\"reference internal\" href=\"#django.forms.renderers.TemplatesSetting\" title=\"django.forms.renderers.TemplatesSetting\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TemplatesSetting</span></code></a>\nrenderer. Then overriding field templates works <a class=\"reference internal\" href=\"../../../howto/overriding-templates/\"><span class=\"doc\">the same as</span></a> overriding any other template in your project.</p>\n</div>\n<div class=\"section\" id=\"s-overriding-built-in-widget-templates\">\n<span id=\"s-id5\"></span><span id=\"overriding-built-in-widget-templates\"></span><span id=\"id5\"></span><h2>Overriding built-in widget templates<a class=\"headerlink\" href=\"#overriding-built-in-widget-templates\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Each widget has a <code class=\"docutils literal notranslate\"><span class=\"pre\">template_name</span></code> attribute with a value such as\n<code class=\"docutils literal notranslate\"><span class=\"pre\">input.html</span></code>. Built-in widget templates are stored in the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django/forms/widgets</span></code> path. You can provide a custom template for\n<code class=\"docutils literal notranslate\"><span class=\"pre\">input.html</span></code> by defining <code class=\"docutils literal notranslate\"><span class=\"pre\">django/forms/widgets/input.html</span></code>, for example.\nSee <a class=\"reference internal\" href=\"../widgets/#built-in-widgets\"><span class=\"std std-ref\">Built-in widgets</span></a> for the name of each widget\u2019s template.</p>\n<p>To override widget templates, you must use the <a class=\"reference internal\" href=\"#django.forms.renderers.TemplatesSetting\" title=\"django.forms.renderers.TemplatesSetting\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TemplatesSetting</span></code></a>\nrenderer. Then overriding widget templates works <a class=\"reference internal\" href=\"../../../howto/overriding-templates/\"><span class=\"doc\">the same as</span></a> overriding any other template in your project.</p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["ref/forms/widgets", "Widgets", "N", "next"], ["ref/forms/formsets", "Formset Functions", "P", "previous"]], "sourcename": "ref/forms/renderers.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">The form rendering API</a><ul>\n<li><a class=\"reference internal\" href=\"#the-low-level-render-api\">The low-level render API</a></li>\n<li><a class=\"reference internal\" href=\"#built-in-template-form-renderers\">Built-in-template form renderers</a><ul>\n<li><a class=\"reference internal\" href=\"#djangotemplates\"><code class=\"docutils literal notranslate\"><span class=\"pre\">DjangoTemplates</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#jinja2\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Jinja2</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#templatessetting\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TemplatesSetting</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#context-available-in-formset-templates\">Context available in formset templates</a></li>\n<li><a class=\"reference internal\" href=\"#context-available-in-form-templates\">Context available in form templates</a></li>\n<li><a class=\"reference internal\" href=\"#context-available-in-field-templates\">Context available in field templates</a></li>\n<li><a class=\"reference internal\" href=\"#context-available-in-widget-templates\">Context available in widget templates</a></li>\n<li><a class=\"reference internal\" href=\"#overriding-built-in-formset-templates\">Overriding built-in formset templates</a></li>\n<li><a class=\"reference internal\" href=\"#overriding-built-in-form-templates\">Overriding built-in form templates</a></li>\n<li><a class=\"reference internal\" href=\"#overriding-built-in-field-templates\">Overriding built-in field templates</a></li>\n<li><a class=\"reference internal\" href=\"#overriding-built-in-widget-templates\">Overriding built-in widget templates</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "ref/forms/renderers", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}