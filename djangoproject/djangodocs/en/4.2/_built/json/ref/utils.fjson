{"parents": [{"link": "../", "title": "API Reference"}], "prev": {"link": "../urls/", "title": "<code class=\"docutils literal notranslate\"><span class=\"pre\">django.urls</span></code> functions for use in URLconfs"}, "next": {"link": "../validators/", "title": "Validators"}, "title": "Django Utils", "meta": {}, "body": "<div class=\"section\" id=\"s-module-django.utils\">\n<span id=\"s-django-utils\"></span><span id=\"module-django.utils\"></span><span id=\"django-utils\"></span><h1>Django Utils<a class=\"headerlink\" href=\"#module-django.utils\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This document covers all stable modules in <code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils</span></code>. Most of the\nmodules in <code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils</span></code> are designed for internal use and only the\nfollowing parts can be considered stable and thus backwards compatible as per\nthe <a class=\"reference internal\" href=\"../../internals/release-process/#internal-release-deprecation-policy\"><span class=\"std std-ref\">internal release deprecation policy</span></a>.</p>\n<div class=\"section\" id=\"s-module-django.utils.cache\">\n<span id=\"s-django-utils-cache\"></span><span id=\"module-django.utils.cache\"></span><span id=\"django-utils-cache\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.cache</span></code><a class=\"headerlink\" href=\"#module-django.utils.cache\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>This module contains helper functions for controlling HTTP caching. It does so\nby managing the <code class=\"docutils literal notranslate\"><span class=\"pre\">Vary</span></code> header of responses. It includes functions to patch\nthe header of response objects directly and decorators that change functions to\ndo that header-patching themselves.</p>\n<p>For information on the <code class=\"docutils literal notranslate\"><span class=\"pre\">Vary</span></code> header, see <span class=\"target\" id=\"index-0\"></span><a class=\"rfc reference external\" href=\"https://datatracker.ietf.org/doc/html/rfc9110.html#section-12.5.5\"><strong>RFC 9110#section-12.5.5</strong></a>.</p>\n<p>Essentially, the <code class=\"docutils literal notranslate\"><span class=\"pre\">Vary</span></code> HTTP header defines which headers a cache should take\ninto account when building its cache key. Requests with the same path but\ndifferent header content for headers named in <code class=\"docutils literal notranslate\"><span class=\"pre\">Vary</span></code> need to get different\ncache keys to prevent delivery of wrong content.</p>\n<p>For example, <a class=\"reference internal\" href=\"../../topics/i18n/\"><span class=\"doc\">internationalization</span></a> middleware would\nneed to distinguish caches by the <code class=\"docutils literal notranslate\"><span class=\"pre\">Accept-language</span></code> header.</p>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.cache.patch_cache_control\">\n<code class=\"sig-name descname\"><span class=\"pre\">patch_cache_control</span></code>(<em><span class=\"n\"><span class=\"pre\">response</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/cache/#patch_cache_control\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.cache.patch_cache_control\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This function patches the <code class=\"docutils literal notranslate\"><span class=\"pre\">Cache-Control</span></code> header by adding all keyword\narguments to it. The transformation is as follows:</p>\n<ul class=\"simple\">\n<li>All keyword parameter names are turned to lowercase, and underscores\nare converted to hyphens.</li>\n<li>If the value of a parameter is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> (exactly <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, not just a\ntrue value), only the parameter name is added to the header.</li>\n<li>All other parameters are added with their value, after applying\n<code class=\"docutils literal notranslate\"><span class=\"pre\">str()</span></code> to it.</li>\n</ul>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.cache.get_max_age\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_max_age</span></code>(<em><span class=\"n\"><span class=\"pre\">response</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/cache/#get_max_age\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.cache.get_max_age\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the max-age from the response Cache-Control header as an integer\n(or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> if it wasn\u2019t found or wasn\u2019t an integer).</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.cache.patch_response_headers\">\n<code class=\"sig-name descname\"><span class=\"pre\">patch_response_headers</span></code>(<em><span class=\"n\"><span class=\"pre\">response</span></span></em>, <em><span class=\"n\"><span class=\"pre\">cache_timeout</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/cache/#patch_response_headers\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.cache.patch_response_headers\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Adds some useful headers to the given <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpResponse</span></code> object:</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">Expires</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">Cache-Control</span></code></li>\n</ul>\n<p>Each header is only added if it isn\u2019t already set.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">cache_timeout</span></code> is in seconds. The <a class=\"reference internal\" href=\"../settings/#std-setting-CACHE_MIDDLEWARE_SECONDS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">CACHE_MIDDLEWARE_SECONDS</span></code></a>\nsetting is used by default.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.cache.add_never_cache_headers\">\n<code class=\"sig-name descname\"><span class=\"pre\">add_never_cache_headers</span></code>(<em><span class=\"n\"><span class=\"pre\">response</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/cache/#add_never_cache_headers\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.cache.add_never_cache_headers\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Adds an <code class=\"docutils literal notranslate\"><span class=\"pre\">Expires</span></code> header to the current date/time.</p>\n<p>Adds a <code class=\"docutils literal notranslate\"><span class=\"pre\">Cache-Control:</span> <span class=\"pre\">max-age=0,</span> <span class=\"pre\">no-cache,</span> <span class=\"pre\">no-store,</span> <span class=\"pre\">must-revalidate,</span>\n<span class=\"pre\">private</span></code> header to a response to indicate that a page should never be\ncached.</p>\n<p>Each header is only added if it isn\u2019t already set.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.cache.patch_vary_headers\">\n<code class=\"sig-name descname\"><span class=\"pre\">patch_vary_headers</span></code>(<em><span class=\"n\"><span class=\"pre\">response</span></span></em>, <em><span class=\"n\"><span class=\"pre\">newheaders</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/cache/#patch_vary_headers\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.cache.patch_vary_headers\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Adds (or updates) the <code class=\"docutils literal notranslate\"><span class=\"pre\">Vary</span></code> header in the given <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpResponse</span></code> object.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">newheaders</span></code> is a list of header names that should be in <code class=\"docutils literal notranslate\"><span class=\"pre\">Vary</span></code>. If\nheaders contains an asterisk, then <code class=\"docutils literal notranslate\"><span class=\"pre\">Vary</span></code> header will consist of a single\nasterisk <code class=\"docutils literal notranslate\"><span class=\"pre\">'*'</span></code>, according to <span class=\"target\" id=\"index-1\"></span><a class=\"rfc reference external\" href=\"https://datatracker.ietf.org/doc/html/rfc9110.html#section-12.5.5\"><strong>RFC 9110#section-12.5.5</strong></a>. Otherwise,\nexisting headers in <code class=\"docutils literal notranslate\"><span class=\"pre\">Vary</span></code> aren\u2019t removed.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.cache.get_cache_key\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_cache_key</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">key_prefix</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">method</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'GET'</span></span></em>, <em><span class=\"n\"><span class=\"pre\">cache</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/cache/#get_cache_key\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.cache.get_cache_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a cache key based on the request path. It can be used in the\nrequest phase because it pulls the list of headers to take into account\nfrom the global path registry and uses those to build a cache key to\ncheck against.</p>\n<p>If there is no headerlist stored, the page needs to be rebuilt, so this\nfunction returns <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.cache.learn_cache_key\">\n<code class=\"sig-name descname\"><span class=\"pre\">learn_cache_key</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">response</span></span></em>, <em><span class=\"n\"><span class=\"pre\">cache_timeout</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">key_prefix</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">cache</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/cache/#learn_cache_key\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.cache.learn_cache_key\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Learns what headers to take into account for some request path from the\nresponse object. It stores those headers in a global path registry so that\nlater access to that path will know what headers to take into account\nwithout building the response object itself. The headers are named in\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">Vary</span></code> header of the response, but we want to prevent response\ngeneration.</p>\n<p>The list of headers to use for cache key generation is stored in the same\ncache as the pages themselves. If the cache ages some data out of the\ncache, this means that we have to build the response once to get at the\nVary header and so at the list of headers to use for the cache key.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-module-django.utils.dateparse\">\n<span id=\"s-django-utils-dateparse\"></span><span id=\"module-django.utils.dateparse\"></span><span id=\"django-utils-dateparse\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.dateparse</span></code><a class=\"headerlink\" href=\"#module-django.utils.dateparse\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The functions defined in this module share the following properties:</p>\n<ul class=\"simple\">\n<li>They accept strings in ISO 8601 date/time formats (or some close\nalternatives) and return objects from the corresponding classes in Python\u2019s\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#module-datetime\" title=\"(in Python v3.11)\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">datetime</span></code></a> module.</li>\n<li>They raise <a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#ValueError\" title=\"(in Python v3.11)\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValueError</span></code></a> if their input is well formatted but isn\u2019t a\nvalid date or time.</li>\n<li>They return <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> if it isn\u2019t well formatted at all.</li>\n<li>They accept up to picosecond resolution in input, but they truncate it to\nmicroseconds, since that\u2019s what Python supports.</li>\n</ul>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.dateparse.parse_date\">\n<code class=\"sig-name descname\"><span class=\"pre\">parse_date</span></code>(<em><span class=\"n\"><span class=\"pre\">value</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/dateparse/#parse_date\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.dateparse.parse_date\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Parses a string and returns a <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.date\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">datetime.date</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.dateparse.parse_time\">\n<code class=\"sig-name descname\"><span class=\"pre\">parse_time</span></code>(<em><span class=\"n\"><span class=\"pre\">value</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/dateparse/#parse_time\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.dateparse.parse_time\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Parses a string and returns a <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.time\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">datetime.time</span></code></a>.</p>\n<p>UTC offsets aren\u2019t supported; if <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> describes one, the result is\n<code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.dateparse.parse_datetime\">\n<code class=\"sig-name descname\"><span class=\"pre\">parse_datetime</span></code>(<em><span class=\"n\"><span class=\"pre\">value</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/dateparse/#parse_datetime\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.dateparse.parse_datetime\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Parses a string and returns a <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">datetime.datetime</span></code></a>.</p>\n<p>UTC offsets are supported; if <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> describes one, the result\u2019s\n<code class=\"docutils literal notranslate\"><span class=\"pre\">tzinfo</span></code> attribute is a <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.timezone\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">datetime.timezone</span></code></a> instance.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.dateparse.parse_duration\">\n<code class=\"sig-name descname\"><span class=\"pre\">parse_duration</span></code>(<em><span class=\"n\"><span class=\"pre\">value</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/dateparse/#parse_duration\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.dateparse.parse_duration\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Parses a string and returns a <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.timedelta\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">datetime.timedelta</span></code></a>.</p>\n<p>Expects data in the format <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;DD</span> <span class=\"pre\">HH:MM:SS.uuuuuu&quot;</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;DD</span> <span class=\"pre\">HH:MM:SS,uuuuuu&quot;</span></code>,  or as specified by ISO 8601 (e.g.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">P4DT1H15M20S</span></code> which is equivalent to <code class=\"docutils literal notranslate\"><span class=\"pre\">4</span> <span class=\"pre\">1:15:20</span></code>) or PostgreSQL\u2019s\nday-time interval format (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">3</span> <span class=\"pre\">days</span> <span class=\"pre\">04:05:06</span></code>).</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-module-django.utils.decorators\">\n<span id=\"s-django-utils-decorators\"></span><span id=\"module-django.utils.decorators\"></span><span id=\"django-utils-decorators\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.decorators</span></code><a class=\"headerlink\" href=\"#module-django.utils.decorators\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.decorators.method_decorator\">\n<code class=\"sig-name descname\"><span class=\"pre\">method_decorator</span></code>(<em><span class=\"n\"><span class=\"pre\">decorator</span></span></em>, <em><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/decorators/#method_decorator\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.decorators.method_decorator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Converts a function decorator into a method decorator. It can be used to\ndecorate methods or classes; in the latter case, <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> is the name\nof the method to be decorated and is required.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">decorator</span></code> may also be a list or tuple of functions. They are wrapped\nin reverse order so that the call order is the order in which the functions\nappear in the list/tuple.</p>\n<p>See <a class=\"reference internal\" href=\"../../topics/class-based-views/intro/#id1\"><span class=\"std std-ref\">decorating class based views</span></a> for\nexample usage.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.decorators.decorator_from_middleware\">\n<code class=\"sig-name descname\"><span class=\"pre\">decorator_from_middleware</span></code>(<em><span class=\"n\"><span class=\"pre\">middleware_class</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/decorators/#decorator_from_middleware\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.decorators.decorator_from_middleware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Given a middleware class, returns a view decorator. This lets you use\nmiddleware functionality on a per-view basis. The middleware is created\nwith no params passed.</p>\n<p>It assumes middleware that\u2019s compatible with the old style of Django 1.9\nand earlier (having methods like <code class=\"docutils literal notranslate\"><span class=\"pre\">process_request()</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">process_exception()</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">process_response()</span></code>).</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.decorators.decorator_from_middleware_with_args\">\n<code class=\"sig-name descname\"><span class=\"pre\">decorator_from_middleware_with_args</span></code>(<em><span class=\"n\"><span class=\"pre\">middleware_class</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/decorators/#decorator_from_middleware_with_args\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.decorators.decorator_from_middleware_with_args\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Like <code class=\"docutils literal notranslate\"><span class=\"pre\">decorator_from_middleware</span></code>, but returns a function\nthat accepts the arguments to be passed to the middleware_class.\nFor example, the <a class=\"reference internal\" href=\"../../topics/cache/#django.views.decorators.cache.cache_page\" title=\"django.views.decorators.cache.cache_page\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">cache_page()</span></code></a>\ndecorator is created from the <code class=\"docutils literal notranslate\"><span class=\"pre\">CacheMiddleware</span></code> like this:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">cache_page</span> <span class=\"o\">=</span> <span class=\"n\">decorator_from_middleware_with_args</span><span class=\"p\">(</span><span class=\"n\">CacheMiddleware</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@cache_page</span><span class=\"p\">(</span><span class=\"mi\">3600</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.decorators.sync_only_middleware\">\n<code class=\"sig-name descname\"><span class=\"pre\">sync_only_middleware</span></code>(<em><span class=\"n\"><span class=\"pre\">middleware</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/decorators/#sync_only_middleware\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.decorators.sync_only_middleware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Marks a middleware as <a class=\"reference internal\" href=\"../../topics/http/middleware/#async-middleware\"><span class=\"std std-ref\">synchronous-only</span></a>. (The\ndefault in Django, but this allows you to future-proof if the default ever\nchanges in a future release.)</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.decorators.async_only_middleware\">\n<code class=\"sig-name descname\"><span class=\"pre\">async_only_middleware</span></code>(<em><span class=\"n\"><span class=\"pre\">middleware</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/decorators/#async_only_middleware\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.decorators.async_only_middleware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Marks a middleware as <a class=\"reference internal\" href=\"../../topics/http/middleware/#async-middleware\"><span class=\"std std-ref\">asynchronous-only</span></a>. Django\nwill wrap it in an asynchronous event loop when it is called from the WSGI\nrequest path.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.decorators.sync_and_async_middleware\">\n<code class=\"sig-name descname\"><span class=\"pre\">sync_and_async_middleware</span></code>(<em><span class=\"n\"><span class=\"pre\">middleware</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/decorators/#sync_and_async_middleware\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.decorators.sync_and_async_middleware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Marks a middleware as <a class=\"reference internal\" href=\"../../topics/http/middleware/#async-middleware\"><span class=\"std std-ref\">sync and async compatible</span></a>,\nthis allows to avoid converting requests. You must implement detection of\nthe current request type to use this decorator. See <a class=\"reference internal\" href=\"../../topics/http/middleware/#async-middleware\"><span class=\"std std-ref\">asynchronous\nmiddleware documentation</span></a> for details.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-module-django.utils.encoding\">\n<span id=\"s-django-utils-encoding\"></span><span id=\"module-django.utils.encoding\"></span><span id=\"django-utils-encoding\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.encoding</span></code><a class=\"headerlink\" href=\"#module-django.utils.encoding\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.encoding.smart_str\">\n<code class=\"sig-name descname\"><span class=\"pre\">smart_str</span></code>(<em><span class=\"n\"><span class=\"pre\">s</span></span></em>, <em><span class=\"n\"><span class=\"pre\">encoding</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'utf-8'</span></span></em>, <em><span class=\"n\"><span class=\"pre\">strings_only</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em><span class=\"n\"><span class=\"pre\">errors</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'strict'</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/encoding/#smart_str\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.encoding.smart_str\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a <code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code> object representing arbitrary object <code class=\"docutils literal notranslate\"><span class=\"pre\">s</span></code>. Treats\nbytestrings using the <code class=\"docutils literal notranslate\"><span class=\"pre\">encoding</span></code> codec.</p>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">strings_only</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, don\u2019t convert (some) non-string-like\nobjects.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.encoding.is_protected_type\">\n<code class=\"sig-name descname\"><span class=\"pre\">is_protected_type</span></code>(<em><span class=\"n\"><span class=\"pre\">obj</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/encoding/#is_protected_type\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.encoding.is_protected_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Determine if the object instance is of a protected type.</p>\n<p>Objects of protected types are preserved as-is when passed to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">force_str(strings_only=True)</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.encoding.force_str\">\n<code class=\"sig-name descname\"><span class=\"pre\">force_str</span></code>(<em><span class=\"n\"><span class=\"pre\">s</span></span></em>, <em><span class=\"n\"><span class=\"pre\">encoding</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'utf-8'</span></span></em>, <em><span class=\"n\"><span class=\"pre\">strings_only</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em><span class=\"n\"><span class=\"pre\">errors</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'strict'</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/encoding/#force_str\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.encoding.force_str\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Similar to <code class=\"docutils literal notranslate\"><span class=\"pre\">smart_str()</span></code>, except that lazy instances are resolved to\nstrings, rather than kept as lazy objects.</p>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">strings_only</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, don\u2019t convert (some) non-string-like\nobjects.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.encoding.smart_bytes\">\n<code class=\"sig-name descname\"><span class=\"pre\">smart_bytes</span></code>(<em><span class=\"n\"><span class=\"pre\">s</span></span></em>, <em><span class=\"n\"><span class=\"pre\">encoding</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'utf-8'</span></span></em>, <em><span class=\"n\"><span class=\"pre\">strings_only</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em><span class=\"n\"><span class=\"pre\">errors</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'strict'</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/encoding/#smart_bytes\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.encoding.smart_bytes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a bytestring version of arbitrary object <code class=\"docutils literal notranslate\"><span class=\"pre\">s</span></code>, encoded as\nspecified in <code class=\"docutils literal notranslate\"><span class=\"pre\">encoding</span></code>.</p>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">strings_only</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, don\u2019t convert (some) non-string-like\nobjects.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.encoding.force_bytes\">\n<code class=\"sig-name descname\"><span class=\"pre\">force_bytes</span></code>(<em><span class=\"n\"><span class=\"pre\">s</span></span></em>, <em><span class=\"n\"><span class=\"pre\">encoding</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'utf-8'</span></span></em>, <em><span class=\"n\"><span class=\"pre\">strings_only</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em><span class=\"n\"><span class=\"pre\">errors</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'strict'</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/encoding/#force_bytes\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.encoding.force_bytes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Similar to <code class=\"docutils literal notranslate\"><span class=\"pre\">smart_bytes</span></code>, except that lazy instances are resolved to\nbytestrings, rather than kept as lazy objects.</p>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">strings_only</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, don\u2019t convert (some) non-string-like\nobjects.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.encoding.iri_to_uri\">\n<code class=\"sig-name descname\"><span class=\"pre\">iri_to_uri</span></code>(<em><span class=\"n\"><span class=\"pre\">iri</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/encoding/#iri_to_uri\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.encoding.iri_to_uri\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Convert an Internationalized Resource Identifier (IRI) portion to a URI\nportion that is suitable for inclusion in a URL.</p>\n<p>This is the algorithm from section 3.1 of <span class=\"target\" id=\"index-2\"></span><a class=\"rfc reference external\" href=\"https://datatracker.ietf.org/doc/html/rfc3987.html#section-3.1\"><strong>RFC 3987#section-3.1</strong></a>, slightly\nsimplified since the input is assumed to be a string rather than an\narbitrary byte stream.</p>\n<p>Takes an IRI (string or UTF-8 bytes) and returns a string containing the\nencoded result.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.encoding.uri_to_iri\">\n<code class=\"sig-name descname\"><span class=\"pre\">uri_to_iri</span></code>(<em><span class=\"n\"><span class=\"pre\">uri</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/encoding/#uri_to_iri\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.encoding.uri_to_iri\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Converts a Uniform Resource Identifier into an Internationalized Resource\nIdentifier.</p>\n<p>This is an algorithm from section 3.2 of <span class=\"target\" id=\"index-3\"></span><a class=\"rfc reference external\" href=\"https://datatracker.ietf.org/doc/html/rfc3987.html#section-3.2\"><strong>RFC 3987#section-3.2</strong></a>.</p>\n<p>Takes a URI in ASCII bytes and returns a string containing the encoded\nresult.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.encoding.filepath_to_uri\">\n<code class=\"sig-name descname\"><span class=\"pre\">filepath_to_uri</span></code>(<em><span class=\"n\"><span class=\"pre\">path</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/encoding/#filepath_to_uri\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.encoding.filepath_to_uri\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Convert a file system path to a URI portion that is suitable for inclusion\nin a URL. The path is assumed to be either UTF-8 bytes, string, or a\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/pathlib.html#pathlib.Path\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Path</span></code></a>.</p>\n<p>This method will encode certain characters that would normally be\nrecognized as special characters for URIs.  Note that this method does not\nencode the \u2018 character, as it is a valid character within URIs. See\n<code class=\"docutils literal notranslate\"><span class=\"pre\">encodeURIComponent()</span></code> JavaScript function for more details.</p>\n<p>Returns an ASCII string containing the encoded result.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.encoding.escape_uri_path\">\n<code class=\"sig-name descname\"><span class=\"pre\">escape_uri_path</span></code>(<em><span class=\"n\"><span class=\"pre\">path</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/encoding/#escape_uri_path\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.encoding.escape_uri_path\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Escapes the unsafe characters from the path portion of a Uniform Resource\nIdentifier (URI).</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-module-django.utils.feedgenerator\">\n<span id=\"s-django-utils-feedgenerator\"></span><span id=\"module-django.utils.feedgenerator\"></span><span id=\"django-utils-feedgenerator\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.feedgenerator</span></code><a class=\"headerlink\" href=\"#module-django.utils.feedgenerator\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Sample usage:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.utils</span> <span class=\"kn\">import</span> <span class=\"n\">feedgenerator</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">feed</span> <span class=\"o\">=</span> <span class=\"n\">feedgenerator</span><span class=\"o\">.</span><span class=\"n\">Rss201rev2Feed</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">&quot;Poynter E-Media Tidbits&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">link</span><span class=\"o\">=</span><span class=\"s2\">&quot;http://www.poynter.org/column.asp?id=31&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;A group blog by the sharpest minds in online media/journalism/publishing.&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">language</span><span class=\"o\">=</span><span class=\"s2\">&quot;en&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">feed</span><span class=\"o\">.</span><span class=\"n\">add_item</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">&quot;Hello&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">link</span><span class=\"o\">=</span><span class=\"s2\">&quot;http://www.holovaty.com/test/&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;Testing.&quot;</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">&quot;test.rss&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;w&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fp</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"n\">feed</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">fp</span><span class=\"p\">,</span> <span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n</pre></div>\n</div>\n<p>For simplifying the selection of a generator use <code class=\"docutils literal notranslate\"><span class=\"pre\">feedgenerator.DefaultFeed</span></code>\nwhich is currently <code class=\"docutils literal notranslate\"><span class=\"pre\">Rss201rev2Feed</span></code></p>\n<p>For definitions of the different versions of RSS, see:\n<a class=\"reference external\" href=\"https://web.archive.org/web/20110718035220/http://diveintomark.org/archives/2004/02/04/incompatible-rss\">https://web.archive.org/web/20110718035220/http://diveintomark.org/archives/2004/02/04/incompatible-rss</a></p>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.feedgenerator.get_tag_uri\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_tag_uri</span></code>(<em><span class=\"n\"><span class=\"pre\">url</span></span></em>, <em><span class=\"n\"><span class=\"pre\">date</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/feedgenerator/#get_tag_uri\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.feedgenerator.get_tag_uri\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates a TagURI.</p>\n<p>See <a class=\"reference external\" href=\"https://web.archive.org/web/20110514113830/http://diveintomark.org/archives/2004/05/28/howto-atom-id\">https://web.archive.org/web/20110514113830/http://diveintomark.org/archives/2004/05/28/howto-atom-id</a></p>\n</dd></dl>\n\n<div class=\"section\" id=\"s-syndicationfeed\">\n<span id=\"syndicationfeed\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">SyndicationFeed</span></code><a class=\"headerlink\" href=\"#syndicationfeed\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.utils.feedgenerator.SyndicationFeed\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">SyndicationFeed</span></code><a class=\"reference internal\" href=\"../../_modules/django/utils/feedgenerator/#SyndicationFeed\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.feedgenerator.SyndicationFeed\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for all syndication feeds. Subclasses should provide\n<code class=\"docutils literal notranslate\"><span class=\"pre\">write()</span></code>.</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.utils.feedgenerator.SyndicationFeed.__init__\">\n<code class=\"sig-name descname\"><span class=\"pre\">__init__</span></code>(<em><span class=\"n\"><span class=\"pre\">title</span></span></em>, <em><span class=\"n\"><span class=\"pre\">link</span></span></em>, <em><span class=\"n\"><span class=\"pre\">description</span></span></em>, <em><span class=\"n\"><span class=\"pre\">language</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">author_email</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">author_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">author_link</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">subtitle</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">categories</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">feed_url</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">feed_copyright</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">feed_guid</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">ttl</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/feedgenerator/#SyndicationFeed.__init__\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.feedgenerator.SyndicationFeed.__init__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Initialize the feed with the given dictionary of metadata, which applies\nto the entire feed.</p>\n<p>Any extra keyword arguments you pass to <code class=\"docutils literal notranslate\"><span class=\"pre\">__init__</span></code> will be stored in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">self.feed</span></code>.</p>\n<p>All parameters should be strings, except <code class=\"docutils literal notranslate\"><span class=\"pre\">categories</span></code>, which should\nbe a sequence of strings.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.utils.feedgenerator.SyndicationFeed.add_item\">\n<code class=\"sig-name descname\"><span class=\"pre\">add_item</span></code>(<em><span class=\"n\"><span class=\"pre\">title</span></span></em>, <em><span class=\"n\"><span class=\"pre\">link</span></span></em>, <em><span class=\"n\"><span class=\"pre\">description</span></span></em>, <em><span class=\"n\"><span class=\"pre\">author_email</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">author_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">author_link</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">pubdate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">comments</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">unique_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">categories</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em><span class=\"n\"><span class=\"pre\">item_copyright</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">ttl</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">updateddate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">enclosures</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/feedgenerator/#SyndicationFeed.add_item\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.feedgenerator.SyndicationFeed.add_item\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Adds an item to the feed. All args are expected to be strings except\n<code class=\"docutils literal notranslate\"><span class=\"pre\">pubdate</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">updateddate</span></code>, which are <code class=\"docutils literal notranslate\"><span class=\"pre\">datetime.datetime</span></code>\nobjects, and <code class=\"docutils literal notranslate\"><span class=\"pre\">enclosures</span></code>, which is a list of <code class=\"docutils literal notranslate\"><span class=\"pre\">Enclosure</span></code> instances.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.utils.feedgenerator.SyndicationFeed.num_items\">\n<code class=\"sig-name descname\"><span class=\"pre\">num_items</span></code>()<a class=\"reference internal\" href=\"../../_modules/django/utils/feedgenerator/#SyndicationFeed.num_items\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.feedgenerator.SyndicationFeed.num_items\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.utils.feedgenerator.SyndicationFeed.root_attributes\">\n<code class=\"sig-name descname\"><span class=\"pre\">root_attributes</span></code>()<a class=\"reference internal\" href=\"../../_modules/django/utils/feedgenerator/#SyndicationFeed.root_attributes\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.feedgenerator.SyndicationFeed.root_attributes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return extra attributes to place on the root (i.e. feed/channel)\nelement. Called from <code class=\"docutils literal notranslate\"><span class=\"pre\">write()</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.utils.feedgenerator.SyndicationFeed.add_root_elements\">\n<code class=\"sig-name descname\"><span class=\"pre\">add_root_elements</span></code>(<em><span class=\"n\"><span class=\"pre\">handler</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/feedgenerator/#SyndicationFeed.add_root_elements\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.feedgenerator.SyndicationFeed.add_root_elements\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Add elements in the root (i.e. feed/channel) element.\nCalled from <code class=\"docutils literal notranslate\"><span class=\"pre\">write()</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.utils.feedgenerator.SyndicationFeed.item_attributes\">\n<code class=\"sig-name descname\"><span class=\"pre\">item_attributes</span></code>(<em><span class=\"n\"><span class=\"pre\">item</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/feedgenerator/#SyndicationFeed.item_attributes\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.feedgenerator.SyndicationFeed.item_attributes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return extra attributes to place on each item (i.e. item/entry)\nelement.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.utils.feedgenerator.SyndicationFeed.add_item_elements\">\n<code class=\"sig-name descname\"><span class=\"pre\">add_item_elements</span></code>(<em><span class=\"n\"><span class=\"pre\">handler</span></span></em>, <em><span class=\"n\"><span class=\"pre\">item</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/feedgenerator/#SyndicationFeed.add_item_elements\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.feedgenerator.SyndicationFeed.add_item_elements\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Add elements on each item (i.e. item/entry) element.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.utils.feedgenerator.SyndicationFeed.write\">\n<code class=\"sig-name descname\"><span class=\"pre\">write</span></code>(<em><span class=\"n\"><span class=\"pre\">outfile</span></span></em>, <em><span class=\"n\"><span class=\"pre\">encoding</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/feedgenerator/#SyndicationFeed.write\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.feedgenerator.SyndicationFeed.write\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Outputs the feed in the given encoding to <code class=\"docutils literal notranslate\"><span class=\"pre\">outfile</span></code>, which is a\nfile-like object. Subclasses should override this.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.utils.feedgenerator.SyndicationFeed.writeString\">\n<code class=\"sig-name descname\"><span class=\"pre\">writeString</span></code>(<em><span class=\"n\"><span class=\"pre\">encoding</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/feedgenerator/#SyndicationFeed.writeString\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.feedgenerator.SyndicationFeed.writeString\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the feed in the given encoding as a string.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.utils.feedgenerator.SyndicationFeed.latest_post_date\">\n<code class=\"sig-name descname\"><span class=\"pre\">latest_post_date</span></code>()<a class=\"reference internal\" href=\"../../_modules/django/utils/feedgenerator/#SyndicationFeed.latest_post_date\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.feedgenerator.SyndicationFeed.latest_post_date\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the latest <code class=\"docutils literal notranslate\"><span class=\"pre\">pubdate</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">updateddate</span></code> for all items in the\nfeed. If no items have either of these attributes this returns the\ncurrent UTC date/time.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-enclosure\">\n<span id=\"enclosure\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Enclosure</span></code><a class=\"headerlink\" href=\"#enclosure\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.utils.feedgenerator.Enclosure\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Enclosure</span></code><a class=\"reference internal\" href=\"../../_modules/django/utils/feedgenerator/#Enclosure\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.feedgenerator.Enclosure\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Represents an RSS enclosure</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-rssfeed\">\n<span id=\"rssfeed\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">RssFeed</span></code><a class=\"headerlink\" href=\"#rssfeed\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.utils.feedgenerator.RssFeed\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">RssFeed</span></code>(<em><span class=\"n\"><span class=\"pre\">SyndicationFeed</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/feedgenerator/#RssFeed\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.feedgenerator.RssFeed\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-rss201rev2feed\">\n<span id=\"rss201rev2feed\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Rss201rev2Feed</span></code><a class=\"headerlink\" href=\"#rss201rev2feed\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.utils.feedgenerator.Rss201rev2Feed\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Rss201rev2Feed</span></code>(<em><span class=\"n\"><span class=\"pre\">RssFeed</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/feedgenerator/#Rss201rev2Feed\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.feedgenerator.Rss201rev2Feed\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Spec: <a class=\"reference external\" href=\"https://cyber.harvard.edu/rss/rss.html\">https://cyber.harvard.edu/rss/rss.html</a></p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-rssuserland091feed\">\n<span id=\"rssuserland091feed\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">RssUserland091Feed</span></code><a class=\"headerlink\" href=\"#rssuserland091feed\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.utils.feedgenerator.RssUserland091Feed\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">RssUserland091Feed</span></code>(<em><span class=\"n\"><span class=\"pre\">RssFeed</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/feedgenerator/#RssUserland091Feed\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.feedgenerator.RssUserland091Feed\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Spec: <a class=\"reference external\" href=\"http://backend.userland.com/rss091\">http://backend.userland.com/rss091</a></p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-atom1feed\">\n<span id=\"atom1feed\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Atom1Feed</span></code><a class=\"headerlink\" href=\"#atom1feed\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.utils.feedgenerator.Atom1Feed\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Atom1Feed</span></code>(<em><span class=\"n\"><span class=\"pre\">SyndicationFeed</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/feedgenerator/#Atom1Feed\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.feedgenerator.Atom1Feed\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Spec: <span class=\"target\" id=\"index-4\"></span><a class=\"rfc reference external\" href=\"https://datatracker.ietf.org/doc/html/rfc4287.html\"><strong>RFC 4287</strong></a></p>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"s-module-django.utils.functional\">\n<span id=\"s-django-utils-functional\"></span><span id=\"module-django.utils.functional\"></span><span id=\"django-utils-functional\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.functional</span></code><a class=\"headerlink\" href=\"#module-django.utils.functional\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.utils.functional.cached_property\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">cached_property</span></code>(<em><span class=\"n\"><span class=\"pre\">func</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/functional/#cached_property\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.functional.cached_property\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;cached_property</span></code> decorator caches the result of a method with a\nsingle <code class=\"docutils literal notranslate\"><span class=\"pre\">self</span></code> argument as a property. The cached result will persist\nas long as the instance does, so if the instance is passed around and the\nfunction subsequently invoked, the cached result will be returned.</p>\n<p>Consider a typical case, where a view might need to call a model\u2019s method\nto perform some computation, before placing the model instance into the\ncontext, where the template might invoke the method once more:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># the model</span>\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">friends</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># expensive computation</span>\n        <span class=\"o\">...</span>\n        <span class=\"k\">return</span> <span class=\"n\">friends</span>\n\n\n<span class=\"c1\"># in the view:</span>\n<span class=\"k\">if</span> <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">friends</span><span class=\"p\">():</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p>And in the template you would have:</p>\n<div class=\"highlight-html+django notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cp\">{%</span> <span class=\"k\">for</span> <span class=\"nv\">friend</span> <span class=\"k\">in</span> <span class=\"nv\">person.friends</span> <span class=\"cp\">%}</span>\n</pre></div>\n</div>\n<p>Here, <code class=\"docutils literal notranslate\"><span class=\"pre\">friends()</span></code> will be called twice. Since the instance <code class=\"docutils literal notranslate\"><span class=\"pre\">person</span></code> in\nthe view and the template are the same, decorating the <code class=\"docutils literal notranslate\"><span class=\"pre\">friends()</span></code> method\nwith <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;cached_property</span></code> can avoid that:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.utils.functional</span> <span class=\"kn\">import</span> <span class=\"n\">cached_property</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"nd\">@cached_property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">friends</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p>Note that as the method is now a property, in Python code it will need to\nbe accessed appropriately:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># in the view:</span>\n<span class=\"k\">if</span> <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">friends</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p>The cached value can be treated like an ordinary attribute of the instance:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># clear it, requiring re-computation next time it&#39;s called</span>\n<span class=\"k\">del</span> <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">friends</span>  <span class=\"c1\"># or delattr(person, &quot;friends&quot;)</span>\n\n<span class=\"c1\"># set a value manually, that will persist on the instance until cleared</span>\n<span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">friends</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Huckleberry Finn&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Tom Sawyer&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>Because of the way the <a class=\"reference external\" href=\"https://docs.python.org/3/reference/datamodel.html#descriptor-invocation\" title=\"(in Python v3.11)\"><span class=\"xref std std-ref\">descriptor protocol</span></a> works, using <code class=\"docutils literal notranslate\"><span class=\"pre\">del</span></code> (or <code class=\"docutils literal notranslate\"><span class=\"pre\">delattr</span></code>) on a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">cached_property</span></code> that hasn\u2019t been accessed raises <code class=\"docutils literal notranslate\"><span class=\"pre\">AttributeError</span></code>.</p>\n<p>As well as offering potential performance advantages, <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;cached_property</span></code>\ncan ensure that an attribute\u2019s value does not change unexpectedly over the\nlife of an instance. This could occur with a method whose computation is\nbased on <code class=\"docutils literal notranslate\"><span class=\"pre\">datetime.now()</span></code>, or if a change were saved to the database by\nsome other process in the brief interval between subsequent invocations of\na method on the same instance.</p>\n<p>You can make cached properties of methods. For example, if you had an\nexpensive <code class=\"docutils literal notranslate\"><span class=\"pre\">get_friends()</span></code> method and wanted to allow calling it without\nretrieving the cached value, you could write:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">friends</span> <span class=\"o\">=</span> <span class=\"n\">cached_property</span><span class=\"p\">(</span><span class=\"n\">get_friends</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>While <code class=\"docutils literal notranslate\"><span class=\"pre\">person.get_friends()</span></code> will recompute the friends on each call, the\nvalue of the cached property will persist until you delete it as described\nabove:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">friends</span>  <span class=\"c1\"># calls first time</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">get_friends</span><span class=\"p\">()</span>  <span class=\"c1\"># calls again</span>\n<span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">friends</span>  <span class=\"c1\"># does not call</span>\n<span class=\"n\">x</span> <span class=\"ow\">is</span> <span class=\"n\">z</span>  <span class=\"c1\"># is True</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.utils.functional.classproperty\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">classproperty</span></code>(<em><span class=\"n\"><span class=\"pre\">method</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/functional/#classproperty\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.functional.classproperty\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Similar to <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#classmethod\" title=\"(in Python v3.11)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">&#64;classmethod</span></code></a>, the <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;classproperty</span></code>\ndecorator converts the result of a method with a single <code class=\"docutils literal notranslate\"><span class=\"pre\">cls</span></code> argument\ninto a property that can be accessed directly from the class.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.functional.keep_lazy\">\n<code class=\"sig-name descname\"><span class=\"pre\">keep_lazy</span></code>(<em><span class=\"n\"><span class=\"pre\">func</span></span></em>, <em><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">resultclasses</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/functional/#keep_lazy\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.functional.keep_lazy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Django offers many utility functions (particularly in <code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils</span></code>)\nthat take a string as their first argument and do something to that string.\nThese functions are used by template filters as well as directly in other\ncode.</p>\n<p>If you write your own similar functions and deal with translations, you\u2019ll\nface the problem of what to do when the first argument is a lazy\ntranslation object. You don\u2019t want to convert it to a string immediately,\nbecause you might be using this function outside of a view (and hence the\ncurrent thread\u2019s locale setting will not be correct).</p>\n<p>For cases like this, use the <code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.functional.keep_lazy()</span></code>\ndecorator. It modifies the function so that <em>if</em> it\u2019s called with a lazy\ntranslation as one of its arguments, the function evaluation is delayed\nuntil it needs to be converted to a string.</p>\n<p>For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.utils.functional</span> <span class=\"kn\">import</span> <span class=\"n\">keep_lazy</span><span class=\"p\">,</span> <span class=\"n\">keep_lazy_text</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">fancy_utility_function</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Do some conversion on string &#39;s&#39;</span>\n    <span class=\"o\">...</span>\n\n\n<span class=\"n\">fancy_utility_function</span> <span class=\"o\">=</span> <span class=\"n\">keep_lazy</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)(</span><span class=\"n\">fancy_utility_function</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Or more succinctly:</span>\n<span class=\"nd\">@keep_lazy</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">fancy_utility_function</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">keep_lazy()</span></code> decorator takes a number of extra arguments (<code class=\"docutils literal notranslate\"><span class=\"pre\">*args</span></code>)\nspecifying the type(s) that the original function can return. A common\nuse case is to have functions that return text. For these, you can pass the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code> type to <code class=\"docutils literal notranslate\"><span class=\"pre\">keep_lazy</span></code> (or use the <a class=\"reference internal\" href=\"#django.utils.functional.keep_lazy_text\" title=\"django.utils.functional.keep_lazy_text\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">keep_lazy_text()</span></code></a> decorator\ndescribed in the next section).</p>\n<p>Using this decorator means you can write your function and assume that the\ninput is a proper string, then add support for lazy translation objects at\nthe end.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.functional.keep_lazy_text\">\n<code class=\"sig-name descname\"><span class=\"pre\">keep_lazy_text</span></code>(<em><span class=\"n\"><span class=\"pre\">func</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/functional/#keep_lazy_text\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.functional.keep_lazy_text\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A shortcut for <code class=\"docutils literal notranslate\"><span class=\"pre\">keep_lazy(str)(func)</span></code>.</p>\n<p>If you have a function that returns text and you want to be able to take\nlazy arguments while delaying their evaluation, you can use this\ndecorator:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.utils.functional</span> <span class=\"kn\">import</span> <span class=\"n\">keep_lazy</span><span class=\"p\">,</span> <span class=\"n\">keep_lazy_text</span>\n\n\n<span class=\"c1\"># Our previous example was:</span>\n<span class=\"nd\">@keep_lazy</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">fancy_utility_function</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n\n\n<span class=\"c1\"># Which can be rewritten as:</span>\n<span class=\"nd\">@keep_lazy_text</span>\n<span class=\"k\">def</span> <span class=\"nf\">fancy_utility_function</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-module-django.utils.html\">\n<span id=\"s-django-utils-html\"></span><span id=\"module-django.utils.html\"></span><span id=\"django-utils-html\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.html</span></code><a class=\"headerlink\" href=\"#module-django.utils.html\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Usually you should build up HTML using Django\u2019s templates to make use of its\nautoescape mechanism, using the utilities in <a class=\"reference internal\" href=\"#module-django.utils.safestring\" title=\"django.utils.safestring: Functions and classes for working with strings that can be displayed safely without further escaping in HTML.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.utils.safestring</span></code></a>\nwhere appropriate. This module provides some additional low level utilities for\nescaping HTML.</p>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.html.escape\">\n<code class=\"sig-name descname\"><span class=\"pre\">escape</span></code>(<em><span class=\"n\"><span class=\"pre\">text</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/html/#escape\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.html.escape\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the given text with ampersands, quotes and angle brackets encoded\nfor use in HTML. The input is first coerced to a string and the output has\n<a class=\"reference internal\" href=\"#django.utils.safestring.mark_safe\" title=\"django.utils.safestring.mark_safe\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">mark_safe()</span></code></a> applied.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.html.conditional_escape\">\n<code class=\"sig-name descname\"><span class=\"pre\">conditional_escape</span></code>(<em><span class=\"n\"><span class=\"pre\">text</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/html/#conditional_escape\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.html.conditional_escape\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Similar to <code class=\"docutils literal notranslate\"><span class=\"pre\">escape()</span></code>, except that it doesn\u2019t operate on preescaped\nstrings, so it will not double escape.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.html.format_html\">\n<code class=\"sig-name descname\"><span class=\"pre\">format_html</span></code>(<em><span class=\"n\"><span class=\"pre\">format_string</span></span></em>, <em><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/html/#format_html\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.html.format_html\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This is similar to <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str.format\" title=\"(in Python v3.11)\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">str.format()</span></code></a>, except that it is appropriate for\nbuilding up HTML fragments. The first argument <code class=\"docutils literal notranslate\"><span class=\"pre\">format_string</span></code> is not\nescaped but all other args and kwargs are passed through\n<a class=\"reference internal\" href=\"#django.utils.html.conditional_escape\" title=\"django.utils.html.conditional_escape\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">conditional_escape()</span></code></a> before being passed to <code class=\"docutils literal notranslate\"><span class=\"pre\">str.format()</span></code>.\nFinally, the output has <a class=\"reference internal\" href=\"#django.utils.safestring.mark_safe\" title=\"django.utils.safestring.mark_safe\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">mark_safe()</span></code></a> applied.</p>\n<p>For the case of building up small HTML fragments, this function is to be\npreferred over string interpolation using <code class=\"docutils literal notranslate\"><span class=\"pre\">%</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">str.format()</span></code>\ndirectly, because it applies escaping to all arguments - just like the\ntemplate system applies escaping by default.</p>\n<p>So, instead of writing:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">mark_safe</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\"> &lt;b&gt;</span><span class=\"si\">%s</span><span class=\"s2\">&lt;/b&gt; </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span>\n    <span class=\"o\">%</span> <span class=\"p\">(</span>\n        <span class=\"n\">some_html</span><span class=\"p\">,</span>\n        <span class=\"n\">escape</span><span class=\"p\">(</span><span class=\"n\">some_text</span><span class=\"p\">),</span>\n        <span class=\"n\">escape</span><span class=\"p\">(</span><span class=\"n\">some_other_text</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>You should instead use:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">format_html</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\"> &lt;b&gt;</span><span class=\"si\">{}</span><span class=\"s2\">&lt;/b&gt; </span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">mark_safe</span><span class=\"p\">(</span><span class=\"n\">some_html</span><span class=\"p\">),</span>\n    <span class=\"n\">some_text</span><span class=\"p\">,</span>\n    <span class=\"n\">some_other_text</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>This has the advantage that you don\u2019t need to apply <a class=\"reference internal\" href=\"#django.utils.html.escape\" title=\"django.utils.html.escape\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">escape()</span></code></a> to each\nargument and risk a bug and an XSS vulnerability if you forget one.</p>\n<p>Note that although this function uses <code class=\"docutils literal notranslate\"><span class=\"pre\">str.format()</span></code> to do the\ninterpolation, some of the formatting options provided by <code class=\"docutils literal notranslate\"><span class=\"pre\">str.format()</span></code>\n(e.g. number formatting) will not work, since all arguments are passed\nthrough <a class=\"reference internal\" href=\"#django.utils.html.conditional_escape\" title=\"django.utils.html.conditional_escape\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">conditional_escape()</span></code></a> which (ultimately) calls\n<a class=\"reference internal\" href=\"#django.utils.encoding.force_str\" title=\"django.utils.encoding.force_str\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">force_str()</span></code></a> on the values.</p>\n<div class=\"deprecated\">\n<p><span class=\"versionmodified deprecated\">Deprecated since version 5.0: </span>Support for calling <code class=\"docutils literal notranslate\"><span class=\"pre\">format_html()</span></code> without passing args or kwargs is\ndeprecated.</p>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.html.format_html_join\">\n<code class=\"sig-name descname\"><span class=\"pre\">format_html_join</span></code>(<em><span class=\"n\"><span class=\"pre\">sep</span></span></em>, <em><span class=\"n\"><span class=\"pre\">format_string</span></span></em>, <em><span class=\"n\"><span class=\"pre\">args_generator</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/html/#format_html_join\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.html.format_html_join\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A wrapper of <a class=\"reference internal\" href=\"#django.utils.html.format_html\" title=\"django.utils.html.format_html\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">format_html()</span></code></a>, for the common case of a group of\narguments that need to be formatted using the same format string, and then\njoined using <code class=\"docutils literal notranslate\"><span class=\"pre\">sep</span></code>. <code class=\"docutils literal notranslate\"><span class=\"pre\">sep</span></code> is also passed through\n<a class=\"reference internal\" href=\"#django.utils.html.conditional_escape\" title=\"django.utils.html.conditional_escape\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">conditional_escape()</span></code></a>.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">args_generator</span></code> should be an iterator that returns the sequence of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">args</span></code> that will be passed to <a class=\"reference internal\" href=\"#django.utils.html.format_html\" title=\"django.utils.html.format_html\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">format_html()</span></code></a>. For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">format_html_join</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&lt;li&gt;</span><span class=\"si\">{}</span><span class=\"s2\"> </span><span class=\"si\">{}</span><span class=\"s2\">&lt;/li&gt;&quot;</span><span class=\"p\">,</span> <span class=\"p\">((</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">first_name</span><span class=\"p\">,</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">last_name</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">u</span> <span class=\"ow\">in</span> <span class=\"n\">users</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.html.json_script\">\n<code class=\"sig-name descname\"><span class=\"pre\">json_script</span></code>(<em><span class=\"n\"><span class=\"pre\">value</span></span></em>, <em><span class=\"n\"><span class=\"pre\">element_id</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">encoder</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/html/#json_script\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.html.json_script\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Escapes all HTML/XML special characters with their Unicode escapes, so\nvalue is safe for use with JavaScript. Also wraps the escaped JSON in a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;script&gt;</span></code> tag. If the <code class=\"docutils literal notranslate\"><span class=\"pre\">element_id</span></code> parameter is not <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;script&gt;</span></code> tag is given the passed id. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">json_script</span><span class=\"p\">({</span><span class=\"s2\">&quot;hello&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;world&quot;</span><span class=\"p\">},</span> <span class=\"n\">element_id</span><span class=\"o\">=</span><span class=\"s2\">&quot;hello-data&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;&lt;script id=&quot;hello-data&quot; type=&quot;application/json&quot;&gt;{&quot;hello&quot;: &quot;world&quot;}&lt;/script&gt;&#39;</span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">encoder</span></code>, which defaults to\n<a class=\"reference internal\" href=\"../../topics/serialization/#django.core.serializers.json.DjangoJSONEncoder\" title=\"django.core.serializers.json.DjangoJSONEncoder\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.core.serializers.json.DjangoJSONEncoder</span></code></a>, will be used to\nserialize the data. See <a class=\"reference internal\" href=\"../../topics/serialization/#serialization-formats-json\"><span class=\"std std-ref\">JSON serialization</span></a> for more details about this serializer.</p>\n<div class=\"versionchanged\">\n<span class=\"title\">Changed in Django 4.2:</span> <p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">encoder</span></code> argument was added.</p>\n</div>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.html.strip_tags\">\n<code class=\"sig-name descname\"><span class=\"pre\">strip_tags</span></code>(<em><span class=\"n\"><span class=\"pre\">value</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/html/#strip_tags\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.html.strip_tags\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Tries to remove anything that looks like an HTML tag from the string, that\nis anything contained within <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;&gt;</span></code>.</p>\n<p>Absolutely NO guarantee is provided about the resulting string being\nHTML safe. So NEVER mark safe the result of a <code class=\"docutils literal notranslate\"><span class=\"pre\">strip_tag</span></code> call without\nescaping it first, for example with <a class=\"reference internal\" href=\"#django.utils.html.escape\" title=\"django.utils.html.escape\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">escape()</span></code></a>.</p>\n<p>For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">strip_tags</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;&lt;b&gt;Joel&lt;/b&gt;</span> <span class=\"pre\">&lt;button&gt;is&lt;/button&gt;</span> <span class=\"pre\">a</span> <span class=\"pre\">&lt;span&gt;slug&lt;/span&gt;&quot;</span></code>\nthe return value will be <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Joel</span> <span class=\"pre\">is</span> <span class=\"pre\">a</span> <span class=\"pre\">slug&quot;</span></code>.</p>\n<p>If you are looking for a more robust solution, consider using a third-party\nHTML sanitizing tool.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.html.html_safe\">\n<code class=\"sig-name descname\"><span class=\"pre\">html_safe</span></code>()<a class=\"reference internal\" href=\"../../_modules/django/utils/html/#html_safe\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.html.html_safe\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">__html__()</span></code> method on a class helps non-Django templates detect\nclasses whose output doesn\u2019t require HTML escaping.</p>\n<p>This decorator defines the <code class=\"docutils literal notranslate\"><span class=\"pre\">__html__()</span></code> method on the decorated class\nby wrapping <code class=\"docutils literal notranslate\"><span class=\"pre\">__str__()</span></code> in <a class=\"reference internal\" href=\"#django.utils.safestring.mark_safe\" title=\"django.utils.safestring.mark_safe\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">mark_safe()</span></code></a>.\nEnsure the <code class=\"docutils literal notranslate\"><span class=\"pre\">__str__()</span></code> method does indeed return text that doesn\u2019t\nrequire HTML escaping.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-module-django.utils.http\">\n<span id=\"s-django-utils-http\"></span><span id=\"module-django.utils.http\"></span><span id=\"django-utils-http\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.http</span></code><a class=\"headerlink\" href=\"#module-django.utils.http\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.http.urlencode\">\n<code class=\"sig-name descname\"><span class=\"pre\">urlencode</span></code>(<em><span class=\"n\"><span class=\"pre\">query</span></span></em>, <em><span class=\"n\"><span class=\"pre\">doseq</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/http/#urlencode\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.http.urlencode\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A version of Python\u2019s <a class=\"reference external\" href=\"https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlencode\" title=\"(in Python v3.11)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">urllib.parse.urlencode()</span></code></a> function that can\noperate on <code class=\"docutils literal notranslate\"><span class=\"pre\">MultiValueDict</span></code> and non-string values.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.http.http_date\">\n<code class=\"sig-name descname\"><span class=\"pre\">http_date</span></code>(<em><span class=\"n\"><span class=\"pre\">epoch_seconds</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/http/#http_date\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.http.http_date\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Formats the time to match the <span class=\"target\" id=\"index-5\"></span><a class=\"rfc reference external\" href=\"https://datatracker.ietf.org/doc/html/rfc1123.html#section-5.2.14\"><strong>RFC 1123#section-5.2.14</strong></a> date format as\nspecified by HTTP <span class=\"target\" id=\"index-6\"></span><a class=\"rfc reference external\" href=\"https://datatracker.ietf.org/doc/html/rfc9110.html#section-5.6.7\"><strong>RFC 9110#section-5.6.7</strong></a>.</p>\n<p>Accepts a floating point number expressed in seconds since the epoch in\nUTC\u2013such as that outputted by <code class=\"docutils literal notranslate\"><span class=\"pre\">time.time()</span></code>. If set to <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>,\ndefaults to the current time.</p>\n<p>Outputs a string in the format <code class=\"docutils literal notranslate\"><span class=\"pre\">Wdy,</span> <span class=\"pre\">DD</span> <span class=\"pre\">Mon</span> <span class=\"pre\">YYYY</span> <span class=\"pre\">HH:MM:SS</span> <span class=\"pre\">GMT</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.http.content_disposition_header\">\n<code class=\"sig-name descname\"><span class=\"pre\">content_disposition_header</span></code>(<em><span class=\"n\"><span class=\"pre\">as_attachment</span></span></em>, <em><span class=\"n\"><span class=\"pre\">filename</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/http/#content_disposition_header\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.http.content_disposition_header\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"versionadded\">\n<span class=\"title\">New in Django 4.2.</span> </div>\n<p>Constructs a <code class=\"docutils literal notranslate\"><span class=\"pre\">Content-Disposition</span></code> HTTP header value from the given\n<code class=\"docutils literal notranslate\"><span class=\"pre\">filename</span></code> as specified by <span class=\"target\" id=\"index-7\"></span><a class=\"rfc reference external\" href=\"https://datatracker.ietf.org/doc/html/rfc6266.html\"><strong>RFC 6266</strong></a>. Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> if\n<code class=\"docutils literal notranslate\"><span class=\"pre\">as_attachment</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">filename</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, otherwise\nreturns a string suitable for the <code class=\"docutils literal notranslate\"><span class=\"pre\">Content-Disposition</span></code> HTTP header.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.http.base36_to_int\">\n<code class=\"sig-name descname\"><span class=\"pre\">base36_to_int</span></code>(<em><span class=\"n\"><span class=\"pre\">s</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/http/#base36_to_int\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.http.base36_to_int\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Converts a base 36 string to an integer.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.http.int_to_base36\">\n<code class=\"sig-name descname\"><span class=\"pre\">int_to_base36</span></code>(<em><span class=\"n\"><span class=\"pre\">i</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/http/#int_to_base36\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.http.int_to_base36\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Converts a positive integer to a base 36 string.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.http.urlsafe_base64_encode\">\n<code class=\"sig-name descname\"><span class=\"pre\">urlsafe_base64_encode</span></code>(<em><span class=\"n\"><span class=\"pre\">s</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/http/#urlsafe_base64_encode\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.http.urlsafe_base64_encode\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Encodes a bytestring to a base64 string for use in URLs, stripping any\ntrailing equal signs.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.http.urlsafe_base64_decode\">\n<code class=\"sig-name descname\"><span class=\"pre\">urlsafe_base64_decode</span></code>(<em><span class=\"n\"><span class=\"pre\">s</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/http/#urlsafe_base64_decode\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.http.urlsafe_base64_decode\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Decodes a base64 encoded string, adding back any trailing equal signs that\nmight have been stripped.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-module-django.utils.module_loading\">\n<span id=\"s-django-utils-module-loading\"></span><span id=\"module-django.utils.module_loading\"></span><span id=\"django-utils-module-loading\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.module_loading</span></code><a class=\"headerlink\" href=\"#module-django.utils.module_loading\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Functions for working with Python modules.</p>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.module_loading.import_string\">\n<code class=\"sig-name descname\"><span class=\"pre\">import_string</span></code>(<em><span class=\"n\"><span class=\"pre\">dotted_path</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/module_loading/#import_string\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.module_loading.import_string\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Imports a dotted module path and returns the attribute/class designated by\nthe last name in the path. Raises <code class=\"docutils literal notranslate\"><span class=\"pre\">ImportError</span></code> if the import failed. For\nexample:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.utils.module_loading</span> <span class=\"kn\">import</span> <span class=\"n\">import_string</span>\n\n<span class=\"n\">ValidationError</span> <span class=\"o\">=</span> <span class=\"n\">import_string</span><span class=\"p\">(</span><span class=\"s2\">&quot;django.core.exceptions.ValidationError&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>is equivalent to:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.core.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">ValidationError</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-module-django.utils.safestring\">\n<span id=\"s-django-utils-safestring\"></span><span id=\"module-django.utils.safestring\"></span><span id=\"django-utils-safestring\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.safestring</span></code><a class=\"headerlink\" href=\"#module-django.utils.safestring\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Functions and classes for working with \u201csafe strings\u201d: strings that can be\ndisplayed safely without further escaping in HTML. Marking something as a \u201csafe\nstring\u201d means that the producer of the string has already turned characters\nthat should not be interpreted by the HTML engine (e.g. \u2018&lt;\u2019) into the\nappropriate entities.</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.utils.safestring.SafeString\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">SafeString</span></code><a class=\"reference internal\" href=\"../../_modules/django/utils/safestring/#SafeString\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.safestring.SafeString\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A <code class=\"docutils literal notranslate\"><span class=\"pre\">str</span></code> subclass that has been specifically marked as \u201csafe\u201d (requires no\nfurther escaping) for HTML output purposes.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.safestring.mark_safe\">\n<code class=\"sig-name descname\"><span class=\"pre\">mark_safe</span></code>(<em><span class=\"n\"><span class=\"pre\">s</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/safestring/#mark_safe\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.safestring.mark_safe\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Explicitly mark a string as safe for (HTML) output purposes. The returned\nobject can be used everywhere a string is appropriate.</p>\n<p>Can be called multiple times on a single string.</p>\n<p>Can also be used as a decorator.</p>\n<p>For building up fragments of HTML, you should normally be using\n<a class=\"reference internal\" href=\"#django.utils.html.format_html\" title=\"django.utils.html.format_html\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.utils.html.format_html()</span></code></a> instead.</p>\n<p>String marked safe will become unsafe again if modified. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mystr</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&lt;b&gt;Hello World&lt;/b&gt;   &quot;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mystr</span> <span class=\"o\">=</span> <span class=\"n\">mark_safe</span><span class=\"p\">(</span><span class=\"n\">mystr</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">mystr</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;class &#39;django.utils.safestring.SafeString&#39;&gt;</span>\n\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mystr</span> <span class=\"o\">=</span> <span class=\"n\">mystr</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span>  <span class=\"c1\"># removing whitespace</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">mystr</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;type &#39;str&#39;&gt;</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-module-django.utils.text\">\n<span id=\"s-django-utils-text\"></span><span id=\"module-django.utils.text\"></span><span id=\"django-utils-text\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.text</span></code><a class=\"headerlink\" href=\"#module-django.utils.text\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.text.format_lazy\">\n<code class=\"sig-name descname\"><span class=\"pre\">format_lazy</span></code>(<em><span class=\"n\"><span class=\"pre\">format_string</span></span></em>, <em><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"headerlink\" href=\"#django.utils.text.format_lazy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A version of <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str.format\" title=\"(in Python v3.11)\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">str.format()</span></code></a> for when <code class=\"docutils literal notranslate\"><span class=\"pre\">format_string</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">args</span></code>,\nand/or <code class=\"docutils literal notranslate\"><span class=\"pre\">kwargs</span></code> contain lazy objects. The first argument is the string to\nbe formatted. For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.utils.text</span> <span class=\"kn\">import</span> <span class=\"n\">format_lazy</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.translation</span> <span class=\"kn\">import</span> <span class=\"n\">pgettext_lazy</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span>\n        <span class=\"n\">format_lazy</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"si\">{person}</span><span class=\"s2\">/&lt;int:pk&gt;/&quot;</span><span class=\"p\">,</span> <span class=\"n\">person</span><span class=\"o\">=</span><span class=\"n\">pgettext_lazy</span><span class=\"p\">(</span><span class=\"s2\">&quot;URL&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;person&quot;</span><span class=\"p\">)),</span>\n        <span class=\"n\">PersonDetailView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span>\n    <span class=\"p\">),</span>\n<span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>This example allows translators to translate part of the URL. If \u201cperson\u201d\nis translated to \u201cpersona\u201d, the regular expression will match\n<code class=\"docutils literal notranslate\"><span class=\"pre\">persona/(?P&lt;pk&gt;\\d+)/$</span></code>, e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">persona/5/</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.text.slugify\">\n<code class=\"sig-name descname\"><span class=\"pre\">slugify</span></code>(<em><span class=\"n\"><span class=\"pre\">value</span></span></em>, <em><span class=\"n\"><span class=\"pre\">allow_unicode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/text/#slugify\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.text.slugify\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Converts a string to a URL slug by:</p>\n<ol class=\"arabic simple\">\n<li>Converting to ASCII if <code class=\"docutils literal notranslate\"><span class=\"pre\">allow_unicode</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> (the default).</li>\n<li>Converting to lowercase.</li>\n<li>Removing characters that aren\u2019t alphanumerics, underscores, hyphens, or\nwhitespace.</li>\n<li>Replacing any whitespace or repeated dashes with single dashes.</li>\n<li>Removing leading and trailing whitespace, dashes, and underscores.</li>\n</ol>\n<p>For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">slugify</span><span class=\"p\">(</span><span class=\"s2\">&quot; Joel is a slug &quot;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;joel-is-a-slug&#39;</span>\n</pre></div>\n</div>\n<p>If you want to allow Unicode characters, pass <code class=\"docutils literal notranslate\"><span class=\"pre\">allow_unicode=True</span></code>. For\nexample:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">slugify</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u4f60\u597d World&quot;</span><span class=\"p\">,</span> <span class=\"n\">allow_unicode</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;\u4f60\u597d-world&#39;</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-module-django.utils.timezone\">\n<span id=\"s-django-utils-timezone\"></span><span id=\"s-time-zone-selection-functions\"></span><span id=\"module-django.utils.timezone\"></span><span id=\"django-utils-timezone\"></span><span id=\"time-zone-selection-functions\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.timezone</span></code><a class=\"headerlink\" href=\"#module-django.utils.timezone\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.timezone.get_fixed_timezone\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_fixed_timezone</span></code>(<em><span class=\"n\"><span class=\"pre\">offset</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/timezone/#get_fixed_timezone\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.timezone.get_fixed_timezone\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.tzinfo\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">tzinfo</span></code></a> instance that represents a time zone\nwith a fixed offset from UTC.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">offset</span></code> is a <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.timedelta\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">datetime.timedelta</span></code></a> or an integer number of\nminutes. Use positive values for time zones east of UTC and negative\nvalues for west of UTC.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.timezone.get_default_timezone\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_default_timezone</span></code>()<a class=\"reference internal\" href=\"../../_modules/django/utils/timezone/#get_default_timezone\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.timezone.get_default_timezone\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.tzinfo\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">tzinfo</span></code></a> instance that represents the\n<a class=\"reference internal\" href=\"../../topics/i18n/timezones/#default-current-time-zone\"><span class=\"std std-ref\">default time zone</span></a>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.timezone.get_default_timezone_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_default_timezone_name</span></code>()<a class=\"reference internal\" href=\"../../_modules/django/utils/timezone/#get_default_timezone_name\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.timezone.get_default_timezone_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the name of the <a class=\"reference internal\" href=\"../../topics/i18n/timezones/#default-current-time-zone\"><span class=\"std std-ref\">default time zone</span></a>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.timezone.get_current_timezone\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_current_timezone</span></code>()<a class=\"reference internal\" href=\"../../_modules/django/utils/timezone/#get_current_timezone\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.timezone.get_current_timezone\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.tzinfo\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">tzinfo</span></code></a> instance that represents the\n<a class=\"reference internal\" href=\"../../topics/i18n/timezones/#default-current-time-zone\"><span class=\"std std-ref\">current time zone</span></a>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.timezone.get_current_timezone_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_current_timezone_name</span></code>()<a class=\"reference internal\" href=\"../../_modules/django/utils/timezone/#get_current_timezone_name\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.timezone.get_current_timezone_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the name of the <a class=\"reference internal\" href=\"../../topics/i18n/timezones/#default-current-time-zone\"><span class=\"std std-ref\">current time zone</span></a>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.timezone.activate\">\n<code class=\"sig-name descname\"><span class=\"pre\">activate</span></code>(<em><span class=\"n\"><span class=\"pre\">timezone</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/timezone/#activate\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.timezone.activate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sets the <a class=\"reference internal\" href=\"../../topics/i18n/timezones/#default-current-time-zone\"><span class=\"std std-ref\">current time zone</span></a>. The\n<code class=\"docutils literal notranslate\"><span class=\"pre\">timezone</span></code> argument must be an instance of a <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.tzinfo\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">tzinfo</span></code></a>\nsubclass or a time zone name.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.timezone.deactivate\">\n<code class=\"sig-name descname\"><span class=\"pre\">deactivate</span></code>()<a class=\"reference internal\" href=\"../../_modules/django/utils/timezone/#deactivate\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.timezone.deactivate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Unsets the <a class=\"reference internal\" href=\"../../topics/i18n/timezones/#default-current-time-zone\"><span class=\"std std-ref\">current time zone</span></a>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.timezone.override\">\n<code class=\"sig-name descname\"><span class=\"pre\">override</span></code>(<em><span class=\"n\"><span class=\"pre\">timezone</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/timezone/#override\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.timezone.override\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This is a Python context manager that sets the <a class=\"reference internal\" href=\"../../topics/i18n/timezones/#default-current-time-zone\"><span class=\"std std-ref\">current time zone</span></a> on entry with <a class=\"reference internal\" href=\"#django.utils.timezone.activate\" title=\"django.utils.timezone.activate\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">activate()</span></code></a>, and restores\nthe previously active time zone on exit. If the <code class=\"docutils literal notranslate\"><span class=\"pre\">timezone</span></code> argument is\n<code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, the <a class=\"reference internal\" href=\"../../topics/i18n/timezones/#default-current-time-zone\"><span class=\"std std-ref\">current time zone</span></a> is unset\non entry with <a class=\"reference internal\" href=\"#django.utils.timezone.deactivate\" title=\"django.utils.timezone.deactivate\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">deactivate()</span></code></a> instead.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">override</span></code> is also usable as a function decorator.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.timezone.localtime\">\n<code class=\"sig-name descname\"><span class=\"pre\">localtime</span></code>(<em><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">timezone</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/timezone/#localtime\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.timezone.localtime\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Converts an aware <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">datetime</span></code></a> to a different time zone,\nby default the <a class=\"reference internal\" href=\"../../topics/i18n/timezones/#default-current-time-zone\"><span class=\"std std-ref\">current time zone</span></a>.</p>\n<p>When <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> is omitted, it defaults to <a class=\"reference internal\" href=\"#django.utils.timezone.now\" title=\"django.utils.timezone.now\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">now()</span></code></a>.</p>\n<p>This function doesn\u2019t work on naive datetimes; use <a class=\"reference internal\" href=\"#django.utils.timezone.make_aware\" title=\"django.utils.timezone.make_aware\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">make_aware()</span></code></a>\ninstead.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.timezone.localdate\">\n<code class=\"sig-name descname\"><span class=\"pre\">localdate</span></code>(<em><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">timezone</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/timezone/#localdate\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.timezone.localdate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Uses <a class=\"reference internal\" href=\"#django.utils.timezone.localtime\" title=\"django.utils.timezone.localtime\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">localtime()</span></code></a> to convert an aware <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">datetime</span></code></a> to a\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime.date\" title=\"(in Python v3.11)\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">date()</span></code></a> in a different time zone, by default the\n<a class=\"reference internal\" href=\"../../topics/i18n/timezones/#default-current-time-zone\"><span class=\"std std-ref\">current time zone</span></a>.</p>\n<p>When <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> is omitted, it defaults to <a class=\"reference internal\" href=\"#django.utils.timezone.now\" title=\"django.utils.timezone.now\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">now()</span></code></a>.</p>\n<p>This function doesn\u2019t work on naive datetimes.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.timezone.now\">\n<code class=\"sig-name descname\"><span class=\"pre\">now</span></code>()<a class=\"reference internal\" href=\"../../_modules/django/utils/timezone/#now\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.timezone.now\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">datetime</span></code></a> that represents the\ncurrent point in time. Exactly what\u2019s returned depends on the value of\n<a class=\"reference internal\" href=\"../settings/#std-setting-USE_TZ\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">USE_TZ</span></code></a>:</p>\n<ul class=\"simple\">\n<li>If <a class=\"reference internal\" href=\"../settings/#std-setting-USE_TZ\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">USE_TZ</span></code></a> is <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>, this will be a\n<a class=\"reference internal\" href=\"../../topics/i18n/timezones/#naive-vs-aware-datetimes\"><span class=\"std std-ref\">naive</span></a> datetime (i.e. a datetime\nwithout an associated timezone) that represents the current time\nin the system\u2019s local timezone.</li>\n<li>If <a class=\"reference internal\" href=\"../settings/#std-setting-USE_TZ\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">USE_TZ</span></code></a> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, this will be an\n<a class=\"reference internal\" href=\"../../topics/i18n/timezones/#naive-vs-aware-datetimes\"><span class=\"std std-ref\">aware</span></a> datetime representing the\ncurrent time in UTC. Note that <a class=\"reference internal\" href=\"#django.utils.timezone.now\" title=\"django.utils.timezone.now\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">now()</span></code></a> will always return\ntimes in UTC regardless of the value of <a class=\"reference internal\" href=\"../settings/#std-setting-TIME_ZONE\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">TIME_ZONE</span></code></a>;\nyou can use <a class=\"reference internal\" href=\"#django.utils.timezone.localtime\" title=\"django.utils.timezone.localtime\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">localtime()</span></code></a> to get the time in the current time zone.</li>\n</ul>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.timezone.is_aware\">\n<code class=\"sig-name descname\"><span class=\"pre\">is_aware</span></code>(<em><span class=\"n\"><span class=\"pre\">value</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/timezone/#is_aware\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.timezone.is_aware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> is aware, <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> if it is naive. This\nfunction assumes that <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> is a <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">datetime</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.timezone.is_naive\">\n<code class=\"sig-name descname\"><span class=\"pre\">is_naive</span></code>(<em><span class=\"n\"><span class=\"pre\">value</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/timezone/#is_naive\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.timezone.is_naive\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> is naive, <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> if it is aware. This\nfunction assumes that <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> is a <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">datetime</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.timezone.make_aware\">\n<code class=\"sig-name descname\"><span class=\"pre\">make_aware</span></code>(<em><span class=\"n\"><span class=\"pre\">value</span></span></em>, <em><span class=\"n\"><span class=\"pre\">timezone</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/timezone/#make_aware\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.timezone.make_aware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns an aware <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">datetime</span></code></a> that represents the same\npoint in time as <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> in <code class=\"docutils literal notranslate\"><span class=\"pre\">timezone</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> being a naive\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">datetime</span></code></a>. If <code class=\"docutils literal notranslate\"><span class=\"pre\">timezone</span></code> is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, it\ndefaults to the <a class=\"reference internal\" href=\"../../topics/i18n/timezones/#default-current-time-zone\"><span class=\"std std-ref\">current time zone</span></a>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.timezone.make_naive\">\n<code class=\"sig-name descname\"><span class=\"pre\">make_naive</span></code>(<em><span class=\"n\"><span class=\"pre\">value</span></span></em>, <em><span class=\"n\"><span class=\"pre\">timezone</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/timezone/#make_naive\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.timezone.make_naive\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a naive <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">datetime</span></code></a> that represents in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">timezone</span></code>  the same point in time as <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> being an\naware <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">datetime</span></code></a>. If <code class=\"docutils literal notranslate\"><span class=\"pre\">timezone</span></code> is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, it\ndefaults to the <a class=\"reference internal\" href=\"../../topics/i18n/timezones/#default-current-time-zone\"><span class=\"std std-ref\">current time zone</span></a>.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-module-django.utils.translation\">\n<span id=\"s-django-utils-translation\"></span><span id=\"module-django.utils.translation\"></span><span id=\"django-utils-translation\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.translation</span></code><a class=\"headerlink\" href=\"#module-django.utils.translation\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>For a complete discussion on the usage of the following see the\n<a class=\"reference internal\" href=\"../../topics/i18n/translation/\"><span class=\"doc\">translation documentation</span></a>.</p>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.translation.gettext\">\n<code class=\"sig-name descname\"><span class=\"pre\">gettext</span></code>(<em><span class=\"n\"><span class=\"pre\">message</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/translation/#gettext\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.translation.gettext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Translates <code class=\"docutils literal notranslate\"><span class=\"pre\">message</span></code> and returns it as a string.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.translation.pgettext\">\n<code class=\"sig-name descname\"><span class=\"pre\">pgettext</span></code>(<em><span class=\"n\"><span class=\"pre\">context</span></span></em>, <em><span class=\"n\"><span class=\"pre\">message</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/translation/#pgettext\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.translation.pgettext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Translates <code class=\"docutils literal notranslate\"><span class=\"pre\">message</span></code> given the <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code> and returns it as a string.</p>\n<p>For more information, see <a class=\"reference internal\" href=\"../../topics/i18n/translation/#contextual-markers\"><span class=\"std std-ref\">Contextual markers</span></a>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.translation.gettext_lazy\">\n<code class=\"sig-name descname\"><span class=\"pre\">gettext_lazy</span></code>(<em><span class=\"n\"><span class=\"pre\">message</span></span></em>)<a class=\"headerlink\" href=\"#django.utils.translation.gettext_lazy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.translation.pgettext_lazy\">\n<code class=\"sig-name descname\"><span class=\"pre\">pgettext_lazy</span></code>(<em><span class=\"n\"><span class=\"pre\">context</span></span></em>, <em><span class=\"n\"><span class=\"pre\">message</span></span></em>)<a class=\"headerlink\" href=\"#django.utils.translation.pgettext_lazy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Same as the non-lazy versions above, but using lazy execution.</p>\n<p>See <a class=\"reference internal\" href=\"../../topics/i18n/translation/#lazy-translations\"><span class=\"std std-ref\">lazy translations documentation</span></a>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.translation.gettext_noop\">\n<code class=\"sig-name descname\"><span class=\"pre\">gettext_noop</span></code>(<em><span class=\"n\"><span class=\"pre\">message</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/translation/#gettext_noop\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.translation.gettext_noop\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Marks strings for translation but doesn\u2019t translate them now. This can be\nused to store strings in global variables that should stay in the base\nlanguage (because they might be used externally) and will be translated\nlater.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.translation.ngettext\">\n<code class=\"sig-name descname\"><span class=\"pre\">ngettext</span></code>(<em><span class=\"n\"><span class=\"pre\">singular</span></span></em>, <em><span class=\"n\"><span class=\"pre\">plural</span></span></em>, <em><span class=\"n\"><span class=\"pre\">number</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/translation/#ngettext\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.translation.ngettext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Translates <code class=\"docutils literal notranslate\"><span class=\"pre\">singular</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">plural</span></code> and returns the appropriate string\nbased on <code class=\"docutils literal notranslate\"><span class=\"pre\">number</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.translation.npgettext\">\n<code class=\"sig-name descname\"><span class=\"pre\">npgettext</span></code>(<em><span class=\"n\"><span class=\"pre\">context</span></span></em>, <em><span class=\"n\"><span class=\"pre\">singular</span></span></em>, <em><span class=\"n\"><span class=\"pre\">plural</span></span></em>, <em><span class=\"n\"><span class=\"pre\">number</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/translation/#npgettext\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.translation.npgettext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Translates <code class=\"docutils literal notranslate\"><span class=\"pre\">singular</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">plural</span></code> and returns the appropriate string\nbased on <code class=\"docutils literal notranslate\"><span class=\"pre\">number</span></code> and the <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.translation.ngettext_lazy\">\n<code class=\"sig-name descname\"><span class=\"pre\">ngettext_lazy</span></code>(<em><span class=\"n\"><span class=\"pre\">singular</span></span></em>, <em><span class=\"n\"><span class=\"pre\">plural</span></span></em>, <em><span class=\"n\"><span class=\"pre\">number</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/translation/#ngettext_lazy\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.translation.ngettext_lazy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.translation.npgettext_lazy\">\n<code class=\"sig-name descname\"><span class=\"pre\">npgettext_lazy</span></code>(<em><span class=\"n\"><span class=\"pre\">context</span></span></em>, <em><span class=\"n\"><span class=\"pre\">singular</span></span></em>, <em><span class=\"n\"><span class=\"pre\">plural</span></span></em>, <em><span class=\"n\"><span class=\"pre\">number</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/translation/#npgettext_lazy\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.translation.npgettext_lazy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Same as the non-lazy versions above, but using lazy execution.</p>\n<p>See <a class=\"reference internal\" href=\"../../topics/i18n/translation/#lazy-translations\"><span class=\"std std-ref\">lazy translations documentation</span></a>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.translation.activate\">\n<code class=\"sig-name descname\"><span class=\"pre\">activate</span></code>(<em><span class=\"n\"><span class=\"pre\">language</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/translation/#activate\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.translation.activate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Fetches the translation object for a given language and activates it as\nthe current translation object for the current thread.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.translation.deactivate\">\n<code class=\"sig-name descname\"><span class=\"pre\">deactivate</span></code>()<a class=\"reference internal\" href=\"../../_modules/django/utils/translation/#deactivate\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.translation.deactivate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Deactivates the currently active translation object so that further _ calls\nwill resolve against the default translation object, again.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.translation.deactivate_all\">\n<code class=\"sig-name descname\"><span class=\"pre\">deactivate_all</span></code>()<a class=\"reference internal\" href=\"../../_modules/django/utils/translation/#deactivate_all\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.translation.deactivate_all\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Makes the active translation object a <code class=\"docutils literal notranslate\"><span class=\"pre\">NullTranslations()</span></code> instance.\nThis is useful when we want delayed translations to appear as the original\nstring for some reason.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.translation.override\">\n<code class=\"sig-name descname\"><span class=\"pre\">override</span></code>(<em><span class=\"n\"><span class=\"pre\">language</span></span></em>, <em><span class=\"n\"><span class=\"pre\">deactivate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/translation/#override\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.translation.override\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A Python context manager that uses\n<a class=\"reference internal\" href=\"#django.utils.translation.activate\" title=\"django.utils.translation.activate\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.utils.translation.activate()</span></code></a> to fetch the translation object\nfor a given language, activates it as the translation object for the\ncurrent thread and reactivates the previous active language on exit.\nOptionally, it can deactivate the temporary translation on exit with\n<a class=\"reference internal\" href=\"#django.utils.translation.deactivate\" title=\"django.utils.translation.deactivate\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.utils.translation.deactivate()</span></code></a> if the <code class=\"docutils literal notranslate\"><span class=\"pre\">deactivate</span></code> argument\nis <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>. If you pass <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> as the language argument, a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">NullTranslations()</span></code> instance is activated within the context.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">override</span></code> is also usable as a function decorator.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.translation.check_for_language\">\n<code class=\"sig-name descname\"><span class=\"pre\">check_for_language</span></code>(<em><span class=\"n\"><span class=\"pre\">lang_code</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/translation/#check_for_language\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.translation.check_for_language\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Checks whether there is a global language file for the given language\ncode (e.g. \u2018fr\u2019, \u2018pt_BR\u2019). This is used to decide whether a user-provided\nlanguage is available.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.translation.get_language\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_language</span></code>()<a class=\"reference internal\" href=\"../../_modules/django/utils/translation/#get_language\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.translation.get_language\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the currently selected language code. Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> if\ntranslations are temporarily deactivated (by <a class=\"reference internal\" href=\"#django.utils.translation.deactivate_all\" title=\"django.utils.translation.deactivate_all\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">deactivate_all()</span></code></a> or\nwhen <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> is passed to <a class=\"reference internal\" href=\"#django.utils.translation.override\" title=\"django.utils.translation.override\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">override()</span></code></a>).</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.translation.get_language_bidi\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_language_bidi</span></code>()<a class=\"reference internal\" href=\"../../_modules/django/utils/translation/#get_language_bidi\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.translation.get_language_bidi\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns selected language\u2019s BiDi layout:</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> = left-to-right layout</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> = right-to-left layout</li>\n</ul>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.translation.get_language_from_request\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_language_from_request</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">check_path</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/translation/#get_language_from_request\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.translation.get_language_from_request\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Analyzes the request to find what language the user wants the system to\nshow. Only languages listed in settings.LANGUAGES are taken into account.\nIf the user requests a sublanguage where we have a main language, we send\nout the main language.</p>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">check_path</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, the function first checks the requested URL\nfor whether its path begins with a language code listed in the\n<a class=\"reference internal\" href=\"../settings/#std-setting-LANGUAGES\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">LANGUAGES</span></code></a> setting.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.translation.get_supported_language_variant\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_supported_language_variant</span></code>(<em><span class=\"n\"><span class=\"pre\">lang_code</span></span></em>, <em><span class=\"n\"><span class=\"pre\">strict</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/translation/#get_supported_language_variant\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.translation.get_supported_language_variant\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">lang_code</span></code> if it\u2019s in the <a class=\"reference internal\" href=\"../settings/#std-setting-LANGUAGES\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">LANGUAGES</span></code></a> setting, possibly\nselecting a more generic variant. For example, <code class=\"docutils literal notranslate\"><span class=\"pre\">'es'</span></code> is returned if\n<code class=\"docutils literal notranslate\"><span class=\"pre\">lang_code</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">'es-ar'</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">'es'</span></code> is in <a class=\"reference internal\" href=\"../settings/#std-setting-LANGUAGES\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">LANGUAGES</span></code></a> but\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'es-ar'</span></code> isn\u2019t.</p>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">strict</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> (the default), a country-specific variant may\nbe returned when neither the language code nor its generic variant is found.\nFor example, if only <code class=\"docutils literal notranslate\"><span class=\"pre\">'es-co'</span></code> is in <a class=\"reference internal\" href=\"../settings/#std-setting-LANGUAGES\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">LANGUAGES</span></code></a>, that\u2019s\nreturned for <code class=\"docutils literal notranslate\"><span class=\"pre\">lang_code</span></code>s like <code class=\"docutils literal notranslate\"><span class=\"pre\">'es'</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">'es-ar'</span></code>. Those matches\naren\u2019t returned if <code class=\"docutils literal notranslate\"><span class=\"pre\">strict=True</span></code>.</p>\n<p>Raises <a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#LookupError\" title=\"(in Python v3.11)\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">LookupError</span></code></a> if nothing is found.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.translation.to_locale\">\n<code class=\"sig-name descname\"><span class=\"pre\">to_locale</span></code>(<em><span class=\"n\"><span class=\"pre\">language</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/translation/#to_locale\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.translation.to_locale\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Turns a language name (en-us) into a locale name (en_US).</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.utils.translation.templatize\">\n<code class=\"sig-name descname\"><span class=\"pre\">templatize</span></code>(<em><span class=\"n\"><span class=\"pre\">src</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/translation/#templatize\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.translation.templatize\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Turns a Django template into something that is understood by <code class=\"docutils literal notranslate\"><span class=\"pre\">xgettext</span></code>.\nIt does so by translating the Django translation tags into standard\n<code class=\"docutils literal notranslate\"><span class=\"pre\">gettext</span></code> function invocations.</p>\n</dd></dl>\n\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["ref/validators", "Validators", "N", "next"], ["ref/urls", "<code class=\"docutils literal notranslate\"><span class=\"pre\">django.urls</span></code> functions for use in URLconfs", "P", "previous"]], "sourcename": "ref/utils.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Django Utils</a><ul>\n<li><a class=\"reference internal\" href=\"#module-django.utils.cache\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.cache</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-django.utils.dateparse\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.dateparse</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-django.utils.decorators\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.decorators</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-django.utils.encoding\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.encoding</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-django.utils.feedgenerator\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.feedgenerator</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#syndicationfeed\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SyndicationFeed</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#enclosure\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Enclosure</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#rssfeed\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RssFeed</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#rss201rev2feed\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Rss201rev2Feed</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#rssuserland091feed\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RssUserland091Feed</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#atom1feed\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Atom1Feed</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-django.utils.functional\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.functional</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-django.utils.html\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.html</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-django.utils.http\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.http</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-django.utils.module_loading\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.module_loading</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-django.utils.safestring\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.safestring</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-django.utils.text\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.text</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-django.utils.timezone\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.timezone</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#module-django.utils.translation\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.translation</span></code></a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "ref/utils", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
