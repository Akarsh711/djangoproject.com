{"parents": [{"link": "../", "title": "API Reference"}], "prev": {"link": "../unicode/", "title": "Unicode data"}, "next": {"link": "../urls/", "title": "<code class=\"docutils literal notranslate\"><span class=\"pre\">django.urls</span></code> functions for use in URLconfs"}, "title": "<code class=\"docutils literal notranslate\"><span class=\"pre\">django.urls</span></code> utility functions", "meta": {}, "body": "<div class=\"section\" id=\"s-module-django.urls\">\n<span id=\"s-django-urls-utility-functions\"></span><span id=\"module-django.urls\"></span><span id=\"django-urls-utility-functions\"></span><h1><code class=\"docutils literal notranslate\"><span class=\"pre\">django.urls</span></code> utility functions<a class=\"headerlink\" href=\"#module-django.urls\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"s-reverse\">\n<span id=\"reverse\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">reverse()</span></code><a class=\"headerlink\" href=\"#reverse\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>If you need to use something similar to the <a class=\"reference internal\" href=\"../templates/builtins/#std-templatetag-url\"><code class=\"xref std std-ttag docutils literal notranslate\"><span class=\"pre\">url</span></code></a> template tag in\nyour code, Django provides the following function:</p>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.urls.reverse\">\n<code class=\"sig-name descname\"><span class=\"pre\">reverse</span></code>(<em><span class=\"n\"><span class=\"pre\">viewname</span></span></em>, <em><span class=\"n\"><span class=\"pre\">urlconf</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">args</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">kwargs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">current_app</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/urls/base/#reverse\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.urls.reverse\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">viewname</span></code> can be a <a class=\"reference internal\" href=\"../../topics/http/urls/#naming-url-patterns\"><span class=\"std std-ref\">URL pattern name</span></a> or the\ncallable view object. For example, given the following <code class=\"docutils literal notranslate\"><span class=\"pre\">url</span></code>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">news</span> <span class=\"kn\">import</span> <span class=\"n\">views</span>\n\n<span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;archive/&quot;</span><span class=\"p\">,</span> <span class=\"n\">views</span><span class=\"o\">.</span><span class=\"n\">archive</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;news-archive&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>you can use any of the following to reverse the URL:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># using the named URL</span>\n<span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s2\">&quot;news-archive&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># passing a callable object</span>\n<span class=\"c1\"># (This is discouraged because you can&#39;t reverse namespaced views this way.)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">news</span> <span class=\"kn\">import</span> <span class=\"n\">views</span>\n\n<span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"n\">views</span><span class=\"o\">.</span><span class=\"n\">archive</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>If the URL accepts arguments, you may pass them in <code class=\"docutils literal notranslate\"><span class=\"pre\">args</span></code>. For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">reverse</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">myview</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">HttpResponseRedirect</span><span class=\"p\">(</span><span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s2\">&quot;arch-summary&quot;</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1945</span><span class=\"p\">]))</span>\n</pre></div>\n</div>\n<p>You can also pass <code class=\"docutils literal notranslate\"><span class=\"pre\">kwargs</span></code> instead of <code class=\"docutils literal notranslate\"><span class=\"pre\">args</span></code>. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s2\">&quot;admin:app_list&quot;</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;app_label&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;auth&quot;</span><span class=\"p\">})</span>\n<span class=\"go\">&#39;/admin/auth/&#39;</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">args</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">kwargs</span></code> cannot be passed to <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse()</span></code> at the same time.</p>\n<p>If no match can be made, <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse()</span></code> raises a\n<a class=\"reference internal\" href=\"../exceptions/#django.urls.NoReverseMatch\" title=\"django.urls.NoReverseMatch\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">NoReverseMatch</span></code></a> exception.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse()</span></code> function can reverse a large variety of regular expression\npatterns for URLs, but not every possible one. The main restriction at the\nmoment is that the pattern cannot contain alternative choices using the\nvertical bar (<code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;|&quot;</span></code>) character. You can quite happily use such patterns for\nmatching against incoming URLs and sending them off to views, but you cannot\nreverse such patterns.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">current_app</span></code> argument allows you to provide a hint to the resolver\nindicating the application to which the currently executing view belongs.\nThis <code class=\"docutils literal notranslate\"><span class=\"pre\">current_app</span></code> argument is used as a hint to resolve application\nnamespaces into URLs on specific application instances, according to the\n<a class=\"reference internal\" href=\"../../topics/http/urls/#topics-http-reversing-url-namespaces\"><span class=\"std std-ref\">namespaced URL resolution strategy</span></a>.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">urlconf</span></code> argument is the URLconf module containing the URL patterns to\nuse for reversing. By default, the root URLconf for the current thread is used.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p>The string returned by <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse()</span></code> is already\n<a class=\"reference internal\" href=\"../unicode/#uri-and-iri-handling\"><span class=\"std std-ref\">urlquoted</span></a>. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s2\">&quot;cities&quot;</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;Orl\u00e9ans&quot;</span><span class=\"p\">])</span>\n<span class=\"go\">&#39;.../Orl%C3%A9ans/&#39;</span>\n</pre></div>\n</div>\n<p class=\"last\">Applying further encoding (such as <a class=\"reference external\" href=\"https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote\" title=\"(in Python v3.11)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">urllib.parse.quote()</span></code></a>) to the output\nof <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse()</span></code> may produce undesirable results.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-reverse-lazy\">\n<span id=\"reverse-lazy\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_lazy()</span></code><a class=\"headerlink\" href=\"#reverse-lazy\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>A lazily evaluated version of <a class=\"reference internal\" href=\"#reverse\">reverse()</a>.</p>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.urls.reverse_lazy\">\n<code class=\"sig-name descname\"><span class=\"pre\">reverse_lazy</span></code>(<em><span class=\"n\"><span class=\"pre\">viewname</span></span></em>, <em><span class=\"n\"><span class=\"pre\">urlconf</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">args</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">kwargs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">current_app</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.urls.reverse_lazy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>It is useful for when you need to use a URL reversal before your project\u2019s\nURLConf is loaded. Some common cases where this function is necessary are:</p>\n<ul class=\"simple\">\n<li>providing a reversed URL as the <code class=\"docutils literal notranslate\"><span class=\"pre\">url</span></code> attribute of a generic class-based\nview.</li>\n<li>providing a reversed URL to a decorator (such as the <code class=\"docutils literal notranslate\"><span class=\"pre\">login_url</span></code> argument\nfor the <a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.decorators.permission_required\" title=\"django.contrib.auth.decorators.permission_required\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.contrib.auth.decorators.permission_required()</span></code></a>\ndecorator).</li>\n<li>providing a reversed URL as a default value for a parameter in a function\u2019s\nsignature.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-resolve\">\n<span id=\"resolve\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">resolve()</span></code><a class=\"headerlink\" href=\"#resolve\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">resolve()</span></code> function can be used for resolving URL paths to the\ncorresponding view functions. It has the following signature:</p>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.urls.resolve\">\n<code class=\"sig-name descname\"><span class=\"pre\">resolve</span></code>(<em><span class=\"n\"><span class=\"pre\">path</span></span></em>, <em><span class=\"n\"><span class=\"pre\">urlconf</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/urls/base/#resolve\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.urls.resolve\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">path</span></code> is the URL path you want to resolve. As with\n<a class=\"reference internal\" href=\"#django.urls.reverse\" title=\"django.urls.reverse\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">reverse()</span></code></a>, you don\u2019t need to worry about the <code class=\"docutils literal notranslate\"><span class=\"pre\">urlconf</span></code>\nparameter. The function returns a <a class=\"reference internal\" href=\"#django.urls.ResolverMatch\" title=\"django.urls.ResolverMatch\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ResolverMatch</span></code></a> object that allows you\nto access various metadata about the resolved URL.</p>\n<p>If the URL does not resolve, the function raises a\n<a class=\"reference internal\" href=\"../exceptions/#django.urls.Resolver404\" title=\"django.urls.Resolver404\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">Resolver404</span></code></a> exception (a subclass of\n<a class=\"reference internal\" href=\"../../topics/http/views/#django.http.Http404\" title=\"django.http.Http404\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Http404</span></code></a>) .</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.urls.ResolverMatch\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ResolverMatch</span></code><a class=\"reference internal\" href=\"../../_modules/django/urls/resolvers/#ResolverMatch\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.urls.ResolverMatch\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.urls.ResolverMatch.func\">\n<code class=\"sig-name descname\"><span class=\"pre\">func</span></code><a class=\"headerlink\" href=\"#django.urls.ResolverMatch.func\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The view function that would be used to serve the URL</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.urls.ResolverMatch.args\">\n<code class=\"sig-name descname\"><span class=\"pre\">args</span></code><a class=\"headerlink\" href=\"#django.urls.ResolverMatch.args\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The arguments that would be passed to the view function, as\nparsed from the URL.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.urls.ResolverMatch.kwargs\">\n<code class=\"sig-name descname\"><span class=\"pre\">kwargs</span></code><a class=\"headerlink\" href=\"#django.urls.ResolverMatch.kwargs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All keyword arguments that would be passed to the view function, i.e.\n<a class=\"reference internal\" href=\"#django.urls.ResolverMatch.captured_kwargs\" title=\"django.urls.ResolverMatch.captured_kwargs\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">captured_kwargs</span></code></a> and\n<a class=\"reference internal\" href=\"#django.urls.ResolverMatch.extra_kwargs\" title=\"django.urls.ResolverMatch.extra_kwargs\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">extra_kwargs</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.urls.ResolverMatch.captured_kwargs\">\n<code class=\"sig-name descname\"><span class=\"pre\">captured_kwargs</span></code><a class=\"headerlink\" href=\"#django.urls.ResolverMatch.captured_kwargs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The captured keyword arguments that would be passed to the view\nfunction, as parsed from the URL.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.urls.ResolverMatch.extra_kwargs\">\n<code class=\"sig-name descname\"><span class=\"pre\">extra_kwargs</span></code><a class=\"headerlink\" href=\"#django.urls.ResolverMatch.extra_kwargs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The additional keyword arguments that would be passed to the view\nfunction.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.urls.ResolverMatch.url_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">url_name</span></code><a class=\"headerlink\" href=\"#django.urls.ResolverMatch.url_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the URL pattern that matches the URL.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.urls.ResolverMatch.route\">\n<code class=\"sig-name descname\"><span class=\"pre\">route</span></code><a class=\"headerlink\" href=\"#django.urls.ResolverMatch.route\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The route of the matching URL pattern.</p>\n<p>For example, if <code class=\"docutils literal notranslate\"><span class=\"pre\">path('users/&lt;id&gt;/',</span> <span class=\"pre\">...)</span></code> is the matching pattern,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">route</span></code> will contain <code class=\"docutils literal notranslate\"><span class=\"pre\">'users/&lt;id&gt;/'</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.urls.ResolverMatch.tried\">\n<code class=\"sig-name descname\"><span class=\"pre\">tried</span></code><a class=\"headerlink\" href=\"#django.urls.ResolverMatch.tried\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The list of URL patterns tried before the URL either matched one or\nexhausted available patterns.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.urls.ResolverMatch.app_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">app_name</span></code><a class=\"headerlink\" href=\"#django.urls.ResolverMatch.app_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The application namespace for the URL pattern that matches the\nURL.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.urls.ResolverMatch.app_names\">\n<code class=\"sig-name descname\"><span class=\"pre\">app_names</span></code><a class=\"headerlink\" href=\"#django.urls.ResolverMatch.app_names\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The list of individual namespace components in the full\napplication namespace for the URL pattern that matches the URL.\nFor example, if the <code class=\"docutils literal notranslate\"><span class=\"pre\">app_name</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">'foo:bar'</span></code>, then <code class=\"docutils literal notranslate\"><span class=\"pre\">app_names</span></code>\nwill be <code class=\"docutils literal notranslate\"><span class=\"pre\">['foo',</span> <span class=\"pre\">'bar']</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.urls.ResolverMatch.namespace\">\n<code class=\"sig-name descname\"><span class=\"pre\">namespace</span></code><a class=\"headerlink\" href=\"#django.urls.ResolverMatch.namespace\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The instance namespace for the URL pattern that matches the\nURL.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.urls.ResolverMatch.namespaces\">\n<code class=\"sig-name descname\"><span class=\"pre\">namespaces</span></code><a class=\"headerlink\" href=\"#django.urls.ResolverMatch.namespaces\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The list of individual namespace components in the full\ninstance namespace for the URL pattern that matches the URL.\ni.e., if the namespace is <code class=\"docutils literal notranslate\"><span class=\"pre\">foo:bar</span></code>, then namespaces will be\n<code class=\"docutils literal notranslate\"><span class=\"pre\">['foo',</span> <span class=\"pre\">'bar']</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.urls.ResolverMatch.view_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">view_name</span></code><a class=\"headerlink\" href=\"#django.urls.ResolverMatch.view_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the view that matches the URL, including the namespace if\nthere is one.</p>\n</dd></dl>\n\n</dd></dl>\n\n<p>A <a class=\"reference internal\" href=\"#django.urls.ResolverMatch\" title=\"django.urls.ResolverMatch\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ResolverMatch</span></code></a> object can then be interrogated to provide\ninformation about the URL pattern that matches a URL:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># Resolve a URL</span>\n<span class=\"n\">match</span> <span class=\"o\">=</span> <span class=\"n\">resolve</span><span class=\"p\">(</span><span class=\"s2\">&quot;/some/path/&quot;</span><span class=\"p\">)</span>\n<span class=\"c1\"># Print the URL pattern that matches the URL</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">match</span><span class=\"o\">.</span><span class=\"n\">url_name</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>A <a class=\"reference internal\" href=\"#django.urls.ResolverMatch\" title=\"django.urls.ResolverMatch\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ResolverMatch</span></code></a> object can also be assigned to a triple:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">func</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"n\">resolve</span><span class=\"p\">(</span><span class=\"s2\">&quot;/some/path/&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>One possible use of <a class=\"reference internal\" href=\"#django.urls.resolve\" title=\"django.urls.resolve\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">resolve()</span></code></a> would be to test whether a\nview would raise a <code class=\"docutils literal notranslate\"><span class=\"pre\">Http404</span></code> error before redirecting to it:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">urllib.parse</span> <span class=\"kn\">import</span> <span class=\"n\">urlparse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">resolve</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.http</span> <span class=\"kn\">import</span> <span class=\"n\">Http404</span><span class=\"p\">,</span> <span class=\"n\">HttpResponseRedirect</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">myview</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"nb\">next</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">META</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;HTTP_REFERER&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;/&quot;</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">HttpResponseRedirect</span><span class=\"p\">(</span><span class=\"nb\">next</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># modify the request and response as required, e.g. change locale</span>\n    <span class=\"c1\"># and set corresponding locale cookie</span>\n\n    <span class=\"n\">view</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"n\">resolve</span><span class=\"p\">(</span><span class=\"n\">urlparse</span><span class=\"p\">(</span><span class=\"nb\">next</span><span class=\"p\">)[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n    <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;request&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">request</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">view</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"n\">Http404</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">HttpResponseRedirect</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">response</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-get-script-prefix\">\n<span id=\"get-script-prefix\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">get_script_prefix()</span></code><a class=\"headerlink\" href=\"#get-script-prefix\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.urls.get_script_prefix\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_script_prefix</span></code>()<a class=\"reference internal\" href=\"../../_modules/django/urls/base/#get_script_prefix\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.urls.get_script_prefix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Normally, you should always use <a class=\"reference internal\" href=\"#django.urls.reverse\" title=\"django.urls.reverse\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">reverse()</span></code></a> to define URLs\nwithin your application. However, if your application constructs part of the\nURL hierarchy itself, you may occasionally need to generate URLs. In that\ncase, you need to be able to find the base URL of the Django project within\nits web server (normally, <a class=\"reference internal\" href=\"#django.urls.reverse\" title=\"django.urls.reverse\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">reverse()</span></code></a> takes care of this for\nyou). In that case, you can call <code class=\"docutils literal notranslate\"><span class=\"pre\">get_script_prefix()</span></code>, which will return\nthe script prefix portion of the URL for your Django project. If your Django\nproject is at the root of its web server, this is always <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;/&quot;</span></code>.</p>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p class=\"last\">This function <strong>cannot</strong> be used outside of the request-response cycle\nsince it relies on values initialized during that cycle.</p>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["ref/urls", "<code class=\"docutils literal notranslate\"><span class=\"pre\">django.urls</span></code> functions for use in URLconfs", "N", "next"], ["ref/unicode", "Unicode data", "P", "previous"]], "sourcename": "ref/urlresolvers.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.urls</span></code> utility functions</a><ul>\n<li><a class=\"reference internal\" href=\"#reverse\"><code class=\"docutils literal notranslate\"><span class=\"pre\">reverse()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#reverse-lazy\"><code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_lazy()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#resolve\"><code class=\"docutils literal notranslate\"><span class=\"pre\">resolve()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#get-script-prefix\"><code class=\"docutils literal notranslate\"><span class=\"pre\">get_script_prefix()</span></code></a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "ref/urlresolvers", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
