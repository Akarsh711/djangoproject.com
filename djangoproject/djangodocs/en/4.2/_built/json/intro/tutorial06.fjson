{"parents": [{"link": "../", "title": "Getting started"}], "prev": {"link": "../tutorial05/", "title": "Writing your first Django app, part 5"}, "next": {"link": "../tutorial07/", "title": "Writing your first Django app, part 7"}, "title": "Writing your first Django app, part 6", "meta": {}, "body": "<div class=\"section\" id=\"s-writing-your-first-django-app-part-6\">\n<span id=\"writing-your-first-django-app-part-6\"></span><h1>Writing your first Django app, part 6<a class=\"headerlink\" href=\"#writing-your-first-django-app-part-6\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This tutorial begins where <a class=\"reference internal\" href=\"../tutorial05/\"><span class=\"doc\">Tutorial 5</span></a> left off.\nWe\u2019ve built a tested web-poll application, and we\u2019ll now add a stylesheet and\nan image.</p>\n<p>Aside from the HTML generated by the server, web applications generally need\nto serve additional files \u2014 such as images, JavaScript, or CSS \u2014 necessary to\nrender the complete web page. In Django, we refer to these files as \u201cstatic\nfiles\u201d.</p>\n<p>For small projects, this isn\u2019t a big deal, because you can keep the static\nfiles somewhere your web server can find it. However, in bigger projects \u2013\nespecially those comprised of multiple apps \u2013 dealing with the multiple sets\nof static files provided by each application starts to get tricky.</p>\n<p>That\u2019s what <code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.staticfiles</span></code> is for: it collects static files\nfrom each of your applications (and any other places you specify) into a\nsingle location that can easily be served in production.</p>\n<div class=\"admonition-where-to-get-help admonition\">\n<p class=\"first admonition-title\">Where to get help:</p>\n<p class=\"last\">If you\u2019re having trouble going through this tutorial, please head over to\nthe <a class=\"reference internal\" href=\"../../faq/help/\"><span class=\"doc\">Getting Help</span></a> section of the FAQ.</p>\n</div>\n<div class=\"section\" id=\"s-customize-your-app-s-look-and-feel\">\n<span id=\"customize-your-app-s-look-and-feel\"></span><h2>Customize your <em>app\u2019s</em> look and feel<a class=\"headerlink\" href=\"#customize-your-app-s-look-and-feel\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>First, create a directory called <code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> in your <code class=\"docutils literal notranslate\"><span class=\"pre\">polls</span></code> directory. Django\nwill look for static files there, similarly to how Django finds templates\ninside <code class=\"docutils literal notranslate\"><span class=\"pre\">polls/templates/</span></code>.</p>\n<p>Django\u2019s <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-STATICFILES_FINDERS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">STATICFILES_FINDERS</span></code></a> setting contains a list\nof finders that know how to discover static files from various\nsources. One of the defaults is <code class=\"docutils literal notranslate\"><span class=\"pre\">AppDirectoriesFinder</span></code> which\nlooks for a \u201cstatic\u201d subdirectory in each of the\n<a class=\"reference internal\" href=\"../../ref/settings/#std-setting-INSTALLED_APPS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">INSTALLED_APPS</span></code></a>, like the one in <code class=\"docutils literal notranslate\"><span class=\"pre\">polls</span></code> we just created. The admin\nsite uses the same directory structure for its static files.</p>\n<p>Within the <code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> directory you have just created, create another directory\ncalled <code class=\"docutils literal notranslate\"><span class=\"pre\">polls</span></code> and within that create a file called <code class=\"docutils literal notranslate\"><span class=\"pre\">style.css</span></code>. In other\nwords, your stylesheet should be at <code class=\"docutils literal notranslate\"><span class=\"pre\">polls/static/polls/style.css</span></code>. Because\nof how the <code class=\"docutils literal notranslate\"><span class=\"pre\">AppDirectoriesFinder</span></code> staticfile finder works, you can refer to\nthis static file in Django as <code class=\"docutils literal notranslate\"><span class=\"pre\">polls/style.css</span></code>, similar to how you reference\nthe path for templates.</p>\n<div class=\"admonition-static-file-namespacing admonition\">\n<p class=\"first admonition-title\">Static file namespacing</p>\n<p class=\"last\">Just like templates, we <em>might</em> be able to get away with putting our static\nfiles directly in <code class=\"docutils literal notranslate\"><span class=\"pre\">polls/static</span></code> (rather than creating another <code class=\"docutils literal notranslate\"><span class=\"pre\">polls</span></code>\nsubdirectory), but it would actually be a bad idea. Django will choose the\nfirst static file it finds whose name matches, and if you had a static file\nwith the same name in a <em>different</em> application, Django would be unable to\ndistinguish between them. We need to be able to point Django at the right\none, and the best way to ensure this is by <em>namespacing</em> them. That is, by\nputting those static files inside <em>another</em> directory named for the\napplication itself.</p>\n</div>\n<p>Put the following code in that stylesheet (<code class=\"docutils literal notranslate\"><span class=\"pre\">polls/static/polls/style.css</span></code>):</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id1\">\n<div class=\"code-block-caption\"><span class=\"caption-text\"><code class=\"docutils literal notranslate\"><span class=\"pre\">polls/static/polls/style.css</span></code></span><a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-css notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">li</span><span class=\"w\"> </span><span class=\"nt\">a</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">color</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">green</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</div>\n<p>Next, add the following at the top of <code class=\"docutils literal notranslate\"><span class=\"pre\">polls/templates/polls/index.html</span></code>:</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id2\">\n<div class=\"code-block-caption\"><span class=\"caption-text\"><code class=\"docutils literal notranslate\"><span class=\"pre\">polls/templates/polls/index.html</span></code></span><a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-html+django notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cp\">{%</span> <span class=\"k\">load</span> <span class=\"nv\">static</span> <span class=\"cp\">%}</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">link</span> <span class=\"na\">rel</span><span class=\"o\">=</span><span class=\"s\">&quot;stylesheet&quot;</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">&quot;</span><span class=\"cp\">{%</span> <span class=\"k\">static</span> <span class=\"s1\">&#39;polls/style.css&#39;</span> <span class=\"cp\">%}</span><span class=\"s\">&quot;</span><span class=\"p\">&gt;</span>\n</pre></div>\n</div>\n</div>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">{%</span> <span class=\"pre\">static</span> <span class=\"pre\">%}</span></code> template tag generates the absolute URL of static files.</p>\n<p>That\u2019s all you need to do for development.</p>\n<p>Start the server (or restart it if it\u2019s already running):</p>\n<div class=\"console-block\" id=\"console-block-0\">\n<input class=\"c-tab-unix\" id=\"c-tab-0-unix\" type=\"radio\" name=\"console-0\" checked>\n<label for=\"c-tab-0-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-0-win\" type=\"radio\" name=\"console-0\">\n<label for=\"c-tab-0-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-0-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>python manage.py runserver\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-0-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py manage.py runserver\n</pre></div>\n</section>\n</div>\n<p>Reload <code class=\"docutils literal notranslate\"><span class=\"pre\">http://localhost:8000/polls/</span></code> and you should see that the question\nlinks are green (Django style!) which means that your stylesheet was properly\nloaded.</p>\n</div>\n<div class=\"section\" id=\"s-adding-a-background-image\">\n<span id=\"adding-a-background-image\"></span><h2>Adding a background-image<a class=\"headerlink\" href=\"#adding-a-background-image\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Next, we\u2019ll create a subdirectory for images. Create an <code class=\"docutils literal notranslate\"><span class=\"pre\">images</span></code> subdirectory\nin the <code class=\"docutils literal notranslate\"><span class=\"pre\">polls/static/polls/</span></code> directory. Inside this directory, add any image\nfile that you\u2019d like to use as a background. For the purposes of this tutorial,\nwe\u2019re using a file named <code class=\"docutils literal notranslate\"><span class=\"pre\">background.png</span></code>, which will have the full path\n<code class=\"docutils literal notranslate\"><span class=\"pre\">polls/static/polls/images/background.png</span></code>.</p>\n<p>Then, add a reference to your image in your stylesheet\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">polls/static/polls/style.css</span></code>):</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id3\">\n<div class=\"code-block-caption\"><span class=\"caption-text\"><code class=\"docutils literal notranslate\"><span class=\"pre\">polls/static/polls/style.css</span></code></span><a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-css notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">body</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">background</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">white</span><span class=\"w\"> </span><span class=\"nb\">url</span><span class=\"p\">(</span><span class=\"s2\">&quot;images/background.png&quot;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kc\">no-repeat</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</div>\n<p>Reload <code class=\"docutils literal notranslate\"><span class=\"pre\">http://localhost:8000/polls/</span></code> and you should see the background\nloaded in the top left of the screen.</p>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p class=\"last\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">{%</span> <span class=\"pre\">static</span> <span class=\"pre\">%}</span></code> template tag is not available for use in static files\nwhich aren\u2019t generated by Django, like your stylesheet. You should always\nuse <strong>relative paths</strong> to link your static files between each other,\nbecause then you can change <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-STATIC_URL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">STATIC_URL</span></code></a> (used by the\n<a class=\"reference internal\" href=\"../../ref/templates/builtins/#std-templatetag-static\"><code class=\"xref std std-ttag docutils literal notranslate\"><span class=\"pre\">static</span></code></a> template tag to generate its URLs) without having to modify\na bunch of paths in your static files as well.</p>\n</div>\n<p>These are the <strong>basics</strong>. For more details on settings and other bits included\nwith the framework see\n<a class=\"reference internal\" href=\"../../howto/static-files/\"><span class=\"doc\">the static files howto</span></a> and\n<a class=\"reference internal\" href=\"../../ref/contrib/staticfiles/\"><span class=\"doc\">the staticfiles reference</span></a>. <a class=\"reference internal\" href=\"../../howto/static-files/deployment/\"><span class=\"doc\">Deploying\nstatic files</span></a> discusses how to use static\nfiles on a real server.</p>\n<p>When you\u2019re comfortable with the static files, read <a class=\"reference internal\" href=\"../tutorial07/\"><span class=\"doc\">part 7 of this\ntutorial</span></a> to learn how to customize Django\u2019s\nautomatically-generated admin site.</p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["intro/tutorial07", "Writing your first Django app, part 7", "N", "next"], ["intro/tutorial05", "Writing your first Django app, part 5", "P", "previous"]], "sourcename": "intro/tutorial06.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Writing your first Django app, part 6</a><ul>\n<li><a class=\"reference internal\" href=\"#customize-your-app-s-look-and-feel\">Customize your <em>app\u2019s</em> look and feel</a></li>\n<li><a class=\"reference internal\" href=\"#adding-a-background-image\">Adding a background-image</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "intro/tutorial06", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": true}
