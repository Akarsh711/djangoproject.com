{"parents": [{"link": "../../../../", "title": "Module code"}, {"link": "../../../", "title": "django"}, {"link": "../", "title": "django.contrib.auth"}], "title": "django.contrib.auth.decorators", "body": "<h1>Source code for django.contrib.auth.decorators</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"kn\">import</span> <span class=\"n\">wraps</span>\n<span class=\"kn\">from</span> <span class=\"nn\">urllib.parse</span> <span class=\"kn\">import</span> <span class=\"n\">urlparse</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth</span> <span class=\"kn\">import</span> <span class=\"n\">REDIRECT_FIELD_NAME</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.core.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">PermissionDenied</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.shortcuts</span> <span class=\"kn\">import</span> <span class=\"n\">resolve_url</span>\n\n\n<div class=\"viewcode-block\" id=\"user_passes_test\"><a class=\"viewcode-back\" href=\"../../../../../topics/auth/default/#django.contrib.auth.decorators.user_passes_test\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">user_passes_test</span><span class=\"p\">(</span>\n    <span class=\"n\">test_func</span><span class=\"p\">,</span> <span class=\"n\">login_url</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">redirect_field_name</span><span class=\"o\">=</span><span class=\"n\">REDIRECT_FIELD_NAME</span>\n<span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Decorator for views that checks that the user passes the given test,</span>\n<span class=\"sd\">    redirecting to the log-in page if necessary. The test should be a callable</span>\n<span class=\"sd\">    that takes the user object and returns True if the user passes.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">decorator</span><span class=\"p\">(</span><span class=\"n\">view_func</span><span class=\"p\">):</span>\n        <span class=\"nd\">@wraps</span><span class=\"p\">(</span><span class=\"n\">view_func</span><span class=\"p\">)</span>\n        <span class=\"k\">def</span> <span class=\"nf\">_wrapper_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">test_func</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">):</span>\n                <span class=\"k\">return</span> <span class=\"n\">view_func</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n            <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">build_absolute_uri</span><span class=\"p\">()</span>\n            <span class=\"n\">resolved_login_url</span> <span class=\"o\">=</span> <span class=\"n\">resolve_url</span><span class=\"p\">(</span><span class=\"n\">login_url</span> <span class=\"ow\">or</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">LOGIN_URL</span><span class=\"p\">)</span>\n            <span class=\"c1\"># If the login url is the same scheme and net location then just</span>\n            <span class=\"c1\"># use the path as the &quot;next&quot; url.</span>\n            <span class=\"n\">login_scheme</span><span class=\"p\">,</span> <span class=\"n\">login_netloc</span> <span class=\"o\">=</span> <span class=\"n\">urlparse</span><span class=\"p\">(</span><span class=\"n\">resolved_login_url</span><span class=\"p\">)[:</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n            <span class=\"n\">current_scheme</span><span class=\"p\">,</span> <span class=\"n\">current_netloc</span> <span class=\"o\">=</span> <span class=\"n\">urlparse</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)[:</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"ow\">not</span> <span class=\"n\">login_scheme</span> <span class=\"ow\">or</span> <span class=\"n\">login_scheme</span> <span class=\"o\">==</span> <span class=\"n\">current_scheme</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"p\">(</span>\n                <span class=\"ow\">not</span> <span class=\"n\">login_netloc</span> <span class=\"ow\">or</span> <span class=\"n\">login_netloc</span> <span class=\"o\">==</span> <span class=\"n\">current_netloc</span>\n            <span class=\"p\">):</span>\n                <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">get_full_path</span><span class=\"p\">()</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.views</span> <span class=\"kn\">import</span> <span class=\"n\">redirect_to_login</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">redirect_to_login</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">resolved_login_url</span><span class=\"p\">,</span> <span class=\"n\">redirect_field_name</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">_wrapper_view</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">decorator</span></div>\n\n\n<div class=\"viewcode-block\" id=\"login_required\"><a class=\"viewcode-back\" href=\"../../../../../topics/auth/default/#django.contrib.auth.decorators.login_required\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">login_required</span><span class=\"p\">(</span>\n    <span class=\"n\">function</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">redirect_field_name</span><span class=\"o\">=</span><span class=\"n\">REDIRECT_FIELD_NAME</span><span class=\"p\">,</span> <span class=\"n\">login_url</span><span class=\"o\">=</span><span class=\"kc\">None</span>\n<span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Decorator for views that checks that the user is logged in, redirecting</span>\n<span class=\"sd\">    to the log-in page if necessary.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">actual_decorator</span> <span class=\"o\">=</span> <span class=\"n\">user_passes_test</span><span class=\"p\">(</span>\n        <span class=\"k\">lambda</span> <span class=\"n\">u</span><span class=\"p\">:</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">is_authenticated</span><span class=\"p\">,</span>\n        <span class=\"n\">login_url</span><span class=\"o\">=</span><span class=\"n\">login_url</span><span class=\"p\">,</span>\n        <span class=\"n\">redirect_field_name</span><span class=\"o\">=</span><span class=\"n\">redirect_field_name</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">function</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">actual_decorator</span><span class=\"p\">(</span><span class=\"n\">function</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">actual_decorator</span></div>\n\n\n<div class=\"viewcode-block\" id=\"permission_required\"><a class=\"viewcode-back\" href=\"../../../../../topics/auth/default/#django.contrib.auth.decorators.permission_required\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">permission_required</span><span class=\"p\">(</span><span class=\"n\">perm</span><span class=\"p\">,</span> <span class=\"n\">login_url</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">raise_exception</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Decorator for views that checks whether a user has a particular permission</span>\n<span class=\"sd\">    enabled, redirecting to the log-in page if necessary.</span>\n<span class=\"sd\">    If the raise_exception parameter is given the PermissionDenied exception</span>\n<span class=\"sd\">    is raised.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">check_perms</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">perm</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"n\">perms</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">perm</span><span class=\"p\">,)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">perms</span> <span class=\"o\">=</span> <span class=\"n\">perm</span>\n        <span class=\"c1\"># First check if the user has the permission (even anon users)</span>\n        <span class=\"k\">if</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">has_perms</span><span class=\"p\">(</span><span class=\"n\">perms</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"c1\"># In case the 403 handler should be called raise the exception</span>\n        <span class=\"k\">if</span> <span class=\"n\">raise_exception</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">PermissionDenied</span>\n        <span class=\"c1\"># As the last resort, show the login form</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">user_passes_test</span><span class=\"p\">(</span><span class=\"n\">check_perms</span><span class=\"p\">,</span> <span class=\"n\">login_url</span><span class=\"o\">=</span><span class=\"n\">login_url</span><span class=\"p\">)</span></div>\n</pre></div>", "current_page_name": "_modules/django/contrib/auth/decorators", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
