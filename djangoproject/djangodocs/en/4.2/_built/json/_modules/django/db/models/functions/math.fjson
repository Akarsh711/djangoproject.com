{"parents": [{"link": "../../../../../", "title": "Module code"}, {"link": "../../../../", "title": "django"}], "title": "django.db.models.functions.math", "body": "<h1>Source code for django.db.models.functions.math</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">math</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.expressions</span> <span class=\"kn\">import</span> <span class=\"n\">Func</span><span class=\"p\">,</span> <span class=\"n\">Value</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.fields</span> <span class=\"kn\">import</span> <span class=\"n\">FloatField</span><span class=\"p\">,</span> <span class=\"n\">IntegerField</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Cast</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions.mixins</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">FixDecimalInputMixin</span><span class=\"p\">,</span>\n    <span class=\"n\">NumericOutputFieldMixin</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.lookups</span> <span class=\"kn\">import</span> <span class=\"n\">Transform</span>\n\n\n<div class=\"viewcode-block\" id=\"Abs\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.Abs\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Abs</span><span class=\"p\">(</span><span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;ABS&quot;</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;abs&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ACos\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.ACos\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ACos</span><span class=\"p\">(</span><span class=\"n\">NumericOutputFieldMixin</span><span class=\"p\">,</span> <span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;ACOS&quot;</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;acos&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ASin\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.ASin\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ASin</span><span class=\"p\">(</span><span class=\"n\">NumericOutputFieldMixin</span><span class=\"p\">,</span> <span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;ASIN&quot;</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;asin&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ATan\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.ATan\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ATan</span><span class=\"p\">(</span><span class=\"n\">NumericOutputFieldMixin</span><span class=\"p\">,</span> <span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;ATAN&quot;</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;atan&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ATan2\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.ATan2\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ATan2</span><span class=\"p\">(</span><span class=\"n\">NumericOutputFieldMixin</span><span class=\"p\">,</span> <span class=\"n\">Func</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;ATAN2&quot;</span>\n    <span class=\"n\">arity</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_sqlite</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span>\n            <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">ops</span><span class=\"p\">,</span> <span class=\"s2\">&quot;spatialite&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span>\n        <span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">ops</span><span class=\"o\">.</span><span class=\"n\">spatial_version</span> <span class=\"o\">&gt;=</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">as_sql</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"c1\"># This function is usually ATan2(y, x), returning the inverse tangent</span>\n        <span class=\"c1\"># of y / x, but it&#39;s ATan2(x, y) on SpatiaLite &lt; 5.0.0.</span>\n        <span class=\"c1\"># Cast integers to float to avoid inconsistent/buggy behavior if the</span>\n        <span class=\"c1\"># arguments are mixed between integer and float or decimal.</span>\n        <span class=\"c1\"># https://www.gaia-gis.it/fossil/libspatialite/tktview?name=0f72cca3a2</span>\n        <span class=\"n\">clone</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n        <span class=\"n\">clone</span><span class=\"o\">.</span><span class=\"n\">set_source_expressions</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span>\n                <span class=\"n\">Cast</span><span class=\"p\">(</span><span class=\"n\">expression</span><span class=\"p\">,</span> <span class=\"n\">FloatField</span><span class=\"p\">())</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">expression</span><span class=\"o\">.</span><span class=\"n\">output_field</span><span class=\"p\">,</span> <span class=\"n\">IntegerField</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span> <span class=\"n\">expression</span>\n                <span class=\"k\">for</span> <span class=\"n\">expression</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_source_expressions</span><span class=\"p\">()[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">clone</span><span class=\"o\">.</span><span class=\"n\">as_sql</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Ceil\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.Ceil\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Ceil</span><span class=\"p\">(</span><span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;CEILING&quot;</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;ceil&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_oracle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_sql</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s2\">&quot;CEIL&quot;</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Cos\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.Cos\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Cos</span><span class=\"p\">(</span><span class=\"n\">NumericOutputFieldMixin</span><span class=\"p\">,</span> <span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;COS&quot;</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;cos&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Cot\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.Cot\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Cot</span><span class=\"p\">(</span><span class=\"n\">NumericOutputFieldMixin</span><span class=\"p\">,</span> <span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;COT&quot;</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;cot&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_oracle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_sql</span><span class=\"p\">(</span>\n            <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"s2\">&quot;(1 / TAN(</span><span class=\"si\">%(expressions)s</span><span class=\"s2\">))&quot;</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span>\n        <span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Degrees\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.Degrees\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Degrees</span><span class=\"p\">(</span><span class=\"n\">NumericOutputFieldMixin</span><span class=\"p\">,</span> <span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;DEGREES&quot;</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;degrees&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_oracle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_sql</span><span class=\"p\">(</span>\n            <span class=\"n\">compiler</span><span class=\"p\">,</span>\n            <span class=\"n\">connection</span><span class=\"p\">,</span>\n            <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"s2\">&quot;((</span><span class=\"si\">%%</span><span class=\"s2\">(expressions)s) * 180 / </span><span class=\"si\">%s</span><span class=\"s2\">)&quot;</span> <span class=\"o\">%</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">,</span>\n            <span class=\"o\">**</span><span class=\"n\">extra_context</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Exp\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.Exp\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Exp</span><span class=\"p\">(</span><span class=\"n\">NumericOutputFieldMixin</span><span class=\"p\">,</span> <span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;EXP&quot;</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;exp&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Floor\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.Floor\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Floor</span><span class=\"p\">(</span><span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;FLOOR&quot;</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;floor&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Ln\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.Ln\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Ln</span><span class=\"p\">(</span><span class=\"n\">NumericOutputFieldMixin</span><span class=\"p\">,</span> <span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;LN&quot;</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;ln&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Log\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.Log\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Log</span><span class=\"p\">(</span><span class=\"n\">FixDecimalInputMixin</span><span class=\"p\">,</span> <span class=\"n\">NumericOutputFieldMixin</span><span class=\"p\">,</span> <span class=\"n\">Func</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;LOG&quot;</span>\n    <span class=\"n\">arity</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_sqlite</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">ops</span><span class=\"p\">,</span> <span class=\"s2\">&quot;spatialite&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">as_sql</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"c1\"># This function is usually Log(b, x) returning the logarithm of x to</span>\n        <span class=\"c1\"># the base b, but on SpatiaLite it&#39;s Log(x, b).</span>\n        <span class=\"n\">clone</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n        <span class=\"n\">clone</span><span class=\"o\">.</span><span class=\"n\">set_source_expressions</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_source_expressions</span><span class=\"p\">()[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"n\">clone</span><span class=\"o\">.</span><span class=\"n\">as_sql</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Mod\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.Mod\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Mod</span><span class=\"p\">(</span><span class=\"n\">FixDecimalInputMixin</span><span class=\"p\">,</span> <span class=\"n\">NumericOutputFieldMixin</span><span class=\"p\">,</span> <span class=\"n\">Func</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;MOD&quot;</span>\n    <span class=\"n\">arity</span> <span class=\"o\">=</span> <span class=\"mi\">2</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Pi\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.Pi\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Pi</span><span class=\"p\">(</span><span class=\"n\">NumericOutputFieldMixin</span><span class=\"p\">,</span> <span class=\"n\">Func</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;PI&quot;</span>\n    <span class=\"n\">arity</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_oracle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_sql</span><span class=\"p\">(</span>\n            <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">),</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span>\n        <span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Power\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.Power\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Power</span><span class=\"p\">(</span><span class=\"n\">NumericOutputFieldMixin</span><span class=\"p\">,</span> <span class=\"n\">Func</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;POWER&quot;</span>\n    <span class=\"n\">arity</span> <span class=\"o\">=</span> <span class=\"mi\">2</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Radians\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.Radians\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Radians</span><span class=\"p\">(</span><span class=\"n\">NumericOutputFieldMixin</span><span class=\"p\">,</span> <span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;RADIANS&quot;</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;radians&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_oracle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_sql</span><span class=\"p\">(</span>\n            <span class=\"n\">compiler</span><span class=\"p\">,</span>\n            <span class=\"n\">connection</span><span class=\"p\">,</span>\n            <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"s2\">&quot;((</span><span class=\"si\">%%</span><span class=\"s2\">(expressions)s) * </span><span class=\"si\">%s</span><span class=\"s2\"> / 180)&quot;</span> <span class=\"o\">%</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">,</span>\n            <span class=\"o\">**</span><span class=\"n\">extra_context</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Random\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.Random\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Random</span><span class=\"p\">(</span><span class=\"n\">NumericOutputFieldMixin</span><span class=\"p\">,</span> <span class=\"n\">Func</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;RANDOM&quot;</span>\n    <span class=\"n\">arity</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_mysql</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_sql</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s2\">&quot;RAND&quot;</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_oracle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_sql</span><span class=\"p\">(</span>\n            <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s2\">&quot;DBMS_RANDOM.VALUE&quot;</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_sqlite</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_sql</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s2\">&quot;RAND&quot;</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_group_by_cols</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">[]</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Round\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.Round\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Round</span><span class=\"p\">(</span><span class=\"n\">FixDecimalInputMixin</span><span class=\"p\">,</span> <span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;ROUND&quot;</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;round&quot;</span>\n    <span class=\"n\">arity</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># Override Transform&#39;s arity=1 to enable passing precision.</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">expression</span><span class=\"p\">,</span> <span class=\"n\">precision</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">expression</span><span class=\"p\">,</span> <span class=\"n\">precision</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_sqlite</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span><span class=\"p\">):</span>\n        <span class=\"n\">precision</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_source_expressions</span><span class=\"p\">()[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">precision</span><span class=\"p\">,</span> <span class=\"n\">Value</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">precision</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;SQLite does not support negative precision.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_sqlite</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_resolve_output_field</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_source_expressions</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">output_field</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Sign\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.Sign\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Sign</span><span class=\"p\">(</span><span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;SIGN&quot;</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;sign&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Sin\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.Sin\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Sin</span><span class=\"p\">(</span><span class=\"n\">NumericOutputFieldMixin</span><span class=\"p\">,</span> <span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;SIN&quot;</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;sin&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Sqrt\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.Sqrt\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Sqrt</span><span class=\"p\">(</span><span class=\"n\">NumericOutputFieldMixin</span><span class=\"p\">,</span> <span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;SQRT&quot;</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;sqrt&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Tan\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/database-functions/#django.db.models.functions.Tan\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Tan</span><span class=\"p\">(</span><span class=\"n\">NumericOutputFieldMixin</span><span class=\"p\">,</span> <span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;TAN&quot;</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;tan&quot;</span></div>\n</pre></div>", "current_page_name": "_modules/django/db/models/functions/math", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
