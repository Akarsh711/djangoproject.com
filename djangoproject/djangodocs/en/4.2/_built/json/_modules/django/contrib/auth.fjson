{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "django"}], "title": "django.contrib.auth", "body": "<h1>Source code for django.contrib.auth</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">inspect</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.apps</span> <span class=\"kn\">import</span> <span class=\"n\">apps</span> <span class=\"k\">as</span> <span class=\"n\">django_apps</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.core.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">ImproperlyConfigured</span><span class=\"p\">,</span> <span class=\"n\">PermissionDenied</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.middleware.csrf</span> <span class=\"kn\">import</span> <span class=\"n\">rotate_token</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.crypto</span> <span class=\"kn\">import</span> <span class=\"n\">constant_time_compare</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.module_loading</span> <span class=\"kn\">import</span> <span class=\"n\">import_string</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.views.decorators.debug</span> <span class=\"kn\">import</span> <span class=\"n\">sensitive_variables</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.signals</span> <span class=\"kn\">import</span> <span class=\"n\">user_logged_in</span><span class=\"p\">,</span> <span class=\"n\">user_logged_out</span><span class=\"p\">,</span> <span class=\"n\">user_login_failed</span>\n\n<span class=\"n\">SESSION_KEY</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;_auth_user_id&quot;</span>\n<span class=\"n\">BACKEND_SESSION_KEY</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;_auth_user_backend&quot;</span>\n<span class=\"n\">HASH_SESSION_KEY</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;_auth_user_hash&quot;</span>\n<span class=\"n\">REDIRECT_FIELD_NAME</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;next&quot;</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">load_backend</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">import_string</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)()</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_get_backends</span><span class=\"p\">(</span><span class=\"n\">return_tuples</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"n\">backends</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">backend_path</span> <span class=\"ow\">in</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">AUTHENTICATION_BACKENDS</span><span class=\"p\">:</span>\n        <span class=\"n\">backend</span> <span class=\"o\">=</span> <span class=\"n\">load_backend</span><span class=\"p\">(</span><span class=\"n\">backend_path</span><span class=\"p\">)</span>\n        <span class=\"n\">backends</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">backend</span><span class=\"p\">,</span> <span class=\"n\">backend_path</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">return_tuples</span> <span class=\"k\">else</span> <span class=\"n\">backend</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">backends</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"n\">ImproperlyConfigured</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;No authentication backends have been defined. Does &quot;</span>\n            <span class=\"s2\">&quot;AUTHENTICATION_BACKENDS contain anything?&quot;</span>\n        <span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">backends</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">get_backends</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">_get_backends</span><span class=\"p\">(</span><span class=\"n\">return_tuples</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@sensitive_variables</span><span class=\"p\">(</span><span class=\"s2\">&quot;credentials&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">_clean_credentials</span><span class=\"p\">(</span><span class=\"n\">credentials</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Clean a dictionary of credentials of potentially sensitive info before</span>\n<span class=\"sd\">    sending to less secure functions.</span>\n\n<span class=\"sd\">    Not comprehensive - intended for user_login_failed signal</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">SENSITIVE_CREDENTIALS</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"s2\">&quot;api|token|key|secret|password|signature&quot;</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">I</span><span class=\"p\">)</span>\n    <span class=\"n\">CLEANSED_SUBSTITUTE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;********************&quot;</span>\n    <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">credentials</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">SENSITIVE_CREDENTIALS</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">):</span>\n            <span class=\"n\">credentials</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">CLEANSED_SUBSTITUTE</span>\n    <span class=\"k\">return</span> <span class=\"n\">credentials</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_get_user_session_key</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"c1\"># This value in the session is always serialized to a string, so we need</span>\n    <span class=\"c1\"># to convert it back to Python whenever we access it.</span>\n    <span class=\"k\">return</span> <span class=\"n\">get_user_model</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">pk</span><span class=\"o\">.</span><span class=\"n\">to_python</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"p\">[</span><span class=\"n\">SESSION_KEY</span><span class=\"p\">])</span>\n\n\n<div class=\"viewcode-block\" id=\"authenticate\"><a class=\"viewcode-back\" href=\"../../../../topics/auth/default/#django.contrib.auth.authenticate\">[docs]</a><span class=\"nd\">@sensitive_variables</span><span class=\"p\">(</span><span class=\"s2\">&quot;credentials&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">authenticate</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">credentials</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    If the given credentials are valid, return a User object.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">for</span> <span class=\"n\">backend</span><span class=\"p\">,</span> <span class=\"n\">backend_path</span> <span class=\"ow\">in</span> <span class=\"n\">_get_backends</span><span class=\"p\">(</span><span class=\"n\">return_tuples</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"n\">backend_signature</span> <span class=\"o\">=</span> <span class=\"n\">inspect</span><span class=\"o\">.</span><span class=\"n\">signature</span><span class=\"p\">(</span><span class=\"n\">backend</span><span class=\"o\">.</span><span class=\"n\">authenticate</span><span class=\"p\">)</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">backend_signature</span><span class=\"o\">.</span><span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">credentials</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">TypeError</span><span class=\"p\">:</span>\n            <span class=\"c1\"># This backend doesn&#39;t accept these credentials as arguments. Try</span>\n            <span class=\"c1\"># the next one.</span>\n            <span class=\"k\">continue</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">backend</span><span class=\"o\">.</span><span class=\"n\">authenticate</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">credentials</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"n\">PermissionDenied</span><span class=\"p\">:</span>\n            <span class=\"c1\"># This backend says to stop in our tracks - this user should not be</span>\n            <span class=\"c1\"># allowed in at all.</span>\n            <span class=\"k\">break</span>\n        <span class=\"k\">if</span> <span class=\"n\">user</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">continue</span>\n        <span class=\"c1\"># Annotate the user object with the path of the backend.</span>\n        <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">backend</span> <span class=\"o\">=</span> <span class=\"n\">backend_path</span>\n        <span class=\"k\">return</span> <span class=\"n\">user</span>\n\n    <span class=\"c1\"># The credentials supplied are invalid to all backends, fire signal</span>\n    <span class=\"n\">user_login_failed</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span>\n        <span class=\"n\">sender</span><span class=\"o\">=</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"n\">credentials</span><span class=\"o\">=</span><span class=\"n\">_clean_credentials</span><span class=\"p\">(</span><span class=\"n\">credentials</span><span class=\"p\">),</span> <span class=\"n\">request</span><span class=\"o\">=</span><span class=\"n\">request</span>\n    <span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"login\"><a class=\"viewcode-back\" href=\"../../../../topics/auth/default/#django.contrib.auth.login\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">login</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">backend</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Persist a user id and a backend in the request. This way a user doesn&#39;t</span>\n<span class=\"sd\">    have to reauthenticate on every request. Note that data set during</span>\n<span class=\"sd\">    the anonymous session is retained when the user logs in.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">session_auth_hash</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">user</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span>\n    <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"s2\">&quot;get_session_auth_hash&quot;</span><span class=\"p\">):</span>\n        <span class=\"n\">session_auth_hash</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">get_session_auth_hash</span><span class=\"p\">()</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">SESSION_KEY</span> <span class=\"ow\">in</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">_get_user_session_key</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">pk</span> <span class=\"ow\">or</span> <span class=\"p\">(</span>\n            <span class=\"n\">session_auth_hash</span>\n            <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">constant_time_compare</span><span class=\"p\">(</span>\n                <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">HASH_SESSION_KEY</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">),</span> <span class=\"n\">session_auth_hash</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">):</span>\n            <span class=\"c1\"># To avoid reusing another user&#39;s session, create a new, empty</span>\n            <span class=\"c1\"># session if the existing session corresponds to a different</span>\n            <span class=\"c1\"># authenticated user.</span>\n            <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">flush</span><span class=\"p\">()</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">cycle_key</span><span class=\"p\">()</span>\n\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">backend</span> <span class=\"o\">=</span> <span class=\"n\">backend</span> <span class=\"ow\">or</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">backend</span>\n    <span class=\"k\">except</span> <span class=\"ne\">AttributeError</span><span class=\"p\">:</span>\n        <span class=\"n\">backends</span> <span class=\"o\">=</span> <span class=\"n\">_get_backends</span><span class=\"p\">(</span><span class=\"n\">return_tuples</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">backends</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">backend</span> <span class=\"o\">=</span> <span class=\"n\">backends</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;You have multiple authentication backends configured and &quot;</span>\n                <span class=\"s2\">&quot;therefore must provide the `backend` argument or set the &quot;</span>\n                <span class=\"s2\">&quot;`backend` attribute on the user.&quot;</span>\n            <span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">backend</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;backend must be a dotted import path string (got </span><span class=\"si\">%r</span><span class=\"s2\">).&quot;</span> <span class=\"o\">%</span> <span class=\"n\">backend</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"p\">[</span><span class=\"n\">SESSION_KEY</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">pk</span><span class=\"o\">.</span><span class=\"n\">value_to_string</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span>\n    <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"p\">[</span><span class=\"n\">BACKEND_SESSION_KEY</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">backend</span>\n    <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"p\">[</span><span class=\"n\">HASH_SESSION_KEY</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">session_auth_hash</span>\n    <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s2\">&quot;user&quot;</span><span class=\"p\">):</span>\n        <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">user</span>\n    <span class=\"n\">rotate_token</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n    <span class=\"n\">user_logged_in</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">sender</span><span class=\"o\">=</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">user</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"logout\"><a class=\"viewcode-back\" href=\"../../../../topics/auth/default/#django.contrib.auth.logout\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">logout</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Remove the authenticated user&#39;s ID from the request and flush their session</span>\n<span class=\"sd\">    data.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># Dispatch the signal before the user is logged out so the receivers have a</span>\n    <span class=\"c1\"># chance to find out *who* logged out.</span>\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s2\">&quot;user&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"s2\">&quot;is_authenticated&quot;</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">user_logged_out</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">sender</span><span class=\"o\">=</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">user</span><span class=\"p\">)</span>\n    <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">flush</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s2\">&quot;user&quot;</span><span class=\"p\">):</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.models</span> <span class=\"kn\">import</span> <span class=\"n\">AnonymousUser</span>\n\n        <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">AnonymousUser</span><span class=\"p\">()</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_user_model\"><a class=\"viewcode-back\" href=\"../../../../topics/auth/customizing/#django.contrib.auth.get_user_model\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">get_user_model</span><span class=\"p\">():</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Return the User model that is active in this project.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">django_apps</span><span class=\"o\">.</span><span class=\"n\">get_model</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">AUTH_USER_MODEL</span><span class=\"p\">,</span> <span class=\"n\">require_ready</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"n\">ImproperlyConfigured</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;AUTH_USER_MODEL must be of the form &#39;app_label.model_name&#39;&quot;</span>\n        <span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"ne\">LookupError</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"n\">ImproperlyConfigured</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;AUTH_USER_MODEL refers to model &#39;</span><span class=\"si\">%s</span><span class=\"s2\">&#39; that has not been installed&quot;</span>\n            <span class=\"o\">%</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">AUTH_USER_MODEL</span>\n        <span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_user\"><a class=\"viewcode-back\" href=\"../../../../ref/contrib/auth/#django.contrib.auth.get_user\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">get_user</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Return the user model instance associated with the given request session.</span>\n<span class=\"sd\">    If no user is retrieved, return an instance of `AnonymousUser`.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">AnonymousUser</span>\n\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">user_id</span> <span class=\"o\">=</span> <span class=\"n\">_get_user_session_key</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n        <span class=\"n\">backend_path</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"p\">[</span><span class=\"n\">BACKEND_SESSION_KEY</span><span class=\"p\">]</span>\n    <span class=\"k\">except</span> <span class=\"ne\">KeyError</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">backend_path</span> <span class=\"ow\">in</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">AUTHENTICATION_BACKENDS</span><span class=\"p\">:</span>\n            <span class=\"n\">backend</span> <span class=\"o\">=</span> <span class=\"n\">load_backend</span><span class=\"p\">(</span><span class=\"n\">backend_path</span><span class=\"p\">)</span>\n            <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">backend</span><span class=\"o\">.</span><span class=\"n\">get_user</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"p\">)</span>\n            <span class=\"c1\"># Verify the session</span>\n            <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"s2\">&quot;get_session_auth_hash&quot;</span><span class=\"p\">):</span>\n                <span class=\"n\">session_hash</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">HASH_SESSION_KEY</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">session_hash</span><span class=\"p\">:</span>\n                    <span class=\"n\">session_hash_verified</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">session_auth_hash</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">get_session_auth_hash</span><span class=\"p\">()</span>\n                    <span class=\"n\">session_hash_verified</span> <span class=\"o\">=</span> <span class=\"n\">constant_time_compare</span><span class=\"p\">(</span>\n                        <span class=\"n\">session_hash</span><span class=\"p\">,</span> <span class=\"n\">session_auth_hash</span>\n                    <span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">session_hash_verified</span><span class=\"p\">:</span>\n                    <span class=\"c1\"># If the current secret does not verify the session, try</span>\n                    <span class=\"c1\"># with the fallback secrets and stop when a matching one is</span>\n                    <span class=\"c1\"># found.</span>\n                    <span class=\"k\">if</span> <span class=\"n\">session_hash</span> <span class=\"ow\">and</span> <span class=\"nb\">any</span><span class=\"p\">(</span>\n                        <span class=\"n\">constant_time_compare</span><span class=\"p\">(</span><span class=\"n\">session_hash</span><span class=\"p\">,</span> <span class=\"n\">fallback_auth_hash</span><span class=\"p\">)</span>\n                        <span class=\"k\">for</span> <span class=\"n\">fallback_auth_hash</span> <span class=\"ow\">in</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">get_session_auth_fallback_hash</span><span class=\"p\">()</span>\n                    <span class=\"p\">):</span>\n                        <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">cycle_key</span><span class=\"p\">()</span>\n                        <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"p\">[</span><span class=\"n\">HASH_SESSION_KEY</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">session_auth_hash</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">flush</span><span class=\"p\">()</span>\n                        <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">user</span> <span class=\"ow\">or</span> <span class=\"n\">AnonymousUser</span><span class=\"p\">()</span></div>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">get_permission_codename</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">,</span> <span class=\"n\">opts</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Return the codename of the permission for the specified action.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">return</span> <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">_</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">,</span> <span class=\"n\">opts</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"update_session_auth_hash\"><a class=\"viewcode-back\" href=\"../../../../topics/auth/default/#django.contrib.auth.update_session_auth_hash\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">update_session_auth_hash</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Updating a user&#39;s password logs out all sessions for the user.</span>\n\n<span class=\"sd\">    Take the current request and the updated user object from which the new</span>\n<span class=\"sd\">    session hash will be derived and update the session hash appropriately to</span>\n<span class=\"sd\">    prevent a password change from logging out the session from which the</span>\n<span class=\"sd\">    password was changed.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">cycle_key</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"s2\">&quot;get_session_auth_hash&quot;</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span> <span class=\"o\">==</span> <span class=\"n\">user</span><span class=\"p\">:</span>\n        <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"p\">[</span><span class=\"n\">HASH_SESSION_KEY</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">get_session_auth_hash</span><span class=\"p\">()</span></div>\n</pre></div>", "current_page_name": "_modules/django/contrib/auth", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}