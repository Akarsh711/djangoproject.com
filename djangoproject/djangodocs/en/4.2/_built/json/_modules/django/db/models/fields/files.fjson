{"parents": [{"link": "../../../../../", "title": "Module code"}, {"link": "../../../../", "title": "django"}, {"link": "../", "title": "django.db.models.fields"}], "title": "django.db.models.fields.files", "body": "<h1>Source code for django.db.models.fields.files</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"kn\">import</span> <span class=\"nn\">posixpath</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.core</span> <span class=\"kn\">import</span> <span class=\"n\">checks</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.core.files.base</span> <span class=\"kn\">import</span> <span class=\"n\">File</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.core.files.images</span> <span class=\"kn\">import</span> <span class=\"n\">ImageFile</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.core.files.storage</span> <span class=\"kn\">import</span> <span class=\"n\">Storage</span><span class=\"p\">,</span> <span class=\"n\">default_storage</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.core.files.utils</span> <span class=\"kn\">import</span> <span class=\"n\">validate_file_name</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">signals</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.fields</span> <span class=\"kn\">import</span> <span class=\"n\">Field</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.query_utils</span> <span class=\"kn\">import</span> <span class=\"n\">DeferredAttribute</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.utils</span> <span class=\"kn\">import</span> <span class=\"n\">AltersData</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.translation</span> <span class=\"kn\">import</span> <span class=\"n\">gettext_lazy</span> <span class=\"k\">as</span> <span class=\"n\">_</span>\n\n\n<div class=\"viewcode-block\" id=\"FieldFile\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/fields/#django.db.models.FieldFile\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">FieldFile</span><span class=\"p\">(</span><span class=\"n\">File</span><span class=\"p\">,</span> <span class=\"n\">AltersData</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">instance</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span> <span class=\"o\">=</span> <span class=\"n\">field</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">storage</span> <span class=\"o\">=</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">storage</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_committed</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__eq__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Older code may be expecting FileField values to be simple strings.</span>\n        <span class=\"c1\"># By overriding the == operator, it can remain backwards compatibility.</span>\n        <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">name</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">other</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__hash__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">hash</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># The standard File contains most of the necessary properties, but</span>\n    <span class=\"c1\"># FieldFiles can be instantiated without a name, so that needs to</span>\n    <span class=\"c1\"># be checked for here.</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_require_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;The &#39;</span><span class=\"si\">%s</span><span class=\"s2\">&#39; attribute has no file associated with it.&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">name</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_require_file</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_file&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_file</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;rb&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_file</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_set_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_file</span> <span class=\"o\">=</span> <span class=\"n\">file</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_del_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_file</span>\n\n    <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"nb\">property</span><span class=\"p\">(</span><span class=\"n\">_get_file</span><span class=\"p\">,</span> <span class=\"n\">_set_file</span><span class=\"p\">,</span> <span class=\"n\">_del_file</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_require_file</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">url</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_require_file</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">size</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_require_file</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_committed</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">size</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"FieldFile.open\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/fields/#django.db.models.FieldFile.open\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">open</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;rb&quot;</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_require_file</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_file&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">mode</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span></div>\n\n    <span class=\"c1\"># open() doesn&#39;t alter the file&#39;s contents, but it does reset the pointer</span>\n    <span class=\"nb\">open</span><span class=\"o\">.</span><span class=\"n\">alters_data</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n    <span class=\"c1\"># In addition to the standard File API, FieldFiles have extra methods</span>\n    <span class=\"c1\"># to further manipulate the underlying file, as well as update the</span>\n    <span class=\"c1\"># associated model instance.</span>\n\n<div class=\"viewcode-block\" id=\"FieldFile.save\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/fields/#django.db.models.FieldFile.save\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">save</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">content</span><span class=\"p\">,</span> <span class=\"n\">save</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">generate_filename</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">content</span><span class=\"p\">,</span> <span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">max_length</span><span class=\"p\">)</span>\n        <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">attname</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_committed</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n        <span class=\"c1\"># Save the object because it has changed, unless save is False</span>\n        <span class=\"k\">if</span> <span class=\"n\">save</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span></div>\n\n    <span class=\"n\">save</span><span class=\"o\">.</span><span class=\"n\">alters_data</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n<div class=\"viewcode-block\" id=\"FieldFile.delete\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/fields/#django.db.models.FieldFile.delete\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">save</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n        <span class=\"c1\"># Only close the file if it&#39;s already open, which we know by the</span>\n        <span class=\"c1\"># presence of self._file</span>\n        <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_file&quot;</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n            <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">file</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">attname</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_committed</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">save</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span></div>\n\n    <span class=\"n\">delete</span><span class=\"o\">.</span><span class=\"n\">alters_data</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">closed</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_file&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">file</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">or</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">closed</span>\n\n<div class=\"viewcode-block\" id=\"FieldFile.close\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/fields/#django.db.models.FieldFile.close\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">close</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_file&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">file</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__getstate__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># FieldFile needs access to its associated model field, an instance and</span>\n        <span class=\"c1\"># the file&#39;s name. Everything else will be restored later, by</span>\n        <span class=\"c1\"># FileDescriptor below.</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;closed&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;_committed&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;_file&quot;</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;instance&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;field&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__setstate__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">state</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">state</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">storage</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">storage</span></div>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">FileDescriptor</span><span class=\"p\">(</span><span class=\"n\">DeferredAttribute</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    The descriptor for the file attribute on the model instance. Return a</span>\n<span class=\"sd\">    FieldFile when accessed so you can write code like::</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; from myapp.models import MyModel</span>\n<span class=\"sd\">        &gt;&gt;&gt; instance = MyModel.objects.get(pk=1)</span>\n<span class=\"sd\">        &gt;&gt;&gt; instance.file.size</span>\n\n<span class=\"sd\">    Assign a file object on assignment so you can do::</span>\n\n<span class=\"sd\">        &gt;&gt;&gt; with open(&#39;/path/to/hello.world&#39;) as f:</span>\n<span class=\"sd\">        ...     instance.file = File(f)</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__get__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">instance</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span>\n\n        <span class=\"c1\"># This is slightly complicated, so worth an explanation.</span>\n        <span class=\"c1\"># instance.file needs to ultimately return some instance of `File`,</span>\n        <span class=\"c1\"># probably a subclass. Additionally, this returned object needs to have</span>\n        <span class=\"c1\"># the FieldFile API so that users can easily do things like</span>\n        <span class=\"c1\"># instance.file.path and have that delegated to the file storage engine.</span>\n        <span class=\"c1\"># Easy enough if we&#39;re strict about assignment in __set__, but if you</span>\n        <span class=\"c1\"># peek below you can see that we&#39;re not. So depending on the current</span>\n        <span class=\"c1\"># value of the field we have to dynamically construct some sort of</span>\n        <span class=\"c1\"># &quot;thing&quot; to return.</span>\n\n        <span class=\"c1\"># The instance dict contains whatever was originally assigned</span>\n        <span class=\"c1\"># in __set__.</span>\n        <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__get__</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># If this value is a string (instance.file = &quot;path/to/file&quot;) or None</span>\n        <span class=\"c1\"># then we simply wrap it with the appropriate attribute class according</span>\n        <span class=\"c1\"># to the file field. [This is FieldFile for FileFields and</span>\n        <span class=\"c1\"># ImageFieldFile for ImageFields; it&#39;s also conceivable that user</span>\n        <span class=\"c1\"># subclasses might also want to subclass the attribute class]. This</span>\n        <span class=\"c1\"># object understands how to convert a path to a file, and also how to</span>\n        <span class=\"c1\"># handle None.</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">file</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">attr</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">attr_class</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"p\">)</span>\n            <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">attname</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">attr</span>\n\n        <span class=\"c1\"># Other types of files may be assigned as well, but they need to have</span>\n        <span class=\"c1\"># the FieldFile interface added to them. Thus, we wrap any other type of</span>\n        <span class=\"c1\"># File inside a FieldFile (well, the field&#39;s attr_class, which is</span>\n        <span class=\"c1\"># usually FieldFile).</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">File</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">FieldFile</span><span class=\"p\">):</span>\n            <span class=\"n\">file_copy</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">attr_class</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"n\">file_copy</span><span class=\"o\">.</span><span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"n\">file</span>\n            <span class=\"n\">file_copy</span><span class=\"o\">.</span><span class=\"n\">_committed</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">attname</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">file_copy</span>\n\n        <span class=\"c1\"># Finally, because of the (some would say boneheaded) way pickle works,</span>\n        <span class=\"c1\"># the underlying FieldFile might not actually itself have an associated</span>\n        <span class=\"c1\"># file. So we need to reset the details of the FieldFile in those cases.</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">FieldFile</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;field&quot;</span><span class=\"p\">):</span>\n            <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">instance</span>\n            <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">field</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span>\n            <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">storage</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">storage</span>\n\n        <span class=\"c1\"># Make sure that the instance is correct.</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">FieldFile</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">instance</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"p\">:</span>\n            <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">instance</span>\n\n        <span class=\"c1\"># That was fun, wasn&#39;t it?</span>\n        <span class=\"k\">return</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">attname</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__set__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">attname</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n\n<div class=\"viewcode-block\" id=\"FileField\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/fields/#django.db.models.FileField\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">FileField</span><span class=\"p\">(</span><span class=\"n\">Field</span><span class=\"p\">):</span>\n    <span class=\"c1\"># The class to wrap instance attributes in. Accessing the file object off</span>\n    <span class=\"c1\"># the instance will always return an instance of attr_class.</span>\n    <span class=\"n\">attr_class</span> <span class=\"o\">=</span> <span class=\"n\">FieldFile</span>\n\n    <span class=\"c1\"># The descriptor to use for accessing the attribute off of the class.</span>\n    <span class=\"n\">descriptor_class</span> <span class=\"o\">=</span> <span class=\"n\">FileDescriptor</span>\n\n    <span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s2\">&quot;File&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">verbose_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">upload_to</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">storage</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span>\n    <span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primary_key_set_explicitly</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;primary_key&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">storage</span> <span class=\"o\">=</span> <span class=\"n\">storage</span> <span class=\"ow\">or</span> <span class=\"n\">default_storage</span>\n        <span class=\"k\">if</span> <span class=\"n\">callable</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"p\">):</span>\n            <span class=\"c1\"># Hold a reference to the callable for deconstruct().</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_storage_callable</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">storage</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">storage</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"p\">,</span> <span class=\"n\">Storage</span><span class=\"p\">):</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n                    <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">.storage must be a subclass/instance of </span><span class=\"si\">%s</span><span class=\"s2\">.</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span>\n                    <span class=\"o\">%</span> <span class=\"p\">(</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__qualname__</span><span class=\"p\">,</span>\n                        <span class=\"n\">Storage</span><span class=\"o\">.</span><span class=\"vm\">__module__</span><span class=\"p\">,</span>\n                        <span class=\"n\">Storage</span><span class=\"o\">.</span><span class=\"vm\">__qualname__</span><span class=\"p\">,</span>\n                    <span class=\"p\">)</span>\n                <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">upload_to</span> <span class=\"o\">=</span> <span class=\"n\">upload_to</span>\n\n        <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">setdefault</span><span class=\"p\">(</span><span class=\"s2\">&quot;max_length&quot;</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">verbose_name</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">check</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span>\n            <span class=\"o\">*</span><span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">check</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">),</span>\n            <span class=\"o\">*</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_check_primary_key</span><span class=\"p\">(),</span>\n            <span class=\"o\">*</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_check_upload_to</span><span class=\"p\">(),</span>\n        <span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_check_primary_key</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_primary_key_set_explicitly</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span>\n                <span class=\"n\">checks</span><span class=\"o\">.</span><span class=\"n\">Error</span><span class=\"p\">(</span>\n                    <span class=\"s2\">&quot;&#39;primary_key&#39; is not a valid argument for a </span><span class=\"si\">%s</span><span class=\"s2\">.&quot;</span>\n                    <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span>\n                    <span class=\"n\">obj</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">,</span>\n                    <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">&quot;fields.E201&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_check_upload_to</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">upload_to</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">upload_to</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span>\n                <span class=\"n\">checks</span><span class=\"o\">.</span><span class=\"n\">Error</span><span class=\"p\">(</span>\n                    <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">&#39;s &#39;upload_to&#39; argument must be a relative path, not an &quot;</span>\n                    <span class=\"s2\">&quot;absolute path.&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span>\n                    <span class=\"n\">obj</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">,</span>\n                    <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">&quot;fields.E202&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">hint</span><span class=\"o\">=</span><span class=\"s2\">&quot;Remove the leading slash.&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">deconstruct</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">deconstruct</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;max_length&quot;</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">100</span><span class=\"p\">:</span>\n            <span class=\"k\">del</span> <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;max_length&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;upload_to&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">upload_to</span>\n        <span class=\"n\">storage</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_storage_callable&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">storage</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"n\">default_storage</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;storage&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">storage</span>\n        <span class=\"k\">return</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_internal_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;FileField&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_prep_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_prep_value</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Need to convert File objects provided via a form to string for</span>\n        <span class=\"c1\"># database insertion.</span>\n        <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n        <span class=\"k\">return</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">pre_save</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model_instance</span><span class=\"p\">,</span> <span class=\"n\">add</span><span class=\"p\">):</span>\n        <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">pre_save</span><span class=\"p\">(</span><span class=\"n\">model_instance</span><span class=\"p\">,</span> <span class=\"n\">add</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">file</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">_committed</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Commit the file to storage prior to saving the model</span>\n            <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">save</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">file</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">contribute_to_class</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">contribute_to_class</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">attname</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">descriptor_class</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">generate_filename</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Apply (if callable) or prepend (if a string) upload_to to the filename,</span>\n<span class=\"sd\">        then delegate further processing of the name to the storage backend.</span>\n<span class=\"sd\">        Until the storage layer, all file paths are expected to be Unix style</span>\n<span class=\"sd\">        (with forward slashes).</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">callable</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">upload_to</span><span class=\"p\">):</span>\n            <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">upload_to</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">dirname</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">upload_to</span><span class=\"p\">))</span>\n            <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"n\">posixpath</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">dirname</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"p\">)</span>\n        <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"n\">validate_file_name</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">allow_relative_path</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">generate_filename</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">save_form_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Important: None means &quot;no change&quot;, other false value means &quot;clear&quot;</span>\n        <span class=\"c1\"># This subtle distinction (rather than a more explicit marker) is</span>\n        <span class=\"c1\"># needed because we need to consume values that are also sane for a</span>\n        <span class=\"c1\"># regular (non Model-) Form to find in its cleaned_data dictionary.</span>\n        <span class=\"k\">if</span> <span class=\"n\">data</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># This value will be converted to str and stored in the</span>\n            <span class=\"c1\"># database, so leaving False as-is is not acceptable.</span>\n            <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">data</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">formfield</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">formfield</span><span class=\"p\">(</span>\n            <span class=\"o\">**</span><span class=\"p\">{</span>\n                <span class=\"s2\">&quot;form_class&quot;</span><span class=\"p\">:</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">FileField</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;max_length&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_length</span><span class=\"p\">,</span>\n                <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span></div>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ImageFileDescriptor</span><span class=\"p\">(</span><span class=\"n\">FileDescriptor</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Just like the FileDescriptor, but for ImageFields. The only difference is</span>\n<span class=\"sd\">    assigning the width/height to the width_field/height_field, if appropriate.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__set__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"n\">previous_file</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">attname</span><span class=\"p\">)</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__set__</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># To prevent recalculating image dimensions when we are instantiating</span>\n        <span class=\"c1\"># an object from the database (bug #11084), only update dimensions if</span>\n        <span class=\"c1\"># the field had a value before this assignment.  Since the default</span>\n        <span class=\"c1\"># value for FileField subclasses is an instance of field.attr_class,</span>\n        <span class=\"c1\"># previous_file will only be None when we are called from</span>\n        <span class=\"c1\"># Model.__init__().  The ImageField.update_dimension_fields method</span>\n        <span class=\"c1\"># hooked up to the post_init signal handles the Model.__init__() cases.</span>\n        <span class=\"c1\"># Assignment happening outside of Model.__init__() will trigger the</span>\n        <span class=\"c1\"># update right here.</span>\n        <span class=\"k\">if</span> <span class=\"n\">previous_file</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">update_dimension_fields</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">force</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ImageFieldFile</span><span class=\"p\">(</span><span class=\"n\">ImageFile</span><span class=\"p\">,</span> <span class=\"n\">FieldFile</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">save</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Clear the image dimensions cache</span>\n        <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_dimensions_cache&quot;</span><span class=\"p\">):</span>\n            <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_dimensions_cache</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">save</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"ImageField\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/fields/#django.db.models.ImageField\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ImageField</span><span class=\"p\">(</span><span class=\"n\">FileField</span><span class=\"p\">):</span>\n    <span class=\"n\">attr_class</span> <span class=\"o\">=</span> <span class=\"n\">ImageFieldFile</span>\n    <span class=\"n\">descriptor_class</span> <span class=\"o\">=</span> <span class=\"n\">ImageFileDescriptor</span>\n    <span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s2\">&quot;Image&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">verbose_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">width_field</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">height_field</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width_field</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">height_field</span> <span class=\"o\">=</span> <span class=\"n\">width_field</span><span class=\"p\">,</span> <span class=\"n\">height_field</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">verbose_name</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">check</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span>\n            <span class=\"o\">*</span><span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">check</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">),</span>\n            <span class=\"o\">*</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_check_image_library_installed</span><span class=\"p\">(),</span>\n        <span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_check_image_library_installed</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">PIL</span> <span class=\"kn\">import</span> <span class=\"n\">Image</span>  <span class=\"c1\"># NOQA</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span>\n                <span class=\"n\">checks</span><span class=\"o\">.</span><span class=\"n\">Error</span><span class=\"p\">(</span>\n                    <span class=\"s2\">&quot;Cannot use ImageField because Pillow is not installed.&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">hint</span><span class=\"o\">=</span><span class=\"p\">(</span>\n                        <span class=\"s2\">&quot;Get Pillow at https://pypi.org/project/Pillow/ &quot;</span>\n                        <span class=\"s1\">&#39;or run command &quot;python -m pip install Pillow&quot;.&#39;</span>\n                    <span class=\"p\">),</span>\n                    <span class=\"n\">obj</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">,</span>\n                    <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">&quot;fields.E210&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">deconstruct</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">deconstruct</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width_field</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;width_field&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width_field</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">height_field</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;height_field&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">height_field</span>\n        <span class=\"k\">return</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">contribute_to_class</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">contribute_to_class</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Attach update_dimension_fields so that dimension fields declared</span>\n        <span class=\"c1\"># after their corresponding image field don&#39;t stay cleared by</span>\n        <span class=\"c1\"># Model.__init__, see bug #11196.</span>\n        <span class=\"c1\"># Only run post-initialization dimension update on non-abstract models</span>\n        <span class=\"c1\"># with width_field/height_field.</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">abstract</span> <span class=\"ow\">and</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width_field</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">height_field</span><span class=\"p\">):</span>\n            <span class=\"n\">signals</span><span class=\"o\">.</span><span class=\"n\">post_init</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update_dimension_fields</span><span class=\"p\">,</span> <span class=\"n\">sender</span><span class=\"o\">=</span><span class=\"bp\">cls</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">update_dimension_fields</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">force</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Update field&#39;s width and height fields, if defined.</span>\n\n<span class=\"sd\">        This method is hooked up to model&#39;s post_init signal to update</span>\n<span class=\"sd\">        dimensions after instantiating a model instance.  However, dimensions</span>\n<span class=\"sd\">        won&#39;t be updated if the dimensions fields are already populated.  This</span>\n<span class=\"sd\">        avoids unnecessary recalculation when loading an object from the</span>\n<span class=\"sd\">        database.</span>\n\n<span class=\"sd\">        Dimensions can be forced to update with force=True, which is how</span>\n<span class=\"sd\">        ImageFileDescriptor.__set__ calls this method.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"c1\"># Nothing to update if the field is deferred.</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">attname</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"c1\"># getattr will call the ImageFileDescriptor&#39;s __get__ method, which</span>\n        <span class=\"c1\"># coerces the assigned value into an instance of self.attr_class</span>\n        <span class=\"c1\"># (ImageFieldFile in this case).</span>\n        <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">attname</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Nothing to update if we have no file and not being forced to update.</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">file</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">force</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"n\">dimension_fields_filled</span> <span class=\"o\">=</span> <span class=\"ow\">not</span> <span class=\"p\">(</span>\n            <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width_field</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width_field</span><span class=\"p\">))</span>\n            <span class=\"ow\">or</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">height_field</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">height_field</span><span class=\"p\">))</span>\n        <span class=\"p\">)</span>\n        <span class=\"c1\"># When both dimension fields have values, we are most likely loading</span>\n        <span class=\"c1\"># data from the database or updating an image field that already had</span>\n        <span class=\"c1\"># an image stored.  In the first case, we don&#39;t want to update the</span>\n        <span class=\"c1\"># dimension fields because we are already getting their values from the</span>\n        <span class=\"c1\"># database.  In the second case, we do want to update the dimensions</span>\n        <span class=\"c1\"># fields and will skip this return because force will be True since we</span>\n        <span class=\"c1\"># were called from ImageFileDescriptor.__set__.</span>\n        <span class=\"k\">if</span> <span class=\"n\">dimension_fields_filled</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">force</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"c1\"># file should be an instance of ImageFieldFile or should be None.</span>\n        <span class=\"k\">if</span> <span class=\"n\">file</span><span class=\"p\">:</span>\n            <span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">width</span>\n            <span class=\"n\">height</span> <span class=\"o\">=</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">height</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># No file, so clear dimensions fields.</span>\n            <span class=\"n\">width</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n            <span class=\"n\">height</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n        <span class=\"c1\"># Update the width and height fields.</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width_field</span><span class=\"p\">:</span>\n            <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">width_field</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">height_field</span><span class=\"p\">:</span>\n            <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">height_field</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">formfield</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">formfield</span><span class=\"p\">(</span>\n            <span class=\"o\">**</span><span class=\"p\">{</span>\n                <span class=\"s2\">&quot;form_class&quot;</span><span class=\"p\">:</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">ImageField</span><span class=\"p\">,</span>\n                <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span></div>\n</pre></div>", "current_page_name": "_modules/django/db/models/fields/files", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
