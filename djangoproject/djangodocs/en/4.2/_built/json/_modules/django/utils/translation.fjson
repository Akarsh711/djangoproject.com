{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "django"}], "title": "django.utils.translation", "body": "<h1>Source code for django.utils.translation</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">Internationalization support.</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">contextlib</span> <span class=\"kn\">import</span> <span class=\"n\">ContextDecorator</span>\n<span class=\"kn\">from</span> <span class=\"nn\">decimal</span> <span class=\"kn\">import</span> <span class=\"n\">ROUND_UP</span><span class=\"p\">,</span> <span class=\"n\">Decimal</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.autoreload</span> <span class=\"kn\">import</span> <span class=\"n\">autoreload_started</span><span class=\"p\">,</span> <span class=\"n\">file_changed</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.functional</span> <span class=\"kn\">import</span> <span class=\"n\">lazy</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.regex_helper</span> <span class=\"kn\">import</span> <span class=\"n\">_lazy_re_compile</span>\n\n<span class=\"n\">__all__</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">&quot;activate&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;deactivate&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;override&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;deactivate_all&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;get_language&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;get_language_from_request&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;get_language_info&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;get_language_bidi&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;check_for_language&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;to_language&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;to_locale&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;templatize&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;gettext&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;gettext_lazy&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;gettext_noop&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;ngettext&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;ngettext_lazy&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;pgettext&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;pgettext_lazy&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;npgettext&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;npgettext_lazy&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">TranslatorCommentWarning</span><span class=\"p\">(</span><span class=\"ne\">SyntaxWarning</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"c1\"># Here be dragons, so a short explanation of the logic won&#39;t hurt:</span>\n<span class=\"c1\"># We are trying to solve two problems: (1) access settings, in particular</span>\n<span class=\"c1\"># settings.USE_I18N, as late as possible, so that modules can be imported</span>\n<span class=\"c1\"># without having to first configure Django, and (2) if some other code creates</span>\n<span class=\"c1\"># a reference to one of these functions, don&#39;t break that reference when we</span>\n<span class=\"c1\"># replace the functions with their real counterparts (once we do access the</span>\n<span class=\"c1\"># settings).</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Trans</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    The purpose of this class is to store the actual translation function upon</span>\n<span class=\"sd\">    receiving the first call to that function. After this is done, changes to</span>\n<span class=\"sd\">    USE_I18N will have no effect to which function is served upon request. If</span>\n<span class=\"sd\">    your tests rely on changing USE_I18N, you can delete all the functions</span>\n<span class=\"sd\">    from _trans.__dict__.</span>\n\n<span class=\"sd\">    Note that storing the function with setattr will have a noticeable</span>\n<span class=\"sd\">    performance effect, as access to the function goes the normal path,</span>\n<span class=\"sd\">    instead of using __getattr__.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__getattr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">real_name</span><span class=\"p\">):</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">USE_I18N</span><span class=\"p\">:</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">django.utils.translation</span> <span class=\"kn\">import</span> <span class=\"n\">trans_real</span> <span class=\"k\">as</span> <span class=\"n\">trans</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">django.utils.translation.reloader</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n                <span class=\"n\">translation_file_changed</span><span class=\"p\">,</span>\n                <span class=\"n\">watch_for_translation_changes</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"n\">autoreload_started</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span>\n                <span class=\"n\">watch_for_translation_changes</span><span class=\"p\">,</span> <span class=\"n\">dispatch_uid</span><span class=\"o\">=</span><span class=\"s2\">&quot;translation_file_changed&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">file_changed</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span>\n                <span class=\"n\">translation_file_changed</span><span class=\"p\">,</span> <span class=\"n\">dispatch_uid</span><span class=\"o\">=</span><span class=\"s2\">&quot;translation_file_changed&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">django.utils.translation</span> <span class=\"kn\">import</span> <span class=\"n\">trans_null</span> <span class=\"k\">as</span> <span class=\"n\">trans</span>\n        <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">real_name</span><span class=\"p\">,</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">trans</span><span class=\"p\">,</span> <span class=\"n\">real_name</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">trans</span><span class=\"p\">,</span> <span class=\"n\">real_name</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">_trans</span> <span class=\"o\">=</span> <span class=\"n\">Trans</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># The Trans class is no more needed, so remove it from the namespace.</span>\n<span class=\"k\">del</span> <span class=\"n\">Trans</span>\n\n\n<div class=\"viewcode-block\" id=\"gettext_noop\"><a class=\"viewcode-back\" href=\"../../../../ref/utils/#django.utils.translation.gettext_noop\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">gettext_noop</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">_trans</span><span class=\"o\">.</span><span class=\"n\">gettext_noop</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"gettext\"><a class=\"viewcode-back\" href=\"../../../../ref/utils/#django.utils.translation.gettext\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">gettext</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">_trans</span><span class=\"o\">.</span><span class=\"n\">gettext</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ngettext\"><a class=\"viewcode-back\" href=\"../../../../ref/utils/#django.utils.translation.ngettext\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">ngettext</span><span class=\"p\">(</span><span class=\"n\">singular</span><span class=\"p\">,</span> <span class=\"n\">plural</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">_trans</span><span class=\"o\">.</span><span class=\"n\">ngettext</span><span class=\"p\">(</span><span class=\"n\">singular</span><span class=\"p\">,</span> <span class=\"n\">plural</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"pgettext\"><a class=\"viewcode-back\" href=\"../../../../ref/utils/#django.utils.translation.pgettext\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">pgettext</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">_trans</span><span class=\"o\">.</span><span class=\"n\">pgettext</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"npgettext\"><a class=\"viewcode-back\" href=\"../../../../ref/utils/#django.utils.translation.npgettext\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">npgettext</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">singular</span><span class=\"p\">,</span> <span class=\"n\">plural</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">_trans</span><span class=\"o\">.</span><span class=\"n\">npgettext</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">singular</span><span class=\"p\">,</span> <span class=\"n\">plural</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">)</span></div>\n\n\n<span class=\"n\">gettext_lazy</span> <span class=\"o\">=</span> <span class=\"n\">lazy</span><span class=\"p\">(</span><span class=\"n\">gettext</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)</span>\n<span class=\"n\">pgettext_lazy</span> <span class=\"o\">=</span> <span class=\"n\">lazy</span><span class=\"p\">(</span><span class=\"n\">pgettext</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">lazy_number</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">,</span> <span class=\"n\">resultclass</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n        <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;number&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">number</span>\n        <span class=\"n\">proxy</span> <span class=\"o\">=</span> <span class=\"n\">lazy</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">,</span> <span class=\"n\">resultclass</span><span class=\"p\">)(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">original_kwargs</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n\n        <span class=\"k\">class</span> <span class=\"nc\">NumberAwareString</span><span class=\"p\">(</span><span class=\"n\">resultclass</span><span class=\"p\">):</span>\n            <span class=\"k\">def</span> <span class=\"fm\">__bool__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n                <span class=\"k\">return</span> <span class=\"nb\">bool</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;singular&quot;</span><span class=\"p\">])</span>\n\n            <span class=\"k\">def</span> <span class=\"nf\">_get_number_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"p\">):</span>\n                <span class=\"k\">try</span><span class=\"p\">:</span>\n                    <span class=\"k\">return</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"n\">number</span><span class=\"p\">]</span>\n                <span class=\"k\">except</span> <span class=\"ne\">KeyError</span><span class=\"p\">:</span>\n                    <span class=\"k\">raise</span> <span class=\"ne\">KeyError</span><span class=\"p\">(</span>\n                        <span class=\"s2\">&quot;Your dictionary lacks key &#39;</span><span class=\"si\">%s</span><span class=\"s2\">&#39;. Please provide &quot;</span>\n                        <span class=\"s2\">&quot;it, because it is required to determine whether &quot;</span>\n                        <span class=\"s2\">&quot;string is singular or plural.&quot;</span> <span class=\"o\">%</span> <span class=\"n\">number</span>\n                    <span class=\"p\">)</span>\n\n            <span class=\"k\">def</span> <span class=\"nf\">_translate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">number_value</span><span class=\"p\">):</span>\n                <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;number&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">number_value</span>\n                <span class=\"k\">return</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n            <span class=\"k\">def</span> <span class=\"nf\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n                <span class=\"n\">number_value</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_number_value</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">kwargs</span> <span class=\"ow\">and</span> <span class=\"n\">number</span> <span class=\"k\">else</span> <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                <span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">number_value</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n            <span class=\"k\">def</span> <span class=\"fm\">__mod__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">rhs</span><span class=\"p\">):</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">number</span><span class=\"p\">:</span>\n                    <span class=\"n\">number_value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_number_value</span><span class=\"p\">(</span><span class=\"n\">rhs</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">number_value</span> <span class=\"o\">=</span> <span class=\"n\">rhs</span>\n                <span class=\"n\">translated</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_translate</span><span class=\"p\">(</span><span class=\"n\">number_value</span><span class=\"p\">)</span>\n                <span class=\"k\">try</span><span class=\"p\">:</span>\n                    <span class=\"n\">translated</span> <span class=\"o\">%=</span> <span class=\"n\">rhs</span>\n                <span class=\"k\">except</span> <span class=\"ne\">TypeError</span><span class=\"p\">:</span>\n                    <span class=\"c1\"># String doesn&#39;t contain a placeholder for the number.</span>\n                    <span class=\"k\">pass</span>\n                <span class=\"k\">return</span> <span class=\"n\">translated</span>\n\n        <span class=\"n\">proxy</span> <span class=\"o\">=</span> <span class=\"n\">lazy</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">NumberAwareString</span><span class=\"p\">(),</span> <span class=\"n\">NumberAwareString</span><span class=\"p\">)(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"n\">proxy</span><span class=\"o\">.</span><span class=\"n\">__reduce__</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"p\">(</span>\n            <span class=\"n\">_lazy_number_unpickle</span><span class=\"p\">,</span>\n            <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">,</span> <span class=\"n\">resultclass</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"n\">original_kwargs</span><span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">proxy</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_lazy_number_unpickle</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">,</span> <span class=\"n\">resultclass</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">lazy_number</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">,</span> <span class=\"n\">resultclass</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"o\">=</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"ngettext_lazy\"><a class=\"viewcode-back\" href=\"../../../../ref/utils/#django.utils.translation.ngettext_lazy\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">ngettext_lazy</span><span class=\"p\">(</span><span class=\"n\">singular</span><span class=\"p\">,</span> <span class=\"n\">plural</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">lazy_number</span><span class=\"p\">(</span><span class=\"n\">ngettext</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">singular</span><span class=\"o\">=</span><span class=\"n\">singular</span><span class=\"p\">,</span> <span class=\"n\">plural</span><span class=\"o\">=</span><span class=\"n\">plural</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"o\">=</span><span class=\"n\">number</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"npgettext_lazy\"><a class=\"viewcode-back\" href=\"../../../../ref/utils/#django.utils.translation.npgettext_lazy\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">npgettext_lazy</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">singular</span><span class=\"p\">,</span> <span class=\"n\">plural</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">lazy_number</span><span class=\"p\">(</span>\n        <span class=\"n\">npgettext</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">singular</span><span class=\"o\">=</span><span class=\"n\">singular</span><span class=\"p\">,</span> <span class=\"n\">plural</span><span class=\"o\">=</span><span class=\"n\">plural</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"o\">=</span><span class=\"n\">number</span>\n    <span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"activate\"><a class=\"viewcode-back\" href=\"../../../../ref/utils/#django.utils.translation.activate\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">activate</span><span class=\"p\">(</span><span class=\"n\">language</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">_trans</span><span class=\"o\">.</span><span class=\"n\">activate</span><span class=\"p\">(</span><span class=\"n\">language</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"deactivate\"><a class=\"viewcode-back\" href=\"../../../../ref/utils/#django.utils.translation.deactivate\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">deactivate</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">_trans</span><span class=\"o\">.</span><span class=\"n\">deactivate</span><span class=\"p\">()</span></div>\n\n\n<div class=\"viewcode-block\" id=\"override\"><a class=\"viewcode-back\" href=\"../../../../ref/utils/#django.utils.translation.override\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">override</span><span class=\"p\">(</span><span class=\"n\">ContextDecorator</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">language</span><span class=\"p\">,</span> <span class=\"n\">deactivate</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">language</span> <span class=\"o\">=</span> <span class=\"n\">language</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deactivate</span> <span class=\"o\">=</span> <span class=\"n\">deactivate</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__enter__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">old_language</span> <span class=\"o\">=</span> <span class=\"n\">get_language</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">language</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">activate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">language</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">deactivate_all</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__exit__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">exc_type</span><span class=\"p\">,</span> <span class=\"n\">exc_value</span><span class=\"p\">,</span> <span class=\"n\">traceback</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">old_language</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">deactivate_all</span><span class=\"p\">()</span>\n        <span class=\"k\">elif</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deactivate</span><span class=\"p\">:</span>\n            <span class=\"n\">deactivate</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">activate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">old_language</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_language\"><a class=\"viewcode-back\" href=\"../../../../ref/utils/#django.utils.translation.get_language\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">get_language</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">_trans</span><span class=\"o\">.</span><span class=\"n\">get_language</span><span class=\"p\">()</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_language_bidi\"><a class=\"viewcode-back\" href=\"../../../../ref/utils/#django.utils.translation.get_language_bidi\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">get_language_bidi</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">_trans</span><span class=\"o\">.</span><span class=\"n\">get_language_bidi</span><span class=\"p\">()</span></div>\n\n\n<div class=\"viewcode-block\" id=\"check_for_language\"><a class=\"viewcode-back\" href=\"../../../../ref/utils/#django.utils.translation.check_for_language\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">check_for_language</span><span class=\"p\">(</span><span class=\"n\">lang_code</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">_trans</span><span class=\"o\">.</span><span class=\"n\">check_for_language</span><span class=\"p\">(</span><span class=\"n\">lang_code</span><span class=\"p\">)</span></div>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">to_language</span><span class=\"p\">(</span><span class=\"n\">locale</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Turn a locale name (en_US) into a language name (en-us).&quot;&quot;&quot;</span>\n    <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">locale</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;_&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">p</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">locale</span><span class=\"p\">[:</span><span class=\"n\">p</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;-&quot;</span> <span class=\"o\">+</span> <span class=\"n\">locale</span><span class=\"p\">[</span><span class=\"n\">p</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"p\">:]</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">locale</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n\n\n<div class=\"viewcode-block\" id=\"to_locale\"><a class=\"viewcode-back\" href=\"../../../../ref/utils/#django.utils.translation.to_locale\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">to_locale</span><span class=\"p\">(</span><span class=\"n\">language</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Turn a language name (en-us) into a locale name (en_US).&quot;&quot;&quot;</span>\n    <span class=\"n\">lang</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">country</span> <span class=\"o\">=</span> <span class=\"n\">language</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">partition</span><span class=\"p\">(</span><span class=\"s2\">&quot;-&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">country</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">language</span><span class=\"p\">[:</span><span class=\"mi\">3</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"n\">language</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">:]</span>\n    <span class=\"c1\"># A language with &gt; 2 characters after the dash only has its first</span>\n    <span class=\"c1\"># character after the dash capitalized; e.g. sr-latn becomes sr_Latn.</span>\n    <span class=\"c1\"># A language with 2 characters after the dash has both characters</span>\n    <span class=\"c1\"># capitalized; e.g. en-us becomes en_US.</span>\n    <span class=\"n\">country</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">tail</span> <span class=\"o\">=</span> <span class=\"n\">country</span><span class=\"o\">.</span><span class=\"n\">partition</span><span class=\"p\">(</span><span class=\"s2\">&quot;-&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">country</span> <span class=\"o\">=</span> <span class=\"n\">country</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">country</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span> <span class=\"k\">else</span> <span class=\"n\">country</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">tail</span><span class=\"p\">:</span>\n        <span class=\"n\">country</span> <span class=\"o\">+=</span> <span class=\"s2\">&quot;-&quot;</span> <span class=\"o\">+</span> <span class=\"n\">tail</span>\n    <span class=\"k\">return</span> <span class=\"n\">lang</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_&quot;</span> <span class=\"o\">+</span> <span class=\"n\">country</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_language_from_request\"><a class=\"viewcode-back\" href=\"../../../../ref/utils/#django.utils.translation.get_language_from_request\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">get_language_from_request</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">check_path</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">_trans</span><span class=\"o\">.</span><span class=\"n\">get_language_from_request</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">check_path</span><span class=\"p\">)</span></div>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">get_language_from_path</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">_trans</span><span class=\"o\">.</span><span class=\"n\">get_language_from_path</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"get_supported_language_variant\"><a class=\"viewcode-back\" href=\"../../../../ref/utils/#django.utils.translation.get_supported_language_variant\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">get_supported_language_variant</span><span class=\"p\">(</span><span class=\"n\">lang_code</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"p\">,</span> <span class=\"n\">strict</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">_trans</span><span class=\"o\">.</span><span class=\"n\">get_supported_language_variant</span><span class=\"p\">(</span><span class=\"n\">lang_code</span><span class=\"p\">,</span> <span class=\"n\">strict</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"templatize\"><a class=\"viewcode-back\" href=\"../../../../ref/utils/#django.utils.translation.templatize\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">templatize</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">.template</span> <span class=\"kn\">import</span> <span class=\"n\">templatize</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">templatize</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"deactivate_all\"><a class=\"viewcode-back\" href=\"../../../../ref/utils/#django.utils.translation.deactivate_all\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">deactivate_all</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">_trans</span><span class=\"o\">.</span><span class=\"n\">deactivate_all</span><span class=\"p\">()</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_language_info\"><a class=\"viewcode-back\" href=\"../../../../topics/i18n/translation/#django.utils.translation.get_language_info\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">get_language_info</span><span class=\"p\">(</span><span class=\"n\">lang_code</span><span class=\"p\">):</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">django.conf.locale</span> <span class=\"kn\">import</span> <span class=\"n\">LANG_INFO</span>\n\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">lang_info</span> <span class=\"o\">=</span> <span class=\"n\">LANG_INFO</span><span class=\"p\">[</span><span class=\"n\">lang_code</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;fallback&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">lang_info</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;name&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">lang_info</span><span class=\"p\">:</span>\n            <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">get_language_info</span><span class=\"p\">(</span><span class=\"n\">lang_info</span><span class=\"p\">[</span><span class=\"s2\">&quot;fallback&quot;</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">lang_info</span>\n    <span class=\"k\">except</span> <span class=\"ne\">KeyError</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;-&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">lang_code</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">KeyError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Unknown language code </span><span class=\"si\">%s</span><span class=\"s2\">.&quot;</span> <span class=\"o\">%</span> <span class=\"n\">lang_code</span><span class=\"p\">)</span>\n        <span class=\"n\">generic_lang_code</span> <span class=\"o\">=</span> <span class=\"n\">lang_code</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;-&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">LANG_INFO</span><span class=\"p\">[</span><span class=\"n\">generic_lang_code</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span> <span class=\"ne\">KeyError</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">KeyError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Unknown language code </span><span class=\"si\">%s</span><span class=\"s2\"> and </span><span class=\"si\">%s</span><span class=\"s2\">.&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">lang_code</span><span class=\"p\">,</span> <span class=\"n\">generic_lang_code</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">info</span><span class=\"p\">:</span>\n        <span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s2\">&quot;name_translated&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">gettext_lazy</span><span class=\"p\">(</span><span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">])</span>\n    <span class=\"k\">return</span> <span class=\"n\">info</span></div>\n\n\n<span class=\"n\">trim_whitespace_re</span> <span class=\"o\">=</span> <span class=\"n\">_lazy_re_compile</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">&quot;\\s*\\n\\s*&quot;</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">trim_whitespace</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">trim_whitespace_re</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">round_away_from_one</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">Decimal</span><span class=\"p\">(</span><span class=\"n\">value</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">quantize</span><span class=\"p\">(</span><span class=\"n\">Decimal</span><span class=\"p\">(</span><span class=\"s2\">&quot;0&quot;</span><span class=\"p\">),</span> <span class=\"n\">rounding</span><span class=\"o\">=</span><span class=\"n\">ROUND_UP</span><span class=\"p\">))</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n</pre></div>", "current_page_name": "_modules/django/utils/translation", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
