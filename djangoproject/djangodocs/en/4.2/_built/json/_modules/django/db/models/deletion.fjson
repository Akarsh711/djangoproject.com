{"parents": [{"link": "../../../../", "title": "Module code"}, {"link": "../../../", "title": "django"}], "title": "django.db.models.deletion", "body": "<h1>Source code for django.db.models.deletion</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">Counter</span><span class=\"p\">,</span> <span class=\"n\">defaultdict</span>\n<span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"kn\">import</span> <span class=\"n\">partial</span><span class=\"p\">,</span> <span class=\"n\">reduce</span>\n<span class=\"kn\">from</span> <span class=\"nn\">itertools</span> <span class=\"kn\">import</span> <span class=\"n\">chain</span>\n<span class=\"kn\">from</span> <span class=\"nn\">operator</span> <span class=\"kn\">import</span> <span class=\"n\">attrgetter</span><span class=\"p\">,</span> <span class=\"n\">or_</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">IntegrityError</span><span class=\"p\">,</span> <span class=\"n\">connections</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"p\">,</span> <span class=\"n\">transaction</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">query_utils</span><span class=\"p\">,</span> <span class=\"n\">signals</span><span class=\"p\">,</span> <span class=\"n\">sql</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ProtectedError</span><span class=\"p\">(</span><span class=\"n\">IntegrityError</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"n\">protected_objects</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">protected_objects</span> <span class=\"o\">=</span> <span class=\"n\">protected_objects</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"n\">protected_objects</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">RestrictedError</span><span class=\"p\">(</span><span class=\"n\">IntegrityError</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"n\">restricted_objects</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">restricted_objects</span> <span class=\"o\">=</span> <span class=\"n\">restricted_objects</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"n\">restricted_objects</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"CASCADE\"><a class=\"viewcode-back\" href=\"../../../../../ref/models/fields/#django.db.models.CASCADE\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">CASCADE</span><span class=\"p\">(</span><span class=\"n\">collector</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">sub_objs</span><span class=\"p\">,</span> <span class=\"n\">using</span><span class=\"p\">):</span>\n    <span class=\"n\">collector</span><span class=\"o\">.</span><span class=\"n\">collect</span><span class=\"p\">(</span>\n        <span class=\"n\">sub_objs</span><span class=\"p\">,</span>\n        <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">remote_field</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">,</span>\n        <span class=\"n\">source_attr</span><span class=\"o\">=</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n        <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">null</span><span class=\"p\">,</span>\n        <span class=\"n\">fail_on_restricted</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">null</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">connections</span><span class=\"p\">[</span><span class=\"n\">using</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">can_defer_constraint_checks</span><span class=\"p\">:</span>\n        <span class=\"n\">collector</span><span class=\"o\">.</span><span class=\"n\">add_field_update</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">sub_objs</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"PROTECT\"><a class=\"viewcode-back\" href=\"../../../../../ref/models/fields/#django.db.models.PROTECT\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">PROTECT</span><span class=\"p\">(</span><span class=\"n\">collector</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">sub_objs</span><span class=\"p\">,</span> <span class=\"n\">using</span><span class=\"p\">):</span>\n    <span class=\"k\">raise</span> <span class=\"n\">ProtectedError</span><span class=\"p\">(</span>\n        <span class=\"s2\">&quot;Cannot delete some instances of model &#39;</span><span class=\"si\">%s</span><span class=\"s2\">&#39; because they are &quot;</span>\n        <span class=\"s2\">&quot;referenced through a protected foreign key: &#39;</span><span class=\"si\">%s</span><span class=\"s2\">.</span><span class=\"si\">%s</span><span class=\"s2\">&#39;&quot;</span>\n        <span class=\"o\">%</span> <span class=\"p\">(</span>\n            <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">remote_field</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span>\n            <span class=\"n\">sub_objs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span>\n            <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n        <span class=\"p\">),</span>\n        <span class=\"n\">sub_objs</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"RESTRICT\"><a class=\"viewcode-back\" href=\"../../../../../ref/models/fields/#django.db.models.RESTRICT\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">RESTRICT</span><span class=\"p\">(</span><span class=\"n\">collector</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">sub_objs</span><span class=\"p\">,</span> <span class=\"n\">using</span><span class=\"p\">):</span>\n    <span class=\"n\">collector</span><span class=\"o\">.</span><span class=\"n\">add_restricted_objects</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">sub_objs</span><span class=\"p\">)</span>\n    <span class=\"n\">collector</span><span class=\"o\">.</span><span class=\"n\">add_dependency</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">remote_field</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"SET\"><a class=\"viewcode-back\" href=\"../../../../../ref/models/fields/#django.db.models.SET\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">SET</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">callable</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">):</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">set_on_delete</span><span class=\"p\">(</span><span class=\"n\">collector</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">sub_objs</span><span class=\"p\">,</span> <span class=\"n\">using</span><span class=\"p\">):</span>\n            <span class=\"n\">collector</span><span class=\"o\">.</span><span class=\"n\">add_field_update</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">(),</span> <span class=\"n\">sub_objs</span><span class=\"p\">)</span>\n\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">set_on_delete</span><span class=\"p\">(</span><span class=\"n\">collector</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">sub_objs</span><span class=\"p\">,</span> <span class=\"n\">using</span><span class=\"p\">):</span>\n            <span class=\"n\">collector</span><span class=\"o\">.</span><span class=\"n\">add_field_update</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">sub_objs</span><span class=\"p\">)</span>\n\n    <span class=\"n\">set_on_delete</span><span class=\"o\">.</span><span class=\"n\">deconstruct</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s2\">&quot;django.db.models.SET&quot;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,),</span> <span class=\"p\">{})</span>\n    <span class=\"n\">set_on_delete</span><span class=\"o\">.</span><span class=\"n\">lazy_sub_objs</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n    <span class=\"k\">return</span> <span class=\"n\">set_on_delete</span></div>\n\n\n<div class=\"viewcode-block\" id=\"SET_NULL\"><a class=\"viewcode-back\" href=\"../../../../../ref/models/fields/#django.db.models.SET_NULL\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">SET_NULL</span><span class=\"p\">(</span><span class=\"n\">collector</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">sub_objs</span><span class=\"p\">,</span> <span class=\"n\">using</span><span class=\"p\">):</span>\n    <span class=\"n\">collector</span><span class=\"o\">.</span><span class=\"n\">add_field_update</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">sub_objs</span><span class=\"p\">)</span></div>\n\n\n<span class=\"n\">SET_NULL</span><span class=\"o\">.</span><span class=\"n\">lazy_sub_objs</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n\n<div class=\"viewcode-block\" id=\"SET_DEFAULT\"><a class=\"viewcode-back\" href=\"../../../../../ref/models/fields/#django.db.models.SET_DEFAULT\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">SET_DEFAULT</span><span class=\"p\">(</span><span class=\"n\">collector</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">sub_objs</span><span class=\"p\">,</span> <span class=\"n\">using</span><span class=\"p\">):</span>\n    <span class=\"n\">collector</span><span class=\"o\">.</span><span class=\"n\">add_field_update</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">get_default</span><span class=\"p\">(),</span> <span class=\"n\">sub_objs</span><span class=\"p\">)</span></div>\n\n\n<span class=\"n\">SET_DEFAULT</span><span class=\"o\">.</span><span class=\"n\">lazy_sub_objs</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n\n<div class=\"viewcode-block\" id=\"DO_NOTHING\"><a class=\"viewcode-back\" href=\"../../../../../ref/models/fields/#django.db.models.DO_NOTHING\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">DO_NOTHING</span><span class=\"p\">(</span><span class=\"n\">collector</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">sub_objs</span><span class=\"p\">,</span> <span class=\"n\">using</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span></div>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">get_candidate_relations_to_delete</span><span class=\"p\">(</span><span class=\"n\">opts</span><span class=\"p\">):</span>\n    <span class=\"c1\"># The candidate relations are the ones that come from N-1 and 1-1 relations.</span>\n    <span class=\"c1\"># N-N  (i.e., many-to-many) relations aren&#39;t candidates for deletion.</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span>\n        <span class=\"n\">f</span>\n        <span class=\"k\">for</span> <span class=\"n\">f</span> <span class=\"ow\">in</span> <span class=\"n\">opts</span><span class=\"o\">.</span><span class=\"n\">get_fields</span><span class=\"p\">(</span><span class=\"n\">include_hidden</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">auto_created</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">concrete</span> <span class=\"ow\">and</span> <span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">one_to_one</span> <span class=\"ow\">or</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">one_to_many</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Collector</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">using</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">using</span> <span class=\"o\">=</span> <span class=\"n\">using</span>\n        <span class=\"c1\"># A Model or QuerySet object.</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">origin</span> <span class=\"o\">=</span> <span class=\"n\">origin</span>\n        <span class=\"c1\"># Initially, {model: {instances}}, later values become lists.</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">)</span>\n        <span class=\"c1\"># {(field, value): [instances, \u2026]}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field_updates</span> <span class=\"o\">=</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)</span>\n        <span class=\"c1\"># {model: {field: {instances}}}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">restricted_objects</span> <span class=\"o\">=</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">defaultdict</span><span class=\"p\">,</span> <span class=\"nb\">set</span><span class=\"p\">))</span>\n        <span class=\"c1\"># fast_deletes is a list of queryset-likes that can be deleted without</span>\n        <span class=\"c1\"># fetching the objects into memory.</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fast_deletes</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"c1\"># Tracks deletion-order dependency for databases without transactions</span>\n        <span class=\"c1\"># or ability to defer constraint checks. Only concrete model classes</span>\n        <span class=\"c1\"># should be included, as the dependencies exist only between actual</span>\n        <span class=\"c1\"># database tables; proxy models are represented here by their concrete</span>\n        <span class=\"c1\"># parent.</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dependencies</span> <span class=\"o\">=</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">)</span>  <span class=\"c1\"># {model: {models}}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">objs</span><span class=\"p\">,</span> <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">reverse_dependency</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Add &#39;objs&#39; to the collection of objects to be deleted.  If the call is</span>\n<span class=\"sd\">        the result of a cascade, &#39;source&#39; should be the model that caused it,</span>\n<span class=\"sd\">        and &#39;nullable&#39; should be set to True if the relation can be null.</span>\n\n<span class=\"sd\">        Return a list of all objects that were not already collected.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">objs</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[]</span>\n        <span class=\"n\">new_objs</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">objs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"vm\">__class__</span>\n        <span class=\"n\">instances</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">model</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">obj</span> <span class=\"ow\">in</span> <span class=\"n\">objs</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">obj</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">instances</span><span class=\"p\">:</span>\n                <span class=\"n\">new_objs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span>\n        <span class=\"n\">instances</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">new_objs</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Nullable relationships can be ignored -- they are nulled out before</span>\n        <span class=\"c1\"># deleting, and therefore do not affect the order in which objects have</span>\n        <span class=\"c1\"># to be deleted.</span>\n        <span class=\"k\">if</span> <span class=\"n\">source</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">nullable</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_dependency</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">reverse_dependency</span><span class=\"o\">=</span><span class=\"n\">reverse_dependency</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">new_objs</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">add_dependency</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">dependency</span><span class=\"p\">,</span> <span class=\"n\">reverse_dependency</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">reverse_dependency</span><span class=\"p\">:</span>\n            <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">dependency</span> <span class=\"o\">=</span> <span class=\"n\">dependency</span><span class=\"p\">,</span> <span class=\"n\">model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dependencies</span><span class=\"p\">[</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">concrete_model</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span>\n            <span class=\"n\">dependency</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">concrete_model</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">setdefault</span><span class=\"p\">(</span><span class=\"n\">dependency</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">default_factory</span><span class=\"p\">())</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">add_field_update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">objs</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Schedule a field update. &#39;objs&#39; must be a homogeneous iterable</span>\n<span class=\"sd\">        collection of model instances (e.g. a QuerySet).</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field_updates</span><span class=\"p\">[</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">objs</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">add_restricted_objects</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">objs</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">objs</span><span class=\"p\">:</span>\n            <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">objs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"vm\">__class__</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">restricted_objects</span><span class=\"p\">[</span><span class=\"n\">model</span><span class=\"p\">][</span><span class=\"n\">field</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">objs</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">clear_restricted_objects_from_set</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">objs</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">model</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">restricted_objects</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">restricted_objects</span><span class=\"p\">[</span><span class=\"n\">model</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"n\">items</span> <span class=\"o\">-</span> <span class=\"n\">objs</span>\n                <span class=\"k\">for</span> <span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">items</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">restricted_objects</span><span class=\"p\">[</span><span class=\"n\">model</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span>\n            <span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">clear_restricted_objects_from_queryset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">qs</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">model</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">restricted_objects</span><span class=\"p\">:</span>\n            <span class=\"n\">objs</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">(</span>\n                <span class=\"n\">qs</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span>\n                    <span class=\"n\">pk__in</span><span class=\"o\">=</span><span class=\"p\">[</span>\n                        <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">pk</span>\n                        <span class=\"k\">for</span> <span class=\"n\">objs</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">restricted_objects</span><span class=\"p\">[</span><span class=\"n\">model</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">()</span>\n                        <span class=\"k\">for</span> <span class=\"n\">obj</span> <span class=\"ow\">in</span> <span class=\"n\">objs</span>\n                    <span class=\"p\">]</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">clear_restricted_objects_from_set</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">objs</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_has_signal_listeners</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">signals</span><span class=\"o\">.</span><span class=\"n\">pre_delete</span><span class=\"o\">.</span><span class=\"n\">has_listeners</span><span class=\"p\">(</span>\n            <span class=\"n\">model</span>\n        <span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">signals</span><span class=\"o\">.</span><span class=\"n\">post_delete</span><span class=\"o\">.</span><span class=\"n\">has_listeners</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">can_fast_delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">objs</span><span class=\"p\">,</span> <span class=\"n\">from_field</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Determine if the objects in the given queryset-like or single object</span>\n<span class=\"sd\">        can be fast-deleted. This can be done if there are no cascades, no</span>\n<span class=\"sd\">        parents and no signal listeners for the object class.</span>\n\n<span class=\"sd\">        The &#39;from_field&#39; tells where we are coming from - we need this to</span>\n<span class=\"sd\">        determine if the objects are in fact to be deleted. Allow also</span>\n<span class=\"sd\">        skipping parent -&gt; child -&gt; parent chain preventing fast delete of</span>\n<span class=\"sd\">        the child.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">from_field</span> <span class=\"ow\">and</span> <span class=\"n\">from_field</span><span class=\"o\">.</span><span class=\"n\">remote_field</span><span class=\"o\">.</span><span class=\"n\">on_delete</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"n\">CASCADE</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">objs</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_meta&quot;</span><span class=\"p\">):</span>\n            <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">objs</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">model</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">objs</span><span class=\"p\">,</span> <span class=\"s2\">&quot;model&quot;</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">objs</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_raw_delete&quot;</span><span class=\"p\">):</span>\n            <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">objs</span><span class=\"o\">.</span><span class=\"n\">model</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_has_signal_listeners</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"c1\"># The use of from_field comes from the need to avoid cascade back to</span>\n        <span class=\"c1\"># parent when parent delete is cascading to child.</span>\n        <span class=\"n\">opts</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span>\n            <span class=\"nb\">all</span><span class=\"p\">(</span>\n                <span class=\"n\">link</span> <span class=\"o\">==</span> <span class=\"n\">from_field</span>\n                <span class=\"k\">for</span> <span class=\"n\">link</span> <span class=\"ow\">in</span> <span class=\"n\">opts</span><span class=\"o\">.</span><span class=\"n\">concrete_model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">parents</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">()</span>\n            <span class=\"p\">)</span>\n            <span class=\"ow\">and</span>\n            <span class=\"c1\"># Foreign keys pointing to this model.</span>\n            <span class=\"nb\">all</span><span class=\"p\">(</span>\n                <span class=\"n\">related</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">remote_field</span><span class=\"o\">.</span><span class=\"n\">on_delete</span> <span class=\"ow\">is</span> <span class=\"n\">DO_NOTHING</span>\n                <span class=\"k\">for</span> <span class=\"n\">related</span> <span class=\"ow\">in</span> <span class=\"n\">get_candidate_relations_to_delete</span><span class=\"p\">(</span><span class=\"n\">opts</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n            <span class=\"ow\">and</span> <span class=\"p\">(</span>\n                <span class=\"c1\"># Something like generic foreign key.</span>\n                <span class=\"ow\">not</span> <span class=\"nb\">any</span><span class=\"p\">(</span>\n                    <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"s2\">&quot;bulk_related_objects&quot;</span><span class=\"p\">)</span>\n                    <span class=\"k\">for</span> <span class=\"n\">field</span> <span class=\"ow\">in</span> <span class=\"n\">opts</span><span class=\"o\">.</span><span class=\"n\">private_fields</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_del_batches</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">objs</span><span class=\"p\">,</span> <span class=\"n\">fields</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Return the objs in suitably sized batches for the used connection.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">field_names</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"k\">for</span> <span class=\"n\">field</span> <span class=\"ow\">in</span> <span class=\"n\">fields</span><span class=\"p\">]</span>\n        <span class=\"n\">conn_batch_size</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span>\n            <span class=\"n\">connections</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">using</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">ops</span><span class=\"o\">.</span><span class=\"n\">bulk_batch_size</span><span class=\"p\">(</span><span class=\"n\">field_names</span><span class=\"p\">,</span> <span class=\"n\">objs</span><span class=\"p\">),</span> <span class=\"mi\">1</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">objs</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"n\">conn_batch_size</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span>\n                <span class=\"n\">objs</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"p\">:</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"n\">conn_batch_size</span><span class=\"p\">]</span>\n                <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">objs</span><span class=\"p\">),</span> <span class=\"n\">conn_batch_size</span><span class=\"p\">)</span>\n            <span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">objs</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">collect</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">objs</span><span class=\"p\">,</span>\n        <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">collect_related</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">source_attr</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">reverse_dependency</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">keep_parents</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">fail_on_restricted</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Add &#39;objs&#39; to the collection of objects to be deleted as well as all</span>\n<span class=\"sd\">        parent instances.  &#39;objs&#39; must be a homogeneous iterable collection of</span>\n<span class=\"sd\">        model instances (e.g. a QuerySet).  If &#39;collect_related&#39; is True,</span>\n<span class=\"sd\">        related objects will be handled by their respective on_delete handler.</span>\n\n<span class=\"sd\">        If the call is the result of a cascade, &#39;source&#39; should be the model</span>\n<span class=\"sd\">        that caused it and &#39;nullable&#39; should be set to True, if the relation</span>\n<span class=\"sd\">        can be null.</span>\n\n<span class=\"sd\">        If &#39;reverse_dependency&#39; is True, &#39;source&#39; will be deleted before the</span>\n<span class=\"sd\">        current model, rather than after. (Needed for cascading to parent</span>\n<span class=\"sd\">        models, the one case in which the cascade follows the forwards</span>\n<span class=\"sd\">        direction of an FK rather than the reverse direction.)</span>\n\n<span class=\"sd\">        If &#39;keep_parents&#39; is True, data of parent model&#39;s will be not deleted.</span>\n\n<span class=\"sd\">        If &#39;fail_on_restricted&#39; is False, error won&#39;t be raised even if it&#39;s</span>\n<span class=\"sd\">        prohibited to delete such objects due to RESTRICT, that defers</span>\n<span class=\"sd\">        restricted object checking in recursive calls where the top-level call</span>\n<span class=\"sd\">        may need to collect more objects to determine whether restricted ones</span>\n<span class=\"sd\">        can be deleted.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">can_fast_delete</span><span class=\"p\">(</span><span class=\"n\">objs</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fast_deletes</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">objs</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span>\n        <span class=\"n\">new_objs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span>\n            <span class=\"n\">objs</span><span class=\"p\">,</span> <span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"n\">nullable</span><span class=\"p\">,</span> <span class=\"n\">reverse_dependency</span><span class=\"o\">=</span><span class=\"n\">reverse_dependency</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">new_objs</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">new_objs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"vm\">__class__</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">keep_parents</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Recursively collect concrete model&#39;s parent models, but not their</span>\n            <span class=\"c1\"># related objects. These will be found by meta.get_fields()</span>\n            <span class=\"n\">concrete_model</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">concrete_model</span>\n            <span class=\"k\">for</span> <span class=\"n\">ptr</span> <span class=\"ow\">in</span> <span class=\"n\">concrete_model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">parents</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">():</span>\n                <span class=\"k\">if</span> <span class=\"n\">ptr</span><span class=\"p\">:</span>\n                    <span class=\"n\">parent_objs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">ptr</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">obj</span> <span class=\"ow\">in</span> <span class=\"n\">new_objs</span><span class=\"p\">]</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">collect</span><span class=\"p\">(</span>\n                        <span class=\"n\">parent_objs</span><span class=\"p\">,</span>\n                        <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">,</span>\n                        <span class=\"n\">source_attr</span><span class=\"o\">=</span><span class=\"n\">ptr</span><span class=\"o\">.</span><span class=\"n\">remote_field</span><span class=\"o\">.</span><span class=\"n\">related_name</span><span class=\"p\">,</span>\n                        <span class=\"n\">collect_related</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                        <span class=\"n\">reverse_dependency</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                        <span class=\"n\">fail_on_restricted</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                    <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">collect_related</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">keep_parents</span><span class=\"p\">:</span>\n            <span class=\"n\">parents</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">get_parent_list</span><span class=\"p\">())</span>\n        <span class=\"n\">model_fast_deletes</span> <span class=\"o\">=</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)</span>\n        <span class=\"n\">protected_objects</span> <span class=\"o\">=</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">related</span> <span class=\"ow\">in</span> <span class=\"n\">get_candidate_relations_to_delete</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"p\">):</span>\n            <span class=\"c1\"># Preserve parent reverse relationships if keep_parents=True.</span>\n            <span class=\"k\">if</span> <span class=\"n\">keep_parents</span> <span class=\"ow\">and</span> <span class=\"n\">related</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"ow\">in</span> <span class=\"n\">parents</span><span class=\"p\">:</span>\n                <span class=\"k\">continue</span>\n            <span class=\"n\">field</span> <span class=\"o\">=</span> <span class=\"n\">related</span><span class=\"o\">.</span><span class=\"n\">field</span>\n            <span class=\"n\">on_delete</span> <span class=\"o\">=</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">remote_field</span><span class=\"o\">.</span><span class=\"n\">on_delete</span>\n            <span class=\"k\">if</span> <span class=\"n\">on_delete</span> <span class=\"o\">==</span> <span class=\"n\">DO_NOTHING</span><span class=\"p\">:</span>\n                <span class=\"k\">continue</span>\n            <span class=\"n\">related_model</span> <span class=\"o\">=</span> <span class=\"n\">related</span><span class=\"o\">.</span><span class=\"n\">related_model</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">can_fast_delete</span><span class=\"p\">(</span><span class=\"n\">related_model</span><span class=\"p\">,</span> <span class=\"n\">from_field</span><span class=\"o\">=</span><span class=\"n\">field</span><span class=\"p\">):</span>\n                <span class=\"n\">model_fast_deletes</span><span class=\"p\">[</span><span class=\"n\">related_model</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">)</span>\n                <span class=\"k\">continue</span>\n            <span class=\"n\">batches</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_del_batches</span><span class=\"p\">(</span><span class=\"n\">new_objs</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">field</span><span class=\"p\">])</span>\n            <span class=\"k\">for</span> <span class=\"n\">batch</span> <span class=\"ow\">in</span> <span class=\"n\">batches</span><span class=\"p\">:</span>\n                <span class=\"n\">sub_objs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">related_objects</span><span class=\"p\">(</span><span class=\"n\">related_model</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">field</span><span class=\"p\">],</span> <span class=\"n\">batch</span><span class=\"p\">)</span>\n                <span class=\"c1\"># Non-referenced fields can be deferred if no signal receivers</span>\n                <span class=\"c1\"># are connected for the related model as they&#39;ll never be</span>\n                <span class=\"c1\"># exposed to the user. Skip field deferring when some</span>\n                <span class=\"c1\"># relationships are select_related as interactions between both</span>\n                <span class=\"c1\"># features are hard to get right. This should only happen in</span>\n                <span class=\"c1\"># the rare cases where .related_objects is overridden anyway.</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"p\">(</span>\n                    <span class=\"n\">sub_objs</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">select_related</span>\n                    <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_has_signal_listeners</span><span class=\"p\">(</span><span class=\"n\">related_model</span><span class=\"p\">)</span>\n                <span class=\"p\">):</span>\n                    <span class=\"n\">referenced_fields</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">(</span>\n                        <span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">from_iterable</span><span class=\"p\">(</span>\n                            <span class=\"p\">(</span><span class=\"n\">rf</span><span class=\"o\">.</span><span class=\"n\">attname</span> <span class=\"k\">for</span> <span class=\"n\">rf</span> <span class=\"ow\">in</span> <span class=\"n\">rel</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">foreign_related_fields</span><span class=\"p\">)</span>\n                            <span class=\"k\">for</span> <span class=\"n\">rel</span> <span class=\"ow\">in</span> <span class=\"n\">get_candidate_relations_to_delete</span><span class=\"p\">(</span>\n                                <span class=\"n\">related_model</span><span class=\"o\">.</span><span class=\"n\">_meta</span>\n                            <span class=\"p\">)</span>\n                        <span class=\"p\">)</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"n\">sub_objs</span> <span class=\"o\">=</span> <span class=\"n\">sub_objs</span><span class=\"o\">.</span><span class=\"n\">only</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">referenced_fields</span><span class=\"p\">))</span>\n                <span class=\"k\">if</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">on_delete</span><span class=\"p\">,</span> <span class=\"s2\">&quot;lazy_sub_objs&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">sub_objs</span><span class=\"p\">:</span>\n                    <span class=\"k\">try</span><span class=\"p\">:</span>\n                        <span class=\"n\">on_delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">sub_objs</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">using</span><span class=\"p\">)</span>\n                    <span class=\"k\">except</span> <span class=\"n\">ProtectedError</span> <span class=\"k\">as</span> <span class=\"n\">error</span><span class=\"p\">:</span>\n                        <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&#39;</span><span class=\"si\">%s</span><span class=\"s2\">.</span><span class=\"si\">%s</span><span class=\"s2\">&#39;&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n                        <span class=\"n\">protected_objects</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">error</span><span class=\"o\">.</span><span class=\"n\">protected_objects</span>\n        <span class=\"k\">if</span> <span class=\"n\">protected_objects</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">ProtectedError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Cannot delete some instances of model </span><span class=\"si\">%r</span><span class=\"s2\"> because they are &quot;</span>\n                <span class=\"s2\">&quot;referenced through protected foreign keys: </span><span class=\"si\">%s</span><span class=\"s2\">.&quot;</span>\n                <span class=\"o\">%</span> <span class=\"p\">(</span>\n                    <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;, &quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">protected_objects</span><span class=\"p\">),</span>\n                <span class=\"p\">),</span>\n                <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">from_iterable</span><span class=\"p\">(</span><span class=\"n\">protected_objects</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">())),</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">related_model</span><span class=\"p\">,</span> <span class=\"n\">related_fields</span> <span class=\"ow\">in</span> <span class=\"n\">model_fast_deletes</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"n\">batches</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_del_batches</span><span class=\"p\">(</span><span class=\"n\">new_objs</span><span class=\"p\">,</span> <span class=\"n\">related_fields</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">batch</span> <span class=\"ow\">in</span> <span class=\"n\">batches</span><span class=\"p\">:</span>\n                <span class=\"n\">sub_objs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">related_objects</span><span class=\"p\">(</span><span class=\"n\">related_model</span><span class=\"p\">,</span> <span class=\"n\">related_fields</span><span class=\"p\">,</span> <span class=\"n\">batch</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fast_deletes</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">sub_objs</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">field</span> <span class=\"ow\">in</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">private_fields</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"s2\">&quot;bulk_related_objects&quot;</span><span class=\"p\">):</span>\n                <span class=\"c1\"># It&#39;s something like generic foreign key.</span>\n                <span class=\"n\">sub_objs</span> <span class=\"o\">=</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">bulk_related_objects</span><span class=\"p\">(</span><span class=\"n\">new_objs</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">using</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">collect</span><span class=\"p\">(</span>\n                    <span class=\"n\">sub_objs</span><span class=\"p\">,</span> <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">fail_on_restricted</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n                <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">fail_on_restricted</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Raise an error if collected restricted objects (RESTRICT) aren&#39;t</span>\n            <span class=\"c1\"># candidates for deletion also collected via CASCADE.</span>\n            <span class=\"k\">for</span> <span class=\"n\">related_model</span><span class=\"p\">,</span> <span class=\"n\">instances</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">clear_restricted_objects_from_set</span><span class=\"p\">(</span><span class=\"n\">related_model</span><span class=\"p\">,</span> <span class=\"n\">instances</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">qs</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fast_deletes</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">clear_restricted_objects_from_queryset</span><span class=\"p\">(</span><span class=\"n\">qs</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">qs</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">restricted_objects</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">():</span>\n                <span class=\"n\">restricted_objects</span> <span class=\"o\">=</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">)</span>\n                <span class=\"k\">for</span> <span class=\"n\">related_model</span><span class=\"p\">,</span> <span class=\"n\">fields</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">restricted_objects</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                    <span class=\"k\">for</span> <span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">objs</span> <span class=\"ow\">in</span> <span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                        <span class=\"k\">if</span> <span class=\"n\">objs</span><span class=\"p\">:</span>\n                            <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&#39;</span><span class=\"si\">%s</span><span class=\"s2\">.</span><span class=\"si\">%s</span><span class=\"s2\">&#39;&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">related_model</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n                            <span class=\"n\">restricted_objects</span><span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">objs</span>\n                <span class=\"k\">if</span> <span class=\"n\">restricted_objects</span><span class=\"p\">:</span>\n                    <span class=\"k\">raise</span> <span class=\"n\">RestrictedError</span><span class=\"p\">(</span>\n                        <span class=\"s2\">&quot;Cannot delete some instances of model </span><span class=\"si\">%r</span><span class=\"s2\"> because &quot;</span>\n                        <span class=\"s2\">&quot;they are referenced through restricted foreign keys: &quot;</span>\n                        <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">.&quot;</span>\n                        <span class=\"o\">%</span> <span class=\"p\">(</span>\n                            <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span>\n                            <span class=\"s2\">&quot;, &quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">restricted_objects</span><span class=\"p\">),</span>\n                        <span class=\"p\">),</span>\n                        <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">chain</span><span class=\"o\">.</span><span class=\"n\">from_iterable</span><span class=\"p\">(</span><span class=\"n\">restricted_objects</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">())),</span>\n                    <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">related_objects</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">related_model</span><span class=\"p\">,</span> <span class=\"n\">related_fields</span><span class=\"p\">,</span> <span class=\"n\">objs</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Get a QuerySet of the related model to objs via related fields.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">predicate</span> <span class=\"o\">=</span> <span class=\"n\">query_utils</span><span class=\"o\">.</span><span class=\"n\">Q</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n            <span class=\"p\">[(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">related_field</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">__in&quot;</span><span class=\"p\">,</span> <span class=\"n\">objs</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">related_field</span> <span class=\"ow\">in</span> <span class=\"n\">related_fields</span><span class=\"p\">],</span>\n            <span class=\"n\">connector</span><span class=\"o\">=</span><span class=\"n\">query_utils</span><span class=\"o\">.</span><span class=\"n\">Q</span><span class=\"o\">.</span><span class=\"n\">OR</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">related_model</span><span class=\"o\">.</span><span class=\"n\">_base_manager</span><span class=\"o\">.</span><span class=\"n\">using</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">using</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">predicate</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">instances_with_model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">instances</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">for</span> <span class=\"n\">obj</span> <span class=\"ow\">in</span> <span class=\"n\">instances</span><span class=\"p\">:</span>\n                <span class=\"k\">yield</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">obj</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">sort</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">sorted_models</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">concrete_models</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">()</span>\n        <span class=\"n\">models</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span>\n        <span class=\"k\">while</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sorted_models</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">):</span>\n            <span class=\"n\">found</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n            <span class=\"k\">for</span> <span class=\"n\">model</span> <span class=\"ow\">in</span> <span class=\"n\">models</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">model</span> <span class=\"ow\">in</span> <span class=\"n\">sorted_models</span><span class=\"p\">:</span>\n                    <span class=\"k\">continue</span>\n                <span class=\"n\">dependencies</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dependencies</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">concrete_model</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"p\">(</span><span class=\"n\">dependencies</span> <span class=\"ow\">and</span> <span class=\"n\">dependencies</span><span class=\"o\">.</span><span class=\"n\">difference</span><span class=\"p\">(</span><span class=\"n\">concrete_models</span><span class=\"p\">)):</span>\n                    <span class=\"n\">sorted_models</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">)</span>\n                    <span class=\"n\">concrete_models</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">concrete_model</span><span class=\"p\">)</span>\n                    <span class=\"n\">found</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">found</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">model</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">model</span> <span class=\"ow\">in</span> <span class=\"n\">sorted_models</span><span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># sort instance collections</span>\n        <span class=\"k\">for</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">instances</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"n\">model</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">instances</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">attrgetter</span><span class=\"p\">(</span><span class=\"s2\">&quot;pk&quot;</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># if possible, bring the models in an order suitable for databases that</span>\n        <span class=\"c1\"># don&#39;t support transactions or cannot defer constraint checks until the</span>\n        <span class=\"c1\"># end of a transaction.</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">()</span>\n        <span class=\"c1\"># number of objects deleted for each model label</span>\n        <span class=\"n\">deleted_counter</span> <span class=\"o\">=</span> <span class=\"n\">Counter</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># Optimize for the case with a single obj and no dependencies</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"ow\">and</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">instances</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">instances</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">can_fast_delete</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">):</span>\n                <span class=\"k\">with</span> <span class=\"n\">transaction</span><span class=\"o\">.</span><span class=\"n\">mark_for_rollback_on_error</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">using</span><span class=\"p\">):</span>\n                    <span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">DeleteQuery</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">delete_batch</span><span class=\"p\">(</span>\n                        <span class=\"p\">[</span><span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">pk</span><span class=\"p\">],</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">using</span>\n                    <span class=\"p\">)</span>\n                <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">pk</span><span class=\"o\">.</span><span class=\"n\">attname</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"n\">count</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"n\">count</span><span class=\"p\">}</span>\n\n        <span class=\"k\">with</span> <span class=\"n\">transaction</span><span class=\"o\">.</span><span class=\"n\">atomic</span><span class=\"p\">(</span><span class=\"n\">using</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">using</span><span class=\"p\">,</span> <span class=\"n\">savepoint</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n            <span class=\"c1\"># send pre_delete signals</span>\n            <span class=\"k\">for</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">obj</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instances_with_model</span><span class=\"p\">():</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">auto_created</span><span class=\"p\">:</span>\n                    <span class=\"n\">signals</span><span class=\"o\">.</span><span class=\"n\">pre_delete</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span>\n                        <span class=\"n\">sender</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">,</span>\n                        <span class=\"n\">instance</span><span class=\"o\">=</span><span class=\"n\">obj</span><span class=\"p\">,</span>\n                        <span class=\"n\">using</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">using</span><span class=\"p\">,</span>\n                        <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">origin</span><span class=\"p\">,</span>\n                    <span class=\"p\">)</span>\n\n            <span class=\"c1\"># fast deletes</span>\n            <span class=\"k\">for</span> <span class=\"n\">qs</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fast_deletes</span><span class=\"p\">:</span>\n                <span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"n\">qs</span><span class=\"o\">.</span><span class=\"n\">_raw_delete</span><span class=\"p\">(</span><span class=\"n\">using</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">using</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">count</span><span class=\"p\">:</span>\n                    <span class=\"n\">deleted_counter</span><span class=\"p\">[</span><span class=\"n\">qs</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">count</span>\n\n            <span class=\"c1\"># update fields</span>\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">),</span> <span class=\"n\">instances_list</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field_updates</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                <span class=\"n\">updates</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n                <span class=\"n\">objs</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n                <span class=\"k\">for</span> <span class=\"n\">instances</span> <span class=\"ow\">in</span> <span class=\"n\">instances_list</span><span class=\"p\">:</span>\n                    <span class=\"k\">if</span> <span class=\"p\">(</span>\n                        <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">instances</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">QuerySet</span><span class=\"p\">)</span>\n                        <span class=\"ow\">and</span> <span class=\"n\">instances</span><span class=\"o\">.</span><span class=\"n\">_result_cache</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span>\n                    <span class=\"p\">):</span>\n                        <span class=\"n\">updates</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">instances</span><span class=\"p\">)</span>\n                    <span class=\"k\">else</span><span class=\"p\">:</span>\n                        <span class=\"n\">objs</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">instances</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">updates</span><span class=\"p\">:</span>\n                    <span class=\"n\">combined_updates</span> <span class=\"o\">=</span> <span class=\"n\">reduce</span><span class=\"p\">(</span><span class=\"n\">or_</span><span class=\"p\">,</span> <span class=\"n\">updates</span><span class=\"p\">)</span>\n                    <span class=\"n\">combined_updates</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"p\">{</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">value</span><span class=\"p\">})</span>\n                <span class=\"k\">if</span> <span class=\"n\">objs</span><span class=\"p\">:</span>\n                    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">objs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"vm\">__class__</span>\n                    <span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">UpdateQuery</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">)</span>\n                    <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">update_batch</span><span class=\"p\">(</span>\n                        <span class=\"nb\">list</span><span class=\"p\">({</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">pk</span> <span class=\"k\">for</span> <span class=\"n\">obj</span> <span class=\"ow\">in</span> <span class=\"n\">objs</span><span class=\"p\">}),</span> <span class=\"p\">{</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">value</span><span class=\"p\">},</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">using</span>\n                    <span class=\"p\">)</span>\n\n            <span class=\"c1\"># reverse instance collections</span>\n            <span class=\"k\">for</span> <span class=\"n\">instances</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">():</span>\n                <span class=\"n\">instances</span><span class=\"o\">.</span><span class=\"n\">reverse</span><span class=\"p\">()</span>\n\n            <span class=\"c1\"># delete instances</span>\n            <span class=\"k\">for</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">instances</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n                <span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">DeleteQuery</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">)</span>\n                <span class=\"n\">pk_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">pk</span> <span class=\"k\">for</span> <span class=\"n\">obj</span> <span class=\"ow\">in</span> <span class=\"n\">instances</span><span class=\"p\">]</span>\n                <span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">delete_batch</span><span class=\"p\">(</span><span class=\"n\">pk_list</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">using</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">count</span><span class=\"p\">:</span>\n                    <span class=\"n\">deleted_counter</span><span class=\"p\">[</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">count</span>\n\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">auto_created</span><span class=\"p\">:</span>\n                    <span class=\"k\">for</span> <span class=\"n\">obj</span> <span class=\"ow\">in</span> <span class=\"n\">instances</span><span class=\"p\">:</span>\n                        <span class=\"n\">signals</span><span class=\"o\">.</span><span class=\"n\">post_delete</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span>\n                            <span class=\"n\">sender</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">,</span>\n                            <span class=\"n\">instance</span><span class=\"o\">=</span><span class=\"n\">obj</span><span class=\"p\">,</span>\n                            <span class=\"n\">using</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">using</span><span class=\"p\">,</span>\n                            <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">origin</span><span class=\"p\">,</span>\n                        <span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">instances</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">for</span> <span class=\"n\">instance</span> <span class=\"ow\">in</span> <span class=\"n\">instances</span><span class=\"p\">:</span>\n                <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">pk</span><span class=\"o\">.</span><span class=\"n\">attname</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">deleted_counter</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">()),</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">deleted_counter</span><span class=\"p\">)</span>\n</pre></div>", "current_page_name": "_modules/django/db/models/deletion", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
