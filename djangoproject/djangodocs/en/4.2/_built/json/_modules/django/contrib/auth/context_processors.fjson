{"parents": [{"link": "../../../../", "title": "Module code"}, {"link": "../../../", "title": "django"}, {"link": "../", "title": "django.contrib.auth"}], "title": "django.contrib.auth.context_processors", "body": "<h1>Source code for django.contrib.auth.context_processors</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># PermWrapper and PermLookupDict proxy the permissions system into objects that</span>\n<span class=\"c1\"># the template system can understand.</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PermLookupDict</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">app_label</span> <span class=\"o\">=</span> <span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">app_label</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">get_all_permissions</span><span class=\"p\">())</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__getitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">perm_name</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">has_perm</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">.</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">perm_name</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__iter__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># To fix &#39;item in perms.someapp&#39; and __getitem__ interaction we need to</span>\n        <span class=\"c1\"># define __iter__. See #18979 for details.</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span><span class=\"s2\">&quot;PermLookupDict is not iterable.&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__bool__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">has_module_perms</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">app_label</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PermWrapper</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">user</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__qualname__</span><span class=\"si\">}</span><span class=\"s2\">(</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"si\">!r}</span><span class=\"s2\">)&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__getitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">PermLookupDict</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__iter__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># I am large, I contain multitudes.</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span><span class=\"s2\">&quot;PermWrapper is not iterable.&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__contains__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">perm_name</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Lookup by &quot;someapp&quot; or &quot;someapp.someperm&quot; in perms.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;.&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">perm_name</span><span class=\"p\">:</span>\n            <span class=\"c1\"># The name refers to module.</span>\n            <span class=\"k\">return</span> <span class=\"nb\">bool</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"n\">perm_name</span><span class=\"p\">])</span>\n        <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">perm_name</span> <span class=\"o\">=</span> <span class=\"n\">perm_name</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;.&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"p\">[</span><span class=\"n\">app_label</span><span class=\"p\">][</span><span class=\"n\">perm_name</span><span class=\"p\">]</span>\n\n\n<div class=\"viewcode-block\" id=\"auth\"><a class=\"viewcode-back\" href=\"../../../../../ref/templates/api/#django.contrib.auth.context_processors.auth\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">auth</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Return context variables required by apps that use Django&#39;s authentication</span>\n<span class=\"sd\">    system.</span>\n\n<span class=\"sd\">    If there is no &#39;user&#39; attribute in the request, use AnonymousUser (from</span>\n<span class=\"sd\">    django.contrib.auth).</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s2\">&quot;user&quot;</span><span class=\"p\">):</span>\n        <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.models</span> <span class=\"kn\">import</span> <span class=\"n\">AnonymousUser</span>\n\n        <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">AnonymousUser</span><span class=\"p\">()</span>\n\n    <span class=\"k\">return</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;user&quot;</span><span class=\"p\">:</span> <span class=\"n\">user</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;perms&quot;</span><span class=\"p\">:</span> <span class=\"n\">PermWrapper</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">),</span>\n    <span class=\"p\">}</span></div>\n</pre></div>", "current_page_name": "_modules/django/contrib/auth/context_processors", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
