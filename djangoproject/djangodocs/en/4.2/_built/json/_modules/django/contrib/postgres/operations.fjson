{"parents": [{"link": "../../../../", "title": "Module code"}, {"link": "../../../", "title": "django"}], "title": "django.contrib.postgres.operations", "body": "<h1>Source code for django.contrib.postgres.operations</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.postgres.signals</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">get_citext_oids</span><span class=\"p\">,</span>\n    <span class=\"n\">get_hstore_oids</span><span class=\"p\">,</span>\n    <span class=\"n\">register_type_handlers</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">NotSupportedError</span><span class=\"p\">,</span> <span class=\"n\">router</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.migrations</span> <span class=\"kn\">import</span> <span class=\"n\">AddConstraint</span><span class=\"p\">,</span> <span class=\"n\">AddIndex</span><span class=\"p\">,</span> <span class=\"n\">RemoveIndex</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.migrations.operations.base</span> <span class=\"kn\">import</span> <span class=\"n\">Operation</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.constraints</span> <span class=\"kn\">import</span> <span class=\"n\">CheckConstraint</span>\n\n\n<div class=\"viewcode-block\" id=\"CreateExtension\"><a class=\"viewcode-back\" href=\"../../../../../ref/contrib/postgres/operations/#django.contrib.postgres.operations.CreateExtension\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">CreateExtension</span><span class=\"p\">(</span><span class=\"n\">Operation</span><span class=\"p\">):</span>\n    <span class=\"n\">reversible</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">state_forwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">state</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">database_forwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">from_state</span><span class=\"p\">,</span> <span class=\"n\">to_state</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">vendor</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;postgresql&quot;</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">allow_migrate</span><span class=\"p\">(</span>\n            <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">,</span> <span class=\"n\">app_label</span>\n        <span class=\"p\">):</span>\n            <span class=\"k\">return</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">extension_exists</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">):</span>\n            <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;CREATE EXTENSION IF NOT EXISTS </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span>\n                <span class=\"o\">%</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">quote_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n        <span class=\"c1\"># Clear cached, stale oids.</span>\n        <span class=\"n\">get_hstore_oids</span><span class=\"o\">.</span><span class=\"n\">cache_clear</span><span class=\"p\">()</span>\n        <span class=\"n\">get_citext_oids</span><span class=\"o\">.</span><span class=\"n\">cache_clear</span><span class=\"p\">()</span>\n        <span class=\"c1\"># Registering new type handlers cannot be done before the extension is</span>\n        <span class=\"c1\"># installed, otherwise a subsequent data migration would use the same</span>\n        <span class=\"c1\"># connection.</span>\n        <span class=\"n\">register_type_handlers</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"s2\">&quot;register_geometry_adapters&quot;</span><span class=\"p\">):</span>\n            <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">register_geometry_adapters</span><span class=\"p\">(</span>\n                <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"kc\">True</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">database_backwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">from_state</span><span class=\"p\">,</span> <span class=\"n\">to_state</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">allow_migrate</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">extension_exists</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">):</span>\n            <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;DROP EXTENSION IF EXISTS </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">quote_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n        <span class=\"c1\"># Clear cached, stale oids.</span>\n        <span class=\"n\">get_hstore_oids</span><span class=\"o\">.</span><span class=\"n\">cache_clear</span><span class=\"p\">()</span>\n        <span class=\"n\">get_citext_oids</span><span class=\"o\">.</span><span class=\"n\">cache_clear</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">extension_exists</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">extension</span><span class=\"p\">):</span>\n        <span class=\"k\">with</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">cursor</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">cursor</span><span class=\"p\">:</span>\n            <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;SELECT 1 FROM pg_extension WHERE extname = </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">[</span><span class=\"n\">extension</span><span class=\"p\">],</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"nb\">bool</span><span class=\"p\">(</span><span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">fetchone</span><span class=\"p\">())</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">describe</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Creates extension </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">migration_name_fragment</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;create_extension_</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span></div>\n\n\n<div class=\"viewcode-block\" id=\"BloomExtension\"><a class=\"viewcode-back\" href=\"../../../../../ref/contrib/postgres/operations/#django.contrib.postgres.operations.BloomExtension\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">BloomExtension</span><span class=\"p\">(</span><span class=\"n\">CreateExtension</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;bloom&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"BtreeGinExtension\"><a class=\"viewcode-back\" href=\"../../../../../ref/contrib/postgres/operations/#django.contrib.postgres.operations.BtreeGinExtension\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">BtreeGinExtension</span><span class=\"p\">(</span><span class=\"n\">CreateExtension</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;btree_gin&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"BtreeGistExtension\"><a class=\"viewcode-back\" href=\"../../../../../ref/contrib/postgres/operations/#django.contrib.postgres.operations.BtreeGistExtension\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">BtreeGistExtension</span><span class=\"p\">(</span><span class=\"n\">CreateExtension</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;btree_gist&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"CITextExtension\"><a class=\"viewcode-back\" href=\"../../../../../ref/contrib/postgres/operations/#django.contrib.postgres.operations.CITextExtension\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">CITextExtension</span><span class=\"p\">(</span><span class=\"n\">CreateExtension</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;citext&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"CryptoExtension\"><a class=\"viewcode-back\" href=\"../../../../../ref/contrib/postgres/operations/#django.contrib.postgres.operations.CryptoExtension\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">CryptoExtension</span><span class=\"p\">(</span><span class=\"n\">CreateExtension</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;pgcrypto&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"HStoreExtension\"><a class=\"viewcode-back\" href=\"../../../../../ref/contrib/postgres/operations/#django.contrib.postgres.operations.HStoreExtension\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">HStoreExtension</span><span class=\"p\">(</span><span class=\"n\">CreateExtension</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;hstore&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"TrigramExtension\"><a class=\"viewcode-back\" href=\"../../../../../ref/contrib/postgres/operations/#django.contrib.postgres.operations.TrigramExtension\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">TrigramExtension</span><span class=\"p\">(</span><span class=\"n\">CreateExtension</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;pg_trgm&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"UnaccentExtension\"><a class=\"viewcode-back\" href=\"../../../../../ref/contrib/postgres/operations/#django.contrib.postgres.operations.UnaccentExtension\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">UnaccentExtension</span><span class=\"p\">(</span><span class=\"n\">CreateExtension</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;unaccent&quot;</span></div>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">NotInTransactionMixin</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_ensure_not_in_transaction</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">in_atomic_block</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">NotSupportedError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;The </span><span class=\"si\">%s</span><span class=\"s2\"> operation cannot be executed inside a transaction &quot;</span>\n                <span class=\"s2\">&quot;(set atomic = False on the migration).&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span>\n            <span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"AddIndexConcurrently\"><a class=\"viewcode-back\" href=\"../../../../../ref/contrib/postgres/operations/#django.contrib.postgres.operations.AddIndexConcurrently\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">AddIndexConcurrently</span><span class=\"p\">(</span><span class=\"n\">NotInTransactionMixin</span><span class=\"p\">,</span> <span class=\"n\">AddIndex</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Create an index using PostgreSQL&#39;s CREATE INDEX CONCURRENTLY syntax.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">atomic</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">describe</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Concurrently create index </span><span class=\"si\">%s</span><span class=\"s2\"> on field(s) </span><span class=\"si\">%s</span><span class=\"s2\"> of model </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;, &quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"p\">),</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">database_forwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">from_state</span><span class=\"p\">,</span> <span class=\"n\">to_state</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ensure_not_in_transaction</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"p\">)</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">to_state</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_model</span><span class=\"p\">(</span><span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">allow_migrate_model</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">):</span>\n            <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">add_index</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">concurrently</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">database_backwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">from_state</span><span class=\"p\">,</span> <span class=\"n\">to_state</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ensure_not_in_transaction</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"p\">)</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">from_state</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_model</span><span class=\"p\">(</span><span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">allow_migrate_model</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">):</span>\n            <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">remove_index</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">concurrently</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"RemoveIndexConcurrently\"><a class=\"viewcode-back\" href=\"../../../../../ref/contrib/postgres/operations/#django.contrib.postgres.operations.RemoveIndexConcurrently\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">RemoveIndexConcurrently</span><span class=\"p\">(</span><span class=\"n\">NotInTransactionMixin</span><span class=\"p\">,</span> <span class=\"n\">RemoveIndex</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Remove an index using PostgreSQL&#39;s DROP INDEX CONCURRENTLY syntax.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">atomic</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">describe</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Concurrently remove index </span><span class=\"si\">%s</span><span class=\"s2\"> from </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">database_forwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">from_state</span><span class=\"p\">,</span> <span class=\"n\">to_state</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ensure_not_in_transaction</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"p\">)</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">from_state</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_model</span><span class=\"p\">(</span><span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">allow_migrate_model</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">):</span>\n            <span class=\"n\">from_model_state</span> <span class=\"o\">=</span> <span class=\"n\">from_state</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"p\">[</span><span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name_lower</span><span class=\"p\">]</span>\n            <span class=\"n\">index</span> <span class=\"o\">=</span> <span class=\"n\">from_model_state</span><span class=\"o\">.</span><span class=\"n\">get_index_by_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">remove_index</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">concurrently</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">database_backwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">from_state</span><span class=\"p\">,</span> <span class=\"n\">to_state</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_ensure_not_in_transaction</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"p\">)</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">to_state</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_model</span><span class=\"p\">(</span><span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">allow_migrate_model</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">):</span>\n            <span class=\"n\">to_model_state</span> <span class=\"o\">=</span> <span class=\"n\">to_state</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"p\">[</span><span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name_lower</span><span class=\"p\">]</span>\n            <span class=\"n\">index</span> <span class=\"o\">=</span> <span class=\"n\">to_model_state</span><span class=\"o\">.</span><span class=\"n\">get_index_by_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n            <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">add_index</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">concurrently</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span></div>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">CollationOperation</span><span class=\"p\">(</span><span class=\"n\">Operation</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">locale</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"p\">,</span> <span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"s2\">&quot;libc&quot;</span><span class=\"p\">,</span> <span class=\"n\">deterministic</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">locale</span> <span class=\"o\">=</span> <span class=\"n\">locale</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">provider</span> <span class=\"o\">=</span> <span class=\"n\">provider</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deterministic</span> <span class=\"o\">=</span> <span class=\"n\">deterministic</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">state_forwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">state</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">deconstruct</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s2\">&quot;locale&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">locale</span><span class=\"p\">}</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">provider</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">provider</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;libc&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;provider&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">provider</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deterministic</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;deterministic&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deterministic</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__qualname__</span><span class=\"p\">,</span>\n            <span class=\"p\">[],</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">create_collation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">):</span>\n        <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;locale&quot;</span><span class=\"p\">:</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">quote_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">locale</span><span class=\"p\">)}</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">provider</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;libc&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"s2\">&quot;provider&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">quote_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">provider</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deterministic</span> <span class=\"ow\">is</span> <span class=\"kc\">False</span><span class=\"p\">:</span>\n            <span class=\"n\">args</span><span class=\"p\">[</span><span class=\"s2\">&quot;deterministic&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;false&quot;</span>\n        <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;CREATE COLLATION </span><span class=\"si\">%(name)s</span><span class=\"s2\"> (</span><span class=\"si\">%(args)s</span><span class=\"s2\">)&quot;</span>\n            <span class=\"o\">%</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">quote_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">),</span>\n                <span class=\"s2\">&quot;args&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;, &quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">option</span><span class=\"si\">}</span><span class=\"s2\">=</span><span class=\"si\">{</span><span class=\"n\">value</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span> <span class=\"k\">for</span> <span class=\"n\">option</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span>\n                <span class=\"p\">),</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">remove_collation</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">):</span>\n        <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;DROP COLLATION </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">quote_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"CreateCollation\"><a class=\"viewcode-back\" href=\"../../../../../ref/contrib/postgres/operations/#django.contrib.postgres.operations.CreateCollation\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">CreateCollation</span><span class=\"p\">(</span><span class=\"n\">CollationOperation</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Create a collation.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">database_forwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">from_state</span><span class=\"p\">,</span> <span class=\"n\">to_state</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">vendor</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;postgresql&quot;</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">allow_migrate</span><span class=\"p\">(</span>\n            <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">,</span> <span class=\"n\">app_label</span>\n        <span class=\"p\">):</span>\n            <span class=\"k\">return</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_collation</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">database_backwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">from_state</span><span class=\"p\">,</span> <span class=\"n\">to_state</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">allow_migrate</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">remove_collation</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">describe</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;Create collation </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">migration_name_fragment</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;create_collation_</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span></div>\n\n\n<div class=\"viewcode-block\" id=\"RemoveCollation\"><a class=\"viewcode-back\" href=\"../../../../../ref/contrib/postgres/operations/#django.contrib.postgres.operations.RemoveCollation\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">RemoveCollation</span><span class=\"p\">(</span><span class=\"n\">CollationOperation</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Remove a collation.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">database_forwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">from_state</span><span class=\"p\">,</span> <span class=\"n\">to_state</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">vendor</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;postgresql&quot;</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">allow_migrate</span><span class=\"p\">(</span>\n            <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">,</span> <span class=\"n\">app_label</span>\n        <span class=\"p\">):</span>\n            <span class=\"k\">return</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">remove_collation</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">database_backwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">from_state</span><span class=\"p\">,</span> <span class=\"n\">to_state</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">allow_migrate</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_collation</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">describe</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;Remove collation </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">migration_name_fragment</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;remove_collation_</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span></div>\n\n\n<div class=\"viewcode-block\" id=\"AddConstraintNotValid\"><a class=\"viewcode-back\" href=\"../../../../../ref/contrib/postgres/operations/#django.contrib.postgres.operations.AddConstraintNotValid\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">AddConstraintNotValid</span><span class=\"p\">(</span><span class=\"n\">AddConstraint</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Add a table constraint without enforcing validation, using PostgreSQL&#39;s</span>\n<span class=\"sd\">    NOT VALID syntax.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model_name</span><span class=\"p\">,</span> <span class=\"n\">constraint</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">constraint</span><span class=\"p\">,</span> <span class=\"n\">CheckConstraint</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;AddConstraintNotValid.constraint must be a check constraint.&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">model_name</span><span class=\"p\">,</span> <span class=\"n\">constraint</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">describe</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Create not valid constraint </span><span class=\"si\">%s</span><span class=\"s2\"> on model </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">constraint</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">database_forwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">from_state</span><span class=\"p\">,</span> <span class=\"n\">to_state</span><span class=\"p\">):</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">from_state</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_model</span><span class=\"p\">(</span><span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">allow_migrate_model</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">):</span>\n            <span class=\"n\">constraint_sql</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">constraint</span><span class=\"o\">.</span><span class=\"n\">create_sql</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">constraint_sql</span><span class=\"p\">:</span>\n                <span class=\"c1\"># Constraint.create_sql returns interpolated SQL which makes</span>\n                <span class=\"c1\"># params=None a necessity to avoid escaping attempts on</span>\n                <span class=\"c1\"># execution.</span>\n                <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">constraint_sql</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; NOT VALID&quot;</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">migration_name_fragment</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">migration_name_fragment</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;_not_valid&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ValidateConstraint\"><a class=\"viewcode-back\" href=\"../../../../../ref/contrib/postgres/operations/#django.contrib.postgres.operations.ValidateConstraint\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ValidateConstraint</span><span class=\"p\">(</span><span class=\"n\">Operation</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Validate a table NOT VALID constraint.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model_name</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name</span> <span class=\"o\">=</span> <span class=\"n\">model_name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">describe</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Validate constraint </span><span class=\"si\">%s</span><span class=\"s2\"> on model </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">database_forwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">from_state</span><span class=\"p\">,</span> <span class=\"n\">to_state</span><span class=\"p\">):</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">from_state</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_model</span><span class=\"p\">(</span><span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">allow_migrate_model</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">alias</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">):</span>\n            <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;ALTER TABLE </span><span class=\"si\">%s</span><span class=\"s2\"> VALIDATE CONSTRAINT </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span>\n                <span class=\"o\">%</span> <span class=\"p\">(</span>\n                    <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">quote_name</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">db_table</span><span class=\"p\">),</span>\n                    <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">quote_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">),</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">database_backwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">from_state</span><span class=\"p\">,</span> <span class=\"n\">to_state</span><span class=\"p\">):</span>\n        <span class=\"c1\"># PostgreSQL does not provide a way to make a constraint invalid.</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">state_forwards</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app_label</span><span class=\"p\">,</span> <span class=\"n\">state</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">migration_name_fragment</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">_validate_</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">(),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">())</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">deconstruct</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span>\n            <span class=\"p\">[],</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;model_name&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n        <span class=\"p\">)</span></div>\n</pre></div>", "current_page_name": "_modules/django/contrib/postgres/operations", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}