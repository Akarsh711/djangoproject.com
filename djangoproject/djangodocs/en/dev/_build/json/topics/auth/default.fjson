{"parents": [{"link": "../../", "title": "Using Django"}, {"link": "../", "title": "User authentication in Django"}], "prev": {"link": "../", "title": "User authentication in Django"}, "next": {"link": "../passwords/", "title": "Password management in Django"}, "title": "Using the Django authentication system", "meta": null, "body": "<div class=\"section\" id=\"s-using-the-django-authentication-system\">\n<span id=\"using-the-django-authentication-system\"></span><h1>Using the Django authentication system<a class=\"headerlink\" href=\"#using-the-django-authentication-system\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This document explains the usage of Django\u2019s authentication system in its\ndefault configuration. This configuration has evolved to serve the most common\nproject needs, handling a reasonably wide range of tasks, and has a careful\nimplementation of passwords and permissions. For projects where authentication\nneeds differ from the default, Django supports extensive <a class=\"reference internal\" href=\"../customizing/\"><span class=\"doc\">extension and\ncustomization</span></a> of authentication.</p>\n<p>Django authentication provides both authentication and authorization together\nand is generally referred to as the authentication system, as these features\nare somewhat coupled.</p>\n<div class=\"section\" id=\"s-user-objects\">\n<span id=\"s-id1\"></span><span id=\"user-objects\"></span><span id=\"id1\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">User</span></code> objects<a class=\"headerlink\" href=\"#user-objects\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p><a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">User</span></code></a> objects are the core of the\nauthentication system. They typically represent the people interacting with\nyour site and are used to enable things like restricting access, registering\nuser profiles, associating content with creators etc. Only one class of user\nexists in Django\u2019s authentication framework, i.e., <a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User.is_superuser\" title=\"django.contrib.auth.models.User.is_superuser\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">'superusers'</span></code></a> or admin <a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User.is_staff\" title=\"django.contrib.auth.models.User.is_staff\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">'staff'</span></code></a> users are just user objects with\nspecial attributes set, not different classes of user objects.</p>\n<p>The primary attributes of the default user are:</p>\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User.username\" title=\"django.contrib.auth.models.User.username\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">username</span></code></a></li>\n<li><a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User.password\" title=\"django.contrib.auth.models.User.password\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">password</span></code></a></li>\n<li><a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User.email\" title=\"django.contrib.auth.models.User.email\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">email</span></code></a></li>\n<li><a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User.first_name\" title=\"django.contrib.auth.models.User.first_name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">first_name</span></code></a></li>\n<li><a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User.last_name\" title=\"django.contrib.auth.models.User.last_name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">last_name</span></code></a></li>\n</ul>\n<p>See the <a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">full</span> <span class=\"pre\">API</span> <span class=\"pre\">documentation</span></code></a> for\nfull reference, the documentation that follows is more task oriented.</p>\n<div class=\"section\" id=\"s-creating-users\">\n<span id=\"s-topics-auth-creating-users\"></span><span id=\"creating-users\"></span><span id=\"topics-auth-creating-users\"></span><h3>Creating users<a class=\"headerlink\" href=\"#creating-users\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The most direct way to create users is to use the included\n<a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.UserManager.create_user\" title=\"django.contrib.auth.models.UserManager.create_user\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">create_user()</span></code></a> helper function:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.models</span> <span class=\"kn\">import</span> <span class=\"n\">User</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create_user</span><span class=\"p\">(</span><span class=\"s2\">&quot;john&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;lennon@thebeatles.com&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;johnpassword&quot;</span><span class=\"p\">)</span>\n\n<span class=\"go\"># At this point, user is a User object that has already been saved</span>\n<span class=\"go\"># to the database. You can continue to change its attributes</span>\n<span class=\"go\"># if you want to change other fields.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">last_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Lennon&quot;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>If you have the Django admin installed, you can also <a class=\"reference internal\" href=\"#auth-admin\"><span class=\"std std-ref\">create users\ninteractively</span></a>.</p>\n</div>\n<div class=\"section\" id=\"s-creating-superusers\">\n<span id=\"s-topics-auth-creating-superusers\"></span><span id=\"creating-superusers\"></span><span id=\"topics-auth-creating-superusers\"></span><h3>Creating superusers<a class=\"headerlink\" href=\"#creating-superusers\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Create superusers using the <a class=\"reference internal\" href=\"../../../ref/django-admin/#django-admin-createsuperuser\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">createsuperuser</span></code></a> command:</p>\n<div class=\"console-block\" id=\"console-block-0\">\n<input class=\"c-tab-unix\" id=\"c-tab-0-unix\" type=\"radio\" name=\"console-0\" checked>\n<label for=\"c-tab-0-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-0-win\" type=\"radio\" name=\"console-0\">\n<label for=\"c-tab-0-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-0-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>python manage.py createsuperuser --username<span class=\"o\">=</span>joe --email<span class=\"o\">=</span>joe@example.com\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-0-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py manage.py createsuperuser --username=joe --email=joe@example.com\n</pre></div>\n</section>\n</div>\n<p>You will be prompted for a password. After you enter one, the user will be\ncreated immediately. If you leave off the <a class=\"reference internal\" href=\"../../../ref/django-admin/#cmdoption-createsuperuser-username\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--username</span></code></a> or <a class=\"reference internal\" href=\"../../../ref/django-admin/#cmdoption-createsuperuser-email\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--email</span></code></a> options, it will\nprompt you for those values.</p>\n</div>\n<div class=\"section\" id=\"s-changing-passwords\">\n<span id=\"changing-passwords\"></span><h3>Changing passwords<a class=\"headerlink\" href=\"#changing-passwords\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Django does not store raw (clear text) passwords on the user model, but only\na hash (see <a class=\"reference internal\" href=\"../passwords/\"><span class=\"doc\">documentation of how passwords are managed</span></a> for full details). Because of this, do not attempt to\nmanipulate the password attribute of the user directly. This is why a helper\nfunction is used when creating a user.</p>\n<p>To change a user\u2019s password, you have several options:</p>\n<p><a class=\"reference internal\" href=\"../../../ref/django-admin/#django-admin-changepassword\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">manage.py</span> <span class=\"pre\">changepassword</span> <span class=\"pre\">*username*</span></code></a> offers a method\nof changing a user\u2019s password from the command line. It prompts you to\nchange the password of a given user which you must enter twice. If\nthey both match, the new password will be changed immediately. If you\ndo not supply a user, the command will attempt to change the password\nwhose username matches the current system user.</p>\n<p>You can also change a password programmatically, using\n<a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User.set_password\" title=\"django.contrib.auth.models.User.set_password\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">set_password()</span></code></a>:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.models</span> <span class=\"kn\">import</span> <span class=\"n\">User</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s2\">&quot;john&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">set_password</span><span class=\"p\">(</span><span class=\"s2\">&quot;new password&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>If you have the Django admin installed, you can also change user\u2019s passwords\non the <a class=\"reference internal\" href=\"#auth-admin\"><span class=\"std std-ref\">authentication system\u2019s admin pages</span></a>.</p>\n<p>Django also provides <a class=\"reference internal\" href=\"#built-in-auth-views\"><span class=\"std std-ref\">views</span></a> and <a class=\"reference internal\" href=\"#built-in-auth-forms\"><span class=\"std std-ref\">forms</span></a> that may be used to allow users to change their own\npasswords.</p>\n<p>Changing a user\u2019s password will log out all their sessions. See\n<a class=\"reference internal\" href=\"#session-invalidation-on-password-change\"><span class=\"std std-ref\">Session invalidation on password change</span></a> for details.</p>\n</div>\n<div class=\"section\" id=\"s-authenticating-users\">\n<span id=\"authenticating-users\"></span><h3>Authenticating users<a class=\"headerlink\" href=\"#authenticating-users\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.authenticate\">\n<code class=\"sig-name descname\"><span class=\"pre\">authenticate</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">credentials</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/auth/#authenticate\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.auth.authenticate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use <a class=\"reference internal\" href=\"#django.contrib.auth.authenticate\" title=\"django.contrib.auth.authenticate\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">authenticate()</span></code></a> to verify a set of\ncredentials. It takes credentials as keyword arguments, <code class=\"docutils literal notranslate\"><span class=\"pre\">username</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">password</span></code> for the default case, checks them against each\n<a class=\"reference internal\" href=\"../customizing/#authentication-backends\"><span class=\"std std-ref\">authentication backend</span></a>, and returns a\n<a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">User</span></code></a> object if the credentials are\nvalid for a backend. If the credentials aren\u2019t valid for any backend or if\na backend raises <a class=\"reference internal\" href=\"../../../ref/exceptions/#django.core.exceptions.PermissionDenied\" title=\"django.core.exceptions.PermissionDenied\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PermissionDenied</span></code></a>, it\nreturns <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>. For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth</span> <span class=\"kn\">import</span> <span class=\"n\">authenticate</span>\n\n<span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">authenticate</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s2\">&quot;john&quot;</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s2\">&quot;secret&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">user</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"c1\"># A backend authenticated the credentials</span>\n    <span class=\"o\">...</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"c1\"># No backend authenticated the credentials</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code> is an optional <a class=\"reference internal\" href=\"../../../ref/request-response/#django.http.HttpRequest\" title=\"django.http.HttpRequest\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code></a> which is\npassed on the <code class=\"docutils literal notranslate\"><span class=\"pre\">authenticate()</span></code> method of the authentication backends.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">This is a low level way to authenticate a set of credentials; for\nexample, it\u2019s used by the\n<a class=\"reference internal\" href=\"../../../ref/middleware/#django.contrib.auth.middleware.RemoteUserMiddleware\" title=\"django.contrib.auth.middleware.RemoteUserMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RemoteUserMiddleware</span></code></a>. Unless\nyou are writing your own authentication system, you probably won\u2019t use\nthis. Rather if you\u2019re looking for a way to login a user, use the\n<a class=\"reference internal\" href=\"#django.contrib.auth.views.LoginView\" title=\"django.contrib.auth.views.LoginView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LoginView</span></code></a>.</p>\n</div>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"s-permissions-and-authorization\">\n<span id=\"s-topic-authorization\"></span><span id=\"permissions-and-authorization\"></span><span id=\"topic-authorization\"></span><h2>Permissions and Authorization<a class=\"headerlink\" href=\"#permissions-and-authorization\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Django comes with a built-in permissions system. It provides a way to assign\npermissions to specific users and groups of users.</p>\n<p>It\u2019s used by the Django admin site, but you\u2019re welcome to use it in your own\ncode.</p>\n<p>The Django admin site uses permissions as follows:</p>\n<ul class=\"simple\">\n<li>Access to view objects is limited to users with the \u201cview\u201d or \u201cchange\u201d\npermission for that type of object.</li>\n<li>Access to view the \u201cadd\u201d form and add an object is limited to users with\nthe \u201cadd\u201d permission for that type of object.</li>\n<li>Access to view the change list, view the \u201cchange\u201d form and change an\nobject is limited to users with the \u201cchange\u201d permission for that type of\nobject.</li>\n<li>Access to delete an object is limited to users with the \u201cdelete\u201d\npermission for that type of object.</li>\n</ul>\n<p>Permissions can be set not only per type of object, but also per specific\nobject instance. By using the\n<a class=\"reference internal\" href=\"../../../ref/contrib/admin/#django.contrib.admin.ModelAdmin.has_view_permission\" title=\"django.contrib.admin.ModelAdmin.has_view_permission\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">has_view_permission()</span></code></a>,\n<a class=\"reference internal\" href=\"../../../ref/contrib/admin/#django.contrib.admin.ModelAdmin.has_add_permission\" title=\"django.contrib.admin.ModelAdmin.has_add_permission\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">has_add_permission()</span></code></a>,\n<a class=\"reference internal\" href=\"../../../ref/contrib/admin/#django.contrib.admin.ModelAdmin.has_change_permission\" title=\"django.contrib.admin.ModelAdmin.has_change_permission\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">has_change_permission()</span></code></a> and\n<a class=\"reference internal\" href=\"../../../ref/contrib/admin/#django.contrib.admin.ModelAdmin.has_delete_permission\" title=\"django.contrib.admin.ModelAdmin.has_delete_permission\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">has_delete_permission()</span></code></a> methods provided\nby the <a class=\"reference internal\" href=\"../../../ref/contrib/admin/#django.contrib.admin.ModelAdmin\" title=\"django.contrib.admin.ModelAdmin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code></a> class, it is possible to\ncustomize permissions for different object instances of the same type.</p>\n<p><a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">User</span></code></a> objects have two many-to-many\nfields: <code class=\"docutils literal notranslate\"><span class=\"pre\">groups</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">user_permissions</span></code>.\n<a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">User</span></code></a> objects can access their related\nobjects in the same way as any other <a class=\"reference internal\" href=\"../../db/models/\"><span class=\"doc\">Django model</span></a>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">myuser</span><span class=\"o\">.</span><span class=\"n\">groups</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">([</span><span class=\"n\">group_list</span><span class=\"p\">])</span>\n<span class=\"n\">myuser</span><span class=\"o\">.</span><span class=\"n\">groups</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">myuser</span><span class=\"o\">.</span><span class=\"n\">groups</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"n\">group</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">myuser</span><span class=\"o\">.</span><span class=\"n\">groups</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n<span class=\"n\">myuser</span><span class=\"o\">.</span><span class=\"n\">user_permissions</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">([</span><span class=\"n\">permission_list</span><span class=\"p\">])</span>\n<span class=\"n\">myuser</span><span class=\"o\">.</span><span class=\"n\">user_permissions</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">permission</span><span class=\"p\">,</span> <span class=\"n\">permission</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">myuser</span><span class=\"o\">.</span><span class=\"n\">user_permissions</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">permission</span><span class=\"p\">,</span> <span class=\"n\">permission</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">myuser</span><span class=\"o\">.</span><span class=\"n\">user_permissions</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<div class=\"section\" id=\"s-default-permissions\">\n<span id=\"default-permissions\"></span><h3>Default permissions<a class=\"headerlink\" href=\"#default-permissions\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>When <code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.auth</span></code> is listed in your <a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-INSTALLED_APPS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">INSTALLED_APPS</span></code></a>\nsetting, it will ensure that four default permissions \u2013 add, change, delete,\nand view \u2013 are created for each Django model defined in one of your installed\napplications.</p>\n<p>These permissions will be created when you run <a class=\"reference internal\" href=\"../../../ref/django-admin/#django-admin-migrate\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">manage.py</span> <span class=\"pre\">migrate</span></code></a>; the first time you run <code class=\"docutils literal notranslate\"><span class=\"pre\">migrate</span></code> after adding\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.auth</span></code> to <a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-INSTALLED_APPS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">INSTALLED_APPS</span></code></a>, the default permissions\nwill be created for all previously-installed models, as well as for any new\nmodels being installed at that time. Afterward, it will create default\npermissions for new models each time you run <a class=\"reference internal\" href=\"../../../ref/django-admin/#django-admin-migrate\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">manage.py</span> <span class=\"pre\">migrate</span></code></a> (the function that creates permissions is connected to the\n<a class=\"reference internal\" href=\"../../../ref/signals/#django.db.models.signals.post_migrate\" title=\"django.db.models.signals.post_migrate\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">post_migrate</span></code></a> signal).</p>\n<p>Assuming you have an application with an\n<a class=\"reference internal\" href=\"../../../ref/models/options/#django.db.models.Options.app_label\" title=\"django.db.models.Options.app_label\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">app_label</span></code></a> <code class=\"docutils literal notranslate\"><span class=\"pre\">foo</span></code> and a model named <code class=\"docutils literal notranslate\"><span class=\"pre\">Bar</span></code>,\nto test for basic permissions you should use:</p>\n<ul class=\"simple\">\n<li>add: <code class=\"docutils literal notranslate\"><span class=\"pre\">user.has_perm('foo.add_bar')</span></code></li>\n<li>change: <code class=\"docutils literal notranslate\"><span class=\"pre\">user.has_perm('foo.change_bar')</span></code></li>\n<li>delete: <code class=\"docutils literal notranslate\"><span class=\"pre\">user.has_perm('foo.delete_bar')</span></code></li>\n<li>view: <code class=\"docutils literal notranslate\"><span class=\"pre\">user.has_perm('foo.view_bar')</span></code></li>\n</ul>\n<p>The <a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.Permission\" title=\"django.contrib.auth.models.Permission\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Permission</span></code></a> model is rarely accessed\ndirectly.</p>\n</div>\n<div class=\"section\" id=\"s-groups\">\n<span id=\"groups\"></span><h3>Groups<a class=\"headerlink\" href=\"#groups\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p><a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.Group\" title=\"django.contrib.auth.models.Group\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.contrib.auth.models.Group</span></code></a> models are a generic way of\ncategorizing users so you can apply permissions, or some other label, to those\nusers. A user can belong to any number of groups.</p>\n<p>A user in a group automatically has the permissions granted to that group. For\nexample, if the group <code class=\"docutils literal notranslate\"><span class=\"pre\">Site</span> <span class=\"pre\">editors</span></code> has the permission\n<code class=\"docutils literal notranslate\"><span class=\"pre\">can_edit_home_page</span></code>, any user in that group will have that permission.</p>\n<p>Beyond permissions, groups are a convenient way to categorize users to give\nthem some label, or extended functionality. For example, you could create a\ngroup <code class=\"docutils literal notranslate\"><span class=\"pre\">'Special</span> <span class=\"pre\">users'</span></code>, and you could write code that could, say, give them\naccess to a members-only portion of your site, or send them members-only email\nmessages.</p>\n</div>\n<div class=\"section\" id=\"s-programmatically-creating-permissions\">\n<span id=\"programmatically-creating-permissions\"></span><h3>Programmatically creating permissions<a class=\"headerlink\" href=\"#programmatically-creating-permissions\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>While <a class=\"reference internal\" href=\"../customizing/#custom-permissions\"><span class=\"std std-ref\">custom permissions</span></a> can be defined within\na model\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta</span></code> class, you can also create permissions directly. For\nexample, you can create the <code class=\"docutils literal notranslate\"><span class=\"pre\">can_publish</span></code> permission for a <code class=\"docutils literal notranslate\"><span class=\"pre\">BlogPost</span></code> model\nin <code class=\"docutils literal notranslate\"><span class=\"pre\">myapp</span></code>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">myapp.models</span> <span class=\"kn\">import</span> <span class=\"n\">BlogPost</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.models</span> <span class=\"kn\">import</span> <span class=\"n\">Permission</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.contrib.contenttypes.models</span> <span class=\"kn\">import</span> <span class=\"n\">ContentType</span>\n\n<span class=\"n\">content_type</span> <span class=\"o\">=</span> <span class=\"n\">ContentType</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get_for_model</span><span class=\"p\">(</span><span class=\"n\">BlogPost</span><span class=\"p\">)</span>\n<span class=\"n\">permission</span> <span class=\"o\">=</span> <span class=\"n\">Permission</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n    <span class=\"n\">codename</span><span class=\"o\">=</span><span class=\"s2\">&quot;can_publish&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;Can Publish Posts&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">content_type</span><span class=\"o\">=</span><span class=\"n\">content_type</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The permission can then be assigned to a\n<a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">User</span></code></a> via its <code class=\"docutils literal notranslate\"><span class=\"pre\">user_permissions</span></code>\nattribute or to a <a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.Group\" title=\"django.contrib.auth.models.Group\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Group</span></code></a> via its\n<code class=\"docutils literal notranslate\"><span class=\"pre\">permissions</span></code> attribute.</p>\n<div class=\"admonition-proxy-models-need-their-own-content-type admonition\">\n<p class=\"first admonition-title\">Proxy models need their own content type</p>\n<p>If you want to create <a class=\"reference internal\" href=\"#proxy-models-permissions-topic\"><span class=\"std std-ref\">permissions for a proxy model</span></a>, pass <code class=\"docutils literal notranslate\"><span class=\"pre\">for_concrete_model=False</span></code> to\n<a class=\"reference internal\" href=\"../../../ref/contrib/contenttypes/#django.contrib.contenttypes.models.ContentTypeManager.get_for_model\" title=\"django.contrib.contenttypes.models.ContentTypeManager.get_for_model\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">ContentTypeManager.get_for_model()</span></code></a> to get the appropriate\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ContentType</span></code>:</p>\n<div class=\"last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">content_type</span> <span class=\"o\">=</span> <span class=\"n\">ContentType</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get_for_model</span><span class=\"p\">(</span>\n    <span class=\"n\">BlogPostProxy</span><span class=\"p\">,</span> <span class=\"n\">for_concrete_model</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"s-permission-caching\">\n<span id=\"permission-caching\"></span><h3>Permission caching<a class=\"headerlink\" href=\"#permission-caching\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The <a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.backends.ModelBackend\" title=\"django.contrib.auth.backends.ModelBackend\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelBackend</span></code></a> caches permissions on\nthe user object after the first time they need to be fetched for a permissions\ncheck. This is typically fine for the request-response cycle since permissions\naren\u2019t typically checked immediately after they are added (in the admin, for\nexample). If you are adding permissions and checking them immediately\nafterward, in a test or view for example, the easiest solution is to re-fetch\nthe user from the database. For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.models</span> <span class=\"kn\">import</span> <span class=\"n\">Permission</span><span class=\"p\">,</span> <span class=\"n\">User</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.contrib.contenttypes.models</span> <span class=\"kn\">import</span> <span class=\"n\">ContentType</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.shortcuts</span> <span class=\"kn\">import</span> <span class=\"n\">get_object_or_404</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">myapp.models</span> <span class=\"kn\">import</span> <span class=\"n\">BlogPost</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">user_gains_perms</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">user_id</span><span class=\"p\">):</span>\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">get_object_or_404</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">,</span> <span class=\"n\">pk</span><span class=\"o\">=</span><span class=\"n\">user_id</span><span class=\"p\">)</span>\n    <span class=\"c1\"># any permission check will cache the current set of permissions</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">has_perm</span><span class=\"p\">(</span><span class=\"s2\">&quot;myapp.change_blogpost&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"n\">content_type</span> <span class=\"o\">=</span> <span class=\"n\">ContentType</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get_for_model</span><span class=\"p\">(</span><span class=\"n\">BlogPost</span><span class=\"p\">)</span>\n    <span class=\"n\">permission</span> <span class=\"o\">=</span> <span class=\"n\">Permission</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n        <span class=\"n\">codename</span><span class=\"o\">=</span><span class=\"s2\">&quot;change_blogpost&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">content_type</span><span class=\"o\">=</span><span class=\"n\">content_type</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">user_permissions</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">permission</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Checking the cached permission set</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">has_perm</span><span class=\"p\">(</span><span class=\"s2\">&quot;myapp.change_blogpost&quot;</span><span class=\"p\">)</span>  <span class=\"c1\"># False</span>\n\n    <span class=\"c1\"># Request new instance of User</span>\n    <span class=\"c1\"># Be aware that user.refresh_from_db() won&#39;t clear the cache.</span>\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">get_object_or_404</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">,</span> <span class=\"n\">pk</span><span class=\"o\">=</span><span class=\"n\">user_id</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Permission cache is repopulated from the database</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">has_perm</span><span class=\"p\">(</span><span class=\"s2\">&quot;myapp.change_blogpost&quot;</span><span class=\"p\">)</span>  <span class=\"c1\"># True</span>\n\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-proxy-models\">\n<span id=\"s-proxy-models-permissions-topic\"></span><span id=\"proxy-models\"></span><span id=\"proxy-models-permissions-topic\"></span><h3>Proxy models<a class=\"headerlink\" href=\"#proxy-models\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Proxy models work exactly the same way as concrete models. Permissions are\ncreated using the own content type of the proxy model. Proxy models don\u2019t\ninherit the permissions of the concrete model they subclass:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">permissions</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"s2\">&quot;can_eat_pizzas&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Can eat pizzas&quot;</span><span class=\"p\">)]</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Student</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">proxy</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"n\">permissions</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"s2\">&quot;can_deliver_pizzas&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Can deliver pizzas&quot;</span><span class=\"p\">)]</span>\n</pre></div>\n</div>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Fetch the content type for the proxy model.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">content_type</span> <span class=\"o\">=</span> <span class=\"n\">ContentType</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get_for_model</span><span class=\"p\">(</span><span class=\"n\">Student</span><span class=\"p\">,</span> <span class=\"n\">for_concrete_model</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">student_permissions</span> <span class=\"o\">=</span> <span class=\"n\">Permission</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">content_type</span><span class=\"o\">=</span><span class=\"n\">content_type</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">[</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">codename</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">student_permissions</span><span class=\"p\">]</span>\n<span class=\"go\">[&#39;add_student&#39;, &#39;change_student&#39;, &#39;delete_student&#39;, &#39;view_student&#39;,</span>\n<span class=\"go\">&#39;can_deliver_pizzas&#39;]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">permission</span> <span class=\"ow\">in</span> <span class=\"n\">student_permissions</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">user_permissions</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">permission</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">has_perm</span><span class=\"p\">(</span><span class=\"s2\">&quot;app.add_person&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">has_perm</span><span class=\"p\">(</span><span class=\"s2\">&quot;app.can_eat_pizzas&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">has_perms</span><span class=\"p\">((</span><span class=\"s2\">&quot;app.add_student&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;app.can_deliver_pizzas&quot;</span><span class=\"p\">))</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"s-authentication-in-web-requests\">\n<span id=\"s-auth-web-requests\"></span><span id=\"authentication-in-web-requests\"></span><span id=\"auth-web-requests\"></span><h2>Authentication in web requests<a class=\"headerlink\" href=\"#authentication-in-web-requests\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Django uses <a class=\"reference internal\" href=\"../../http/sessions/\"><span class=\"doc\">sessions</span></a> and middleware to hook the\nauthentication system into <a class=\"reference internal\" href=\"../../../ref/request-response/#django.http.HttpRequest\" title=\"django.http.HttpRequest\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">request</span> <span class=\"pre\">objects</span></code></a>.</p>\n<p>These provide a <a class=\"reference internal\" href=\"../../../ref/request-response/#django.http.HttpRequest.user\" title=\"django.http.HttpRequest.user\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">request.user</span></code></a>  attribute\nand a <a class=\"reference internal\" href=\"../../../ref/request-response/#django.http.HttpRequest.auser\" title=\"django.http.HttpRequest.auser\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">request.auser</span></code></a> async method\non every request which represents the current user. If the current user has not\nlogged in, this attribute will be set to an instance\nof <a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.AnonymousUser\" title=\"django.contrib.auth.models.AnonymousUser\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AnonymousUser</span></code></a>, otherwise it will be an\ninstance of <a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">User</span></code></a>.</p>\n<p>You can tell them apart with\n<a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User.is_authenticated\" title=\"django.contrib.auth.models.User.is_authenticated\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_authenticated</span></code></a>, like so:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">if</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">is_authenticated</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Do something for authenticated users.</span>\n    <span class=\"o\">...</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Do something for anonymous users.</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p>Or in an asynchronous view:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">auser</span><span class=\"p\">()</span>\n<span class=\"k\">if</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">is_authenticated</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Do something for authenticated users.</span>\n    <span class=\"o\">...</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Do something for anonymous users.</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<div class=\"versionchanged\">\n<span class=\"title\">Changed in Django Development version:</span> <p>The <a class=\"reference internal\" href=\"../../../ref/request-response/#django.http.HttpRequest.auser\" title=\"django.http.HttpRequest.auser\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">HttpRequest.auser()</span></code></a> method was added.</p>\n</div>\n<div class=\"section\" id=\"s-how-to-log-a-user-in\">\n<span id=\"s-id2\"></span><span id=\"how-to-log-a-user-in\"></span><span id=\"id2\"></span><h3>How to log a user in<a class=\"headerlink\" href=\"#how-to-log-a-user-in\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>If you have an authenticated user you want to attach to the current session\n- this is done with a <a class=\"reference internal\" href=\"#django.contrib.auth.login\" title=\"django.contrib.auth.login\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">login()</span></code></a> function.</p>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.login\">\n<code class=\"sig-name descname\"><span class=\"pre\">login</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">user</span></span></em>, <em><span class=\"n\"><span class=\"pre\">backend</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/auth/#login\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.auth.login\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>To log a user in, from a view, use <a class=\"reference internal\" href=\"#django.contrib.auth.login\" title=\"django.contrib.auth.login\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">login()</span></code></a>. It\ntakes an <a class=\"reference internal\" href=\"../../../ref/request-response/#django.http.HttpRequest\" title=\"django.http.HttpRequest\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code></a> object and a\n<a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">User</span></code></a> object.\n<a class=\"reference internal\" href=\"#django.contrib.auth.login\" title=\"django.contrib.auth.login\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">login()</span></code></a> saves the user\u2019s ID in the session,\nusing Django\u2019s session framework.</p>\n<p>Note that any data set during the anonymous session is retained in the\nsession after a user logs in.</p>\n<p>This example shows how you might use both\n<a class=\"reference internal\" href=\"#django.contrib.auth.authenticate\" title=\"django.contrib.auth.authenticate\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">authenticate()</span></code></a> and\n<a class=\"reference internal\" href=\"#django.contrib.auth.login\" title=\"django.contrib.auth.login\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">login()</span></code></a>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth</span> <span class=\"kn\">import</span> <span class=\"n\">authenticate</span><span class=\"p\">,</span> <span class=\"n\">login</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">my_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">POST</span><span class=\"p\">[</span><span class=\"s2\">&quot;username&quot;</span><span class=\"p\">]</span>\n    <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">POST</span><span class=\"p\">[</span><span class=\"s2\">&quot;password&quot;</span><span class=\"p\">]</span>\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">authenticate</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"n\">password</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">user</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">login</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Redirect to a success page.</span>\n        <span class=\"o\">...</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Return an &#39;invalid login&#39; error message.</span>\n        <span class=\"o\">...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<div class=\"section\" id=\"s-selecting-the-authentication-backend\">\n<span id=\"selecting-the-authentication-backend\"></span><h4>Selecting the authentication backend<a class=\"headerlink\" href=\"#selecting-the-authentication-backend\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>When a user logs in, the user\u2019s ID and the backend that was used for\nauthentication are saved in the user\u2019s session. This allows the same\n<a class=\"reference internal\" href=\"../customizing/#authentication-backends\"><span class=\"std std-ref\">authentication backend</span></a> to fetch the user\u2019s\ndetails on a future request. The authentication backend to save in the session\nis selected as follows:</p>\n<ol class=\"arabic simple\">\n<li>Use the value of the optional <code class=\"docutils literal notranslate\"><span class=\"pre\">backend</span></code> argument, if provided.</li>\n<li>Use the value of the <code class=\"docutils literal notranslate\"><span class=\"pre\">user.backend</span></code> attribute, if present. This allows\npairing <a class=\"reference internal\" href=\"#django.contrib.auth.authenticate\" title=\"django.contrib.auth.authenticate\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">authenticate()</span></code></a> and\n<a class=\"reference internal\" href=\"#django.contrib.auth.login\" title=\"django.contrib.auth.login\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">login()</span></code></a>:\n<a class=\"reference internal\" href=\"#django.contrib.auth.authenticate\" title=\"django.contrib.auth.authenticate\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">authenticate()</span></code></a>\nsets the <code class=\"docutils literal notranslate\"><span class=\"pre\">user.backend</span></code> attribute on the user object it returns.</li>\n<li>Use the <code class=\"docutils literal notranslate\"><span class=\"pre\">backend</span></code> in <a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-AUTHENTICATION_BACKENDS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">AUTHENTICATION_BACKENDS</span></code></a>, if there is only\none.</li>\n<li>Otherwise, raise an exception.</li>\n</ol>\n<p>In cases 1 and 2, the value of the <code class=\"docutils literal notranslate\"><span class=\"pre\">backend</span></code> argument or the <code class=\"docutils literal notranslate\"><span class=\"pre\">user.backend</span></code>\nattribute should be a dotted import path string (like that found in\n<a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-AUTHENTICATION_BACKENDS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">AUTHENTICATION_BACKENDS</span></code></a>), not the actual backend class.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-how-to-log-a-user-out\">\n<span id=\"how-to-log-a-user-out\"></span><h3>How to log a user out<a class=\"headerlink\" href=\"#how-to-log-a-user-out\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.logout\">\n<code class=\"sig-name descname\"><span class=\"pre\">logout</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/auth/#logout\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.auth.logout\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>To log out a user who has been logged in via\n<a class=\"reference internal\" href=\"#django.contrib.auth.login\" title=\"django.contrib.auth.login\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.contrib.auth.login()</span></code></a>, use\n<a class=\"reference internal\" href=\"#django.contrib.auth.logout\" title=\"django.contrib.auth.logout\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.contrib.auth.logout()</span></code></a> within your view. It takes an\n<a class=\"reference internal\" href=\"../../../ref/request-response/#django.http.HttpRequest\" title=\"django.http.HttpRequest\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code></a> object and has no return value.\nExample:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth</span> <span class=\"kn\">import</span> <span class=\"n\">logout</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">logout_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">logout</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Redirect to a success page.</span>\n</pre></div>\n</div>\n<p>Note that <a class=\"reference internal\" href=\"#django.contrib.auth.logout\" title=\"django.contrib.auth.logout\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">logout()</span></code></a> doesn\u2019t throw any errors if\nthe user wasn\u2019t logged in.</p>\n<p>When you call <a class=\"reference internal\" href=\"#django.contrib.auth.logout\" title=\"django.contrib.auth.logout\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">logout()</span></code></a>, the session data for\nthe current request is completely cleaned out. All existing data is\nremoved. This is to prevent another person from using the same web browser\nto log in and have access to the previous user\u2019s session data. If you want\nto put anything into the session that will be available to the user\nimmediately after logging out, do that <em>after</em> calling\n<a class=\"reference internal\" href=\"#django.contrib.auth.logout\" title=\"django.contrib.auth.logout\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.contrib.auth.logout()</span></code></a>.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-limiting-access-to-logged-in-users\">\n<span id=\"limiting-access-to-logged-in-users\"></span><h3>Limiting access to logged-in users<a class=\"headerlink\" href=\"#limiting-access-to-logged-in-users\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<div class=\"section\" id=\"s-the-raw-way\">\n<span id=\"the-raw-way\"></span><h4>The raw way<a class=\"headerlink\" href=\"#the-raw-way\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>The raw way to limit access to pages is to check\n<a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User.is_authenticated\" title=\"django.contrib.auth.models.User.is_authenticated\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">request.user.is_authenticated</span></code></a> and either redirect to a\nlogin page:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.shortcuts</span> <span class=\"kn\">import</span> <span class=\"n\">redirect</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">my_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">is_authenticated</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">redirect</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">LOGIN_URL</span><span class=\"si\">}</span><span class=\"s2\">?next=</span><span class=\"si\">{</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n    <span class=\"c1\"># ...</span>\n</pre></div>\n</div>\n<p>\u2026or display an error message:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.shortcuts</span> <span class=\"kn\">import</span> <span class=\"n\">render</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">my_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">is_authenticated</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s2\">&quot;myapp/login_error.html&quot;</span><span class=\"p\">)</span>\n    <span class=\"c1\"># ...</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-the-login-required-decorator\">\n<span id=\"the-login-required-decorator\"></span><h4>The <code class=\"docutils literal notranslate\"><span class=\"pre\">login_required</span></code> decorator<a class=\"headerlink\" href=\"#the-login-required-decorator\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.decorators.login_required\">\n<code class=\"sig-name descname\"><span class=\"pre\">login_required</span></code>(<em><span class=\"n\"><span class=\"pre\">redirect_field_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'next'</span></span></em>, <em><span class=\"n\"><span class=\"pre\">login_url</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/auth/decorators/#login_required\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.auth.decorators.login_required\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>As a shortcut, you can use the convenient\n<a class=\"reference internal\" href=\"#django.contrib.auth.decorators.login_required\" title=\"django.contrib.auth.decorators.login_required\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">login_required()</span></code></a> decorator:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">login_required</span>\n\n\n<span class=\"nd\">@login_required</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p><a class=\"reference internal\" href=\"#django.contrib.auth.decorators.login_required\" title=\"django.contrib.auth.decorators.login_required\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">login_required()</span></code></a> does the following:</p>\n<ul class=\"simple\">\n<li>If the user isn\u2019t logged in, redirect to\n<a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-LOGIN_URL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">settings.LOGIN_URL</span></code></a>, passing the current absolute\npath in the query string. Example: <code class=\"docutils literal notranslate\"><span class=\"pre\">/accounts/login/?next=/polls/3/</span></code>.</li>\n<li>If the user is logged in, execute the view normally. The view code is\nfree to assume the user is logged in.</li>\n</ul>\n<p>By default, the path that the user should be redirected to upon\nsuccessful authentication is stored in a query string parameter called\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;next&quot;</span></code>. If you would prefer to use a different name for this parameter,\n<a class=\"reference internal\" href=\"#django.contrib.auth.decorators.login_required\" title=\"django.contrib.auth.decorators.login_required\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">login_required()</span></code></a> takes an\noptional <code class=\"docutils literal notranslate\"><span class=\"pre\">redirect_field_name</span></code> parameter:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">login_required</span>\n\n\n<span class=\"nd\">@login_required</span><span class=\"p\">(</span><span class=\"n\">redirect_field_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_redirect_field&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p>Note that if you provide a value to <code class=\"docutils literal notranslate\"><span class=\"pre\">redirect_field_name</span></code>, you will most\nlikely need to customize your login template as well, since the template\ncontext variable which stores the redirect path will use the value of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">redirect_field_name</span></code> as its key rather than <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;next&quot;</span></code> (the default).</p>\n<p><a class=\"reference internal\" href=\"#django.contrib.auth.decorators.login_required\" title=\"django.contrib.auth.decorators.login_required\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">login_required()</span></code></a> also takes an\noptional <code class=\"docutils literal notranslate\"><span class=\"pre\">login_url</span></code> parameter. Example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">login_required</span>\n\n\n<span class=\"nd\">@login_required</span><span class=\"p\">(</span><span class=\"n\">login_url</span><span class=\"o\">=</span><span class=\"s2\">&quot;/accounts/login/&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p>Note that if you don\u2019t specify the <code class=\"docutils literal notranslate\"><span class=\"pre\">login_url</span></code> parameter, you\u2019ll need to\nensure that the <a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-LOGIN_URL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">settings.LOGIN_URL</span></code></a> and your login\nview are properly associated. For example, using the defaults, add the\nfollowing lines to your URLconf:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth</span> <span class=\"kn\">import</span> <span class=\"n\">views</span> <span class=\"k\">as</span> <span class=\"n\">auth_views</span>\n\n<span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;accounts/login/&quot;</span><span class=\"p\">,</span> <span class=\"n\">auth_views</span><span class=\"o\">.</span><span class=\"n\">LoginView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">()),</span>\n</pre></div>\n</div>\n<p>The <a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-LOGIN_URL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">settings.LOGIN_URL</span></code></a> also accepts view function\nnames and <a class=\"reference internal\" href=\"../../http/urls/#naming-url-patterns\"><span class=\"std std-ref\">named URL patterns</span></a>. This allows you\nto freely remap your login view within your URLconf without having to\nupdate the setting.</p>\n</dd></dl>\n\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">login_required</span></code> decorator does NOT check the <code class=\"docutils literal notranslate\"><span class=\"pre\">is_active</span></code> flag on a\nuser, but the default <a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-AUTHENTICATION_BACKENDS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">AUTHENTICATION_BACKENDS</span></code></a> reject inactive\nusers.</p>\n</div>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\">If you are writing custom views for Django\u2019s admin (or need the same\nauthorization check that the built-in views use), you may find the\n<a class=\"reference internal\" href=\"../../../ref/contrib/admin/#django.contrib.admin.views.decorators.staff_member_required\" title=\"django.contrib.admin.views.decorators.staff_member_required\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.contrib.admin.views.decorators.staff_member_required()</span></code></a>\ndecorator a useful alternative to <code class=\"docutils literal notranslate\"><span class=\"pre\">login_required()</span></code>.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-the-loginrequiredmixin-mixin\">\n<span id=\"the-loginrequiredmixin-mixin\"></span><h4>The <code class=\"docutils literal notranslate\"><span class=\"pre\">LoginRequiredMixin</span></code> mixin<a class=\"headerlink\" href=\"#the-loginrequiredmixin-mixin\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>When using <a class=\"reference internal\" href=\"../../class-based-views/\"><span class=\"doc\">class-based views</span></a>, you can\nachieve the same behavior as with <code class=\"docutils literal notranslate\"><span class=\"pre\">login_required</span></code> by using the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">LoginRequiredMixin</span></code>. This mixin should be at the leftmost position in the\ninheritance list.</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.mixins.LoginRequiredMixin\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">LoginRequiredMixin</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.mixins.LoginRequiredMixin\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>If a view is using this mixin, all requests by non-authenticated users will\nbe redirected to the login page or shown an HTTP 403 Forbidden error,\ndepending on the\n<a class=\"reference internal\" href=\"#django.contrib.auth.mixins.AccessMixin.raise_exception\" title=\"django.contrib.auth.mixins.AccessMixin.raise_exception\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">raise_exception</span></code></a> parameter.</p>\n<p>You can set any of the parameters of\n<a class=\"reference internal\" href=\"#django.contrib.auth.mixins.AccessMixin\" title=\"django.contrib.auth.mixins.AccessMixin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AccessMixin</span></code></a> to customize the handling\nof unauthorized users:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.mixins</span> <span class=\"kn\">import</span> <span class=\"n\">LoginRequiredMixin</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyView</span><span class=\"p\">(</span><span class=\"n\">LoginRequiredMixin</span><span class=\"p\">,</span> <span class=\"n\">View</span><span class=\"p\">):</span>\n    <span class=\"n\">login_url</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;/login/&quot;</span>\n    <span class=\"n\">redirect_field_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;redirect_to&quot;</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Just as the <code class=\"docutils literal notranslate\"><span class=\"pre\">login_required</span></code> decorator, this mixin does NOT check the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">is_active</span></code> flag on a user, but the default\n<a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-AUTHENTICATION_BACKENDS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">AUTHENTICATION_BACKENDS</span></code></a> reject inactive users.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-limiting-access-to-logged-in-users-that-pass-a-test\">\n<span id=\"limiting-access-to-logged-in-users-that-pass-a-test\"></span><h4>Limiting access to logged-in users that pass a test<a class=\"headerlink\" href=\"#limiting-access-to-logged-in-users-that-pass-a-test\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>To limit access based on certain permissions or some other test, you\u2019d do\nessentially the same thing as described in the previous section.</p>\n<p>You can run your test on <a class=\"reference internal\" href=\"../../../ref/request-response/#django.http.HttpRequest.user\" title=\"django.http.HttpRequest.user\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">request.user</span></code></a> in\nthe view directly. For example, this view checks to make sure the user has an\nemail in the desired domain and if not, redirects to the login page:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.shortcuts</span> <span class=\"kn\">import</span> <span class=\"n\">redirect</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">my_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">email</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;@example.com&quot;</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">redirect</span><span class=\"p\">(</span><span class=\"s2\">&quot;/login/?next=</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">)</span>\n    <span class=\"c1\"># ...</span>\n</pre></div>\n</div>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.decorators.user_passes_test\">\n<code class=\"sig-name descname\"><span class=\"pre\">user_passes_test</span></code>(<em><span class=\"n\"><span class=\"pre\">test_func</span></span></em>, <em><span class=\"n\"><span class=\"pre\">login_url</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">redirect_field_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'next'</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/auth/decorators/#user_passes_test\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.auth.decorators.user_passes_test\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>As a shortcut, you can use the convenient <code class=\"docutils literal notranslate\"><span class=\"pre\">user_passes_test</span></code> decorator\nwhich performs a redirect when the callable returns <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">user_passes_test</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">email_check</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">email</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;@example.com&quot;</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@user_passes_test</span><span class=\"p\">(</span><span class=\"n\">email_check</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p><a class=\"reference internal\" href=\"#django.contrib.auth.decorators.user_passes_test\" title=\"django.contrib.auth.decorators.user_passes_test\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">user_passes_test()</span></code></a> takes a required\nargument: a callable that takes a\n<a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">User</span></code></a> object and returns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if\nthe user is allowed to view the page. Note that\n<a class=\"reference internal\" href=\"#django.contrib.auth.decorators.user_passes_test\" title=\"django.contrib.auth.decorators.user_passes_test\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">user_passes_test()</span></code></a> does not\nautomatically check that the <a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">User</span></code></a> is\nnot anonymous.</p>\n<p><a class=\"reference internal\" href=\"#django.contrib.auth.decorators.user_passes_test\" title=\"django.contrib.auth.decorators.user_passes_test\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">user_passes_test()</span></code></a> takes two\noptional arguments:</p>\n<dl class=\"docutils\">\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">login_url</span></code></dt><dd>Lets you specify the URL that users who don\u2019t pass the test will be\nredirected to. It may be a login page and defaults to\n<a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-LOGIN_URL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">settings.LOGIN_URL</span></code></a> if you don\u2019t specify one.</dd>\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">redirect_field_name</span></code></dt><dd>Same as for <a class=\"reference internal\" href=\"#django.contrib.auth.decorators.login_required\" title=\"django.contrib.auth.decorators.login_required\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">login_required()</span></code></a>.\nSetting it to <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> removes it from the URL, which you may want to do\nif you are redirecting users that don\u2019t pass the test to a non-login\npage where there\u2019s no \u201cnext page\u201d.</dd>\n</dl>\n<p>For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@user_passes_test</span><span class=\"p\">(</span><span class=\"n\">email_check</span><span class=\"p\">,</span> <span class=\"n\">login_url</span><span class=\"o\">=</span><span class=\"s2\">&quot;/login/&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.mixins.UserPassesTestMixin\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">UserPassesTestMixin</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.mixins.UserPassesTestMixin\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>When using <a class=\"reference internal\" href=\"../../class-based-views/\"><span class=\"doc\">class-based views</span></a>, you\ncan use the <code class=\"docutils literal notranslate\"><span class=\"pre\">UserPassesTestMixin</span></code> to do this.</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.mixins.UserPassesTestMixin.test_func\">\n<code class=\"sig-name descname\"><span class=\"pre\">test_func</span></code>()<a class=\"headerlink\" href=\"#django.contrib.auth.mixins.UserPassesTestMixin.test_func\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>You have to override the <code class=\"docutils literal notranslate\"><span class=\"pre\">test_func()</span></code> method of the class to\nprovide the test that is performed. Furthermore, you can set any of the\nparameters of <a class=\"reference internal\" href=\"#django.contrib.auth.mixins.AccessMixin\" title=\"django.contrib.auth.mixins.AccessMixin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AccessMixin</span></code></a> to\ncustomize the handling of unauthorized users:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.mixins</span> <span class=\"kn\">import</span> <span class=\"n\">UserPassesTestMixin</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyView</span><span class=\"p\">(</span><span class=\"n\">UserPassesTestMixin</span><span class=\"p\">,</span> <span class=\"n\">View</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">test_func</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">email</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;@example.com&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.mixins.UserPassesTestMixin.get_test_func\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_test_func</span></code>()<a class=\"headerlink\" href=\"#django.contrib.auth.mixins.UserPassesTestMixin.get_test_func\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>You can also override the <code class=\"docutils literal notranslate\"><span class=\"pre\">get_test_func()</span></code> method to have the mixin\nuse a differently named function for its checks (instead of\n<a class=\"reference internal\" href=\"#django.contrib.auth.mixins.UserPassesTestMixin.test_func\" title=\"django.contrib.auth.mixins.UserPassesTestMixin.test_func\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">test_func()</span></code></a>).</p>\n</dd></dl>\n\n<div class=\"admonition-stacking-userpassestestmixin admonition\">\n<p class=\"first admonition-title\">Stacking <code class=\"docutils literal notranslate\"><span class=\"pre\">UserPassesTestMixin</span></code></p>\n<p>Due to the way <code class=\"docutils literal notranslate\"><span class=\"pre\">UserPassesTestMixin</span></code> is implemented, you cannot stack\nthem in your inheritance list. The following does NOT work:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">TestMixin1</span><span class=\"p\">(</span><span class=\"n\">UserPassesTestMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">test_func</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">email</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;@example.com&quot;</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">TestMixin2</span><span class=\"p\">(</span><span class=\"n\">UserPassesTestMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">test_func</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">username</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;django&quot;</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyView</span><span class=\"p\">(</span><span class=\"n\">TestMixin1</span><span class=\"p\">,</span> <span class=\"n\">TestMixin2</span><span class=\"p\">,</span> <span class=\"n\">View</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p class=\"last\">If <code class=\"docutils literal notranslate\"><span class=\"pre\">TestMixin1</span></code> would call <code class=\"docutils literal notranslate\"><span class=\"pre\">super()</span></code> and take that result into\naccount, <code class=\"docutils literal notranslate\"><span class=\"pre\">TestMixin1</span></code> wouldn\u2019t work standalone anymore.</p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-the-permission-required-decorator\">\n<span id=\"the-permission-required-decorator\"></span><h4>The <code class=\"docutils literal notranslate\"><span class=\"pre\">permission_required</span></code> decorator<a class=\"headerlink\" href=\"#the-permission-required-decorator\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.decorators.permission_required\">\n<code class=\"sig-name descname\"><span class=\"pre\">permission_required</span></code>(<em><span class=\"n\"><span class=\"pre\">perm</span></span></em>, <em><span class=\"n\"><span class=\"pre\">login_url</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">raise_exception</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/auth/decorators/#permission_required\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.auth.decorators.permission_required\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>It\u2019s a relatively common task to check whether a user has a particular\npermission. For that reason, Django provides a shortcut for that case: the\n<a class=\"reference internal\" href=\"#django.contrib.auth.decorators.permission_required\" title=\"django.contrib.auth.decorators.permission_required\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">permission_required()</span></code></a> decorator.:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">permission_required</span>\n\n\n<span class=\"nd\">@permission_required</span><span class=\"p\">(</span><span class=\"s2\">&quot;polls.add_choice&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p>Just like the <a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User.has_perm\" title=\"django.contrib.auth.models.User.has_perm\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">has_perm()</span></code></a> method,\npermission names take the form <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;&lt;app</span> <span class=\"pre\">label&gt;.&lt;permission</span> <span class=\"pre\">codename&gt;&quot;</span></code>\n(i.e. <code class=\"docutils literal notranslate\"><span class=\"pre\">polls.add_choice</span></code> for a permission on a model in the <code class=\"docutils literal notranslate\"><span class=\"pre\">polls</span></code>\napplication).</p>\n<p>The decorator may also take an iterable of permissions, in which case the\nuser must have all of the permissions in order to access the view.</p>\n<p>Note that <a class=\"reference internal\" href=\"#django.contrib.auth.decorators.permission_required\" title=\"django.contrib.auth.decorators.permission_required\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">permission_required()</span></code></a>\nalso takes an optional <code class=\"docutils literal notranslate\"><span class=\"pre\">login_url</span></code> parameter:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">permission_required</span>\n\n\n<span class=\"nd\">@permission_required</span><span class=\"p\">(</span><span class=\"s2\">&quot;polls.add_choice&quot;</span><span class=\"p\">,</span> <span class=\"n\">login_url</span><span class=\"o\">=</span><span class=\"s2\">&quot;/loginpage/&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p>As in the <a class=\"reference internal\" href=\"#django.contrib.auth.decorators.login_required\" title=\"django.contrib.auth.decorators.login_required\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">login_required()</span></code></a> decorator,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">login_url</span></code> defaults to <a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-LOGIN_URL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">settings.LOGIN_URL</span></code></a>.</p>\n<p>If the <code class=\"docutils literal notranslate\"><span class=\"pre\">raise_exception</span></code> parameter is given, the decorator will raise\n<a class=\"reference internal\" href=\"../../../ref/exceptions/#django.core.exceptions.PermissionDenied\" title=\"django.core.exceptions.PermissionDenied\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">PermissionDenied</span></code></a>, prompting <a class=\"reference internal\" href=\"../../../ref/views/#http-forbidden-view\"><span class=\"std std-ref\">the 403\n(HTTP Forbidden) view</span></a> instead of redirecting to the\nlogin page.</p>\n<p>If you want to use <code class=\"docutils literal notranslate\"><span class=\"pre\">raise_exception</span></code> but also give your users a chance to\nlogin first, you can add the\n<a class=\"reference internal\" href=\"#django.contrib.auth.decorators.login_required\" title=\"django.contrib.auth.decorators.login_required\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">login_required()</span></code></a> decorator:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">login_required</span><span class=\"p\">,</span> <span class=\"n\">permission_required</span>\n\n\n<span class=\"nd\">@login_required</span>\n<span class=\"nd\">@permission_required</span><span class=\"p\">(</span><span class=\"s2\">&quot;polls.add_choice&quot;</span><span class=\"p\">,</span> <span class=\"n\">raise_exception</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p>This also avoids a redirect loop when <a class=\"reference internal\" href=\"#django.contrib.auth.views.LoginView\" title=\"django.contrib.auth.views.LoginView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LoginView</span></code></a>\u2019s\n<code class=\"docutils literal notranslate\"><span class=\"pre\">redirect_authenticated_user=True</span></code> and the logged-in user doesn\u2019t have\nall of the required permissions.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-the-permissionrequiredmixin-mixin\">\n<span id=\"the-permissionrequiredmixin-mixin\"></span><h4>The <code class=\"docutils literal notranslate\"><span class=\"pre\">PermissionRequiredMixin</span></code> mixin<a class=\"headerlink\" href=\"#the-permissionrequiredmixin-mixin\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>To apply permission checks to <a class=\"reference internal\" href=\"../../../ref/class-based-views/\"><span class=\"doc\">class-based views</span></a>, you can use the <code class=\"docutils literal notranslate\"><span class=\"pre\">PermissionRequiredMixin</span></code>:</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.mixins.PermissionRequiredMixin\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">PermissionRequiredMixin</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.mixins.PermissionRequiredMixin\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This mixin, just like the <code class=\"docutils literal notranslate\"><span class=\"pre\">permission_required</span></code>\ndecorator, checks whether the user accessing a view has all given\npermissions. You should specify the permission (or an iterable of\npermissions) using the <code class=\"docutils literal notranslate\"><span class=\"pre\">permission_required</span></code> parameter:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.mixins</span> <span class=\"kn\">import</span> <span class=\"n\">PermissionRequiredMixin</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyView</span><span class=\"p\">(</span><span class=\"n\">PermissionRequiredMixin</span><span class=\"p\">,</span> <span class=\"n\">View</span><span class=\"p\">):</span>\n    <span class=\"n\">permission_required</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;polls.add_choice&quot;</span>\n    <span class=\"c1\"># Or multiple of permissions:</span>\n    <span class=\"n\">permission_required</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;polls.view_choice&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;polls.change_choice&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>You can set any of the parameters of\n<a class=\"reference internal\" href=\"#django.contrib.auth.mixins.AccessMixin\" title=\"django.contrib.auth.mixins.AccessMixin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AccessMixin</span></code></a> to customize the handling\nof unauthorized users.</p>\n<p>You may also override these methods:</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.mixins.PermissionRequiredMixin.get_permission_required\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_permission_required</span></code>()<a class=\"headerlink\" href=\"#django.contrib.auth.mixins.PermissionRequiredMixin.get_permission_required\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns an iterable of permission names used by the mixin. Defaults to\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">permission_required</span></code> attribute, converted to a tuple if\nnecessary.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.mixins.PermissionRequiredMixin.has_permission\">\n<code class=\"sig-name descname\"><span class=\"pre\">has_permission</span></code>()<a class=\"headerlink\" href=\"#django.contrib.auth.mixins.PermissionRequiredMixin.has_permission\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a boolean denoting whether the current user has permission to\nexecute the decorated view. By default, this returns the result of\ncalling <a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User.has_perms\" title=\"django.contrib.auth.models.User.has_perms\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">has_perms()</span></code></a> with the\nlist of permissions returned by <a class=\"reference internal\" href=\"#django.contrib.auth.mixins.PermissionRequiredMixin.get_permission_required\" title=\"django.contrib.auth.mixins.PermissionRequiredMixin.get_permission_required\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_permission_required()</span></code></a>.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"s-redirecting-unauthorized-requests-in-class-based-views\">\n<span id=\"redirecting-unauthorized-requests-in-class-based-views\"></span><h3>Redirecting unauthorized requests in class-based views<a class=\"headerlink\" href=\"#redirecting-unauthorized-requests-in-class-based-views\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>To ease the handling of access restrictions in <a class=\"reference internal\" href=\"../../../ref/class-based-views/\"><span class=\"doc\">class-based views</span></a>, the <code class=\"docutils literal notranslate\"><span class=\"pre\">AccessMixin</span></code> can be used to configure\nthe behavior of a view when access is denied. Authenticated users are denied\naccess with an HTTP 403 Forbidden response. Anonymous users are redirected to\nthe login page or shown an HTTP 403 Forbidden response, depending on the\n<a class=\"reference internal\" href=\"#django.contrib.auth.mixins.AccessMixin.raise_exception\" title=\"django.contrib.auth.mixins.AccessMixin.raise_exception\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">raise_exception</span></code></a> attribute.</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.mixins.AccessMixin\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">AccessMixin</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.mixins.AccessMixin\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.mixins.AccessMixin.login_url\">\n<code class=\"sig-name descname\"><span class=\"pre\">login_url</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.mixins.AccessMixin.login_url\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Default return value for <a class=\"reference internal\" href=\"#django.contrib.auth.mixins.AccessMixin.get_login_url\" title=\"django.contrib.auth.mixins.AccessMixin.get_login_url\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_login_url()</span></code></a>.  Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>\nin which case <a class=\"reference internal\" href=\"#django.contrib.auth.mixins.AccessMixin.get_login_url\" title=\"django.contrib.auth.mixins.AccessMixin.get_login_url\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_login_url()</span></code></a> falls back to\n<a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-LOGIN_URL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">settings.LOGIN_URL</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.mixins.AccessMixin.permission_denied_message\">\n<code class=\"sig-name descname\"><span class=\"pre\">permission_denied_message</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.mixins.AccessMixin.permission_denied_message\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Default return value for <a class=\"reference internal\" href=\"#django.contrib.auth.mixins.AccessMixin.get_permission_denied_message\" title=\"django.contrib.auth.mixins.AccessMixin.get_permission_denied_message\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_permission_denied_message()</span></code></a>.\nDefaults to an empty string.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.mixins.AccessMixin.redirect_field_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">redirect_field_name</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.mixins.AccessMixin.redirect_field_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Default return value for <a class=\"reference internal\" href=\"#django.contrib.auth.mixins.AccessMixin.get_redirect_field_name\" title=\"django.contrib.auth.mixins.AccessMixin.get_redirect_field_name\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_redirect_field_name()</span></code></a>. Defaults to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;next&quot;</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.mixins.AccessMixin.raise_exception\">\n<code class=\"sig-name descname\"><span class=\"pre\">raise_exception</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.mixins.AccessMixin.raise_exception\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>If this attribute is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, a\n<a class=\"reference internal\" href=\"../../../ref/exceptions/#django.core.exceptions.PermissionDenied\" title=\"django.core.exceptions.PermissionDenied\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PermissionDenied</span></code></a> exception is raised\nwhen the conditions are not met.  When <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> (the default),\nanonymous users are redirected to the login page.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.mixins.AccessMixin.get_login_url\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_login_url</span></code>()<a class=\"headerlink\" href=\"#django.contrib.auth.mixins.AccessMixin.get_login_url\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the URL that users who don\u2019t pass the test will be redirected\nto. Returns <a class=\"reference internal\" href=\"#django.contrib.auth.mixins.AccessMixin.login_url\" title=\"django.contrib.auth.mixins.AccessMixin.login_url\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">login_url</span></code></a> if set, or <a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-LOGIN_URL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">settings.LOGIN_URL</span></code></a> otherwise.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.mixins.AccessMixin.get_permission_denied_message\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_permission_denied_message</span></code>()<a class=\"headerlink\" href=\"#django.contrib.auth.mixins.AccessMixin.get_permission_denied_message\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>When <a class=\"reference internal\" href=\"#django.contrib.auth.mixins.AccessMixin.raise_exception\" title=\"django.contrib.auth.mixins.AccessMixin.raise_exception\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">raise_exception</span></code></a> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, this method can be used to\ncontrol the error message passed to the error handler for display to\nthe user. Returns the <a class=\"reference internal\" href=\"#django.contrib.auth.mixins.AccessMixin.permission_denied_message\" title=\"django.contrib.auth.mixins.AccessMixin.permission_denied_message\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">permission_denied_message</span></code></a> attribute by\ndefault.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.mixins.AccessMixin.get_redirect_field_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_redirect_field_name</span></code>()<a class=\"headerlink\" href=\"#django.contrib.auth.mixins.AccessMixin.get_redirect_field_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the name of the query parameter that will contain the URL the\nuser should be redirected to after a successful login. If you set this\nto <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, a query parameter won\u2019t be added. Returns the\n<a class=\"reference internal\" href=\"#django.contrib.auth.mixins.AccessMixin.redirect_field_name\" title=\"django.contrib.auth.mixins.AccessMixin.redirect_field_name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">redirect_field_name</span></code></a> attribute by default.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.mixins.AccessMixin.handle_no_permission\">\n<code class=\"sig-name descname\"><span class=\"pre\">handle_no_permission</span></code>()<a class=\"headerlink\" href=\"#django.contrib.auth.mixins.AccessMixin.handle_no_permission\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Depending on the value of <code class=\"docutils literal notranslate\"><span class=\"pre\">raise_exception</span></code>, the method either raises\na <a class=\"reference internal\" href=\"../../../ref/exceptions/#django.core.exceptions.PermissionDenied\" title=\"django.core.exceptions.PermissionDenied\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">PermissionDenied</span></code></a> exception or\nredirects the user to the <code class=\"docutils literal notranslate\"><span class=\"pre\">login_url</span></code>, optionally including the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">redirect_field_name</span></code> if it is set.</p>\n</dd></dl>\n\n</dd></dl>\n\n<div class=\"section\" id=\"s-session-invalidation-on-password-change\">\n<span id=\"s-id3\"></span><span id=\"session-invalidation-on-password-change\"></span><span id=\"id3\"></span><h4>Session invalidation on password change<a class=\"headerlink\" href=\"#session-invalidation-on-password-change\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>If your <a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-AUTH_USER_MODEL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">AUTH_USER_MODEL</span></code></a> inherits from\n<a class=\"reference internal\" href=\"../customizing/#django.contrib.auth.models.AbstractBaseUser\" title=\"django.contrib.auth.models.AbstractBaseUser\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AbstractBaseUser</span></code></a> or implements its own\n<a class=\"reference internal\" href=\"../customizing/#django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash\" title=\"django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_session_auth_hash()</span></code></a>\nmethod, authenticated sessions will include the hash returned by this function.\nIn the <a class=\"reference internal\" href=\"../customizing/#django.contrib.auth.models.AbstractBaseUser\" title=\"django.contrib.auth.models.AbstractBaseUser\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AbstractBaseUser</span></code></a> case, this is an\nHMAC of the password field. Django verifies that the hash in the session for\neach request matches the one that\u2019s computed during the request. This allows a\nuser to log out all of their sessions by changing their password.</p>\n<p>The default password change views included with Django,\n<a class=\"reference internal\" href=\"#django.contrib.auth.views.PasswordChangeView\" title=\"django.contrib.auth.views.PasswordChangeView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PasswordChangeView</span></code></a> and the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">user_change_password</span></code> view in the <a class=\"reference internal\" href=\"../#module-django.contrib.auth\" title=\"django.contrib.auth: Django's authentication framework.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.auth</span></code></a> admin, update\nthe session with the new password hash so that a user changing their own\npassword won\u2019t log themselves out. If you have a custom password change view\nand wish to have similar behavior, use the <a class=\"reference internal\" href=\"#django.contrib.auth.update_session_auth_hash\" title=\"django.contrib.auth.update_session_auth_hash\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">update_session_auth_hash()</span></code></a>\nfunction.</p>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.update_session_auth_hash\">\n<code class=\"sig-name descname\"><span class=\"pre\">update_session_auth_hash</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">user</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/auth/#update_session_auth_hash\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.auth.update_session_auth_hash\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This function takes the current request and the updated user object from\nwhich the new session hash will be derived and updates the session hash\nappropriately. It also rotates the session key so that a stolen session\ncookie will be invalidated.</p>\n<p>Example usage:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth</span> <span class=\"kn\">import</span> <span class=\"n\">update_session_auth_hash</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">password_change</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">method</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;POST&quot;</span><span class=\"p\">:</span>\n        <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">PasswordChangeForm</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">POST</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">is_valid</span><span class=\"p\">():</span>\n            <span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n            <span class=\"n\">update_session_auth_hash</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"o\">...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Since\n<a class=\"reference internal\" href=\"../customizing/#django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash\" title=\"django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_session_auth_hash()</span></code></a>\nis based on <a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-SECRET_KEY\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECRET_KEY</span></code></a>, secret key values must be\nrotated to avoid invalidating existing sessions when updating your site to\nuse a new secret. See <a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-SECRET_KEY_FALLBACKS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECRET_KEY_FALLBACKS</span></code></a> for details.</p>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"s-module-django.contrib.auth.views\">\n<span id=\"s-authentication-views\"></span><span id=\"s-built-in-auth-views\"></span><span id=\"module-django.contrib.auth.views\"></span><span id=\"authentication-views\"></span><span id=\"built-in-auth-views\"></span><h3>Authentication Views<a class=\"headerlink\" href=\"#module-django.contrib.auth.views\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Django provides several views that you can use for handling login, logout, and\npassword management. These make use of the <a class=\"reference internal\" href=\"#built-in-auth-forms\"><span class=\"std std-ref\">stock auth forms</span></a> but you can pass in your own forms as well.</p>\n<p>Django provides no default template for the authentication views. You should\ncreate your own templates for the views you want to use. The template context\nis documented in each view, see <a class=\"reference internal\" href=\"#all-authentication-views\"><span class=\"std std-ref\">All authentication views</span></a>.</p>\n<div class=\"section\" id=\"s-using-the-views\">\n<span id=\"s-id4\"></span><span id=\"using-the-views\"></span><span id=\"id4\"></span><h4>Using the views<a class=\"headerlink\" href=\"#using-the-views\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>There are different methods to implement these views in your project. The\neasiest way is to include the provided URLconf in <code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.auth.urls</span></code>\nin your own URLconf, for example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;accounts/&quot;</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s2\">&quot;django.contrib.auth.urls&quot;</span><span class=\"p\">)),</span>\n<span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>This will include the following URL patterns:</p>\n<div class=\"highlight-text notranslate\"><div class=\"highlight\"><pre><span></span>accounts/login/ [name=&#39;login&#39;]\naccounts/logout/ [name=&#39;logout&#39;]\naccounts/password_change/ [name=&#39;password_change&#39;]\naccounts/password_change/done/ [name=&#39;password_change_done&#39;]\naccounts/password_reset/ [name=&#39;password_reset&#39;]\naccounts/password_reset/done/ [name=&#39;password_reset_done&#39;]\naccounts/reset/&lt;uidb64&gt;/&lt;token&gt;/ [name=&#39;password_reset_confirm&#39;]\naccounts/reset/done/ [name=&#39;password_reset_complete&#39;]\n</pre></div>\n</div>\n<p>The views provide a URL name for easier reference. See <a class=\"reference internal\" href=\"../../http/urls/\"><span class=\"doc\">the URL\ndocumentation</span></a> for details on using named URL patterns.</p>\n<p>If you want more control over your URLs, you can reference a specific view in\nyour URLconf:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth</span> <span class=\"kn\">import</span> <span class=\"n\">views</span> <span class=\"k\">as</span> <span class=\"n\">auth_views</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;change-password/&quot;</span><span class=\"p\">,</span> <span class=\"n\">auth_views</span><span class=\"o\">.</span><span class=\"n\">PasswordChangeView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">()),</span>\n<span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>The views have optional arguments you can use to alter the behavior of the\nview. For example, if you want to change the template name a view uses, you can\nprovide the <code class=\"docutils literal notranslate\"><span class=\"pre\">template_name</span></code> argument. A way to do this is to provide keyword\narguments in the URLconf, these will be passed on to the view. For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span>\n        <span class=\"s2\">&quot;change-password/&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">auth_views</span><span class=\"o\">.</span><span class=\"n\">PasswordChangeView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(</span><span class=\"n\">template_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;change-password.html&quot;</span><span class=\"p\">),</span>\n    <span class=\"p\">),</span>\n<span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>All views are <a class=\"reference internal\" href=\"../../class-based-views/\"><span class=\"doc\">class-based</span></a>, which allows\nyou to easily customize them by subclassing.</p>\n</div>\n<div class=\"section\" id=\"s-all-authentication-views\">\n<span id=\"s-id5\"></span><span id=\"all-authentication-views\"></span><span id=\"id5\"></span><h4>All authentication views<a class=\"headerlink\" href=\"#all-authentication-views\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>This is a list with all the views <code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.auth</span></code> provides. For\nimplementation details see <a class=\"reference internal\" href=\"#using-the-views\"><span class=\"std std-ref\">Using the views</span></a>.</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.LoginView\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">LoginView</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.LoginView\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p><strong>URL name:</strong> <code class=\"docutils literal notranslate\"><span class=\"pre\">login</span></code></p>\n<p>See <a class=\"reference internal\" href=\"../../http/urls/\"><span class=\"doc\">the URL documentation</span></a> for details on using\nnamed URL patterns.</p>\n<p><strong>Methods and Attributes</strong></p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.LoginView.template_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">template_name</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.LoginView.template_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of a template to display for the view used to log the user in.\nDefaults to <code class=\"file docutils literal notranslate\"><span class=\"pre\">registration/login.html</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.LoginView.next_page\">\n<code class=\"sig-name descname\"><span class=\"pre\">next_page</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.LoginView.next_page\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The URL to redirect to after login. Defaults to\n<a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-LOGIN_REDIRECT_URL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">LOGIN_REDIRECT_URL</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.LoginView.redirect_field_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">redirect_field_name</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.LoginView.redirect_field_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of a <code class=\"docutils literal notranslate\"><span class=\"pre\">GET</span></code> field containing the URL to redirect to after\nlogin. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">next</span></code>. Overrides the\n<a class=\"reference internal\" href=\"#django.contrib.auth.views.LoginView.get_default_redirect_url\" title=\"django.contrib.auth.views.LoginView.get_default_redirect_url\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_default_redirect_url()</span></code></a> URL if the given <code class=\"docutils literal notranslate\"><span class=\"pre\">GET</span></code> parameter is\npassed.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.LoginView.authentication_form\">\n<code class=\"sig-name descname\"><span class=\"pre\">authentication_form</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.LoginView.authentication_form\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A callable (typically a form class) to use for authentication. Defaults\nto <a class=\"reference internal\" href=\"#django.contrib.auth.forms.AuthenticationForm\" title=\"django.contrib.auth.forms.AuthenticationForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AuthenticationForm</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.LoginView.extra_context\">\n<code class=\"sig-name descname\"><span class=\"pre\">extra_context</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.LoginView.extra_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dictionary of context data that will be added to the default context\ndata passed to the template.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.LoginView.redirect_authenticated_user\">\n<code class=\"sig-name descname\"><span class=\"pre\">redirect_authenticated_user</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.LoginView.redirect_authenticated_user\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A boolean that controls whether or not authenticated users accessing\nthe login page will be redirected as if they had just successfully\nlogged in. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p>If you enable <code class=\"docutils literal notranslate\"><span class=\"pre\">redirect_authenticated_user</span></code>, other websites will\nbe able to determine if their visitors are authenticated on your\nsite by requesting redirect URLs to image files on your website. To\navoid this \u201c<a class=\"reference external\" href=\"https://robinlinus.github.io/socialmedia-leak/\">social media fingerprinting</a>\u201d information\nleakage, host all images and your favicon on a separate domain.</p>\n<p class=\"last\">Enabling <code class=\"docutils literal notranslate\"><span class=\"pre\">redirect_authenticated_user</span></code> can also result in a\nredirect loop when using the <a class=\"reference internal\" href=\"#django.contrib.auth.decorators.permission_required\" title=\"django.contrib.auth.decorators.permission_required\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">permission_required()</span></code></a> decorator\nunless the <code class=\"docutils literal notranslate\"><span class=\"pre\">raise_exception</span></code> parameter is used.</p>\n</div>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.LoginView.success_url_allowed_hosts\">\n<code class=\"sig-name descname\"><span class=\"pre\">success_url_allowed_hosts</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.LoginView.success_url_allowed_hosts\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#set\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">set</span></code></a> of hosts, in addition to <a class=\"reference internal\" href=\"../../../ref/request-response/#django.http.HttpRequest.get_host\" title=\"django.http.HttpRequest.get_host\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">request.get_host()</span></code></a>, that are safe for redirecting\nafter login. Defaults to an empty <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#set\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">set</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.LoginView.get_default_redirect_url\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_default_redirect_url</span></code>()<a class=\"headerlink\" href=\"#django.contrib.auth.views.LoginView.get_default_redirect_url\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the URL to redirect to after login. The default implementation\nresolves and returns <a class=\"reference internal\" href=\"#django.contrib.auth.views.LoginView.next_page\" title=\"django.contrib.auth.views.LoginView.next_page\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">next_page</span></code></a> if set, or\n<a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-LOGIN_REDIRECT_URL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">LOGIN_REDIRECT_URL</span></code></a> otherwise.</p>\n</dd></dl>\n\n<p>Here\u2019s what <code class=\"docutils literal notranslate\"><span class=\"pre\">LoginView</span></code> does:</p>\n<ul class=\"simple\">\n<li>If called via <code class=\"docutils literal notranslate\"><span class=\"pre\">GET</span></code>, it displays a login form that POSTs to the\nsame URL. More on this in a bit.</li>\n<li>If called via <code class=\"docutils literal notranslate\"><span class=\"pre\">POST</span></code> with user submitted credentials, it tries to log\nthe user in. If login is successful, the view redirects to the URL\nspecified in <code class=\"docutils literal notranslate\"><span class=\"pre\">next</span></code>. If <code class=\"docutils literal notranslate\"><span class=\"pre\">next</span></code> isn\u2019t provided, it redirects to\n<a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-LOGIN_REDIRECT_URL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">settings.LOGIN_REDIRECT_URL</span></code></a> (which\ndefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">/accounts/profile/</span></code>). If login isn\u2019t successful, it\nredisplays the login form.</li>\n</ul>\n<p>It\u2019s your responsibility to provide the html for the login template\n, called <code class=\"docutils literal notranslate\"><span class=\"pre\">registration/login.html</span></code> by default. This template gets passed\nfour template context variables:</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">form</span></code>: A <a class=\"reference internal\" href=\"../../../ref/forms/api/#django.forms.Form\" title=\"django.forms.Form\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Form</span></code></a> object representing the\n<a class=\"reference internal\" href=\"#django.contrib.auth.forms.AuthenticationForm\" title=\"django.contrib.auth.forms.AuthenticationForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AuthenticationForm</span></code></a>.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">next</span></code>: The URL to redirect to after successful login. This may\ncontain a query string, too.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">site</span></code>: The current <a class=\"reference internal\" href=\"../../../ref/contrib/sites/#django.contrib.sites.models.Site\" title=\"django.contrib.sites.models.Site\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Site</span></code></a>,\naccording to the <a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-SITE_ID\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SITE_ID</span></code></a> setting. If you don\u2019t have the\nsite framework installed, this will be set to an instance of\n<a class=\"reference internal\" href=\"../../../ref/contrib/sites/#django.contrib.sites.requests.RequestSite\" title=\"django.contrib.sites.requests.RequestSite\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RequestSite</span></code></a>, which derives the\nsite name and domain from the current\n<a class=\"reference internal\" href=\"../../../ref/request-response/#django.http.HttpRequest\" title=\"django.http.HttpRequest\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code></a>.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">site_name</span></code>: An alias for <code class=\"docutils literal notranslate\"><span class=\"pre\">site.name</span></code>. If you don\u2019t have the site\nframework installed, this will be set to the value of\n<a class=\"reference internal\" href=\"../../../ref/request-response/#django.http.HttpRequest.META\" title=\"django.http.HttpRequest.META\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">request.META['SERVER_NAME']</span></code></a>.\nFor more on sites, see <a class=\"reference internal\" href=\"../../../ref/contrib/sites/\"><span class=\"doc\">The \u201csites\u201d framework</span></a>.</li>\n</ul>\n<p>If you\u2019d prefer not to call the template <code class=\"file docutils literal notranslate\"><span class=\"pre\">registration/login.html</span></code>,\nyou can pass the <code class=\"docutils literal notranslate\"><span class=\"pre\">template_name</span></code> parameter via the extra arguments to\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">as_view</span></code> method in your URLconf. For example, this URLconf line would\nuse <code class=\"file docutils literal notranslate\"><span class=\"pre\">myapp/login.html</span></code> instead:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;accounts/login/&quot;</span><span class=\"p\">,</span> <span class=\"n\">auth_views</span><span class=\"o\">.</span><span class=\"n\">LoginView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(</span><span class=\"n\">template_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;myapp/login.html&quot;</span><span class=\"p\">)),</span>\n</pre></div>\n</div>\n<p>You can also specify the name of the <code class=\"docutils literal notranslate\"><span class=\"pre\">GET</span></code> field which contains the URL\nto redirect to after login using <code class=\"docutils literal notranslate\"><span class=\"pre\">redirect_field_name</span></code>. By default, the\nfield is called <code class=\"docutils literal notranslate\"><span class=\"pre\">next</span></code>.</p>\n<p>Here\u2019s a sample <code class=\"file docutils literal notranslate\"><span class=\"pre\">registration/login.html</span></code> template you can use as a\nstarting point. It assumes you have a <code class=\"file docutils literal notranslate\"><span class=\"pre\">base.html</span></code> template that\ndefines a <code class=\"docutils literal notranslate\"><span class=\"pre\">content</span></code> block:</p>\n<div class=\"highlight-html+django notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cp\">{%</span> <span class=\"k\">extends</span> <span class=\"s2\">&quot;base.html&quot;</span> <span class=\"cp\">%}</span>\n\n<span class=\"cp\">{%</span> <span class=\"k\">block</span> <span class=\"nv\">content</span> <span class=\"cp\">%}</span>\n\n<span class=\"cp\">{%</span> <span class=\"k\">if</span> <span class=\"nv\">form.errors</span> <span class=\"cp\">%}</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Your username and password didn&#39;t match. Please try again.<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n<span class=\"cp\">{%</span> <span class=\"k\">endif</span> <span class=\"cp\">%}</span>\n\n<span class=\"cp\">{%</span> <span class=\"k\">if</span> <span class=\"nv\">next</span> <span class=\"cp\">%}</span>\n    <span class=\"cp\">{%</span> <span class=\"k\">if</span> <span class=\"nv\">user.is_authenticated</span> <span class=\"cp\">%}</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Your account doesn&#39;t have access to this page. To proceed,\n    please login with an account that has access.<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n    <span class=\"cp\">{%</span> <span class=\"k\">else</span> <span class=\"cp\">%}</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Please login to see this page.<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n    <span class=\"cp\">{%</span> <span class=\"k\">endif</span> <span class=\"cp\">%}</span>\n<span class=\"cp\">{%</span> <span class=\"k\">endif</span> <span class=\"cp\">%}</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">form</span> <span class=\"na\">method</span><span class=\"o\">=</span><span class=\"s\">&quot;post&quot;</span> <span class=\"na\">action</span><span class=\"o\">=</span><span class=\"s\">&quot;</span><span class=\"cp\">{%</span> <span class=\"k\">url</span> <span class=\"s1\">&#39;login&#39;</span> <span class=\"cp\">%}</span><span class=\"s\">&quot;</span><span class=\"p\">&gt;</span>\n<span class=\"cp\">{%</span> <span class=\"k\">csrf_token</span> <span class=\"cp\">%}</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">table</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">tr</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span><span class=\"cp\">{{</span> <span class=\"nv\">form.username.label_tag</span> <span class=\"cp\">}}</span><span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span><span class=\"cp\">{{</span> <span class=\"nv\">form.username</span> <span class=\"cp\">}}</span><span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">tr</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">tr</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span><span class=\"cp\">{{</span> <span class=\"nv\">form.password.label_tag</span> <span class=\"cp\">}}</span><span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span><span class=\"cp\">{{</span> <span class=\"nv\">form.password</span> <span class=\"cp\">}}</span><span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">tr</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">table</span><span class=\"p\">&gt;</span>\n\n<span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">&quot;submit&quot;</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">&quot;login&quot;</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">&quot;hidden&quot;</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;next&quot;</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">&quot;</span><span class=\"cp\">{{</span> <span class=\"nv\">next</span> <span class=\"cp\">}}</span><span class=\"s\">&quot;</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">form</span><span class=\"p\">&gt;</span>\n\n<span class=\"c\">{# Assumes you set up the password_reset view in your URLconf #}</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">&quot;</span><span class=\"cp\">{%</span> <span class=\"k\">url</span> <span class=\"s1\">&#39;password_reset&#39;</span> <span class=\"cp\">%}</span><span class=\"s\">&quot;</span><span class=\"p\">&gt;</span>Lost password?<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n\n<span class=\"cp\">{%</span> <span class=\"k\">endblock</span> <span class=\"cp\">%}</span>\n</pre></div>\n</div>\n<p>If you have customized authentication (see <a class=\"reference internal\" href=\"../customizing/\"><span class=\"doc\">Customizing Authentication</span></a>) you can use a custom authentication form by\nsetting the <code class=\"docutils literal notranslate\"><span class=\"pre\">authentication_form</span></code> attribute. This form must accept a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code> keyword argument in its <code class=\"docutils literal notranslate\"><span class=\"pre\">__init__()</span></code> method and provide a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">get_user()</span></code> method which returns the authenticated user object (this\nmethod is only ever called after successful form validation).</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.LogoutView\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">LogoutView</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.LogoutView\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Logs a user out on <code class=\"docutils literal notranslate\"><span class=\"pre\">POST</span></code> requests.</p>\n<p><strong>URL name:</strong> <code class=\"docutils literal notranslate\"><span class=\"pre\">logout</span></code></p>\n<p><strong>Attributes:</strong></p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.LogoutView.next_page\">\n<code class=\"sig-name descname\"><span class=\"pre\">next_page</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.LogoutView.next_page\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The URL to redirect to after logout. Defaults to\n<a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-LOGOUT_REDIRECT_URL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">LOGOUT_REDIRECT_URL</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.LogoutView.template_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">template_name</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.LogoutView.template_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The full name of a template to display after logging the user out.\nDefaults to <code class=\"file docutils literal notranslate\"><span class=\"pre\">registration/logged_out.html</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.LogoutView.redirect_field_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">redirect_field_name</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.LogoutView.redirect_field_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of a <code class=\"docutils literal notranslate\"><span class=\"pre\">GET</span></code> field containing the URL to redirect to after log\nout. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">'next'</span></code>. Overrides the\n<a class=\"reference internal\" href=\"#django.contrib.auth.views.LogoutView.next_page\" title=\"django.contrib.auth.views.LogoutView.next_page\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">next_page</span></code></a> URL if the given <code class=\"docutils literal notranslate\"><span class=\"pre\">GET</span></code> parameter is\npassed.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.LogoutView.extra_context\">\n<code class=\"sig-name descname\"><span class=\"pre\">extra_context</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.LogoutView.extra_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dictionary of context data that will be added to the default context\ndata passed to the template.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.LogoutView.success_url_allowed_hosts\">\n<code class=\"sig-name descname\"><span class=\"pre\">success_url_allowed_hosts</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.LogoutView.success_url_allowed_hosts\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#set\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">set</span></code></a> of hosts, in addition to <a class=\"reference internal\" href=\"../../../ref/request-response/#django.http.HttpRequest.get_host\" title=\"django.http.HttpRequest.get_host\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">request.get_host()</span></code></a>, that are safe for redirecting\nafter logout. Defaults to an empty <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#set\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">set</span></code></a>.</p>\n</dd></dl>\n\n<p><strong>Template context:</strong></p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">title</span></code>: The string \u201cLogged out\u201d, localized.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">site</span></code>: The current <a class=\"reference internal\" href=\"../../../ref/contrib/sites/#django.contrib.sites.models.Site\" title=\"django.contrib.sites.models.Site\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Site</span></code></a>,\naccording to the <a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-SITE_ID\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SITE_ID</span></code></a> setting. If you don\u2019t have the\nsite framework installed, this will be set to an instance of\n<a class=\"reference internal\" href=\"../../../ref/contrib/sites/#django.contrib.sites.requests.RequestSite\" title=\"django.contrib.sites.requests.RequestSite\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RequestSite</span></code></a>, which derives the\nsite name and domain from the current\n<a class=\"reference internal\" href=\"../../../ref/request-response/#django.http.HttpRequest\" title=\"django.http.HttpRequest\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code></a>.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">site_name</span></code>: An alias for <code class=\"docutils literal notranslate\"><span class=\"pre\">site.name</span></code>. If you don\u2019t have the site\nframework installed, this will be set to the value of\n<a class=\"reference internal\" href=\"../../../ref/request-response/#django.http.HttpRequest.META\" title=\"django.http.HttpRequest.META\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">request.META['SERVER_NAME']</span></code></a>.\nFor more on sites, see <a class=\"reference internal\" href=\"../../../ref/contrib/sites/\"><span class=\"doc\">The \u201csites\u201d framework</span></a>.</li>\n</ul>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.logout_then_login\">\n<code class=\"sig-name descname\"><span class=\"pre\">logout_then_login</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">login_url</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.views.logout_then_login\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Logs a user out on <code class=\"docutils literal notranslate\"><span class=\"pre\">POST</span></code> requests, then redirects to the login page.</p>\n<p><strong>URL name:</strong> No default URL provided</p>\n<p><strong>Optional arguments:</strong></p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">login_url</span></code>: The URL of the login page to redirect to.\nDefaults to <a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-LOGIN_URL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">settings.LOGIN_URL</span></code></a> if not supplied.</li>\n</ul>\n<div class=\"deprecated\">\n<p><span class=\"versionmodified deprecated\">Deprecated since version 4.1: </span>Support for logging out on <code class=\"docutils literal notranslate\"><span class=\"pre\">GET</span></code> requests is deprecated and will be\nremoved in Django 5.0.</p>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordChangeView\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">PasswordChangeView</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordChangeView\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p><strong>URL name:</strong> <code class=\"docutils literal notranslate\"><span class=\"pre\">password_change</span></code></p>\n<p>Allows a user to change their password.</p>\n<p><strong>Attributes:</strong></p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordChangeView.template_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">template_name</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordChangeView.template_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The full name of a template to use for displaying the password change\nform. Defaults to <code class=\"file docutils literal notranslate\"><span class=\"pre\">registration/password_change_form.html</span></code> if not\nsupplied.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordChangeView.success_url\">\n<code class=\"sig-name descname\"><span class=\"pre\">success_url</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordChangeView.success_url\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The URL to redirect to after a successful password change. Defaults to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'password_change_done'</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordChangeView.form_class\">\n<code class=\"sig-name descname\"><span class=\"pre\">form_class</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordChangeView.form_class\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A custom \u201cchange password\u201d form which must accept a <code class=\"docutils literal notranslate\"><span class=\"pre\">user</span></code> keyword\nargument. The form is responsible for actually changing the user\u2019s\npassword. Defaults to\n<a class=\"reference internal\" href=\"#django.contrib.auth.forms.PasswordChangeForm\" title=\"django.contrib.auth.forms.PasswordChangeForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PasswordChangeForm</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordChangeView.extra_context\">\n<code class=\"sig-name descname\"><span class=\"pre\">extra_context</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordChangeView.extra_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dictionary of context data that will be added to the default context\ndata passed to the template.</p>\n</dd></dl>\n\n<p><strong>Template context:</strong></p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">form</span></code>: The password change form (see <code class=\"docutils literal notranslate\"><span class=\"pre\">form_class</span></code> above).</li>\n</ul>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordChangeDoneView\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">PasswordChangeDoneView</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordChangeDoneView\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p><strong>URL name:</strong> <code class=\"docutils literal notranslate\"><span class=\"pre\">password_change_done</span></code></p>\n<p>The page shown after a user has changed their password.</p>\n<p><strong>Attributes:</strong></p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordChangeDoneView.template_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">template_name</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordChangeDoneView.template_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The full name of a template to use. Defaults to\n<code class=\"file docutils literal notranslate\"><span class=\"pre\">registration/password_change_done.html</span></code> if not supplied.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordChangeDoneView.extra_context\">\n<code class=\"sig-name descname\"><span class=\"pre\">extra_context</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordChangeDoneView.extra_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dictionary of context data that will be added to the default context\ndata passed to the template.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetView\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">PasswordResetView</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetView\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p><strong>URL name:</strong> <code class=\"docutils literal notranslate\"><span class=\"pre\">password_reset</span></code></p>\n<p>Allows a user to reset their password by generating a one-time use link\nthat can be used to reset the password, and sending that link to the\nuser\u2019s registered email address.</p>\n<p>This view will send an email if the following conditions are met:</p>\n<ul class=\"simple\">\n<li>The email address provided exists in the system.</li>\n<li>The requested user is active (<code class=\"docutils literal notranslate\"><span class=\"pre\">User.is_active</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>).</li>\n<li>The requested user has a usable password. Users flagged with an unusable\npassword (see\n<a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User.set_unusable_password\" title=\"django.contrib.auth.models.User.set_unusable_password\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">set_unusable_password()</span></code></a>) aren\u2019t\nallowed to request a password reset to prevent misuse when using an\nexternal authentication source like LDAP.</li>\n</ul>\n<p>If any of these conditions are <em>not</em> met, no email will be sent, but the\nuser won\u2019t receive any error message either. This prevents information\nleaking to potential attackers. If you want to provide an error message in\nthis case, you can subclass\n<a class=\"reference internal\" href=\"#django.contrib.auth.forms.PasswordResetForm\" title=\"django.contrib.auth.forms.PasswordResetForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PasswordResetForm</span></code></a> and use the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">form_class</span></code> attribute.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Be aware that sending an email costs extra time, hence you may be\nvulnerable to an email address enumeration timing attack due to a\ndifference between the duration of a reset request for an existing\nemail address and the duration of a reset request for a nonexistent\nemail address. To reduce the overhead, you can use a 3rd party package\nthat allows to send emails asynchronously, e.g. <a class=\"reference external\" href=\"https://pypi.org/project/django-mailer/\">django-mailer</a>.</p>\n</div>\n<p><strong>Attributes:</strong></p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetView.template_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">template_name</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetView.template_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The full name of a template to use for displaying the password reset\nform. Defaults to <code class=\"file docutils literal notranslate\"><span class=\"pre\">registration/password_reset_form.html</span></code> if not\nsupplied.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetView.form_class\">\n<code class=\"sig-name descname\"><span class=\"pre\">form_class</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetView.form_class\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Form that will be used to get the email of the user to reset the\npassword for. Defaults to\n<a class=\"reference internal\" href=\"#django.contrib.auth.forms.PasswordResetForm\" title=\"django.contrib.auth.forms.PasswordResetForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PasswordResetForm</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetView.email_template_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">email_template_name</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetView.email_template_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The full name of a template to use for generating the email with the\nreset password link. Defaults to\n<code class=\"file docutils literal notranslate\"><span class=\"pre\">registration/password_reset_email.html</span></code> if not supplied.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetView.subject_template_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">subject_template_name</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetView.subject_template_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The full name of a template to use for the subject of the email with\nthe reset password link. Defaults to\n<code class=\"file docutils literal notranslate\"><span class=\"pre\">registration/password_reset_subject.txt</span></code> if not supplied.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetView.token_generator\">\n<code class=\"sig-name descname\"><span class=\"pre\">token_generator</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetView.token_generator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Instance of the class to check the one time link. This will default to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">default_token_generator</span></code>, it\u2019s an instance of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.auth.tokens.PasswordResetTokenGenerator</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetView.success_url\">\n<code class=\"sig-name descname\"><span class=\"pre\">success_url</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetView.success_url\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The URL to redirect to after a successful password reset request.\nDefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">'password_reset_done'</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetView.from_email\">\n<code class=\"sig-name descname\"><span class=\"pre\">from_email</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetView.from_email\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A valid email address. By default Django uses the\n<a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-DEFAULT_FROM_EMAIL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEFAULT_FROM_EMAIL</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetView.extra_context\">\n<code class=\"sig-name descname\"><span class=\"pre\">extra_context</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetView.extra_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dictionary of context data that will be added to the default context\ndata passed to the template.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetView.html_email_template_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">html_email_template_name</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetView.html_email_template_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The full name of a template to use for generating a\n<em class=\"mimetype\">text/html</em> multipart email with the password reset link. By\ndefault, HTML email is not sent.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetView.extra_email_context\">\n<code class=\"sig-name descname\"><span class=\"pre\">extra_email_context</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetView.extra_email_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dictionary of context data that will be available in the email\ntemplate. It can be used to override default template context values\nlisted below e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">domain</span></code>.</p>\n</dd></dl>\n\n<p><strong>Template context:</strong></p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">form</span></code>: The form (see <code class=\"docutils literal notranslate\"><span class=\"pre\">form_class</span></code> above) for resetting the user\u2019s\npassword.</li>\n</ul>\n<p><strong>Email template context:</strong></p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">email</span></code>: An alias for <code class=\"docutils literal notranslate\"><span class=\"pre\">user.email</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">user</span></code>: The current <a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">User</span></code></a>,\naccording to the <code class=\"docutils literal notranslate\"><span class=\"pre\">email</span></code> form field. Only active users are able to\nreset their passwords (<code class=\"docutils literal notranslate\"><span class=\"pre\">User.is_active</span> <span class=\"pre\">is</span> <span class=\"pre\">True</span></code>).</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">site_name</span></code>: An alias for <code class=\"docutils literal notranslate\"><span class=\"pre\">site.name</span></code>. If you don\u2019t have the site\nframework installed, this will be set to the value of\n<a class=\"reference internal\" href=\"../../../ref/request-response/#django.http.HttpRequest.META\" title=\"django.http.HttpRequest.META\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">request.META['SERVER_NAME']</span></code></a>.\nFor more on sites, see <a class=\"reference internal\" href=\"../../../ref/contrib/sites/\"><span class=\"doc\">The \u201csites\u201d framework</span></a>.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">domain</span></code>: An alias for <code class=\"docutils literal notranslate\"><span class=\"pre\">site.domain</span></code>. If you don\u2019t have the site\nframework installed, this will be set to the value of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">request.get_host()</span></code>.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">protocol</span></code>: http or https</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">uid</span></code>: The user\u2019s primary key encoded in base 64.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">token</span></code>: Token to check that the reset link is valid.</li>\n</ul>\n<p>Sample <code class=\"docutils literal notranslate\"><span class=\"pre\">registration/password_reset_email.html</span></code> (email body template):</p>\n<div class=\"highlight-html+django notranslate\"><div class=\"highlight\"><pre><span></span>Someone asked for password reset for email <span class=\"cp\">{{</span> <span class=\"nv\">email</span> <span class=\"cp\">}}</span>. Follow the link below:\n<span class=\"cp\">{{</span> <span class=\"nv\">protocol</span><span class=\"cp\">}}</span>://<span class=\"cp\">{{</span> <span class=\"nv\">domain</span> <span class=\"cp\">}}{%</span> <span class=\"k\">url</span> <span class=\"s1\">&#39;password_reset_confirm&#39;</span> <span class=\"nv\">uidb64</span><span class=\"o\">=</span><span class=\"nv\">uid</span> <span class=\"nv\">token</span><span class=\"o\">=</span><span class=\"nv\">token</span> <span class=\"cp\">%}</span>\n</pre></div>\n</div>\n<p>The same template context is used for subject template. Subject must be\nsingle line plain text string.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetDoneView\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">PasswordResetDoneView</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetDoneView\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p><strong>URL name:</strong> <code class=\"docutils literal notranslate\"><span class=\"pre\">password_reset_done</span></code></p>\n<p>The page shown after a user has been emailed a link to reset their\npassword. This view is called by default if the <a class=\"reference internal\" href=\"#django.contrib.auth.views.PasswordResetView\" title=\"django.contrib.auth.views.PasswordResetView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PasswordResetView</span></code></a>\ndoesn\u2019t have an explicit <code class=\"docutils literal notranslate\"><span class=\"pre\">success_url</span></code> URL set.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">If the email address provided does not exist in the system, the user is\ninactive, or has an unusable password, the user will still be\nredirected to this view but no email will be sent.</p>\n</div>\n<p><strong>Attributes:</strong></p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetDoneView.template_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">template_name</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetDoneView.template_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The full name of a template to use. Defaults to\n<code class=\"file docutils literal notranslate\"><span class=\"pre\">registration/password_reset_done.html</span></code> if not supplied.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetDoneView.extra_context\">\n<code class=\"sig-name descname\"><span class=\"pre\">extra_context</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetDoneView.extra_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dictionary of context data that will be added to the default context\ndata passed to the template.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetConfirmView\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">PasswordResetConfirmView</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetConfirmView\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p><strong>URL name:</strong> <code class=\"docutils literal notranslate\"><span class=\"pre\">password_reset_confirm</span></code></p>\n<p>Presents a form for entering a new password.</p>\n<p><strong>Keyword arguments from the URL:</strong></p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">uidb64</span></code>: The user\u2019s id encoded in base 64.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">token</span></code>: Token to check that the password is valid.</li>\n</ul>\n<p><strong>Attributes:</strong></p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetConfirmView.template_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">template_name</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetConfirmView.template_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The full name of a template to display the confirm password view.\nDefault value is <code class=\"file docutils literal notranslate\"><span class=\"pre\">registration/password_reset_confirm.html</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetConfirmView.token_generator\">\n<code class=\"sig-name descname\"><span class=\"pre\">token_generator</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetConfirmView.token_generator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Instance of the class to check the password. This will default to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">default_token_generator</span></code>, it\u2019s an instance of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.auth.tokens.PasswordResetTokenGenerator</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetConfirmView.post_reset_login\">\n<code class=\"sig-name descname\"><span class=\"pre\">post_reset_login</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetConfirmView.post_reset_login\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A boolean indicating if the user should be automatically authenticated\nafter a successful password reset. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetConfirmView.post_reset_login_backend\">\n<code class=\"sig-name descname\"><span class=\"pre\">post_reset_login_backend</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetConfirmView.post_reset_login_backend\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dotted path to the authentication backend to use when authenticating\na user if <code class=\"docutils literal notranslate\"><span class=\"pre\">post_reset_login</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>. Required only if you have\nmultiple <a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-AUTHENTICATION_BACKENDS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">AUTHENTICATION_BACKENDS</span></code></a> configured. Defaults to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetConfirmView.form_class\">\n<code class=\"sig-name descname\"><span class=\"pre\">form_class</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetConfirmView.form_class\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Form that will be used to set the password. Defaults to\n<a class=\"reference internal\" href=\"#django.contrib.auth.forms.SetPasswordForm\" title=\"django.contrib.auth.forms.SetPasswordForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SetPasswordForm</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetConfirmView.success_url\">\n<code class=\"sig-name descname\"><span class=\"pre\">success_url</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetConfirmView.success_url\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>URL to redirect after the password reset done. Defaults to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'password_reset_complete'</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetConfirmView.extra_context\">\n<code class=\"sig-name descname\"><span class=\"pre\">extra_context</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetConfirmView.extra_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dictionary of context data that will be added to the default context\ndata passed to the template.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetConfirmView.reset_url_token\">\n<code class=\"sig-name descname\"><span class=\"pre\">reset_url_token</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetConfirmView.reset_url_token\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Token parameter displayed as a component of password reset URLs.\nDefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">'set-password'</span></code>.</p>\n</dd></dl>\n\n<p><strong>Template context:</strong></p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">form</span></code>: The form (see <code class=\"docutils literal notranslate\"><span class=\"pre\">form_class</span></code> above) for setting the new user\u2019s\npassword.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">validlink</span></code>: Boolean, True if the link (combination of <code class=\"docutils literal notranslate\"><span class=\"pre\">uidb64</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">token</span></code>) is valid or unused yet.</li>\n</ul>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetCompleteView\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">PasswordResetCompleteView</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetCompleteView\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p><strong>URL name:</strong> <code class=\"docutils literal notranslate\"><span class=\"pre\">password_reset_complete</span></code></p>\n<p>Presents a view which informs the user that the password has been\nsuccessfully changed.</p>\n<p><strong>Attributes:</strong></p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetCompleteView.template_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">template_name</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetCompleteView.template_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The full name of a template to display the view. Defaults to\n<code class=\"file docutils literal notranslate\"><span class=\"pre\">registration/password_reset_complete.html</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.PasswordResetCompleteView.extra_context\">\n<code class=\"sig-name descname\"><span class=\"pre\">extra_context</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.views.PasswordResetCompleteView.extra_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dictionary of context data that will be added to the default context\ndata passed to the template.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"s-helper-functions\">\n<span id=\"helper-functions\"></span><h3>Helper functions<a class=\"headerlink\" href=\"#helper-functions\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.views.redirect_to_login\">\n<code class=\"sig-name descname\"><span class=\"pre\">redirect_to_login</span></code>(<em><span class=\"n\"><span class=\"pre\">next</span></span></em>, <em><span class=\"n\"><span class=\"pre\">login_url</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">redirect_field_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'next'</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.views.redirect_to_login\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Redirects to the login page, and then back to another URL after a\nsuccessful login.</p>\n<p><strong>Required arguments:</strong></p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">next</span></code>: The URL to redirect to after a successful login.</li>\n</ul>\n<p><strong>Optional arguments:</strong></p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">login_url</span></code>: The URL of the login page to redirect to.\nDefaults to <a class=\"reference internal\" href=\"../../../ref/settings/#std-setting-LOGIN_URL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">settings.LOGIN_URL</span></code></a> if not supplied.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">redirect_field_name</span></code>: The name of a <code class=\"docutils literal notranslate\"><span class=\"pre\">GET</span></code> field containing the\nURL to redirect to after log out. Overrides <code class=\"docutils literal notranslate\"><span class=\"pre\">next</span></code> if the given\n<code class=\"docutils literal notranslate\"><span class=\"pre\">GET</span></code> parameter is passed.</li>\n</ul>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-module-django.contrib.auth.forms\">\n<span id=\"s-built-in-forms\"></span><span id=\"s-built-in-auth-forms\"></span><span id=\"module-django.contrib.auth.forms\"></span><span id=\"built-in-forms\"></span><span id=\"built-in-auth-forms\"></span><h3>Built-in forms<a class=\"headerlink\" href=\"#module-django.contrib.auth.forms\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>If you don\u2019t want to use the built-in views, but want the convenience of not\nhaving to write forms for this functionality, the authentication system\nprovides several built-in forms located in <a class=\"reference internal\" href=\"#module-django.contrib.auth.forms\" title=\"django.contrib.auth.forms\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.auth.forms</span></code></a>:</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">The built-in authentication forms make certain assumptions about the user\nmodel that they are working with. If you\u2019re using a <a class=\"reference internal\" href=\"../customizing/#auth-custom-user\"><span class=\"std std-ref\">custom user model</span></a>, it may be necessary to define your own forms for the\nauthentication system. For more information, refer to the documentation\nabout <a class=\"reference internal\" href=\"../customizing/#custom-users-and-the-built-in-auth-forms\"><span class=\"std std-ref\">using the built-in authentication forms with custom user models</span></a>.</p>\n</div>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.forms.AdminPasswordChangeForm\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">AdminPasswordChangeForm</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.forms.AdminPasswordChangeForm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A form used in the admin interface to change a user\u2019s password.</p>\n<p>Takes the <code class=\"docutils literal notranslate\"><span class=\"pre\">user</span></code> as the first positional argument.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.forms.AuthenticationForm\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">AuthenticationForm</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.forms.AuthenticationForm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A form for logging a user in.</p>\n<p>Takes <code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code> as its first positional argument, which is stored on the\nform instance for use by sub-classes.</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.forms.AuthenticationForm.confirm_login_allowed\">\n<code class=\"sig-name descname\"><span class=\"pre\">confirm_login_allowed</span></code>(<em><span class=\"n\"><span class=\"pre\">user</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.forms.AuthenticationForm.confirm_login_allowed\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>By default, <code class=\"docutils literal notranslate\"><span class=\"pre\">AuthenticationForm</span></code> rejects users whose <code class=\"docutils literal notranslate\"><span class=\"pre\">is_active</span></code>\nflag is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>. You may override this behavior with a custom\npolicy to determine which users can log in. Do this with a custom form\nthat subclasses <code class=\"docutils literal notranslate\"><span class=\"pre\">AuthenticationForm</span></code> and overrides the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">confirm_login_allowed()</span></code> method. This method should raise a\n<a class=\"reference internal\" href=\"../../../ref/exceptions/#django.core.exceptions.ValidationError\" title=\"django.core.exceptions.ValidationError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code></a> if the given user may\nnot log in.</p>\n<p>For example, to allow all users to log in regardless of \u201cactive\u201d\nstatus:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.forms</span> <span class=\"kn\">import</span> <span class=\"n\">AuthenticationForm</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AuthenticationFormWithInactiveUsersOkay</span><span class=\"p\">(</span><span class=\"n\">AuthenticationForm</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">confirm_login_allowed</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<p>(In this case, you\u2019ll also need to use an authentication backend that\nallows inactive users, such as\n<a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.backends.AllowAllUsersModelBackend\" title=\"django.contrib.auth.backends.AllowAllUsersModelBackend\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AllowAllUsersModelBackend</span></code></a>.)</p>\n<p>Or to allow only some active users to log in:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">PickyAuthenticationForm</span><span class=\"p\">(</span><span class=\"n\">AuthenticationForm</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">confirm_login_allowed</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">is_active</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">ValidationError</span><span class=\"p\">(</span>\n                <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s2\">&quot;This account is inactive.&quot;</span><span class=\"p\">),</span>\n                <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"s2\">&quot;inactive&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">username</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;b&quot;</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"n\">ValidationError</span><span class=\"p\">(</span>\n                <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s2\">&quot;Sorry, accounts starting with &#39;b&#39; aren&#39;t welcome here.&quot;</span><span class=\"p\">),</span>\n                <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"s2\">&quot;no_b_users&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.forms.PasswordChangeForm\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">PasswordChangeForm</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.forms.PasswordChangeForm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A form for allowing a user to change their password.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.forms.PasswordResetForm\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">PasswordResetForm</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.forms.PasswordResetForm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A form for generating and emailing a one-time use link to reset a\nuser\u2019s password.</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.forms.PasswordResetForm.send_mail\">\n<code class=\"sig-name descname\"><span class=\"pre\">send_mail</span></code>(<em><span class=\"n\"><span class=\"pre\">subject_template_name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">email_template_name</span></span></em>, <em><span class=\"n\"><span class=\"pre\">context</span></span></em>, <em><span class=\"n\"><span class=\"pre\">from_email</span></span></em>, <em><span class=\"n\"><span class=\"pre\">to_email</span></span></em>, <em><span class=\"n\"><span class=\"pre\">html_email_template_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.forms.PasswordResetForm.send_mail\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Uses the arguments to send an <code class=\"docutils literal notranslate\"><span class=\"pre\">EmailMultiAlternatives</span></code>.\nCan be overridden to customize how the email is sent to the user.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>subject_template_name</strong> \u2013 the template for the subject.</li>\n<li><strong>email_template_name</strong> \u2013 the template for the email body.</li>\n<li><strong>context</strong> \u2013 context passed to the <code class=\"docutils literal notranslate\"><span class=\"pre\">subject_template</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">email_template</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">html_email_template</span></code> (if it is not\n<code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>).</li>\n<li><strong>from_email</strong> \u2013 the sender\u2019s email.</li>\n<li><strong>to_email</strong> \u2013 the email of the requester.</li>\n<li><strong>html_email_template_name</strong> \u2013 the template for the HTML body;\ndefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, in which case a plain text email is sent.</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p>By default, <code class=\"docutils literal notranslate\"><span class=\"pre\">save()</span></code> populates the <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code> with the\nsame variables that\n<a class=\"reference internal\" href=\"#django.contrib.auth.views.PasswordResetView\" title=\"django.contrib.auth.views.PasswordResetView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PasswordResetView</span></code></a> passes to its\nemail context.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.forms.SetPasswordForm\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">SetPasswordForm</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.forms.SetPasswordForm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A form that lets a user change their password without entering the old\npassword.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.forms.UserChangeForm\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">UserChangeForm</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.forms.UserChangeForm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A form used in the admin interface to change a user\u2019s information and\npermissions.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.forms.BaseUserCreationForm\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">BaseUserCreationForm</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.forms.BaseUserCreationForm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"versionadded\">\n<span class=\"title\">New in Django 4.2.</span> </div>\n<p>A <a class=\"reference internal\" href=\"../../forms/modelforms/#django.forms.ModelForm\" title=\"django.forms.ModelForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelForm</span></code></a> for creating a new user. This is the\nrecommended base class if you need to customize the user creation form.</p>\n<p>It has three fields: <code class=\"docutils literal notranslate\"><span class=\"pre\">username</span></code> (from the user model), <code class=\"docutils literal notranslate\"><span class=\"pre\">password1</span></code>,\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">password2</span></code>. It verifies that <code class=\"docutils literal notranslate\"><span class=\"pre\">password1</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">password2</span></code> match,\nvalidates the password using\n<a class=\"reference internal\" href=\"../passwords/#django.contrib.auth.password_validation.validate_password\" title=\"django.contrib.auth.password_validation.validate_password\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">validate_password()</span></code></a>, and\nsets the user\u2019s password using\n<a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User.set_password\" title=\"django.contrib.auth.models.User.set_password\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">set_password()</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.forms.UserCreationForm\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">UserCreationForm</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.forms.UserCreationForm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Inherits from <a class=\"reference internal\" href=\"#django.contrib.auth.forms.BaseUserCreationForm\" title=\"django.contrib.auth.forms.BaseUserCreationForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BaseUserCreationForm</span></code></a>. To help prevent confusion with\nsimilar usernames, the form doesn\u2019t allow usernames that differ only in\ncase.</p>\n<div class=\"versionchanged\">\n<span class=\"title\">Changed in Django 4.2:</span> <p>In older versions, <a class=\"reference internal\" href=\"#django.contrib.auth.forms.UserCreationForm\" title=\"django.contrib.auth.forms.UserCreationForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">UserCreationForm</span></code></a> didn\u2019t save many-to-many\nform fields for a custom user model.</p>\n<p>In older versions, usernames that differ only in case are allowed.</p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-authentication-data-in-templates\">\n<span id=\"authentication-data-in-templates\"></span><h3>Authentication data in templates<a class=\"headerlink\" href=\"#authentication-data-in-templates\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The currently logged-in user and their permissions are made available in the\n<a class=\"reference internal\" href=\"../../../ref/templates/api/\"><span class=\"doc\">template context</span></a> when you use\n<a class=\"reference internal\" href=\"../../../ref/templates/api/#django.template.RequestContext\" title=\"django.template.RequestContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RequestContext</span></code></a>.</p>\n<div class=\"admonition-technicality admonition\">\n<p class=\"first admonition-title\">Technicality</p>\n<p class=\"last\">Technically, these variables are only made available in the template\ncontext if you use <a class=\"reference internal\" href=\"../../../ref/templates/api/#django.template.RequestContext\" title=\"django.template.RequestContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RequestContext</span></code></a> and the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'django.contrib.auth.context_processors.auth'</span></code> context processor is\nenabled. It is in the default generated settings file. For more, see the\n<a class=\"reference internal\" href=\"../../../ref/templates/api/#subclassing-context-requestcontext\"><span class=\"std std-ref\">RequestContext docs</span></a>.</p>\n</div>\n<div class=\"section\" id=\"s-users\">\n<span id=\"users\"></span><h4>Users<a class=\"headerlink\" href=\"#users\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>When rendering a template <a class=\"reference internal\" href=\"../../../ref/templates/api/#django.template.RequestContext\" title=\"django.template.RequestContext\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RequestContext</span></code></a>, the\ncurrently logged-in user, either a  <a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">User</span></code></a>\ninstance or an <a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.AnonymousUser\" title=\"django.contrib.auth.models.AnonymousUser\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AnonymousUser</span></code></a> instance, is\nstored in the template variable <code class=\"docutils literal notranslate\"><span class=\"pre\">{{</span> <span class=\"pre\">user</span> <span class=\"pre\">}}</span></code>:</p>\n<div class=\"highlight-html+django notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cp\">{%</span> <span class=\"k\">if</span> <span class=\"nv\">user.is_authenticated</span> <span class=\"cp\">%}</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Welcome, <span class=\"cp\">{{</span> <span class=\"nv\">user.username</span> <span class=\"cp\">}}</span>. Thanks for logging in.<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n<span class=\"cp\">{%</span> <span class=\"k\">else</span> <span class=\"cp\">%}</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>Welcome, new user. Please log in.<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n<span class=\"cp\">{%</span> <span class=\"k\">endif</span> <span class=\"cp\">%}</span>\n</pre></div>\n</div>\n<p>This template context variable is not available if a <code class=\"docutils literal notranslate\"><span class=\"pre\">RequestContext</span></code> is not\nbeing used.</p>\n</div>\n<div class=\"section\" id=\"s-permissions\">\n<span id=\"permissions\"></span><h4>Permissions<a class=\"headerlink\" href=\"#permissions\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>The currently logged-in user\u2019s permissions are stored in the template variable\n<code class=\"docutils literal notranslate\"><span class=\"pre\">{{</span> <span class=\"pre\">perms</span> <span class=\"pre\">}}</span></code>. This is an instance of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.auth.context_processors.PermWrapper</span></code>, which is a\ntemplate-friendly proxy of permissions.</p>\n<p>Evaluating a single-attribute lookup of <code class=\"docutils literal notranslate\"><span class=\"pre\">{{</span> <span class=\"pre\">perms</span> <span class=\"pre\">}}</span></code> as a boolean is a proxy\nto <a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User.has_module_perms\" title=\"django.contrib.auth.models.User.has_module_perms\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">User.has_module_perms()</span></code></a>. For example, to check if\nthe logged-in user has any permissions in the <code class=\"docutils literal notranslate\"><span class=\"pre\">foo</span></code> app:</p>\n<div class=\"highlight-html+django notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cp\">{%</span> <span class=\"k\">if</span> <span class=\"nv\">perms.foo</span> <span class=\"cp\">%}</span>\n</pre></div>\n</div>\n<p>Evaluating a two-level-attribute lookup as a boolean is a proxy to\n<a class=\"reference internal\" href=\"../../../ref/contrib/auth/#django.contrib.auth.models.User.has_perm\" title=\"django.contrib.auth.models.User.has_perm\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">User.has_perm()</span></code></a>. For example,\nto check if the logged-in user has the permission <code class=\"docutils literal notranslate\"><span class=\"pre\">foo.add_vote</span></code>:</p>\n<div class=\"highlight-html+django notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cp\">{%</span> <span class=\"k\">if</span> <span class=\"nv\">perms.foo.add_vote</span> <span class=\"cp\">%}</span>\n</pre></div>\n</div>\n<p>Here\u2019s a more complete example of checking permissions in a template:</p>\n<div class=\"highlight-html+django notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cp\">{%</span> <span class=\"k\">if</span> <span class=\"nv\">perms.foo</span> <span class=\"cp\">%}</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>You have permission to do something in the foo app.<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n    <span class=\"cp\">{%</span> <span class=\"k\">if</span> <span class=\"nv\">perms.foo.add_vote</span> <span class=\"cp\">%}</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>You can vote!<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n    <span class=\"cp\">{%</span> <span class=\"k\">endif</span> <span class=\"cp\">%}</span>\n    <span class=\"cp\">{%</span> <span class=\"k\">if</span> <span class=\"nv\">perms.foo.add_driving</span> <span class=\"cp\">%}</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>You can drive!<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n    <span class=\"cp\">{%</span> <span class=\"k\">endif</span> <span class=\"cp\">%}</span>\n<span class=\"cp\">{%</span> <span class=\"k\">else</span> <span class=\"cp\">%}</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>You don&#39;t have permission to do anything in the foo app.<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n<span class=\"cp\">{%</span> <span class=\"k\">endif</span> <span class=\"cp\">%}</span>\n</pre></div>\n</div>\n<p>It is possible to also look permissions up by <code class=\"docutils literal notranslate\"><span class=\"pre\">{%</span> <span class=\"pre\">if</span> <span class=\"pre\">in</span> <span class=\"pre\">%}</span></code> statements.\nFor example:</p>\n<div class=\"highlight-html+django notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cp\">{%</span> <span class=\"k\">if</span> <span class=\"s1\">&#39;foo&#39;</span> <span class=\"k\">in</span> <span class=\"nv\">perms</span> <span class=\"cp\">%}</span>\n    <span class=\"cp\">{%</span> <span class=\"k\">if</span> <span class=\"s1\">&#39;foo.add_vote&#39;</span> <span class=\"k\">in</span> <span class=\"nv\">perms</span> <span class=\"cp\">%}</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>In lookup works, too.<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n    <span class=\"cp\">{%</span> <span class=\"k\">endif</span> <span class=\"cp\">%}</span>\n<span class=\"cp\">{%</span> <span class=\"k\">endif</span> <span class=\"cp\">%}</span>\n</pre></div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"s-managing-users-in-the-admin\">\n<span id=\"s-auth-admin\"></span><span id=\"managing-users-in-the-admin\"></span><span id=\"auth-admin\"></span><h2>Managing users in the admin<a class=\"headerlink\" href=\"#managing-users-in-the-admin\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>When you have both <code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.admin</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.auth</span></code>\ninstalled, the admin provides a convenient way to view and manage users,\ngroups, and permissions. Users can be created and deleted like any Django\nmodel. Groups can be created, and permissions can be assigned to users or\ngroups. A log of user edits to models made within the admin is also stored and\ndisplayed.</p>\n<div class=\"section\" id=\"s-id6\">\n<span id=\"id6\"></span><h3>Creating users<a class=\"headerlink\" href=\"#id6\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>You should see a link to \u201cUsers\u201d in the \u201cAuth\u201d\nsection of the main admin index page. The \u201cAdd user\u201d admin page is different\nthan standard admin pages in that it requires you to choose a username and\npassword before allowing you to edit the rest of the user\u2019s fields.</p>\n<p>Also note: if you want a user account to be able to create users using the\nDjango admin site, you\u2019ll need to give them permission to add users <em>and</em>\nchange users (i.e., the \u201cAdd user\u201d and \u201cChange user\u201d permissions). If an\naccount has permission to add users but not to change them, that account won\u2019t\nbe able to add users. Why? Because if you have permission to add users, you\nhave the power to create superusers, which can then, in turn, change other\nusers. So Django requires add <em>and</em> change permissions as a slight security\nmeasure.</p>\n<p>Be thoughtful about how you allow users to manage permissions. If you give a\nnon-superuser the ability to edit users, this is ultimately the same as giving\nthem superuser status because they will be able to elevate permissions of\nusers including themselves!</p>\n</div>\n<div class=\"section\" id=\"s-id7\">\n<span id=\"id7\"></span><h3>Changing passwords<a class=\"headerlink\" href=\"#id7\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>User passwords are not displayed in the admin (nor stored in the database), but\nthe <a class=\"reference internal\" href=\"../passwords/\"><span class=\"doc\">password storage details</span></a> are displayed.\nIncluded in the display of this information is a link to\na password change form that allows admins to change user passwords.</p>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["topics/auth/passwords", "Password management in Django", "N", "next"], ["topics/auth/index", "User authentication in Django", "P", "previous"]], "sourcename": "topics/auth/default.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Using the Django authentication system</a><ul>\n<li><a class=\"reference internal\" href=\"#user-objects\"><code class=\"docutils literal notranslate\"><span class=\"pre\">User</span></code> objects</a><ul>\n<li><a class=\"reference internal\" href=\"#creating-users\">Creating users</a></li>\n<li><a class=\"reference internal\" href=\"#creating-superusers\">Creating superusers</a></li>\n<li><a class=\"reference internal\" href=\"#changing-passwords\">Changing passwords</a></li>\n<li><a class=\"reference internal\" href=\"#authenticating-users\">Authenticating users</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#permissions-and-authorization\">Permissions and Authorization</a><ul>\n<li><a class=\"reference internal\" href=\"#default-permissions\">Default permissions</a></li>\n<li><a class=\"reference internal\" href=\"#groups\">Groups</a></li>\n<li><a class=\"reference internal\" href=\"#programmatically-creating-permissions\">Programmatically creating permissions</a></li>\n<li><a class=\"reference internal\" href=\"#permission-caching\">Permission caching</a></li>\n<li><a class=\"reference internal\" href=\"#proxy-models\">Proxy models</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#authentication-in-web-requests\">Authentication in web requests</a><ul>\n<li><a class=\"reference internal\" href=\"#how-to-log-a-user-in\">How to log a user in</a><ul>\n<li><a class=\"reference internal\" href=\"#selecting-the-authentication-backend\">Selecting the authentication backend</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#how-to-log-a-user-out\">How to log a user out</a></li>\n<li><a class=\"reference internal\" href=\"#limiting-access-to-logged-in-users\">Limiting access to logged-in users</a><ul>\n<li><a class=\"reference internal\" href=\"#the-raw-way\">The raw way</a></li>\n<li><a class=\"reference internal\" href=\"#the-login-required-decorator\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">login_required</span></code> decorator</a></li>\n<li><a class=\"reference internal\" href=\"#the-loginrequiredmixin-mixin\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">LoginRequiredMixin</span></code> mixin</a></li>\n<li><a class=\"reference internal\" href=\"#limiting-access-to-logged-in-users-that-pass-a-test\">Limiting access to logged-in users that pass a test</a></li>\n<li><a class=\"reference internal\" href=\"#the-permission-required-decorator\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">permission_required</span></code> decorator</a></li>\n<li><a class=\"reference internal\" href=\"#the-permissionrequiredmixin-mixin\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">PermissionRequiredMixin</span></code> mixin</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#redirecting-unauthorized-requests-in-class-based-views\">Redirecting unauthorized requests in class-based views</a><ul>\n<li><a class=\"reference internal\" href=\"#session-invalidation-on-password-change\">Session invalidation on password change</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-django.contrib.auth.views\">Authentication Views</a><ul>\n<li><a class=\"reference internal\" href=\"#using-the-views\">Using the views</a></li>\n<li><a class=\"reference internal\" href=\"#all-authentication-views\">All authentication views</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#helper-functions\">Helper functions</a></li>\n<li><a class=\"reference internal\" href=\"#module-django.contrib.auth.forms\">Built-in forms</a></li>\n<li><a class=\"reference internal\" href=\"#authentication-data-in-templates\">Authentication data in templates</a><ul>\n<li><a class=\"reference internal\" href=\"#users\">Users</a></li>\n<li><a class=\"reference internal\" href=\"#permissions\">Permissions</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#managing-users-in-the-admin\">Managing users in the admin</a><ul>\n<li><a class=\"reference internal\" href=\"#id6\">Creating users</a></li>\n<li><a class=\"reference internal\" href=\"#id7\">Changing passwords</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "topics/auth/default", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": true}