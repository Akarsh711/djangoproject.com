{"parents": [{"link": "../", "title": "Getting started"}], "prev": {"link": "../install/", "title": "Quick install guide"}, "next": {"link": "../tutorial02/", "title": "Writing your first Django app, part 2"}, "title": "Writing your first Django app, part 1", "meta": {}, "body": "<div class=\"section\" id=\"s-writing-your-first-django-app-part-1\">\n<span id=\"writing-your-first-django-app-part-1\"></span><h1>Writing your first Django app, part 1<a class=\"headerlink\" href=\"#writing-your-first-django-app-part-1\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Let\u2019s learn by example.</p>\n<p>Throughout this tutorial, we\u2019ll walk you through the creation of a basic\npoll application.</p>\n<p>It\u2019ll consist of two parts:</p>\n<ul class=\"simple\">\n<li>A public site that lets people view polls and vote in them.</li>\n<li>An admin site that lets you add, change, and delete polls.</li>\n</ul>\n<p>We\u2019ll assume you have <a class=\"reference internal\" href=\"../install/\"><span class=\"doc\">Django installed</span></a> already. You can\ntell Django is installed and which version by running the following command\nin a shell prompt (indicated by the $ prefix):</p>\n<div class=\"console-block\" id=\"console-block-0\">\n<input class=\"c-tab-unix\" id=\"c-tab-0-unix\" type=\"radio\" name=\"console-0\" checked>\n<label for=\"c-tab-0-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-0-win\" type=\"radio\" name=\"console-0\">\n<label for=\"c-tab-0-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-0-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>python -m django --version\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-0-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py -m django --version\n</pre></div>\n</section>\n</div>\n<p>If Django is installed, you should see the version of your installation. If it\nisn\u2019t, you\u2019ll get an error telling \u201cNo module named django\u201d.</p>\n<p>This tutorial is written for Django 5.0, which supports Python 3.10 and\nlater. If the Django version doesn\u2019t match, you can refer to the tutorial for\nyour version of Django by using the version switcher at the bottom right corner\nof this page, or update Django to the newest version. If you\u2019re using an older\nversion of Python, check <a class=\"reference internal\" href=\"../../faq/install/#faq-python-version-support\"><span class=\"std std-ref\">What Python version can I use with Django?</span></a> to find a compatible\nversion of Django.</p>\n<p>See <a class=\"reference internal\" href=\"../../topics/install/\"><span class=\"doc\">How to install Django</span></a> for advice on how to remove\nolder versions of Django and install a newer one.</p>\n<div class=\"admonition-where-to-get-help admonition\">\n<p class=\"first admonition-title\">Where to get help:</p>\n<p class=\"last\">If you\u2019re having trouble going through this tutorial, please head over to\nthe <a class=\"reference internal\" href=\"../../faq/help/\"><span class=\"doc\">Getting Help</span></a> section of the FAQ.</p>\n</div>\n<div class=\"section\" id=\"s-creating-a-project\">\n<span id=\"creating-a-project\"></span><h2>Creating a project<a class=\"headerlink\" href=\"#creating-a-project\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>If this is your first time using Django, you\u2019ll have to take care of some\ninitial setup. Namely, you\u2019ll need to auto-generate some code that establishes a\nDjango <a class=\"reference internal\" href=\"../../glossary/#term-project\"><span class=\"xref std std-term\">project</span></a> \u2013 a collection of settings for an instance of Django,\nincluding database configuration, Django-specific options and\napplication-specific settings.</p>\n<p>From the command line, <code class=\"docutils literal notranslate\"><span class=\"pre\">cd</span></code> into a directory where you\u2019d like to store your\ncode, then run the following command:</p>\n<div class=\"console-block\" id=\"console-block-1\">\n<input class=\"c-tab-unix\" id=\"c-tab-1-unix\" type=\"radio\" name=\"console-1\" checked>\n<label for=\"c-tab-1-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-1-win\" type=\"radio\" name=\"console-1\">\n<label for=\"c-tab-1-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-1-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>django-admin startproject mysite\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-1-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> django-admin startproject mysite\n</pre></div>\n</section>\n</div>\n<p>This will create a <code class=\"docutils literal notranslate\"><span class=\"pre\">mysite</span></code> directory in your current directory. If it didn\u2019t\nwork, see <a class=\"reference internal\" href=\"../../faq/troubleshooting/#troubleshooting-django-admin\"><span class=\"std std-ref\">Problems running django-admin</span></a>.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">You\u2019ll need to avoid naming projects after built-in Python or Django\ncomponents. In particular, this means you should avoid using names like\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django</span></code> (which will conflict with Django itself) or <code class=\"docutils literal notranslate\"><span class=\"pre\">test</span></code> (which\nconflicts with a built-in Python package).</p>\n</div>\n<div class=\"admonition-where-should-this-code-live admonition\">\n<p class=\"first admonition-title\">Where should this code live?</p>\n<p>If your background is in plain old PHP (with no use of modern frameworks),\nyou\u2019re probably used to putting code under the web server\u2019s document root\n(in a place such as <code class=\"docutils literal notranslate\"><span class=\"pre\">/var/www</span></code>). With Django, you don\u2019t do that. It\u2019s\nnot a good idea to put any of this Python code within your web server\u2019s\ndocument root, because it risks the possibility that people may be able\nto view your code over the web. That\u2019s not good for security.</p>\n<p class=\"last\">Put your code in some directory <strong>outside</strong> of the document root, such as\n<code class=\"file docutils literal notranslate\"><span class=\"pre\">/home/mycode</span></code>.</p>\n</div>\n<p>Let\u2019s look at what <a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-startproject\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">startproject</span></code></a> created:</p>\n<div class=\"highlight-text notranslate\"><div class=\"highlight\"><pre><span></span>mysite/\n    manage.py\n    mysite/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n</pre></div>\n</div>\n<p>These files are:</p>\n<ul class=\"simple\">\n<li>The outer <code class=\"file docutils literal notranslate\"><span class=\"pre\">mysite/</span></code> root directory is a container for your project. Its\nname doesn\u2019t matter to Django; you can rename it to anything you like.</li>\n<li><code class=\"file docutils literal notranslate\"><span class=\"pre\">manage.py</span></code>: A command-line utility that lets you interact with this\nDjango project in various ways. You can read all the details about\n<code class=\"file docutils literal notranslate\"><span class=\"pre\">manage.py</span></code> in <a class=\"reference internal\" href=\"../../ref/django-admin/\"><span class=\"doc\">django-admin and manage.py</span></a>.</li>\n<li>The inner <code class=\"file docutils literal notranslate\"><span class=\"pre\">mysite/</span></code> directory is the actual Python package for your\nproject. Its name is the Python package name you\u2019ll need to use to import\nanything inside it (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">mysite.urls</span></code>).</li>\n<li><code class=\"file docutils literal notranslate\"><span class=\"pre\">mysite/__init__.py</span></code>: An empty file that tells Python that this\ndirectory should be considered a Python package. If you\u2019re a Python beginner,\nread <a class=\"reference external\" href=\"https://docs.python.org/3/tutorial/modules.html#tut-packages\" title=\"(in Python v3.11)\"><span class=\"xref std std-ref\">more about packages</span></a> in the official Python docs.</li>\n<li><code class=\"file docutils literal notranslate\"><span class=\"pre\">mysite/settings.py</span></code>: Settings/configuration for this Django\nproject.  <a class=\"reference internal\" href=\"../../topics/settings/\"><span class=\"doc\">Django settings</span></a> will tell you all about how settings\nwork.</li>\n<li><code class=\"file docutils literal notranslate\"><span class=\"pre\">mysite/urls.py</span></code>: The URL declarations for this Django project; a\n\u201ctable of contents\u201d of your Django-powered site. You can read more about\nURLs in <a class=\"reference internal\" href=\"../../topics/http/urls/\"><span class=\"doc\">URL dispatcher</span></a>.</li>\n<li><code class=\"file docutils literal notranslate\"><span class=\"pre\">mysite/asgi.py</span></code>: An entry-point for ASGI-compatible web servers to\nserve your project. See <a class=\"reference internal\" href=\"../../howto/deployment/asgi/\"><span class=\"doc\">How to deploy with ASGI</span></a> for more details.</li>\n<li><code class=\"file docutils literal notranslate\"><span class=\"pre\">mysite/wsgi.py</span></code>: An entry-point for WSGI-compatible web servers to\nserve your project. See <a class=\"reference internal\" href=\"../../howto/deployment/wsgi/\"><span class=\"doc\">How to deploy with WSGI</span></a> for more details.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-the-development-server\">\n<span id=\"the-development-server\"></span><h2>The development server<a class=\"headerlink\" href=\"#the-development-server\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Let\u2019s verify your Django project works. Change into the outer <code class=\"file docutils literal notranslate\"><span class=\"pre\">mysite</span></code> directory, if\nyou haven\u2019t already, and run the following commands:</p>\n<div class=\"console-block\" id=\"console-block-2\">\n<input class=\"c-tab-unix\" id=\"c-tab-2-unix\" type=\"radio\" name=\"console-2\" checked>\n<label for=\"c-tab-2-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-2-win\" type=\"radio\" name=\"console-2\">\n<label for=\"c-tab-2-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-2-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>python manage.py runserver\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-2-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py manage.py runserver\n</pre></div>\n</section>\n</div>\n<p>You\u2019ll see the following output on the command line:</p>\n<pre class=\"literal-block\">\nPerforming system checks...\n\nSystem check identified no issues (0 silenced).\n\nYou have unapplied migrations; your app may not work properly until they are applied.\nRun 'python manage.py migrate' to apply them.\n\nJune 13, 2023 - 15:50:53\nDjango version 5.0, using settings 'mysite.settings'\nStarting development server at <a class=\"reference external\" href=\"http://127.0.0.1:8000/\">http://127.0.0.1:8000/</a>\nQuit the server with CONTROL-C.\n</pre>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Ignore the warning about unapplied database migrations for now; we\u2019ll deal\nwith the database shortly.</p>\n</div>\n<p>You\u2019ve started the Django development server, a lightweight web server written\npurely in Python. We\u2019ve included this with Django so you can develop things\nrapidly, without having to deal with configuring a production server \u2013 such as\nApache \u2013 until you\u2019re ready for production.</p>\n<p>Now\u2019s a good time to note: <strong>don\u2019t</strong> use this server in anything resembling a\nproduction environment. It\u2019s intended only for use while developing. (We\u2019re in\nthe business of making web frameworks, not web servers.)</p>\n<p>Now that the server\u2019s running, visit <a class=\"reference external\" href=\"http://127.0.0.1:8000/\">http://127.0.0.1:8000/</a> with your web\nbrowser. You\u2019ll see a \u201cCongratulations!\u201d page, with a rocket taking off.\nIt worked!</p>\n<div class=\"admonition-changing-the-port admonition\">\n<p class=\"first admonition-title\">Changing the port</p>\n<p>By default, the <a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-runserver\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">runserver</span></code></a> command starts the development server\non the internal IP at port 8000.</p>\n<p>If you want to change the server\u2019s port, pass\nit as a command-line argument. For instance, this command starts the server\non port 8080:</p>\n<div class=\"console-block\" id=\"console-block-3\">\n<input class=\"c-tab-unix\" id=\"c-tab-3-unix\" type=\"radio\" name=\"console-3\" checked>\n<label for=\"c-tab-3-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-3-win\" type=\"radio\" name=\"console-3\">\n<label for=\"c-tab-3-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-3-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>python manage.py runserver <span class=\"m\">8080</span>\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-3-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py manage.py runserver 8080\n</pre></div>\n</section>\n</div>\n<p>If you want to change the server\u2019s IP, pass it along with the port. For\nexample, to listen on all available public IPs (which is useful if you are\nrunning Vagrant or want to show off your work on other computers on the\nnetwork), use:</p>\n<div class=\"console-block\" id=\"console-block-4\">\n<input class=\"c-tab-unix\" id=\"c-tab-4-unix\" type=\"radio\" name=\"console-4\" checked>\n<label for=\"c-tab-4-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-4-win\" type=\"radio\" name=\"console-4\">\n<label for=\"c-tab-4-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-4-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>python manage.py runserver <span class=\"m\">0</span>.0.0.0:8000\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-4-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py manage.py runserver 0.0.0.0:8000\n</pre></div>\n</section>\n</div>\n<p class=\"last\">Full docs for the development server can be found in the\n<a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-runserver\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">runserver</span></code></a> reference.</p>\n</div>\n<div class=\"admonition-automatic-reloading-of-djadmin-runserver admonition\">\n<p class=\"first admonition-title\">Automatic reloading of <a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-runserver\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">runserver</span></code></a></p>\n<p class=\"last\">The development server automatically reloads Python code for each request\nas needed. You don\u2019t need to restart the server for code changes to take\neffect. However, some actions like adding files don\u2019t trigger a restart,\nso you\u2019ll have to restart the server in these cases.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-creating-the-polls-app\">\n<span id=\"creating-the-polls-app\"></span><h2>Creating the Polls app<a class=\"headerlink\" href=\"#creating-the-polls-app\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Now that your environment \u2013 a \u201cproject\u201d \u2013 is set up, you\u2019re set to start\ndoing work.</p>\n<p>Each application you write in Django consists of a Python package that follows\na certain convention. Django comes with a utility that automatically generates\nthe basic directory structure of an app, so you can focus on writing code\nrather than creating directories.</p>\n<div class=\"admonition-projects-vs-apps admonition\">\n<p class=\"first admonition-title\">Projects vs. apps</p>\n<p class=\"last\">What\u2019s the difference between a project and an app? An app is a web\napplication that does something \u2013 e.g., a blog system, a database of\npublic records or a small poll app. A project is a collection of\nconfiguration and apps for a particular website. A project can contain\nmultiple apps. An app can be in multiple projects.</p>\n</div>\n<p>Your apps can live anywhere on your <a class=\"reference external\" href=\"https://docs.python.org/3/tutorial/modules.html#tut-searchpath\" title=\"(in Python v3.11)\"><span class=\"xref std std-ref\">Python path</span></a>. In\nthis tutorial, we\u2019ll create our poll app in the same directory as your\n<code class=\"file docutils literal notranslate\"><span class=\"pre\">manage.py</span></code> file so that it can be imported as its own top-level module,\nrather than a submodule of <code class=\"docutils literal notranslate\"><span class=\"pre\">mysite</span></code>.</p>\n<p>To create your app, make sure you\u2019re in the same directory as <code class=\"file docutils literal notranslate\"><span class=\"pre\">manage.py</span></code>\nand type this command:</p>\n<div class=\"console-block\" id=\"console-block-5\">\n<input class=\"c-tab-unix\" id=\"c-tab-5-unix\" type=\"radio\" name=\"console-5\" checked>\n<label for=\"c-tab-5-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-5-win\" type=\"radio\" name=\"console-5\">\n<label for=\"c-tab-5-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-5-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>python manage.py startapp polls\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-5-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py manage.py startapp polls\n</pre></div>\n</section>\n</div>\n<p>That\u2019ll create a directory <code class=\"file docutils literal notranslate\"><span class=\"pre\">polls</span></code>, which is laid out like this:</p>\n<div class=\"highlight-text notranslate\"><div class=\"highlight\"><pre><span></span>polls/\n    __init__.py\n    admin.py\n    apps.py\n    migrations/\n        __init__.py\n    models.py\n    tests.py\n    views.py\n</pre></div>\n</div>\n<p>This directory structure will house the poll application.</p>\n</div>\n<div class=\"section\" id=\"s-write-your-first-view\">\n<span id=\"write-your-first-view\"></span><h2>Write your first view<a class=\"headerlink\" href=\"#write-your-first-view\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Let\u2019s write the first view. Open the file <code class=\"docutils literal notranslate\"><span class=\"pre\">polls/views.py</span></code>\nand put the following Python code in it:</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id1\">\n<div class=\"code-block-caption\"><span class=\"caption-text\"><code class=\"docutils literal notranslate\"><span class=\"pre\">polls/views.py</span></code></span><a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.http</span> <span class=\"kn\">import</span> <span class=\"n\">HttpResponse</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">HttpResponse</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello, world. You&#39;re at the polls index.&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<p>This is the simplest view possible in Django. To call the view, we need to map\nit to a URL - and for this we need a URLconf.</p>\n<p>To create a URLconf in the polls directory, create a file called <code class=\"docutils literal notranslate\"><span class=\"pre\">urls.py</span></code>.\nYour app directory should now look like:</p>\n<div class=\"highlight-text notranslate\"><div class=\"highlight\"><pre><span></span>polls/\n    __init__.py\n    admin.py\n    apps.py\n    migrations/\n        __init__.py\n    models.py\n    tests.py\n    urls.py\n    views.py\n</pre></div>\n</div>\n<p>In the <code class=\"docutils literal notranslate\"><span class=\"pre\">polls/urls.py</span></code> file include the following code:</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id2\">\n<div class=\"code-block-caption\"><span class=\"caption-text\"><code class=\"docutils literal notranslate\"><span class=\"pre\">polls/urls.py</span></code></span><a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">views</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">views</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;index&quot;</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n</pre></div>\n</div>\n</div>\n<p>The next step is to point the root URLconf at the <code class=\"docutils literal notranslate\"><span class=\"pre\">polls.urls</span></code> module. In\n<code class=\"docutils literal notranslate\"><span class=\"pre\">mysite/urls.py</span></code>, add an import for <code class=\"docutils literal notranslate\"><span class=\"pre\">django.urls.include</span></code> and insert an\n<a class=\"reference internal\" href=\"../../ref/urls/#django.urls.include\" title=\"django.urls.include\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">include()</span></code></a> in the <code class=\"docutils literal notranslate\"><span class=\"pre\">urlpatterns</span></code> list, so you have:</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id3\">\n<div class=\"code-block-caption\"><span class=\"caption-text\"><code class=\"docutils literal notranslate\"><span class=\"pre\">mysite/urls.py</span></code></span><a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">include</span><span class=\"p\">,</span> <span class=\"n\">path</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;polls/&quot;</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s2\">&quot;polls.urls&quot;</span><span class=\"p\">)),</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;admin/&quot;</span><span class=\"p\">,</span> <span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">urls</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n</pre></div>\n</div>\n</div>\n<p>The <a class=\"reference internal\" href=\"../../ref/urls/#django.urls.include\" title=\"django.urls.include\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">include()</span></code></a> function allows referencing other URLconfs.\nWhenever Django encounters <a class=\"reference internal\" href=\"../../ref/urls/#django.urls.include\" title=\"django.urls.include\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">include()</span></code></a>, it chops off whatever\npart of the URL matched up to that point and sends the remaining string to the\nincluded URLconf for further processing.</p>\n<p>The idea behind <a class=\"reference internal\" href=\"../../ref/urls/#django.urls.include\" title=\"django.urls.include\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">include()</span></code></a> is to make it easy to\nplug-and-play URLs. Since polls are in their own URLconf\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">polls/urls.py</span></code>), they can be placed under \u201c/polls/\u201d, or under\n\u201c/fun_polls/\u201d, or under \u201c/content/polls/\u201d, or any other path root, and the\napp will still work.</p>\n<div class=\"admonition-when-to-use-func-django-urls-include admonition\">\n<p class=\"first admonition-title\">When to use <a class=\"reference internal\" href=\"../../ref/urls/#django.urls.include\" title=\"django.urls.include\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">include()</span></code></a></p>\n<p class=\"last\">You should always use <code class=\"docutils literal notranslate\"><span class=\"pre\">include()</span></code> when you include other URL patterns.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">admin.site.urls</span></code> is the only exception to this.</p>\n</div>\n<p>You have now wired an <code class=\"docutils literal notranslate\"><span class=\"pre\">index</span></code> view into the URLconf. Verify it\u2019s working with\nthe following command:</p>\n<div class=\"console-block\" id=\"console-block-6\">\n<input class=\"c-tab-unix\" id=\"c-tab-6-unix\" type=\"radio\" name=\"console-6\" checked>\n<label for=\"c-tab-6-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-6-win\" type=\"radio\" name=\"console-6\">\n<label for=\"c-tab-6-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-6-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>python manage.py runserver\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-6-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py manage.py runserver\n</pre></div>\n</section>\n</div>\n<p>Go to <a class=\"reference external\" href=\"http://localhost:8000/polls/\">http://localhost:8000/polls/</a> in your browser, and you should see the\ntext \u201c<em>Hello, world. You\u2019re at the polls index.</em>\u201d, which you defined in the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">index</span></code> view.</p>\n<div class=\"admonition-page-not-found admonition\">\n<p class=\"first admonition-title\">Page not found?</p>\n<p class=\"last\">If you get an error page here, check that you\u2019re going to\n<a class=\"reference external\" href=\"http://localhost:8000/polls/\">http://localhost:8000/polls/</a> and not <a class=\"reference external\" href=\"http://localhost:8000/\">http://localhost:8000/</a>.</p>\n</div>\n<p>The <a class=\"reference internal\" href=\"../../ref/urls/#django.urls.path\" title=\"django.urls.path\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">path()</span></code></a> function is passed four arguments, two required:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">route</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">view</span></code>, and two optional: <code class=\"docutils literal notranslate\"><span class=\"pre\">kwargs</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code>.\nAt this point, it\u2019s worth reviewing what these arguments are for.</p>\n<div class=\"section\" id=\"s-path-argument-route\">\n<span id=\"path-argument-route\"></span><h3><a class=\"reference internal\" href=\"../../ref/urls/#django.urls.path\" title=\"django.urls.path\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">path()</span></code></a> argument: <code class=\"docutils literal notranslate\"><span class=\"pre\">route</span></code><a class=\"headerlink\" href=\"#path-argument-route\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">route</span></code> is a string that contains a URL pattern. When processing a request,\nDjango starts at the first pattern in <code class=\"docutils literal notranslate\"><span class=\"pre\">urlpatterns</span></code> and makes its way down\nthe list, comparing the requested URL against each pattern until it finds one\nthat matches.</p>\n<p>Patterns don\u2019t search GET and POST parameters, or the domain name. For example,\nin a request to <code class=\"docutils literal notranslate\"><span class=\"pre\">https://www.example.com/myapp/</span></code>, the URLconf will look for\n<code class=\"docutils literal notranslate\"><span class=\"pre\">myapp/</span></code>. In a request to <code class=\"docutils literal notranslate\"><span class=\"pre\">https://www.example.com/myapp/?page=3</span></code>, the\nURLconf will also look for <code class=\"docutils literal notranslate\"><span class=\"pre\">myapp/</span></code>.</p>\n</div>\n<div class=\"section\" id=\"s-path-argument-view\">\n<span id=\"path-argument-view\"></span><h3><a class=\"reference internal\" href=\"../../ref/urls/#django.urls.path\" title=\"django.urls.path\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">path()</span></code></a> argument: <code class=\"docutils literal notranslate\"><span class=\"pre\">view</span></code><a class=\"headerlink\" href=\"#path-argument-view\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>When Django finds a matching pattern, it calls the specified view function with\nan <a class=\"reference internal\" href=\"../../ref/request-response/#django.http.HttpRequest\" title=\"django.http.HttpRequest\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code></a> object as the first argument and any\n\u201ccaptured\u201d values from the route as keyword arguments. We\u2019ll give an example\nof this in a bit.</p>\n</div>\n<div class=\"section\" id=\"s-path-argument-kwargs\">\n<span id=\"path-argument-kwargs\"></span><h3><a class=\"reference internal\" href=\"../../ref/urls/#django.urls.path\" title=\"django.urls.path\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">path()</span></code></a> argument: <code class=\"docutils literal notranslate\"><span class=\"pre\">kwargs</span></code><a class=\"headerlink\" href=\"#path-argument-kwargs\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Arbitrary keyword arguments can be passed in a dictionary to the target view. We\naren\u2019t going to use this feature of Django in the tutorial.</p>\n</div>\n<div class=\"section\" id=\"s-path-argument-name\">\n<span id=\"path-argument-name\"></span><h3><a class=\"reference internal\" href=\"../../ref/urls/#django.urls.path\" title=\"django.urls.path\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">path()</span></code></a> argument: <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code><a class=\"headerlink\" href=\"#path-argument-name\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Naming your URL lets you refer to it unambiguously from elsewhere in Django,\nespecially from within templates. This powerful feature allows you to make\nglobal changes to the URL patterns of your project while only touching a single\nfile.</p>\n<p>When you\u2019re comfortable with the basic request and response flow, read\n<a class=\"reference internal\" href=\"../tutorial02/\"><span class=\"doc\">part 2 of this tutorial</span></a> to start working with the\ndatabase.</p>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["intro/tutorial02", "Writing your first Django app, part 2", "N", "next"], ["intro/install", "Quick install guide", "P", "previous"]], "sourcename": "intro/tutorial01.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Writing your first Django app, part 1</a><ul>\n<li><a class=\"reference internal\" href=\"#creating-a-project\">Creating a project</a></li>\n<li><a class=\"reference internal\" href=\"#the-development-server\">The development server</a></li>\n<li><a class=\"reference internal\" href=\"#creating-the-polls-app\">Creating the Polls app</a></li>\n<li><a class=\"reference internal\" href=\"#write-your-first-view\">Write your first view</a><ul>\n<li><a class=\"reference internal\" href=\"#path-argument-route\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">path()</span></code> argument: <code class=\"docutils literal notranslate\"><span class=\"pre\">route</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#path-argument-view\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">path()</span></code> argument: <code class=\"docutils literal notranslate\"><span class=\"pre\">view</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#path-argument-kwargs\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">path()</span></code> argument: <code class=\"docutils literal notranslate\"><span class=\"pre\">kwargs</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#path-argument-name\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">path()</span></code> argument: <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "intro/tutorial01", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": true}
