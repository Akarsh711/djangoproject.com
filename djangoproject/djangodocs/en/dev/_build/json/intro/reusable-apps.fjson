{"parents": [{"link": "../", "title": "Getting started"}], "prev": {"link": "../tutorial08/", "title": "Writing your first Django app, part 8"}, "next": {"link": "../whatsnext/", "title": "What to read next"}, "title": "Advanced tutorial: How to write reusable apps", "meta": {}, "body": "<div class=\"section\" id=\"s-advanced-tutorial-how-to-write-reusable-apps\">\n<span id=\"advanced-tutorial-how-to-write-reusable-apps\"></span><h1>Advanced tutorial: How to write reusable apps<a class=\"headerlink\" href=\"#advanced-tutorial-how-to-write-reusable-apps\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This advanced tutorial begins where <a class=\"reference internal\" href=\"../tutorial08/\"><span class=\"doc\">Tutorial 8</span></a>\nleft off. We\u2019ll be turning our web-poll into a standalone Python package\nyou can reuse in new projects and share with other people.</p>\n<p>If you haven\u2019t recently completed Tutorials 1\u20137, we encourage you to review\nthese so that your example project matches the one described below.</p>\n<div class=\"section\" id=\"s-reusability-matters\">\n<span id=\"reusability-matters\"></span><h2>Reusability matters<a class=\"headerlink\" href=\"#reusability-matters\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>It\u2019s a lot of work to design, build, test and maintain a web application. Many\nPython and Django projects share common problems. Wouldn\u2019t it be great if we\ncould save some of this repeated work?</p>\n<p>Reusability is the way of life in Python. <a class=\"reference external\" href=\"https://pypi.org/\">The Python Package Index (PyPI)</a> has a vast range of packages you can use in your own\nPython programs. Check out <a class=\"reference external\" href=\"https://djangopackages.org\">Django Packages</a> for\nexisting reusable apps you could incorporate in your project. Django itself is\nalso a normal Python package. This means that you can take existing Python\npackages or Django apps and compose them into your own web project. You only\nneed to write the parts that make your project unique.</p>\n<p>Let\u2019s say you were starting a new project that needed a polls app like the one\nwe\u2019ve been working on. How do you make this app reusable? Luckily, you\u2019re well\non the way already. In <a class=\"reference internal\" href=\"../tutorial01/\"><span class=\"doc\">Tutorial 1</span></a>, we saw how we\ncould decouple polls from the project-level URLconf using an <code class=\"docutils literal notranslate\"><span class=\"pre\">include</span></code>.\nIn this tutorial, we\u2019ll take further steps to make the app easy to use in new\nprojects and ready to publish for others to install and use.</p>\n<div class=\"admonition-package-app admonition\">\n<p class=\"first admonition-title\">Package? App?</p>\n<p>A Python <a class=\"reference external\" href=\"https://docs.python.org/3/glossary.html#term-package\" title=\"(in Python v3.11)\"><span class=\"xref std std-term\">package</span></a> provides a way of grouping related Python code for\neasy reuse. A package contains one or more files of Python code (also known\nas \u201cmodules\u201d).</p>\n<p>A package can be imported with <code class=\"docutils literal notranslate\"><span class=\"pre\">import</span> <span class=\"pre\">foo.bar</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">from</span> <span class=\"pre\">foo</span> <span class=\"pre\">import</span>\n<span class=\"pre\">bar</span></code>. For a directory (like <code class=\"docutils literal notranslate\"><span class=\"pre\">polls</span></code>) to form a package, it must contain\na special file <code class=\"docutils literal notranslate\"><span class=\"pre\">__init__.py</span></code>, even if this file is empty.</p>\n<p>A Django <em>application</em> is a Python package that is specifically intended\nfor use in a Django project. An application may use common Django\nconventions, such as having <code class=\"docutils literal notranslate\"><span class=\"pre\">models</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">tests</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">urls</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">views</span></code>\nsubmodules.</p>\n<p class=\"last\">Later on we use the term <em>packaging</em> to describe the process of making a\nPython package easy for others to install. It can be a little confusing, we\nknow.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-your-project-and-your-reusable-app\">\n<span id=\"your-project-and-your-reusable-app\"></span><h2>Your project and your reusable app<a class=\"headerlink\" href=\"#your-project-and-your-reusable-app\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>After the previous tutorials, our project should look like this:</p>\n<div class=\"highlight-text notranslate\"><div class=\"highlight\"><pre><span></span>mysite/\n    manage.py\n    mysite/\n        __init__.py\n        settings.py\n        urls.py\n        asgi.py\n        wsgi.py\n    polls/\n        __init__.py\n        admin.py\n        apps.py\n        migrations/\n            __init__.py\n            0001_initial.py\n        models.py\n        static/\n            polls/\n                images/\n                    background.gif\n                style.css\n        templates/\n            polls/\n                detail.html\n                index.html\n                results.html\n        tests.py\n        urls.py\n        views.py\n    templates/\n        admin/\n            base_site.html\n</pre></div>\n</div>\n<p>You created <code class=\"docutils literal notranslate\"><span class=\"pre\">mysite/templates</span></code> in <a class=\"reference internal\" href=\"../tutorial07/\"><span class=\"doc\">Tutorial 7</span></a>,\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">polls/templates</span></code> in <a class=\"reference internal\" href=\"../tutorial03/\"><span class=\"doc\">Tutorial 3</span></a>. Now perhaps\nit is clearer why we chose to have separate template directories for the\nproject and application: everything that is part of the polls application is in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">polls</span></code>. It makes the application self-contained and easier to drop into a\nnew project.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">polls</span></code> directory could now be copied into a new Django project and\nimmediately reused. It\u2019s not quite ready to be published though. For that, we\nneed to package the app to make it easy for others to install.</p>\n</div>\n<div class=\"section\" id=\"s-installing-some-prerequisites\">\n<span id=\"s-installing-reusable-apps-prerequisites\"></span><span id=\"installing-some-prerequisites\"></span><span id=\"installing-reusable-apps-prerequisites\"></span><h2>Installing some prerequisites<a class=\"headerlink\" href=\"#installing-some-prerequisites\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The current state of Python packaging is a bit muddled with various tools. For\nthis tutorial, we\u2019re going to use <a class=\"reference external\" href=\"https://pypi.org/project/setuptools/\">setuptools</a> to build our package. It\u2019s\nthe recommended packaging tool (merged with the <code class=\"docutils literal notranslate\"><span class=\"pre\">distribute</span></code> fork). We\u2019ll\nalso be using <a class=\"reference external\" href=\"https://pypi.org/project/pip/\">pip</a> to install and uninstall it. You should install these\ntwo packages now. If you need help, you can refer to <a class=\"reference internal\" href=\"../../topics/install/#installing-official-release\"><span class=\"std std-ref\">how to install\nDjango with pip</span></a>. You can install <code class=\"docutils literal notranslate\"><span class=\"pre\">setuptools</span></code>\nthe same way.</p>\n</div>\n<div class=\"section\" id=\"s-packaging-your-app\">\n<span id=\"packaging-your-app\"></span><h2>Packaging your app<a class=\"headerlink\" href=\"#packaging-your-app\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Python <em>packaging</em> refers to preparing your app in a specific format that can\nbe easily installed and used. Django itself is packaged very much like\nthis. For a small app like polls, this process isn\u2019t too difficult.</p>\n<ol class=\"arabic\">\n<li><p class=\"first\">First, create a parent directory for <code class=\"docutils literal notranslate\"><span class=\"pre\">polls</span></code>, outside of your Django\nproject. Call this directory <code class=\"docutils literal notranslate\"><span class=\"pre\">django-polls</span></code>.</p>\n<div class=\"admonition-choosing-a-name-for-your-app admonition\">\n<p class=\"first admonition-title\">Choosing a name for your app</p>\n<p>When choosing a name for your package, check resources like PyPI to avoid\nnaming conflicts with existing packages. It\u2019s often useful to prepend\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django-</span></code> to your module name when creating a package to distribute.\nThis helps others looking for Django apps identify your app as Django\nspecific.</p>\n<p class=\"last\">Application labels (that is, the final part of the dotted path to\napplication packages) <em>must</em> be unique in <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-INSTALLED_APPS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">INSTALLED_APPS</span></code></a>.\nAvoid using the same label as any of the Django <a class=\"reference internal\" href=\"../../ref/contrib/\"><span class=\"doc\">contrib packages</span></a>, for example <code class=\"docutils literal notranslate\"><span class=\"pre\">auth</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">admin</span></code>, or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">messages</span></code>.</p>\n</div>\n</li>\n<li><p class=\"first\">Move the <code class=\"docutils literal notranslate\"><span class=\"pre\">polls</span></code> directory into the <code class=\"docutils literal notranslate\"><span class=\"pre\">django-polls</span></code> directory.</p>\n</li>\n<li><p class=\"first\">Create a file <code class=\"docutils literal notranslate\"><span class=\"pre\">django-polls/README.rst</span></code> with the following contents:</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id1\">\n<div class=\"code-block-caption\"><span class=\"caption-text\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django-polls/README.rst</span></code></span><a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-rst notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gh\">=====</span>\n<span class=\"gh\">Polls</span>\n<span class=\"gh\">=====</span>\n\nPolls is a Django app to conduct web-based polls. For each question,\nvisitors can choose between a fixed number of answers.\n\nDetailed documentation is in the &quot;docs&quot; directory.\n\n<span class=\"gh\">Quick start</span>\n<span class=\"gh\">-----------</span>\n\n<span class=\"m\">1.</span> Add &quot;polls&quot; to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n<span class=\"cp\">        ...,</span>\n<span class=\"cp\">        &quot;polls&quot;,</span>\n<span class=\"cp\">    ]</span>\n\n<span class=\"m\">2.</span> Include the polls URLconf in your project urls.py like this::\n\n    path(&quot;polls/&quot;, include(&quot;polls.urls&quot;)),\n\n<span class=\"m\">3.</span> Run <span class=\"s\">``python manage.py migrate``</span> to create the polls models.\n\n<span class=\"m\">4.</span> Start the development server and visit http://127.0.0.1:8000/admin/\n   to create a poll (you&#39;ll need the Admin app enabled).\n\n<span class=\"m\">5.</span> Visit http://127.0.0.1:8000/polls/ to participate in the poll.\n</pre></div>\n</div>\n</div>\n</li>\n<li><p class=\"first\">Create a <code class=\"docutils literal notranslate\"><span class=\"pre\">django-polls/LICENSE</span></code> file. Choosing a license is beyond the\nscope of this tutorial, but suffice it to say that code released publicly\nwithout a license is <em>useless</em>. Django and many Django-compatible apps are\ndistributed under the BSD license; however, you\u2019re free to pick your own\nlicense. Just be aware that your licensing choice will affect who is able\nto use your code.</p>\n</li>\n<li><p class=\"first\">Next we\u2019ll create <code class=\"docutils literal notranslate\"><span class=\"pre\">pyproject.toml</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">setup.cfg</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">setup.py</span></code> files\nwhich detail how to build and install the app. A full explanation of these\nfiles is beyond the scope of this tutorial, but the <a class=\"reference external\" href=\"https://setuptools.pypa.io/en/latest/\">setuptools\ndocumentation</a> has a good\nexplanation. Create the <code class=\"docutils literal notranslate\"><span class=\"pre\">django-polls/pyproject.toml</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django-polls/setup.cfg</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">django-polls/setup.py</span></code> files with the\nfollowing contents:</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id2\">\n<div class=\"code-block-caption\"><span class=\"caption-text\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django-polls/pyproject.toml</span></code></span><a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-toml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">[build-system]</span><span class=\"w\"></span>\n<span class=\"n\">requires</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">&#39;setuptools&gt;=40.8.0&#39;</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"n\">build-backend</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">&#39;setuptools.build_meta&#39;</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</div>\n<div class=\"literal-block-wrapper docutils container\" id=\"id3\">\n<div class=\"code-block-caption\"><span class=\"caption-text\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django-polls/setup.cfg</span></code></span><a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-ini notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">[metadata]</span><span class=\"w\"></span>\n<span class=\"na\">name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">django-polls</span><span class=\"w\"></span>\n<span class=\"na\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">0.1</span><span class=\"w\"></span>\n<span class=\"na\">description</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">A Django app to conduct web-based polls.</span><span class=\"w\"></span>\n<span class=\"na\">long_description</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">file: README.rst</span><span class=\"w\"></span>\n<span class=\"na\">url</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">https://www.example.com/</span><span class=\"w\"></span>\n<span class=\"na\">author</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">Your Name</span><span class=\"w\"></span>\n<span class=\"na\">author_email</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">yourname@example.com</span><span class=\"w\"></span>\n<span class=\"na\">license</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">BSD-3-Clause  # Example license</span><span class=\"w\"></span>\n<span class=\"na\">classifiers</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"na\">Environment :: Web Environment</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"na\">Framework :: Django</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"na\">Framework :: Django :: X.Y  # Replace &quot;X.Y&quot; as appropriate</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"na\">Intended Audience :: Developers</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"na\">License :: OSI Approved :: BSD License</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"na\">Operating System :: OS Independent</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"na\">Programming Language :: Python</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"na\">Programming Language :: Python :: 3</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"na\">Programming Language :: Python :: 3 :: Only</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"na\">Programming Language :: Python :: 3.10</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"na\">Programming Language :: Python :: 3.11</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"na\">Topic :: Internet :: WWW/HTTP</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"na\">Topic :: Internet :: WWW/HTTP :: Dynamic Content</span><span class=\"w\"></span>\n\n<span class=\"k\">[options]</span><span class=\"w\"></span>\n<span class=\"na\">include_package_data</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">true</span><span class=\"w\"></span>\n<span class=\"na\">packages</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">find:</span><span class=\"w\"></span>\n<span class=\"na\">python_requires</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">&gt;=3.10</span><span class=\"w\"></span>\n<span class=\"na\">install_requires</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"na\">Django &gt;</span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">X.Y  # Replace &quot;X.Y&quot; as appropriate</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</div>\n<div class=\"literal-block-wrapper docutils container\" id=\"id4\">\n<div class=\"code-block-caption\"><span class=\"caption-text\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django-polls/setup.py</span></code></span><a class=\"headerlink\" href=\"#id4\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">setuptools</span> <span class=\"kn\">import</span> <span class=\"n\">setup</span>\n\n<span class=\"n\">setup</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</div>\n</li>\n<li><p class=\"first\">Only Python modules and packages are included in the package by default. To\ninclude additional files, we\u2019ll need to create a <code class=\"docutils literal notranslate\"><span class=\"pre\">MANIFEST.in</span></code> file. The\nsetuptools docs referred to in the previous step discuss this file in more\ndetail. To include the templates, the <code class=\"docutils literal notranslate\"><span class=\"pre\">README.rst</span></code> and our <code class=\"docutils literal notranslate\"><span class=\"pre\">LICENSE</span></code>\nfile, create a file <code class=\"docutils literal notranslate\"><span class=\"pre\">django-polls/MANIFEST.in</span></code> with the following\ncontents:</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id5\">\n<div class=\"code-block-caption\"><span class=\"caption-text\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django-polls/MANIFEST.in</span></code></span><a class=\"headerlink\" href=\"#id5\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-text notranslate\"><div class=\"highlight\"><pre><span></span>include LICENSE\ninclude README.rst\nrecursive-include polls/static *\nrecursive-include polls/templates *\n</pre></div>\n</div>\n</div>\n</li>\n<li><p class=\"first\">It\u2019s optional, but recommended, to include detailed documentation with your\napp. Create an empty directory <code class=\"docutils literal notranslate\"><span class=\"pre\">django-polls/docs</span></code> for future\ndocumentation. Add an additional line to <code class=\"docutils literal notranslate\"><span class=\"pre\">django-polls/MANIFEST.in</span></code>:</p>\n<div class=\"highlight-text notranslate\"><div class=\"highlight\"><pre><span></span>recursive-include docs *\n</pre></div>\n</div>\n<p>Note that the <code class=\"docutils literal notranslate\"><span class=\"pre\">docs</span></code> directory won\u2019t be included in your package unless\nyou add some files to it. Many Django apps also provide their documentation\nonline through sites like <a class=\"reference external\" href=\"https://readthedocs.org\">readthedocs.org</a>.</p>\n</li>\n<li><p class=\"first\">Try building your package with <code class=\"docutils literal notranslate\"><span class=\"pre\">python</span> <span class=\"pre\">setup.py</span> <span class=\"pre\">sdist</span></code> (run from inside\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django-polls</span></code>). This creates a directory called <code class=\"docutils literal notranslate\"><span class=\"pre\">dist</span></code> and builds your\nnew package, <code class=\"docutils literal notranslate\"><span class=\"pre\">django-polls-0.1.tar.gz</span></code>.</p>\n</li>\n</ol>\n<p>For more information on packaging, see Python\u2019s <a class=\"reference external\" href=\"https://packaging.python.org/tutorials/packaging-projects/\">Tutorial on Packaging and\nDistributing Projects</a>.</p>\n</div>\n<div class=\"section\" id=\"s-using-your-own-package\">\n<span id=\"using-your-own-package\"></span><h2>Using your own package<a class=\"headerlink\" href=\"#using-your-own-package\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Since we moved the <code class=\"docutils literal notranslate\"><span class=\"pre\">polls</span></code> directory out of the project, it\u2019s no longer\nworking. We\u2019ll now fix this by installing our new <code class=\"docutils literal notranslate\"><span class=\"pre\">django-polls</span></code> package.</p>\n<div class=\"admonition-installing-as-a-user-library admonition\">\n<p class=\"first admonition-title\">Installing as a user library</p>\n<p>The following steps install <code class=\"docutils literal notranslate\"><span class=\"pre\">django-polls</span></code> as a user library. Per-user\ninstalls have a lot of advantages over installing the package system-wide,\nsuch as being usable on systems where you don\u2019t have administrator access\nas well as preventing the package from affecting system services and other\nusers of the machine.</p>\n<p class=\"last\">Note that per-user installations can still affect the behavior of system\ntools that run as that user, so using a virtual environment is a more robust\nsolution (see below).</p>\n</div>\n<ol class=\"arabic\">\n<li><p class=\"first\">To install the package, use pip (you already <a class=\"reference internal\" href=\"#installing-reusable-apps-prerequisites\"><span class=\"std std-ref\">installed it</span></a>, right?):</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>python -m pip install --user django-polls/dist/django-polls-0.1.tar.gz\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">With luck, your Django project should now work correctly again. Run the\nserver again to confirm this.</p>\n</li>\n<li><p class=\"first\">To uninstall the package, use pip:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>python -m pip uninstall django-polls\n</pre></div>\n</div>\n</li>\n</ol>\n</div>\n<div class=\"section\" id=\"s-publishing-your-app\">\n<span id=\"publishing-your-app\"></span><h2>Publishing your app<a class=\"headerlink\" href=\"#publishing-your-app\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Now that we\u2019ve packaged and tested <code class=\"docutils literal notranslate\"><span class=\"pre\">django-polls</span></code>, it\u2019s ready to share with\nthe world! If this wasn\u2019t just an example, you could now:</p>\n<ul class=\"simple\">\n<li>Email the package to a friend.</li>\n<li>Upload the package on your website.</li>\n<li>Post the package on a public repository, such as <a class=\"reference external\" href=\"https://pypi.org/\">the Python Package Index\n(PyPI)</a>. <a class=\"reference external\" href=\"https://packaging.python.org\">packaging.python.org</a> has <a class=\"reference external\" href=\"https://packaging.python.org/tutorials/packaging-projects/#uploading-the-distribution-archives\">a good\ntutorial</a>\nfor doing this.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-installing-python-packages-with-a-virtual-environment\">\n<span id=\"installing-python-packages-with-a-virtual-environment\"></span><h2>Installing Python packages with a virtual environment<a class=\"headerlink\" href=\"#installing-python-packages-with-a-virtual-environment\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Earlier, we installed the polls app as a user library. This has some\ndisadvantages:</p>\n<ul class=\"simple\">\n<li>Modifying the user libraries can affect other Python software on your system.</li>\n<li>You won\u2019t be able to run multiple versions of this package (or others with\nthe same name).</li>\n</ul>\n<p>Typically, these situations only arise once you\u2019re maintaining several Django\nprojects. When they do, the best solution is to use <a class=\"reference external\" href=\"https://docs.python.org/3/tutorial/venv.html\" title=\"(in Python v3.11)\"><span class=\"xref std std-doc\">venv</span></a>. This tool allows you to maintain multiple isolated\nPython environments, each with its own copy of the libraries and package\nnamespace.</p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["intro/whatsnext", "What to read next", "N", "next"], ["intro/tutorial08", "Writing your first Django app, part 8", "P", "previous"]], "sourcename": "intro/reusable-apps.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Advanced tutorial: How to write reusable apps</a><ul>\n<li><a class=\"reference internal\" href=\"#reusability-matters\">Reusability matters</a></li>\n<li><a class=\"reference internal\" href=\"#your-project-and-your-reusable-app\">Your project and your reusable app</a></li>\n<li><a class=\"reference internal\" href=\"#installing-some-prerequisites\">Installing some prerequisites</a></li>\n<li><a class=\"reference internal\" href=\"#packaging-your-app\">Packaging your app</a></li>\n<li><a class=\"reference internal\" href=\"#using-your-own-package\">Using your own package</a></li>\n<li><a class=\"reference internal\" href=\"#publishing-your-app\">Publishing your app</a></li>\n<li><a class=\"reference internal\" href=\"#installing-python-packages-with-a-virtual-environment\">Installing Python packages with a virtual environment</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "intro/reusable-apps", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}