{"parents": [{"link": "../", "title": "\u201cHow-to\u201d guides"}], "prev": {"link": "../static-files/deployment/", "title": "How to deploy static files"}, "next": {"link": "../writing-migrations/", "title": "How to create database migrations"}, "title": "How to install Django on Windows", "meta": {}, "body": "<div class=\"section\" id=\"s-how-to-install-django-on-windows\">\n<span id=\"how-to-install-django-on-windows\"></span><h1>How to install Django on Windows<a class=\"headerlink\" href=\"#how-to-install-django-on-windows\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This document will guide you through installing Python 3.11 and Django on\nWindows. It also provides instructions for setting up a virtual environment,\nwhich makes it easier to work on Python projects. This is meant as a beginner\u2019s\nguide for users working on Django projects and does not reflect how Django\nshould be installed when developing patches for Django itself.</p>\n<p>The steps in this guide have been tested with Windows 10. In other\nversions, the steps would be similar. You will need to be familiar with using\nthe Windows command prompt.</p>\n<div class=\"section\" id=\"s-install-python\">\n<span id=\"s-install-python-windows\"></span><span id=\"install-python\"></span><span id=\"install-python-windows\"></span><h2>Install Python<a class=\"headerlink\" href=\"#install-python\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Django is a Python web framework, thus requiring Python to be installed on your\nmachine. At the time of writing, Python 3.11 is the latest version.</p>\n<p>To install Python on your machine go to <a class=\"reference external\" href=\"https://www.python.org/downloads/\">https://www.python.org/downloads/</a>. The\nwebsite should offer you a download button for the latest Python version.\nDownload the executable installer and run it. Check the boxes next to \u201cInstall\nlauncher for all users (recommended)\u201d then click \u201cInstall Now\u201d.</p>\n<p>After installation, open the command prompt and check that the Python version\nmatches the version you installed by executing:</p>\n<div class=\"highlight-doscon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py --version\n</pre></div>\n</div>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p class=\"last\">For more details, see <a class=\"reference external\" href=\"https://docs.python.org/3/using/windows.html\" title=\"(in Python v3.11)\"><span>Using Python on Windows</span></a> documentation.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-about-pip\">\n<span id=\"about-pip\"></span><h2>About <code class=\"docutils literal notranslate\"><span class=\"pre\">pip</span></code><a class=\"headerlink\" href=\"#about-pip\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p><a class=\"reference external\" href=\"https://pypi.org/project/pip/\">pip</a> is a package manager for Python and is included by default with the\nPython installer. It helps to install and uninstall Python packages\n(such as Django!). For the rest of the installation, we\u2019ll use <code class=\"docutils literal notranslate\"><span class=\"pre\">pip</span></code> to\ninstall Python packages from the command line.</p>\n</div>\n<div class=\"section\" id=\"s-setting-up-a-virtual-environment\">\n<span id=\"s-virtualenvironment\"></span><span id=\"setting-up-a-virtual-environment\"></span><span id=\"virtualenvironment\"></span><h2>Setting up a virtual environment<a class=\"headerlink\" href=\"#setting-up-a-virtual-environment\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>It is best practice to provide a dedicated environment for each Django project\nyou create. There are many options to manage environments and packages within\nthe Python ecosystem, some of which are recommended in the <a class=\"reference external\" href=\"https://packaging.python.org/guides/tool-recommendations/\">Python\ndocumentation</a>.\nPython itself comes with <a class=\"reference external\" href=\"https://docs.python.org/3/tutorial/venv.html\" title=\"(in Python v3.11)\"><span class=\"xref std std-doc\">venv</span></a> for managing\nenvironments which we will use for this guide.</p>\n<p>To create a virtual environment for your project, open a new command prompt,\nnavigate to the folder where you want to create your project and then enter the\nfollowing:</p>\n<div class=\"highlight-doscon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py -m venv project-name\n</pre></div>\n</div>\n<p>This will create a folder called \u2018project-name\u2019 if it does not already exist\nand set up the virtual environment. To activate the environment, run:</p>\n<div class=\"highlight-doscon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> project-name\\Scripts\\activate.bat\n</pre></div>\n</div>\n<p>The virtual environment will be activated and you\u2019ll see \u201c(project-name)\u201d next\nto the command prompt to designate that. Each time you start a new command\nprompt, you\u2019ll need to activate the environment again.</p>\n</div>\n<div class=\"section\" id=\"s-install-django\">\n<span id=\"install-django\"></span><h2>Install Django<a class=\"headerlink\" href=\"#install-django\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Django can be installed easily using <code class=\"docutils literal notranslate\"><span class=\"pre\">pip</span></code> within your virtual environment.</p>\n<p>In the command prompt, ensure your virtual environment is active, and execute\nthe following command:</p>\n<div class=\"highlight-doscon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py -m pip install Django\n</pre></div>\n</div>\n<p>This will download and install the latest Django release.</p>\n<p>After the installation has completed, you can verify your Django installation\nby executing <code class=\"docutils literal notranslate\"><span class=\"pre\">django-admin</span> <span class=\"pre\">--version</span></code> in the command prompt.</p>\n<p>See <a class=\"reference internal\" href=\"../../topics/install/#database-installation\"><span class=\"std std-ref\">Get your database running</span></a> for information on database installation\nwith Django.</p>\n</div>\n<div class=\"section\" id=\"s-colored-terminal-output\">\n<span id=\"colored-terminal-output\"></span><h2>Colored terminal output<a class=\"headerlink\" href=\"#colored-terminal-output\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>A quality-of-life feature adds colored (rather than monochrome) output to the\nterminal. In modern terminals this should work for both CMD and PowerShell. If\nfor some reason this needs to be disabled, set the environmental variable\n<span class=\"target\" id=\"index-0\"></span><a class=\"reference internal\" href=\"../../ref/django-admin/#envvar-DJANGO_COLORS\"><code class=\"xref std std-envvar docutils literal notranslate\"><span class=\"pre\">DJANGO_COLORS</span></code></a> to <code class=\"docutils literal notranslate\"><span class=\"pre\">nocolor</span></code>.</p>\n<p>On older Windows versions, or legacy terminals, <a class=\"reference external\" href=\"https://pypi.org/project/colorama/\">colorama</a> must be\ninstalled to enable syntax coloring:</p>\n<div class=\"highlight-doscon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py -m pip install colorama\n</pre></div>\n</div>\n<p>See <a class=\"reference internal\" href=\"../../ref/django-admin/#syntax-coloring\"><span class=\"std std-ref\">Syntax coloring</span></a> for more information on color settings.</p>\n</div>\n<div class=\"section\" id=\"s-common-pitfalls\">\n<span id=\"common-pitfalls\"></span><h2>Common pitfalls<a class=\"headerlink\" href=\"#common-pitfalls\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul>\n<li><p class=\"first\">If <code class=\"docutils literal notranslate\"><span class=\"pre\">django-admin</span></code> only displays the help text no matter what arguments\nit is given, there is probably a problem with the file association in\nWindows. Check if there is more than one environment variable set for\nrunning Python scripts in <code class=\"docutils literal notranslate\"><span class=\"pre\">PATH</span></code>. This usually occurs when there is more\nthan one Python version installed.</p>\n</li>\n<li><p class=\"first\">If you are connecting to the internet behind a proxy, there might be problems\nin running the command <code class=\"docutils literal notranslate\"><span class=\"pre\">py</span> <span class=\"pre\">-m</span> <span class=\"pre\">pip</span> <span class=\"pre\">install</span> <span class=\"pre\">Django</span></code>. Set the environment\nvariables for proxy configuration in the command prompt as follows:</p>\n<div class=\"highlight-doscon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> <span class=\"k\">set</span> <span class=\"nv\">http_proxy</span><span class=\"p\">=</span>http://username:password@proxyserver:proxyport\n<span class=\"gp\">...\\&gt;</span> <span class=\"k\">set</span> <span class=\"nv\">https_proxy</span><span class=\"p\">=</span>https://username:password@proxyserver:proxyport\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">In general, Django assumes that <code class=\"docutils literal notranslate\"><span class=\"pre\">UTF-8</span></code> encoding is used for I/O. This may\ncause problems if your system is set to use a different encoding. Recent\nversions of Python allow setting the <span class=\"target\" id=\"index-1\"></span><a class=\"reference external\" href=\"https://docs.python.org/3/using/cmdline.html#envvar-PYTHONUTF8\" title=\"(in Python v3.11)\"><code class=\"xref std std-envvar docutils literal notranslate\"><span class=\"pre\">PYTHONUTF8</span></code></a> environment\nvariable in order to force a <code class=\"docutils literal notranslate\"><span class=\"pre\">UTF-8</span></code> encoding. Windows 10 also provides a\nsystem-wide setting by checking <code class=\"docutils literal notranslate\"><span class=\"pre\">Use</span> <span class=\"pre\">Unicode</span> <span class=\"pre\">UTF-8</span> <span class=\"pre\">for</span> <span class=\"pre\">worldwide</span> <span class=\"pre\">language</span>\n<span class=\"pre\">support</span></code> in <span class=\"menuselection\">Language \u2023 Administrative Language Settings\n\u2023 Change system locale</span> in system settings.</p>\n</li>\n</ul>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["howto/writing-migrations", "How to create database migrations", "N", "next"], ["howto/static-files/deployment", "How to deploy static files", "P", "previous"]], "sourcename": "howto/windows.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">How to install Django on Windows</a><ul>\n<li><a class=\"reference internal\" href=\"#install-python\">Install Python</a></li>\n<li><a class=\"reference internal\" href=\"#about-pip\">About <code class=\"docutils literal notranslate\"><span class=\"pre\">pip</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#setting-up-a-virtual-environment\">Setting up a virtual environment</a></li>\n<li><a class=\"reference internal\" href=\"#install-django\">Install Django</a></li>\n<li><a class=\"reference internal\" href=\"#colored-terminal-output\">Colored terminal output</a></li>\n<li><a class=\"reference internal\" href=\"#common-pitfalls\">Common pitfalls</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "howto/windows", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
