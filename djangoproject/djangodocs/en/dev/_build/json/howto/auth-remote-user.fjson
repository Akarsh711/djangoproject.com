{"parents": [{"link": "../", "title": "\u201cHow-to\u201d guides"}], "prev": {"link": "../", "title": "\u201cHow-to\u201d guides"}, "next": {"link": "../csrf/", "title": "How to use Django\u2019s CSRF protection"}, "title": "How to authenticate using <code class=\"docutils literal notranslate\"><span class=\"pre\">REMOTE_USER</span></code>", "meta": {}, "body": "<div class=\"section\" id=\"s-how-to-authenticate-using-remote-user\">\n<span id=\"how-to-authenticate-using-remote-user\"></span><h1>How to authenticate using <code class=\"docutils literal notranslate\"><span class=\"pre\">REMOTE_USER</span></code><a class=\"headerlink\" href=\"#how-to-authenticate-using-remote-user\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This document describes how to make use of external authentication sources\n(where the web server sets the <code class=\"docutils literal notranslate\"><span class=\"pre\">REMOTE_USER</span></code> environment variable) in your\nDjango applications.  This type of authentication solution is typically seen on\nintranet sites, with single sign-on solutions such as IIS and Integrated\nWindows Authentication or Apache and <a class=\"reference external\" href=\"https://httpd.apache.org/docs/2.2/mod/mod_authnz_ldap.html\">mod_authnz_ldap</a>, <a class=\"reference external\" href=\"https://www.apereo.org/projects/cas\">CAS</a>, <a class=\"reference external\" href=\"http://weblogin.org\">Cosign</a>,\n<a class=\"reference external\" href=\"https://uit.stanford.edu/service/authentication\">WebAuth</a>, <a class=\"reference external\" href=\"https://sourceforge.net/projects/mod-auth-sspi\">mod_auth_sspi</a>, etc.</p>\n<p>When the web server takes care of authentication it typically sets the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">REMOTE_USER</span></code> environment variable for use in the underlying application.  In\nDjango, <code class=\"docutils literal notranslate\"><span class=\"pre\">REMOTE_USER</span></code> is made available in the <a class=\"reference internal\" href=\"../../ref/request-response/#django.http.HttpRequest.META\" title=\"django.http.HttpRequest.META\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">request.META</span></code></a> attribute.  Django can be configured to make\nuse of the <code class=\"docutils literal notranslate\"><span class=\"pre\">REMOTE_USER</span></code> value using the <code class=\"docutils literal notranslate\"><span class=\"pre\">RemoteUserMiddleware</span></code>\nor <code class=\"docutils literal notranslate\"><span class=\"pre\">PersistentRemoteUserMiddleware</span></code>, and\n<a class=\"reference internal\" href=\"../../ref/contrib/auth/#django.contrib.auth.backends.RemoteUserBackend\" title=\"django.contrib.auth.backends.RemoteUserBackend\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RemoteUserBackend</span></code></a> classes found in\n<a class=\"reference internal\" href=\"../../topics/auth/#module-django.contrib.auth\" title=\"django.contrib.auth: Django's authentication framework.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.auth</span></code></a>.</p>\n<div class=\"section\" id=\"s-configuration\">\n<span id=\"configuration\"></span><h2>Configuration<a class=\"headerlink\" href=\"#configuration\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>First, you must add the\n<a class=\"reference internal\" href=\"../../ref/middleware/#django.contrib.auth.middleware.RemoteUserMiddleware\" title=\"django.contrib.auth.middleware.RemoteUserMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.contrib.auth.middleware.RemoteUserMiddleware</span></code></a> to the\n<a class=\"reference internal\" href=\"../../ref/settings/#std-setting-MIDDLEWARE\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">MIDDLEWARE</span></code></a> setting <strong>after</strong> the\n<a class=\"reference internal\" href=\"../../ref/middleware/#django.contrib.auth.middleware.AuthenticationMiddleware\" title=\"django.contrib.auth.middleware.AuthenticationMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.contrib.auth.middleware.AuthenticationMiddleware</span></code></a>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">MIDDLEWARE</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">&quot;...&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;django.contrib.auth.middleware.AuthenticationMiddleware&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;django.contrib.auth.middleware.RemoteUserMiddleware&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;...&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>Next, you must replace the <a class=\"reference internal\" href=\"../../ref/contrib/auth/#django.contrib.auth.backends.ModelBackend\" title=\"django.contrib.auth.backends.ModelBackend\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelBackend</span></code></a>\nwith <a class=\"reference internal\" href=\"../../ref/contrib/auth/#django.contrib.auth.backends.RemoteUserBackend\" title=\"django.contrib.auth.backends.RemoteUserBackend\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RemoteUserBackend</span></code></a> in the\n<a class=\"reference internal\" href=\"../../ref/settings/#std-setting-AUTHENTICATION_BACKENDS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">AUTHENTICATION_BACKENDS</span></code></a> setting:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">AUTHENTICATION_BACKENDS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">&quot;django.contrib.auth.backends.RemoteUserBackend&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>With this setup, <code class=\"docutils literal notranslate\"><span class=\"pre\">RemoteUserMiddleware</span></code> will detect the username in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">request.META['REMOTE_USER']</span></code> and will authenticate and auto-login that user\nusing the <a class=\"reference internal\" href=\"../../ref/contrib/auth/#django.contrib.auth.backends.RemoteUserBackend\" title=\"django.contrib.auth.backends.RemoteUserBackend\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RemoteUserBackend</span></code></a>.</p>\n<p>Be aware that this particular setup disables authentication with the default\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ModelBackend</span></code>. This means that if the <code class=\"docutils literal notranslate\"><span class=\"pre\">REMOTE_USER</span></code> value is not set\nthen the user is unable to log in, even using Django\u2019s admin interface.\nAdding <code class=\"docutils literal notranslate\"><span class=\"pre\">'django.contrib.auth.backends.ModelBackend'</span></code> to the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">AUTHENTICATION_BACKENDS</span></code> list will use <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelBackend</span></code> as a fallback\nif <code class=\"docutils literal notranslate\"><span class=\"pre\">REMOTE_USER</span></code> is absent, which will solve these issues.</p>\n<p>Django\u2019s user management, such as the views in <code class=\"docutils literal notranslate\"><span class=\"pre\">contrib.admin</span></code> and\nthe <a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-createsuperuser\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">createsuperuser</span></code></a> management command, doesn\u2019t integrate with\nremote users. These interfaces work with users stored in the database\nregardless of <code class=\"docutils literal notranslate\"><span class=\"pre\">AUTHENTICATION_BACKENDS</span></code>.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p>Since the <code class=\"docutils literal notranslate\"><span class=\"pre\">RemoteUserBackend</span></code> inherits from <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelBackend</span></code>, you will\nstill have all of the same permissions checking that is implemented in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ModelBackend</span></code>.</p>\n<p class=\"last\">Users with <a class=\"reference internal\" href=\"../../ref/contrib/auth/#django.contrib.auth.models.User.is_active\" title=\"django.contrib.auth.models.User.is_active\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_active=False</span></code></a> won\u2019t be allowed to\nauthenticate. Use\n<a class=\"reference internal\" href=\"../../ref/contrib/auth/#django.contrib.auth.backends.AllowAllUsersRemoteUserBackend\" title=\"django.contrib.auth.backends.AllowAllUsersRemoteUserBackend\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AllowAllUsersRemoteUserBackend</span></code></a> if\nyou want to allow them to.</p>\n</div>\n<p>If your authentication mechanism uses a custom HTTP header and not\n<code class=\"docutils literal notranslate\"><span class=\"pre\">REMOTE_USER</span></code>, you can subclass <code class=\"docutils literal notranslate\"><span class=\"pre\">RemoteUserMiddleware</span></code> and set the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">header</span></code> attribute to the desired <code class=\"docutils literal notranslate\"><span class=\"pre\">request.META</span></code> key.  For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.middleware</span> <span class=\"kn\">import</span> <span class=\"n\">RemoteUserMiddleware</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">CustomHeaderMiddleware</span><span class=\"p\">(</span><span class=\"n\">RemoteUserMiddleware</span><span class=\"p\">):</span>\n    <span class=\"n\">header</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;HTTP_AUTHUSER&quot;</span>\n</pre></div>\n</div>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p>Be very careful if using a <code class=\"docutils literal notranslate\"><span class=\"pre\">RemoteUserMiddleware</span></code> subclass with a custom\nHTTP header. You must be sure that your front-end web server always sets or\nstrips that header based on the appropriate authentication checks, never\npermitting an end-user to submit a fake (or \u201cspoofed\u201d) header value. Since\nthe HTTP headers <code class=\"docutils literal notranslate\"><span class=\"pre\">X-Auth-User</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">X-Auth_User</span></code> (for example) both\nnormalize to the <code class=\"docutils literal notranslate\"><span class=\"pre\">HTTP_X_AUTH_USER</span></code> key in <code class=\"docutils literal notranslate\"><span class=\"pre\">request.META</span></code>, you must\nalso check that your web server doesn\u2019t allow a spoofed header using\nunderscores in place of dashes.</p>\n<p class=\"last\">This warning doesn\u2019t apply to <code class=\"docutils literal notranslate\"><span class=\"pre\">RemoteUserMiddleware</span></code> in its default\nconfiguration with <code class=\"docutils literal notranslate\"><span class=\"pre\">header</span> <span class=\"pre\">=</span> <span class=\"pre\">'REMOTE_USER'</span></code>, since a key that doesn\u2019t\nstart with <code class=\"docutils literal notranslate\"><span class=\"pre\">HTTP_</span></code> in <code class=\"docutils literal notranslate\"><span class=\"pre\">request.META</span></code> can only be set by your WSGI\nserver, not directly from an HTTP request header.</p>\n</div>\n<p>If you need more control, you can create your own authentication backend\nthat inherits from <a class=\"reference internal\" href=\"../../ref/contrib/auth/#django.contrib.auth.backends.RemoteUserBackend\" title=\"django.contrib.auth.backends.RemoteUserBackend\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RemoteUserBackend</span></code></a> and\noverride one or more of its attributes and methods.</p>\n</div>\n<div class=\"section\" id=\"s-using-remote-user-on-login-pages-only\">\n<span id=\"s-persistent-remote-user-middleware-howto\"></span><span id=\"using-remote-user-on-login-pages-only\"></span><span id=\"persistent-remote-user-middleware-howto\"></span><h2>Using <code class=\"docutils literal notranslate\"><span class=\"pre\">REMOTE_USER</span></code> on login pages only<a class=\"headerlink\" href=\"#using-remote-user-on-login-pages-only\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">RemoteUserMiddleware</span></code> authentication middleware assumes that the HTTP\nrequest header <code class=\"docutils literal notranslate\"><span class=\"pre\">REMOTE_USER</span></code> is present with all authenticated requests. That\nmight be expected and practical when Basic HTTP Auth with <code class=\"docutils literal notranslate\"><span class=\"pre\">htpasswd</span></code> or\nsimilar mechanisms are used, but with Negotiate (GSSAPI/Kerberos) or other\nresource intensive authentication methods, the authentication in the front-end\nHTTP server is usually only set up for one or a few login URLs, and after\nsuccessful authentication, the application is supposed to maintain the\nauthenticated session itself.</p>\n<p><a class=\"reference internal\" href=\"../../ref/middleware/#django.contrib.auth.middleware.PersistentRemoteUserMiddleware\" title=\"django.contrib.auth.middleware.PersistentRemoteUserMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PersistentRemoteUserMiddleware</span></code></a>\nprovides support for this use case. It will maintain the authenticated session\nuntil explicit logout by the user. The class can be used as a drop-in\nreplacement of <a class=\"reference internal\" href=\"../../ref/middleware/#django.contrib.auth.middleware.RemoteUserMiddleware\" title=\"django.contrib.auth.middleware.RemoteUserMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RemoteUserMiddleware</span></code></a>\nin the documentation above.</p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["howto/csrf", "How to use Django\u2019s CSRF protection", "N", "next"], ["howto/index", "\u201cHow-to\u201d guides", "P", "previous"]], "sourcename": "howto/auth-remote-user.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">How to authenticate using <code class=\"docutils literal notranslate\"><span class=\"pre\">REMOTE_USER</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#configuration\">Configuration</a></li>\n<li><a class=\"reference internal\" href=\"#using-remote-user-on-login-pages-only\">Using <code class=\"docutils literal notranslate\"><span class=\"pre\">REMOTE_USER</span></code> on login pages only</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "howto/auth-remote-user", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}