{"parents": [{"link": "../", "title": "Release notes"}], "prev": {"link": "../2.2.1/", "title": "Django 2.2.1 release notes"}, "next": {"link": "../2.1.15/", "title": "Django 2.1.15 release notes"}, "title": "Django 2.2 release notes", "meta": {}, "body": "<div class=\"section\" id=\"s-django-2-2-release-notes\">\n<span id=\"django-2-2-release-notes\"></span><h1>Django 2.2 release notes<a class=\"headerlink\" href=\"#django-2-2-release-notes\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p><em>April 1, 2019</em></p>\n<p>Welcome to Django 2.2!</p>\n<p>These release notes cover the <a class=\"reference internal\" href=\"#whats-new-2-2\"><span class=\"std std-ref\">new features</span></a>, as well as\nsome <a class=\"reference internal\" href=\"#backwards-incompatible-2-2\"><span class=\"std std-ref\">backwards incompatible changes</span></a> you\u2019ll\nwant to be aware of when upgrading from Django 2.1 or earlier. We\u2019ve\n<a class=\"reference internal\" href=\"#deprecated-features-2-2\"><span class=\"std std-ref\">begun the deprecation process for some features</span></a>.</p>\n<p>See the <a class=\"reference internal\" href=\"../../howto/upgrade-version/\"><span class=\"doc\">How to upgrade Django to a newer version</span></a> guide if you\u2019re updating an existing\nproject.</p>\n<p>Django 2.2 is designated as a <a class=\"reference internal\" href=\"../../internals/release-process/#term-Long-term-support-release\"><span class=\"xref std std-term\">long-term support release</span></a>. It will receive security updates for at least\nthree years after its release. Support for the previous LTS, Django 1.11, will\nend in April 2020.</p>\n<div class=\"section\" id=\"s-python-compatibility\">\n<span id=\"python-compatibility\"></span><h2>Python compatibility<a class=\"headerlink\" href=\"#python-compatibility\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Django 2.2 supports Python 3.5, 3.6, 3.7, 3.8 (as of 2.2.8), and 3.9 (as of\n2.2.17). We <strong>highly recommend</strong> and only officially support the latest release\nof each series.</p>\n</div>\n<div class=\"section\" id=\"s-what-s-new-in-django-2-2\">\n<span id=\"s-whats-new-2-2\"></span><span id=\"what-s-new-in-django-2-2\"></span><span id=\"whats-new-2-2\"></span><h2>What\u2019s new in Django 2.2<a class=\"headerlink\" href=\"#what-s-new-in-django-2-2\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-constraints\">\n<span id=\"constraints\"></span><h3>Constraints<a class=\"headerlink\" href=\"#constraints\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The new <a class=\"reference internal\" href=\"../../ref/models/constraints/#django.db.models.CheckConstraint\" title=\"django.db.models.CheckConstraint\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CheckConstraint</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/models/constraints/#django.db.models.UniqueConstraint\" title=\"django.db.models.UniqueConstraint\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">UniqueConstraint</span></code></a> classes enable adding custom\ndatabase constraints. Constraints are added to models using the\n<a class=\"reference internal\" href=\"../../ref/models/options/#django.db.models.Options.constraints\" title=\"django.db.models.Options.constraints\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Meta.constraints</span></code></a> option.</p>\n</div>\n<div class=\"section\" id=\"s-minor-features\">\n<span id=\"minor-features\"></span><h3>Minor features<a class=\"headerlink\" href=\"#minor-features\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<div class=\"section\" id=\"s-django-contrib-admin\">\n<span id=\"django-contrib-admin\"></span><h4><a class=\"reference internal\" href=\"../../ref/contrib/admin/#module-django.contrib.admin\" title=\"django.contrib.admin: Django's admin site.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.admin</span></code></a><a class=\"headerlink\" href=\"#django-contrib-admin\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Added a CSS class to the column headers of\n<a class=\"reference internal\" href=\"../../ref/contrib/admin/#django.contrib.admin.TabularInline\" title=\"django.contrib.admin.TabularInline\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TabularInline</span></code></a>.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-contrib-auth\">\n<span id=\"django-contrib-auth\"></span><h4><a class=\"reference internal\" href=\"../../topics/auth/#module-django.contrib.auth\" title=\"django.contrib.auth: Django's authentication framework.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.auth</span></code></a><a class=\"headerlink\" href=\"#django-contrib-auth\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> is now passed as the first positional argument to\n<a class=\"reference internal\" href=\"../../ref/contrib/auth/#django.contrib.auth.backends.RemoteUserBackend.configure_user\" title=\"django.contrib.auth.backends.RemoteUserBackend.configure_user\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">RemoteUserBackend.configure_user()</span></code></a>, if it accepts it.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-contrib-gis\">\n<span id=\"django-contrib-gis\"></span><h4><a class=\"reference internal\" href=\"../../ref/contrib/gis/#module-django.contrib.gis\" title=\"django.contrib.gis: Geographic Information System (GIS) extensions for Django\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.gis</span></code></a><a class=\"headerlink\" href=\"#django-contrib-gis\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Added Oracle support for the\n<a class=\"reference internal\" href=\"../../ref/contrib/gis/functions/#django.contrib.gis.db.models.functions.Envelope\" title=\"django.contrib.gis.db.models.functions.Envelope\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Envelope</span></code></a> function.</li>\n<li>Added SpatiaLite support for the <a class=\"reference internal\" href=\"../../ref/contrib/gis/geoquerysets/#std-fieldlookup-coveredby\"><code class=\"xref std std-lookup docutils literal notranslate\"><span class=\"pre\">coveredby</span></code></a> and <a class=\"reference internal\" href=\"../../ref/contrib/gis/geoquerysets/#std-fieldlookup-covers\"><code class=\"xref std std-lookup docutils literal notranslate\"><span class=\"pre\">covers</span></code></a>\nlookups.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-contrib-postgres\">\n<span id=\"django-contrib-postgres\"></span><h4><a class=\"reference internal\" href=\"../../ref/contrib/postgres/#module-django.contrib.postgres\" title=\"django.contrib.postgres: PostgreSQL-specific fields and features\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.postgres</span></code></a><a class=\"headerlink\" href=\"#django-contrib-postgres\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">ordering</span></code> argument for\n<a class=\"reference internal\" href=\"../../ref/contrib/postgres/aggregates/#django.contrib.postgres.aggregates.ArrayAgg\" title=\"django.contrib.postgres.aggregates.ArrayAgg\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ArrayAgg</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/contrib/postgres/aggregates/#django.contrib.postgres.aggregates.StringAgg\" title=\"django.contrib.postgres.aggregates.StringAgg\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StringAgg</span></code></a> determines the\nordering of the aggregated elements.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/contrib/postgres/indexes/#django.contrib.postgres.indexes.BTreeIndex\" title=\"django.contrib.postgres.indexes.BTreeIndex\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BTreeIndex</span></code></a>,\n<a class=\"reference internal\" href=\"../../ref/contrib/postgres/indexes/#django.contrib.postgres.indexes.HashIndex\" title=\"django.contrib.postgres.indexes.HashIndex\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HashIndex</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/contrib/postgres/indexes/#django.contrib.postgres.indexes.SpGistIndex\" title=\"django.contrib.postgres.indexes.SpGistIndex\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SpGistIndex</span></code></a> classes allow\ncreating <code class=\"docutils literal notranslate\"><span class=\"pre\">B-Tree</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">hash</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">SP-GiST</span></code> indexes in the database.</li>\n<li><a class=\"reference internal\" href=\"../../ref/contrib/postgres/indexes/#django.contrib.postgres.indexes.BrinIndex\" title=\"django.contrib.postgres.indexes.BrinIndex\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BrinIndex</span></code></a> now has the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">autosummarize</span></code> parameter.</li>\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">search_type</span></code> parameter of\n<a class=\"reference internal\" href=\"../../ref/contrib/postgres/search/#django.contrib.postgres.search.SearchQuery\" title=\"django.contrib.postgres.search.SearchQuery\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SearchQuery</span></code></a> allows searching for\na phrase or raw expression.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-contrib-staticfiles\">\n<span id=\"django-contrib-staticfiles\"></span><h4><a class=\"reference internal\" href=\"../../ref/contrib/staticfiles/#module-django.contrib.staticfiles\" title=\"django.contrib.staticfiles: An app for handling static files.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.staticfiles</span></code></a><a class=\"headerlink\" href=\"#django-contrib-staticfiles\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Added path matching to the <a class=\"reference internal\" href=\"../../ref/contrib/staticfiles/#cmdoption-collectstatic-ignore\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">collectstatic</span> <span class=\"pre\">--ignore</span></code></a> option so that\npatterns like <code class=\"docutils literal notranslate\"><span class=\"pre\">/vendor/*.js</span></code> can be used.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-database-backends\">\n<span id=\"database-backends\"></span><h4>Database backends<a class=\"headerlink\" href=\"#database-backends\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Added result streaming for <a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.iterator\" title=\"django.db.models.query.QuerySet.iterator\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">QuerySet.iterator()</span></code></a> on SQLite.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-generic-views\">\n<span id=\"generic-views\"></span><h4>Generic Views<a class=\"headerlink\" href=\"#generic-views\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <a class=\"reference internal\" href=\"../../ref/class-based-views/base/#django.views.generic.base.View.setup\" title=\"django.views.generic.base.View.setup\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">View.setup</span></code></a> hook\ninitializes view attributes before calling\n<a class=\"reference internal\" href=\"../../ref/class-based-views/base/#django.views.generic.base.View.dispatch\" title=\"django.views.generic.base.View.dispatch\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">dispatch()</span></code></a>. It allows mixins to set up\ninstance attributes for reuse in child classes.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-internationalization\">\n<span id=\"internationalization\"></span><h4>Internationalization<a class=\"headerlink\" href=\"#internationalization\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Added support and translations for the Armenian language.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-management-commands\">\n<span id=\"management-commands\"></span><h4>Management Commands<a class=\"headerlink\" href=\"#management-commands\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <a class=\"reference internal\" href=\"../../ref/django-admin/#cmdoption-force-color\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">--force-color</span></code></a> option forces colorization of the command\noutput.</li>\n<li><a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-inspectdb\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">inspectdb</span></code></a> now creates models for foreign tables on PostgreSQL.</li>\n<li><a class=\"reference internal\" href=\"../../ref/django-admin/#cmdoption-inspectdb-include-views\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">inspectdb</span> <span class=\"pre\">--include-views</span></code></a> now creates models for materialized views\non Oracle and PostgreSQL.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/django-admin/#cmdoption-inspectdb-include-partitions\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">inspectdb</span> <span class=\"pre\">--include-partitions</span></code></a> option allows creating\nmodels for partition tables on PostgreSQL. In older versions, models are\ncreated child tables instead the parent.</li>\n<li><a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-inspectdb\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">inspectdb</span></code></a> now introspects <a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.DurationField\" title=\"django.db.models.DurationField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DurationField</span></code></a>\nfor Oracle and PostgreSQL, and <a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.AutoField\" title=\"django.db.models.AutoField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AutoField</span></code></a> for\nSQLite.</li>\n<li>On Oracle, <a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-dbshell\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">dbshell</span></code></a> is wrapped with <code class=\"docutils literal notranslate\"><span class=\"pre\">rlwrap</span></code>, if available.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">rlwrap</span></code> provides a command history and editing of keyboard input.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/django-admin/#cmdoption-makemigrations-no-header\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">makemigrations</span> <span class=\"pre\">--no-header</span></code></a> option avoids writing header\ncomments in generated migration file(s). This option is also available for\n<a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-squashmigrations\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">squashmigrations</span></code></a>.</li>\n<li><a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-runserver\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">runserver</span></code></a> can now use <a class=\"reference external\" href=\"https://facebook.github.io/watchman/\">Watchman</a> to improve the performance of\nwatching a large number of files for changes.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-migrations\">\n<span id=\"migrations\"></span><h4>Migrations<a class=\"headerlink\" href=\"#migrations\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <a class=\"reference internal\" href=\"../../ref/django-admin/#cmdoption-migrate-plan\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">migrate</span> <span class=\"pre\">--plan</span></code></a> option prints the list of migration\noperations that will be performed.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">NoneType</span></code> can now be serialized in migrations.</li>\n<li>You can now <a class=\"reference internal\" href=\"../../topics/migrations/#custom-migration-serializers\"><span class=\"std std-ref\">register custom serializers</span></a>\nfor migrations.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-models\">\n<span id=\"models\"></span><h4>Models<a class=\"headerlink\" href=\"#models\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Added support for PostgreSQL operator classes (<a class=\"reference internal\" href=\"../../ref/models/indexes/#django.db.models.Index.opclasses\" title=\"django.db.models.Index.opclasses\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Index.opclasses</span></code></a>).</li>\n<li>Added support for partial indexes (<a class=\"reference internal\" href=\"../../ref/models/indexes/#django.db.models.Index.condition\" title=\"django.db.models.Index.condition\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Index.condition</span></code></a>).</li>\n<li>Added the <a class=\"reference internal\" href=\"../../ref/models/database-functions/#django.db.models.functions.NullIf\" title=\"django.db.models.functions.NullIf\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">NullIf</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/models/database-functions/#django.db.models.functions.Reverse\" title=\"django.db.models.functions.Reverse\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Reverse</span></code></a> database functions, as well as\nmany <a class=\"reference internal\" href=\"../../ref/models/database-functions/#math-functions\"><span class=\"std std-ref\">math database functions</span></a>.</li>\n<li>Setting the new <code class=\"docutils literal notranslate\"><span class=\"pre\">ignore_conflicts</span></code> parameter of\n<a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.bulk_create\" title=\"django.db.models.query.QuerySet.bulk_create\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">QuerySet.bulk_create()</span></code></a> to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> tells the database to ignore\nfailure to insert rows that fail uniqueness constraints or other checks.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/models/database-functions/#django.db.models.functions.ExtractIsoYear\" title=\"django.db.models.functions.ExtractIsoYear\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ExtractIsoYear</span></code></a> function extracts\nISO-8601 week-numbering years from <a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.DateField\" title=\"django.db.models.DateField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DateField</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.DateTimeField\" title=\"django.db.models.DateTimeField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code></a>, and the new <a class=\"reference internal\" href=\"../../ref/models/querysets/#std-fieldlookup-iso_year\"><code class=\"xref std std-lookup docutils literal notranslate\"><span class=\"pre\">iso_year</span></code></a>\nlookup allows querying by an ISO-8601 week-numbering year.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.bulk_update\" title=\"django.db.models.query.QuerySet.bulk_update\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">QuerySet.bulk_update()</span></code></a> method allows efficiently updating\nspecific fields on multiple model instances.</li>\n<li>Django no longer always starts a transaction when a single query is being\nperformed, such as <code class=\"docutils literal notranslate\"><span class=\"pre\">Model.save()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">QuerySet.update()</span></code>, and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Model.delete()</span></code>. This improves the performance of autocommit by reducing\nthe number of database round trips.</li>\n<li>Added SQLite support for the <a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.StdDev\" title=\"django.db.models.StdDev\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StdDev</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.Variance\" title=\"django.db.models.Variance\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Variance</span></code></a> functions.</li>\n<li>The handling of <code class=\"docutils literal notranslate\"><span class=\"pre\">DISTINCT</span></code> aggregation is added to the\n<a class=\"reference internal\" href=\"../../ref/models/expressions/#django.db.models.Aggregate\" title=\"django.db.models.Aggregate\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Aggregate</span></code></a> class. Adding <a class=\"reference internal\" href=\"../../ref/models/expressions/#django.db.models.Aggregate.allow_distinct\" title=\"django.db.models.Aggregate.allow_distinct\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">allow_distinct</span> <span class=\"pre\">=</span>\n<span class=\"pre\">True</span></code></a> as a class attribute on\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Aggregate</span></code> subclasses allows a <code class=\"docutils literal notranslate\"><span class=\"pre\">distinct</span></code> keyword argument to be\nspecified on initialization to ensure that the aggregate function is only\ncalled for each distinct value of <code class=\"docutils literal notranslate\"><span class=\"pre\">expressions</span></code>.</li>\n<li>The <a class=\"reference internal\" href=\"../../ref/models/relations/#django.db.models.fields.related.RelatedManager.add\" title=\"django.db.models.fields.related.RelatedManager.add\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">RelatedManager.add()</span></code></a>, <a class=\"reference internal\" href=\"../../ref/models/relations/#django.db.models.fields.related.RelatedManager.create\" title=\"django.db.models.fields.related.RelatedManager.create\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">create()</span></code></a>,\n<a class=\"reference internal\" href=\"../../ref/models/relations/#django.db.models.fields.related.RelatedManager.remove\" title=\"django.db.models.fields.related.RelatedManager.remove\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">remove()</span></code></a>,  <a class=\"reference internal\" href=\"../../ref/models/relations/#django.db.models.fields.related.RelatedManager.set\" title=\"django.db.models.fields.related.RelatedManager.set\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">set()</span></code></a>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">get_or_create()</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">update_or_create()</span></code> methods are now allowed on\nmany-to-many relationships with intermediate models. The new\n<code class=\"docutils literal notranslate\"><span class=\"pre\">through_defaults</span></code> argument is used to specify values for new intermediate\nmodel instance(s).</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-requests-and-responses\">\n<span id=\"requests-and-responses\"></span><h4>Requests and Responses<a class=\"headerlink\" href=\"#requests-and-responses\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Added <a class=\"reference internal\" href=\"../../ref/request-response/#django.http.HttpRequest.headers\" title=\"django.http.HttpRequest.headers\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">HttpRequest.headers</span></code></a> to allow simple access to a request\u2019s\nheaders.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-serialization\">\n<span id=\"serialization\"></span><h4>Serialization<a class=\"headerlink\" href=\"#serialization\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>You can now deserialize data using natural keys containing <a class=\"reference internal\" href=\"../../topics/serialization/#natural-keys-and-forward-references\"><span class=\"std std-ref\">forward\nreferences</span></a> by passing\n<code class=\"docutils literal notranslate\"><span class=\"pre\">handle_forward_references=True</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">serializers.deserialize()</span></code>.\nAdditionally, <a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-loaddata\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">loaddata</span></code></a> handles forward references automatically.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-tests\">\n<span id=\"tests\"></span><h4>Tests<a class=\"headerlink\" href=\"#tests\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.SimpleTestCase.assertURLEqual\" title=\"django.test.SimpleTestCase.assertURLEqual\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">SimpleTestCase.assertURLEqual()</span></code></a> assertion checks for a given\nURL, ignoring the ordering of the query string.\n<a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.SimpleTestCase.assertRedirects\" title=\"django.test.SimpleTestCase.assertRedirects\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">assertRedirects()</span></code></a> uses the new assertion.</li>\n<li>The test <a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.Client\" title=\"django.test.Client\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Client</span></code></a> now supports automatic JSON\nserialization of list and tuple <code class=\"docutils literal notranslate\"><span class=\"pre\">data</span></code> when\n<code class=\"docutils literal notranslate\"><span class=\"pre\">content_type='application/json'</span></code>.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-TEST_ORACLE_MANAGED_FILES\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">ORACLE_MANAGED_FILES</span></code></a> test\ndatabase setting allows using Oracle Managed Files (OMF) tablespaces.</li>\n<li>Deferrable database constraints are now checked at the end of each\n<a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.TestCase\" title=\"django.test.TestCase\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TestCase</span></code></a> test on SQLite 3.20+, just like on other\nbackends that support deferrable constraints. These checks aren\u2019t implemented\nfor older versions of SQLite because they would require expensive table\nintrospection there.</li>\n<li><a class=\"reference internal\" href=\"../../topics/testing/advanced/#django.test.runner.DiscoverRunner\" title=\"django.test.runner.DiscoverRunner\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DiscoverRunner</span></code></a> now skips the setup of databases\nnot <a class=\"reference internal\" href=\"../../topics/testing/tools/#testing-multi-db\"><span class=\"std std-ref\">referenced by tests</span></a>.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-urls\">\n<span id=\"urls\"></span><h4>URLs<a class=\"headerlink\" href=\"#urls\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <a class=\"reference internal\" href=\"../../ref/urlresolvers/#django.urls.ResolverMatch.route\" title=\"django.urls.ResolverMatch.route\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ResolverMatch.route</span></code></a> attribute stores the route of the\nmatching URL pattern.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-validators\">\n<span id=\"validators\"></span><h4>Validators<a class=\"headerlink\" href=\"#validators\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"../../ref/validators/#django.core.validators.MaxValueValidator\" title=\"django.core.validators.MaxValueValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MaxValueValidator</span></code></a>, <a class=\"reference internal\" href=\"../../ref/validators/#django.core.validators.MinValueValidator\" title=\"django.core.validators.MinValueValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MinValueValidator</span></code></a>,\n<a class=\"reference internal\" href=\"../../ref/validators/#django.core.validators.MinLengthValidator\" title=\"django.core.validators.MinLengthValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MinLengthValidator</span></code></a>, and <a class=\"reference internal\" href=\"../../ref/validators/#django.core.validators.MaxLengthValidator\" title=\"django.core.validators.MaxLengthValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MaxLengthValidator</span></code></a> now accept\na callable <code class=\"docutils literal notranslate\"><span class=\"pre\">limit_value</span></code>.</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"s-backwards-incompatible-changes-in-2-2\">\n<span id=\"s-backwards-incompatible-2-2\"></span><span id=\"backwards-incompatible-changes-in-2-2\"></span><span id=\"backwards-incompatible-2-2\"></span><h2>Backwards incompatible changes in 2.2<a class=\"headerlink\" href=\"#backwards-incompatible-changes-in-2-2\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-database-backend-api\">\n<span id=\"database-backend-api\"></span><h3>Database backend API<a class=\"headerlink\" href=\"#database-backend-api\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>This section describes changes that may be needed in third-party database\nbackends.</p>\n<ul class=\"simple\">\n<li>Third-party database backends must implement support for table check\nconstraints or set <code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseFeatures.supports_table_check_constraints</span></code> to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</li>\n<li>Third party database backends must implement support for ignoring\nconstraints or uniqueness errors while inserting or set\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseFeatures.supports_ignore_conflicts</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</li>\n<li>Third party database backends must implement introspection for\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DurationField</span></code> or set <code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseFeatures.can_introspect_duration_field</span></code>\nto <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseFeatures.uses_savepoints</span></code> now defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</li>\n<li>Third party database backends must implement support for partial indexes or\nset <code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseFeatures.supports_partial_indexes</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseIntrospection.table_name_converter()</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">column_name_converter()</span></code> are removed. Third party database backends may\nneed to instead implement <code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseIntrospection.identifier_converter()</span></code>.\nIn that case, the constraint names that\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseIntrospection.get_constraints()</span></code> returns must be normalized by\n<code class=\"docutils literal notranslate\"><span class=\"pre\">identifier_converter()</span></code>.</li>\n<li>SQL generation for indexes is moved from <a class=\"reference internal\" href=\"../../ref/models/indexes/#django.db.models.Index\" title=\"django.db.models.Index\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Index</span></code></a> to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">SchemaEditor</span></code> and these <code class=\"docutils literal notranslate\"><span class=\"pre\">SchemaEditor</span></code> methods are added:<ul>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">_create_primary_key_sql()</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">_delete_primary_key_sql()</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">_delete_index_sql()</span></code> (to pair with <code class=\"docutils literal notranslate\"><span class=\"pre\">_create_index_sql()</span></code>)</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">_delete_unique_sql</span></code> (to pair with <code class=\"docutils literal notranslate\"><span class=\"pre\">_create_unique_sql()</span></code>)</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">_delete_fk_sql()</span></code> (to pair with <code class=\"docutils literal notranslate\"><span class=\"pre\">_create_fk_sql()</span></code>)</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">_create_check_sql()</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">_delete_check_sql()</span></code></li>\n</ul>\n</li>\n<li>The third argument of <code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseWrapper.__init__()</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">allow_thread_sharing</span></code>, is removed.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-admin-actions-are-no-longer-collected-from-base-modeladmin-classes\">\n<span id=\"admin-actions-are-no-longer-collected-from-base-modeladmin-classes\"></span><h3>Admin actions are no longer collected from base <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> classes<a class=\"headerlink\" href=\"#admin-actions-are-no-longer-collected-from-base-modeladmin-classes\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>For example, in older versions of Django:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">BaseAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">actions</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">]</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">SubAdmin</span><span class=\"p\">(</span><span class=\"n\">BaseAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">actions</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;b&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">SubAdmin</span></code> would have actions <code class=\"docutils literal notranslate\"><span class=\"pre\">'a'</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">'b'</span></code>.</p>\n<p>Now <code class=\"docutils literal notranslate\"><span class=\"pre\">actions</span></code> follows standard Python inheritance. To get the same result as\nbefore:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">SubAdmin</span><span class=\"p\">(</span><span class=\"n\">BaseAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">actions</span> <span class=\"o\">=</span> <span class=\"n\">BaseAdmin</span><span class=\"o\">.</span><span class=\"n\">actions</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"s2\">&quot;b&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-id1\">\n<span id=\"id1\"></span><h3><a class=\"reference internal\" href=\"../../ref/contrib/gis/#module-django.contrib.gis\" title=\"django.contrib.gis: Geographic Information System (GIS) extensions for Django\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.gis</span></code></a><a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<ul class=\"simple\">\n<li>Support for GDAL 1.9 and 1.10 is dropped.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-transactiontestcase-serialized-data-loading\">\n<span id=\"transactiontestcase-serialized-data-loading\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">TransactionTestCase</span></code> serialized data loading<a class=\"headerlink\" href=\"#transactiontestcase-serialized-data-loading\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Initial data migrations are now loaded in\n<a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.TransactionTestCase\" title=\"django.test.TransactionTestCase\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TransactionTestCase</span></code></a> at the end of the test, after the\ndatabase flush. In older versions, this data was loaded at the beginning of the\ntest, but this prevents the <a class=\"reference internal\" href=\"../../ref/django-admin/#cmdoption-test-keepdb\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">test</span> <span class=\"pre\">--keepdb</span></code></a> option from working\nproperly (the database was empty at the end of the whole test suite). This\nchange shouldn\u2019t have an impact on your tests unless you\u2019ve customized\n<a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.TransactionTestCase\" title=\"django.test.TransactionTestCase\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TransactionTestCase</span></code></a>\u2019s internals.</p>\n</div>\n<div class=\"section\" id=\"s-sqlparse-is-required-dependency\">\n<span id=\"sqlparse-is-required-dependency\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">sqlparse</span></code> is required dependency<a class=\"headerlink\" href=\"#sqlparse-is-required-dependency\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>To simplify a few parts of Django\u2019s database handling, <a class=\"reference external\" href=\"https://pypi.org/project/sqlparse/\">sqlparse 0.2.2+</a> is now a required dependency. It\u2019s automatically installed along\nwith Django.</p>\n</div>\n<div class=\"section\" id=\"s-cached-property-aliases\">\n<span id=\"cached-property-aliases\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">cached_property</span></code> aliases<a class=\"headerlink\" href=\"#cached-property-aliases\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>In usage like:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.utils.functional</span> <span class=\"kn\">import</span> <span class=\"n\">cached_property</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">A</span><span class=\"p\">:</span>\n    <span class=\"nd\">@cached_property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">base</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"o\">...</span>\n\n    <span class=\"n\">alias</span> <span class=\"o\">=</span> <span class=\"n\">base</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">alias</span></code> is not cached. Where the problem can be detected (Python 3.6 and\nlater), such usage now raises <code class=\"docutils literal notranslate\"><span class=\"pre\">TypeError:</span> <span class=\"pre\">Cannot</span> <span class=\"pre\">assign</span> <span class=\"pre\">the</span> <span class=\"pre\">same</span>\n<span class=\"pre\">cached_property</span> <span class=\"pre\">to</span> <span class=\"pre\">two</span> <span class=\"pre\">different</span> <span class=\"pre\">names</span> <span class=\"pre\">('base'</span> <span class=\"pre\">and</span> <span class=\"pre\">'alias').</span></code></p>\n<p>Use this instead:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">operator</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">A</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n\n    <span class=\"n\">alias</span> <span class=\"o\">=</span> <span class=\"nb\">property</span><span class=\"p\">(</span><span class=\"n\">operator</span><span class=\"o\">.</span><span class=\"n\">attrgetter</span><span class=\"p\">(</span><span class=\"s2\">&quot;base&quot;</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-permissions-for-proxy-models\">\n<span id=\"permissions-for-proxy-models\"></span><h3>Permissions for proxy models<a class=\"headerlink\" href=\"#permissions-for-proxy-models\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p><a class=\"reference internal\" href=\"../../topics/auth/default/#proxy-models-permissions-topic\"><span class=\"std std-ref\">Permissions for proxy models</span></a> are now\ncreated using the content type of the proxy model rather than the content type\nof the concrete model. A migration will update existing permissions when you\nrun <a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-migrate\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">migrate</span></code></a>.</p>\n<p>In the admin, the change is transparent for proxy models having the same\n<code class=\"docutils literal notranslate\"><span class=\"pre\">app_label</span></code> as their concrete model. However, in older versions, users with\npermissions for a proxy model with a <em>different</em> <code class=\"docutils literal notranslate\"><span class=\"pre\">app_label</span></code> than its\nconcrete model couldn\u2019t access the model in the admin. That\u2019s now fixed, but\nyou might want to audit the permissions assignments for such proxy models\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">[add|view|change|delete]_myproxy</span></code>) prior to upgrading to ensure the new\naccess is appropriate.</p>\n<p>Finally, proxy model permission strings must be updated to use their own\n<code class=\"docutils literal notranslate\"><span class=\"pre\">app_label</span></code>. For example, for <code class=\"docutils literal notranslate\"><span class=\"pre\">app.MyProxyModel</span></code> inheriting from\n<code class=\"docutils literal notranslate\"><span class=\"pre\">other_app.ConcreteModel</span></code>, update\n<code class=\"docutils literal notranslate\"><span class=\"pre\">user.has_perm('other_app.add_myproxymodel')</span></code> to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">user.has_perm('app.add_myproxymodel')</span></code>.</p>\n</div>\n<div class=\"section\" id=\"s-merging-of-form-media-assets\">\n<span id=\"merging-of-form-media-assets\"></span><h3>Merging of form <code class=\"docutils literal notranslate\"><span class=\"pre\">Media</span></code> assets<a class=\"headerlink\" href=\"#merging-of-form-media-assets\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Form <code class=\"docutils literal notranslate\"><span class=\"pre\">Media</span></code> assets are now merged using a topological sort algorithm, as the\nold pairwise merging algorithm is insufficient for some cases. CSS and\nJavaScript files which don\u2019t include their dependencies may now be sorted\nincorrectly (where the old algorithm produced results correctly by\ncoincidence).</p>\n<p>Audit all <code class=\"docutils literal notranslate\"><span class=\"pre\">Media</span></code> classes for any missing dependencies. For example,\nwidgets depending on <code class=\"docutils literal notranslate\"><span class=\"pre\">django.jQuery</span></code> must specify\n<code class=\"docutils literal notranslate\"><span class=\"pre\">js=['admin/js/jquery.init.js',</span> <span class=\"pre\">...]</span></code> when <a class=\"reference internal\" href=\"../../topics/forms/media/#assets-as-a-static-definition\"><span class=\"std std-ref\">declaring form media assets</span></a>.</p>\n</div>\n<div class=\"section\" id=\"s-miscellaneous\">\n<span id=\"miscellaneous\"></span><h3>Miscellaneous<a class=\"headerlink\" href=\"#miscellaneous\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<ul>\n<li><p class=\"first\">To improve readability, the <code class=\"docutils literal notranslate\"><span class=\"pre\">UUIDField</span></code> form field now displays values with\ndashes, e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">550e8400-e29b-41d4-a716-446655440000</span></code> instead of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">550e8400e29b41d4a716446655440000</span></code>.</p>\n</li>\n<li><p class=\"first\">On SQLite, <code class=\"docutils literal notranslate\"><span class=\"pre\">PositiveIntegerField</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">PositiveSmallIntegerField</span></code> now\ninclude a check constraint to prevent negative values in the database. If you\nhave existing invalid data and run a migration that recreates a table, you\u2019ll\nsee <code class=\"docutils literal notranslate\"><span class=\"pre\">CHECK</span> <span class=\"pre\">constraint</span> <span class=\"pre\">failed</span></code>.</p>\n</li>\n<li><p class=\"first\">For consistency with WSGI servers, the test client now sets the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Content-Length</span></code> header to a string rather than an integer.</p>\n</li>\n<li><p class=\"first\">The return value of <a class=\"reference internal\" href=\"../../ref/utils/#django.utils.text.slugify\" title=\"django.utils.text.slugify\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.utils.text.slugify()</span></code></a> is no longer marked as\nHTML safe.</p>\n</li>\n<li><p class=\"first\">The default truncation character used by the <a class=\"reference internal\" href=\"../../ref/templates/builtins/#std-templatefilter-urlizetrunc\"><code class=\"xref std std-tfilter docutils literal notranslate\"><span class=\"pre\">urlizetrunc</span></code></a>,\n<a class=\"reference internal\" href=\"../../ref/templates/builtins/#std-templatefilter-truncatechars\"><code class=\"xref std std-tfilter docutils literal notranslate\"><span class=\"pre\">truncatechars</span></code></a>, <a class=\"reference internal\" href=\"../../ref/templates/builtins/#std-templatefilter-truncatechars_html\"><code class=\"xref std std-tfilter docutils literal notranslate\"><span class=\"pre\">truncatechars_html</span></code></a>,\n<a class=\"reference internal\" href=\"../../ref/templates/builtins/#std-templatefilter-truncatewords\"><code class=\"xref std std-tfilter docutils literal notranslate\"><span class=\"pre\">truncatewords</span></code></a>, and <a class=\"reference internal\" href=\"../../ref/templates/builtins/#std-templatefilter-truncatewords_html\"><code class=\"xref std std-tfilter docutils literal notranslate\"><span class=\"pre\">truncatewords_html</span></code></a> template filters\nis now the real ellipsis character (<code class=\"docutils literal notranslate\"><span class=\"pre\">\u2026</span></code>) instead of 3 dots. You may have to\nadapt some test output comparisons.</p>\n</li>\n<li><p class=\"first\">Support for bytestring paths in the template filesystem loader is removed.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"../../ref/utils/#django.utils.http.urlsafe_base64_encode\" title=\"django.utils.http.urlsafe_base64_encode\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.utils.http.urlsafe_base64_encode()</span></code></a> now returns a string instead\nof a bytestring, and <a class=\"reference internal\" href=\"../../ref/utils/#django.utils.http.urlsafe_base64_decode\" title=\"django.utils.http.urlsafe_base64_decode\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.utils.http.urlsafe_base64_decode()</span></code></a> may no\nlonger be passed a bytestring.</p>\n</li>\n<li><p class=\"first\">Support for <code class=\"docutils literal notranslate\"><span class=\"pre\">cx_Oracle</span></code> &lt; 6.0 is removed.</p>\n</li>\n<li><p class=\"first\">The minimum supported version of <code class=\"docutils literal notranslate\"><span class=\"pre\">mysqlclient</span></code> is increased from 1.3.7 to\n1.3.13.</p>\n</li>\n<li><p class=\"first\">The minimum supported version of SQLite is increased from 3.7.15 to 3.8.3.</p>\n</li>\n<li><p class=\"first\">In an attempt to provide more semantic query data, <code class=\"docutils literal notranslate\"><span class=\"pre\">NullBooleanSelect</span></code> now\nrenders <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;option&gt;</span></code> values of <code class=\"docutils literal notranslate\"><span class=\"pre\">unknown</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code> instead\nof <code class=\"docutils literal notranslate\"><span class=\"pre\">1</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">2</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">3</span></code>. For backwards compatibility, the old values are\nstill accepted as data.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"../../ref/contrib/auth/#django.contrib.auth.models.Group.name\" title=\"django.contrib.auth.models.Group.name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Group.name</span></code></a> <code class=\"docutils literal notranslate\"><span class=\"pre\">max_length</span></code>\nis increased from 80 to 150 characters.</p>\n</li>\n<li><p class=\"first\">Tests that violate deferrable database constraints now error when run on\nSQLite 3.20+, just like on other backends that support such constraints.</p>\n</li>\n<li><p class=\"first\">To catch usage mistakes, the test <a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.Client\" title=\"django.test.Client\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Client</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/utils/#django.utils.http.urlencode\" title=\"django.utils.http.urlencode\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.utils.http.urlencode()</span></code></a> now raise <code class=\"docutils literal notranslate\"><span class=\"pre\">TypeError</span></code> if <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> is\npassed as a value to encode because <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> can\u2019t be encoded in GET and POST\ndata. Either pass an empty string or omit the value.</p>\n</li>\n<li><p class=\"first\">The <a class=\"reference internal\" href=\"../../ref/contrib/sitemaps/#django-admin-ping_google\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">ping_google</span></code></a> management command now defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">https</span></code>\ninstead of <code class=\"docutils literal notranslate\"><span class=\"pre\">http</span></code> for the sitemap\u2019s URL. If your site uses http, use the\nnew <a class=\"reference internal\" href=\"../../ref/contrib/sitemaps/#cmdoption-ping_google-sitemap-uses-http\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">ping_google</span> <span class=\"pre\">--sitemap-uses-http</span></code></a> option. If you use the\n<a class=\"reference internal\" href=\"../../ref/contrib/sitemaps/#django.contrib.sitemaps.ping_google\" title=\"django.contrib.sitemaps.ping_google\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">ping_google()</span></code></a> function, set the new\n<code class=\"docutils literal notranslate\"><span class=\"pre\">sitemap_uses_https</span></code> argument to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-runserver\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">runserver</span></code></a> no longer supports <code class=\"docutils literal notranslate\"><span class=\"pre\">pyinotify</span></code> (replaced by Watchman).</p>\n</li>\n<li><p class=\"first\">The <a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.Avg\" title=\"django.db.models.Avg\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Avg</span></code></a>, <a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.StdDev\" title=\"django.db.models.StdDev\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StdDev</span></code></a>, and\n<a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.Variance\" title=\"django.db.models.Variance\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Variance</span></code></a> aggregate functions now return a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Decimal</span></code> instead of a <code class=\"docutils literal notranslate\"><span class=\"pre\">float</span></code> when the input is <code class=\"docutils literal notranslate\"><span class=\"pre\">Decimal</span></code>.</p>\n</li>\n<li><p class=\"first\">Tests will fail on SQLite if apps without migrations have relations to apps\nwith migrations. This has been a documented restriction since migrations were\nadded in Django 1.7, but it fails more reliably now. You\u2019ll see tests failing\nwith errors like <code class=\"docutils literal notranslate\"><span class=\"pre\">no</span> <span class=\"pre\">such</span> <span class=\"pre\">table:</span> <span class=\"pre\">&lt;app_label&gt;_&lt;model&gt;</span></code>. This was observed\nwith several third-party apps that had models in tests without migrations.\nYou must add migrations for such models.</p>\n</li>\n<li><p class=\"first\">Providing an integer in the <code class=\"docutils literal notranslate\"><span class=\"pre\">key</span></code> argument of the <a class=\"reference internal\" href=\"../../topics/cache/#django.core.cache.cache.delete\" title=\"django.core.cache.cache.delete\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">cache.delete()</span></code></a> or\n<a class=\"reference internal\" href=\"../../topics/cache/#django.core.cache.cache.get\" title=\"django.core.cache.cache.get\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">cache.get()</span></code></a> now raises <a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#ValueError\" title=\"(in Python v3.11)\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValueError</span></code></a>.</p>\n</li>\n<li><p class=\"first\">Plural equations for some languages are changed, because the latest versions\nfrom Transifex are incorporated.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">The ability to handle <code class=\"docutils literal notranslate\"><span class=\"pre\">.po</span></code> files containing different plural equations\nfor the same language was added in Django 2.2.12.</p>\n</div>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"section\" id=\"s-features-deprecated-in-2-2\">\n<span id=\"s-deprecated-features-2-2\"></span><span id=\"features-deprecated-in-2-2\"></span><span id=\"deprecated-features-2-2\"></span><h2>Features deprecated in 2.2<a class=\"headerlink\" href=\"#features-deprecated-in-2-2\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-model-meta-ordering-will-no-longer-affect-group-by-queries\">\n<span id=\"model-meta-ordering-will-no-longer-affect-group-by-queries\"></span><h3>Model <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta.ordering</span></code> will no longer affect <code class=\"docutils literal notranslate\"><span class=\"pre\">GROUP</span> <span class=\"pre\">BY</span></code> queries<a class=\"headerlink\" href=\"#model-meta-ordering-will-no-longer-affect-group-by-queries\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>A model\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta.ordering</span></code> affecting <code class=\"docutils literal notranslate\"><span class=\"pre\">GROUP</span> <span class=\"pre\">BY</span></code> queries (such as\n<code class=\"docutils literal notranslate\"><span class=\"pre\">.annotate().values()</span></code>) is a common source of confusion. Such queries now\nissue a deprecation warning with the advice to add an <code class=\"docutils literal notranslate\"><span class=\"pre\">order_by()</span></code> to retain\nthe current query. <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta.ordering</span></code> will be ignored in such queries starting\nin Django 3.1.</p>\n</div>\n<div class=\"section\" id=\"s-id2\">\n<span id=\"id2\"></span><h3>Miscellaneous<a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.timezone.FixedOffset</span></code> is deprecated in favor of\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.timezone\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">datetime.timezone</span></code></a>.</li>\n<li>The undocumented <code class=\"docutils literal notranslate\"><span class=\"pre\">QuerySetPaginator</span></code> alias of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.core.paginator.Paginator</span></code> is deprecated.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">FloatRangeField</span></code> model and form fields in <code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.postgres</span></code>\nare deprecated in favor of a new name, <code class=\"docutils literal notranslate\"><span class=\"pre\">DecimalRangeField</span></code>, to match the\nunderlying <code class=\"docutils literal notranslate\"><span class=\"pre\">numrange</span></code> data type used in the database.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">FILE_CHARSET</span></code> setting is deprecated. Starting with Django 3.1, files\nread from disk must be UTF-8 encoded.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.staticfiles.storage.CachedStaticFilesStorage</span></code> is\ndeprecated due to the intractable problems that it has. Use\n<a class=\"reference internal\" href=\"../../ref/contrib/staticfiles/#django.contrib.staticfiles.storage.ManifestStaticFilesStorage\" title=\"django.contrib.staticfiles.storage.ManifestStaticFilesStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ManifestStaticFilesStorage</span></code></a> or a third-party cloud storage instead.</li>\n<li><a class=\"reference internal\" href=\"../../ref/contrib/auth/#django.contrib.auth.backends.RemoteUserBackend.configure_user\" title=\"django.contrib.auth.backends.RemoteUserBackend.configure_user\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">RemoteUserBackend.configure_user()</span></code></a> is now passed <code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code> as the\nfirst positional argument, if it accepts it. Support for overrides that don\u2019t\naccept it will be removed in Django 3.1.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">SimpleTestCase.allow_database_queries</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">TransactionTestCase.multi_db</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">TestCase.multi_db</span></code>\nattributes are deprecated in favor of <a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.SimpleTestCase.databases\" title=\"django.test.SimpleTestCase.databases\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">SimpleTestCase.databases</span></code></a>,\n<a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.TransactionTestCase.databases\" title=\"django.test.TransactionTestCase.databases\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">TransactionTestCase.databases</span></code></a>, and <a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.TestCase.databases\" title=\"django.test.TestCase.databases\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">TestCase.databases</span></code></a>.\nThese new attributes allow databases dependencies to be declared in order to\nprevent unexpected queries against non-default databases to leak state\nbetween tests. The previous behavior of <code class=\"docutils literal notranslate\"><span class=\"pre\">allow_database_queries=True</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">multi_db=True</span></code> can be achieved by setting <code class=\"docutils literal notranslate\"><span class=\"pre\">databases='__all__'</span></code>.</li>\n</ul>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["releases/2.1.15", "Django 2.1.15 release notes", "N", "next"], ["releases/2.2.1", "Django 2.2.1 release notes", "P", "previous"]], "sourcename": "releases/2.2.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Django 2.2 release notes</a><ul>\n<li><a class=\"reference internal\" href=\"#python-compatibility\">Python compatibility</a></li>\n<li><a class=\"reference internal\" href=\"#what-s-new-in-django-2-2\">What\u2019s new in Django 2.2</a><ul>\n<li><a class=\"reference internal\" href=\"#constraints\">Constraints</a></li>\n<li><a class=\"reference internal\" href=\"#minor-features\">Minor features</a><ul>\n<li><a class=\"reference internal\" href=\"#django-contrib-admin\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.admin</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-contrib-auth\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.auth</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-contrib-gis\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.gis</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-contrib-postgres\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.postgres</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-contrib-staticfiles\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.staticfiles</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#database-backends\">Database backends</a></li>\n<li><a class=\"reference internal\" href=\"#generic-views\">Generic Views</a></li>\n<li><a class=\"reference internal\" href=\"#internationalization\">Internationalization</a></li>\n<li><a class=\"reference internal\" href=\"#management-commands\">Management Commands</a></li>\n<li><a class=\"reference internal\" href=\"#migrations\">Migrations</a></li>\n<li><a class=\"reference internal\" href=\"#models\">Models</a></li>\n<li><a class=\"reference internal\" href=\"#requests-and-responses\">Requests and Responses</a></li>\n<li><a class=\"reference internal\" href=\"#serialization\">Serialization</a></li>\n<li><a class=\"reference internal\" href=\"#tests\">Tests</a></li>\n<li><a class=\"reference internal\" href=\"#urls\">URLs</a></li>\n<li><a class=\"reference internal\" href=\"#validators\">Validators</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#backwards-incompatible-changes-in-2-2\">Backwards incompatible changes in 2.2</a><ul>\n<li><a class=\"reference internal\" href=\"#database-backend-api\">Database backend API</a></li>\n<li><a class=\"reference internal\" href=\"#admin-actions-are-no-longer-collected-from-base-modeladmin-classes\">Admin actions are no longer collected from base <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> classes</a></li>\n<li><a class=\"reference internal\" href=\"#id1\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.gis</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#transactiontestcase-serialized-data-loading\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TransactionTestCase</span></code> serialized data loading</a></li>\n<li><a class=\"reference internal\" href=\"#sqlparse-is-required-dependency\"><code class=\"docutils literal notranslate\"><span class=\"pre\">sqlparse</span></code> is required dependency</a></li>\n<li><a class=\"reference internal\" href=\"#cached-property-aliases\"><code class=\"docutils literal notranslate\"><span class=\"pre\">cached_property</span></code> aliases</a></li>\n<li><a class=\"reference internal\" href=\"#permissions-for-proxy-models\">Permissions for proxy models</a></li>\n<li><a class=\"reference internal\" href=\"#merging-of-form-media-assets\">Merging of form <code class=\"docutils literal notranslate\"><span class=\"pre\">Media</span></code> assets</a></li>\n<li><a class=\"reference internal\" href=\"#miscellaneous\">Miscellaneous</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#features-deprecated-in-2-2\">Features deprecated in 2.2</a><ul>\n<li><a class=\"reference internal\" href=\"#model-meta-ordering-will-no-longer-affect-group-by-queries\">Model <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta.ordering</span></code> will no longer affect <code class=\"docutils literal notranslate\"><span class=\"pre\">GROUP</span> <span class=\"pre\">BY</span></code> queries</a></li>\n<li><a class=\"reference internal\" href=\"#id2\">Miscellaneous</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "releases/2.2", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
