{"parents": [{"link": "../", "title": "Release notes"}], "prev": {"link": "../1.8.4/", "title": "Django 1.8.4 release notes"}, "next": {"link": "../1.8.2/", "title": "Django 1.8.2 release notes"}, "title": "Django 1.8.3 release notes", "meta": {}, "body": "<div class=\"section\" id=\"s-django-1-8-3-release-notes\">\n<span id=\"django-1-8-3-release-notes\"></span><h1>Django 1.8.3 release notes<a class=\"headerlink\" href=\"#django-1-8-3-release-notes\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p><em>July 8, 2015</em></p>\n<p>Django 1.8.3 fixes several security issues and bugs in 1.8.2.</p>\n<p>Also, <code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.deprecation.RemovedInDjango20Warning</span></code> was renamed to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">RemovedInDjango110Warning</span></code> as the version roadmap was revised to 1.9, 1.10,\n1.11 (LTS), 2.0 (drops Python 2 support). For backwards compatibility,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">RemovedInDjango20Warning</span></code> remains as an importable alias.</p>\n<div class=\"section\" id=\"s-denial-of-service-possibility-by-filling-session-store\">\n<span id=\"denial-of-service-possibility-by-filling-session-store\"></span><h2>Denial-of-service possibility by filling session store<a class=\"headerlink\" href=\"#denial-of-service-possibility-by-filling-session-store\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>In previous versions of Django, the session backends created a new empty record\nin the session storage anytime <code class=\"docutils literal notranslate\"><span class=\"pre\">request.session</span></code> was accessed and there was a\nsession key provided in the request cookies that didn\u2019t already have a session\nrecord. This could allow an attacker to easily create many new session records\nsimply by sending repeated requests with unknown session keys, potentially\nfilling up the session store or causing other users\u2019 session records to be\nevicted.</p>\n<p>The built-in session backends now create a session record only if the session\nis actually modified; empty session records are not created. Thus this\npotential DoS is now only possible if the site chooses to expose a\nsession-modifying view to anonymous users.</p>\n<p>As each built-in session backend was fixed separately (rather than a fix in the\ncore sessions framework), maintainers of third-party session backends should\ncheck whether the same vulnerability is present in their backend and correct\nit if so.</p>\n</div>\n<div class=\"section\" id=\"s-header-injection-possibility-since-validators-accept-newlines-in-input\">\n<span id=\"header-injection-possibility-since-validators-accept-newlines-in-input\"></span><h2>Header injection possibility since validators accept newlines in input<a class=\"headerlink\" href=\"#header-injection-possibility-since-validators-accept-newlines-in-input\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Some of Django\u2019s built-in validators\n(<a class=\"reference internal\" href=\"../../ref/validators/#django.core.validators.EmailValidator\" title=\"django.core.validators.EmailValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">EmailValidator</span></code></a>, most seriously) didn\u2019t\nprohibit newline characters (due to the usage of <code class=\"docutils literal notranslate\"><span class=\"pre\">$</span></code> instead of <code class=\"docutils literal notranslate\"><span class=\"pre\">\\Z</span></code> in the\nregular expressions). If you use values with newlines in HTTP response or email\nheaders, you can suffer from header injection attacks. Django itself isn\u2019t\nvulnerable because <a class=\"reference internal\" href=\"../../ref/request-response/#django.http.HttpResponse\" title=\"django.http.HttpResponse\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpResponse</span></code></a> and the mail sending\nutilities in <a class=\"reference internal\" href=\"../../topics/email/#module-django.core.mail\" title=\"django.core.mail: Helpers to easily send email.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.core.mail</span></code></a> prohibit newlines in HTTP and SMTP\nheaders, respectively. While the validators have been fixed in Django, if\nyou\u2019re creating HTTP responses or email messages in other ways, it\u2019s a good\nidea to ensure that those methods prohibit newlines as well. You might also\nwant to validate that any existing data in your application doesn\u2019t contain\nunexpected newlines.</p>\n<p><a class=\"reference internal\" href=\"../../ref/validators/#django.core.validators.validate_ipv4_address\" title=\"django.core.validators.validate_ipv4_address\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">validate_ipv4_address()</span></code></a>,\n<a class=\"reference internal\" href=\"../../ref/validators/#django.core.validators.validate_slug\" title=\"django.core.validators.validate_slug\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">validate_slug()</span></code></a>, and\n<a class=\"reference internal\" href=\"../../ref/validators/#django.core.validators.URLValidator\" title=\"django.core.validators.URLValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">URLValidator</span></code></a> are also affected, however, as\nof Django 1.6 the <code class=\"docutils literal notranslate\"><span class=\"pre\">GenericIPAddresseField</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">IPAddressField</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">SlugField</span></code>,\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">URLField</span></code> form fields which use these validators all strip the input, so\nthe possibility of newlines entering your data only exists if you are using\nthese validators outside of the form fields.</p>\n<p>The undocumented, internally unused <code class=\"docutils literal notranslate\"><span class=\"pre\">validate_integer()</span></code> function is now\nstricter as it validates using a regular expression instead of simply casting\nthe value using <code class=\"docutils literal notranslate\"><span class=\"pre\">int()</span></code> and checking if an exception was raised.</p>\n</div>\n<div class=\"section\" id=\"s-denial-of-service-possibility-in-url-validation\">\n<span id=\"denial-of-service-possibility-in-url-validation\"></span><h2>Denial-of-service possibility in URL validation<a class=\"headerlink\" href=\"#denial-of-service-possibility-in-url-validation\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p><a class=\"reference internal\" href=\"../../ref/validators/#django.core.validators.URLValidator\" title=\"django.core.validators.URLValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">URLValidator</span></code></a> included a regular expression\nthat was extremely slow to evaluate against certain invalid inputs. This regular\nexpression has been simplified and optimized.</p>\n</div>\n<div class=\"section\" id=\"s-bugfixes\">\n<span id=\"bugfixes\"></span><h2>Bugfixes<a class=\"headerlink\" href=\"#bugfixes\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul class=\"simple\">\n<li>Fixed <code class=\"docutils literal notranslate\"><span class=\"pre\">BaseRangeField.prepare_value()</span></code> to use each <code class=\"docutils literal notranslate\"><span class=\"pre\">base_field</span></code>\u2019s\n<code class=\"docutils literal notranslate\"><span class=\"pre\">prepare_value()</span></code> method (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24841\">#24841</a>).</li>\n<li>Fixed crash during <a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-makemigrations\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">makemigrations</span></code></a> if a migrations module either\nis missing <code class=\"docutils literal notranslate\"><span class=\"pre\">__init__.py</span></code> or is a file (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24848\">#24848</a>).</li>\n<li>Fixed <code class=\"docutils literal notranslate\"><span class=\"pre\">QuerySet.exists()</span></code> returning incorrect results after annotation with\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Count()</span></code> (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24835\">#24835</a>).</li>\n<li>Corrected <code class=\"docutils literal notranslate\"><span class=\"pre\">HStoreField.has_changed()</span></code> (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24844\">#24844</a>).</li>\n<li>Reverted an optimization to the CSRF template context processor which caused\na regression (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24836\">#24836</a>).</li>\n<li>Fixed a regression which caused template context processors to overwrite\nvariables set on a <code class=\"docutils literal notranslate\"><span class=\"pre\">RequestContext</span></code> after it\u2019s created (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24847\">#24847</a>).</li>\n<li>Prevented the loss of <code class=\"docutils literal notranslate\"><span class=\"pre\">null</span></code>/<code class=\"docutils literal notranslate\"><span class=\"pre\">not</span> <span class=\"pre\">null</span></code> column properties during field\nrenaming of MySQL databases (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24817\">#24817</a>).</li>\n<li>Fixed a crash when using a reverse one-to-one relation in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin.list_display</span></code> (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24851\">#24851</a>).</li>\n<li>Fixed quoting of SQL when renaming a field to <code class=\"docutils literal notranslate\"><span class=\"pre\">AutoField</span></code> in PostgreSQL\n(<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24892\">#24892</a>).</li>\n<li>Fixed lack of unique constraint when changing a field from\n<code class=\"docutils literal notranslate\"><span class=\"pre\">primary_key=True</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">unique=True</span></code> (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24893\">#24893</a>).</li>\n<li>Fixed queryset pickling when using <code class=\"docutils literal notranslate\"><span class=\"pre\">prefetch_related()</span></code> after deleting\nobjects (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24831\">#24831</a>).</li>\n<li>Allowed using <code class=\"docutils literal notranslate\"><span class=\"pre\">choices</span></code> longer than 1 day with <code class=\"docutils literal notranslate\"><span class=\"pre\">DurationField</span></code>\n(<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24897\">#24897</a>).</li>\n<li>Fixed a crash when loading squashed migrations from two apps with a\ndependency between them, where the dependent app\u2019s replaced migrations are\npartially applied (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24895\">#24895</a>).</li>\n<li>Fixed recording of applied status for squashed (replacement) migrations\n(<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24628\">#24628</a>).</li>\n<li>Fixed queryset annotations when using <code class=\"docutils literal notranslate\"><span class=\"pre\">Case</span></code> expressions with <code class=\"docutils literal notranslate\"><span class=\"pre\">exclude()</span></code>\n(<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24833\">#24833</a>).</li>\n<li>Corrected join promotion for multiple <code class=\"docutils literal notranslate\"><span class=\"pre\">Case</span></code> expressions. Annotating a\nquery with multiple  <code class=\"docutils literal notranslate\"><span class=\"pre\">Case</span></code> expressions could unexpectedly filter out\nresults (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24924\">#24924</a>).</li>\n<li>Fixed usage of transforms in subqueries (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24744\">#24744</a>).</li>\n<li>Fixed <code class=\"docutils literal notranslate\"><span class=\"pre\">SimpleTestCase.assertRaisesMessage()</span></code> on Python 2.7.10\n(<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24903\">#24903</a>).</li>\n<li>Provided better backwards compatibility for the <code class=\"docutils literal notranslate\"><span class=\"pre\">verbosity</span></code> argument in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">optparse</span></code> management commands by casting it to an integer\n(<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24769\">#24769</a>).</li>\n<li>Fixed <code class=\"docutils literal notranslate\"><span class=\"pre\">prefetch_related()</span></code> on databases other than PostgreSQL for models\nusing UUID primary keys (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24912\">#24912</a>).</li>\n<li>Fixed removing <code class=\"docutils literal notranslate\"><span class=\"pre\">unique_together</span></code> constraints on MySQL (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24972\">#24972</a>).</li>\n<li>Fixed crash when uploading images with MIME types that Pillow doesn\u2019t detect,\nsuch as bitmap, in <code class=\"docutils literal notranslate\"><span class=\"pre\">forms.ImageField</span></code> (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24948\">#24948</a>).</li>\n<li>Fixed a regression when deleting a model through the admin that has a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">GenericRelation</span></code> with a <code class=\"docutils literal notranslate\"><span class=\"pre\">related_query_name</span></code> (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24940\">#24940</a>).</li>\n<li>Reallowed non-ASCII values for <code class=\"docutils literal notranslate\"><span class=\"pre\">ForeignKey.related_name</span></code> on Python 3 by\nfixing the false positive system check (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/25016\">#25016</a>).</li>\n<li>Fixed inline forms that use a parent object that has a <code class=\"docutils literal notranslate\"><span class=\"pre\">UUIDField</span></code> primary\nkey and a child object that has an <code class=\"docutils literal notranslate\"><span class=\"pre\">AutoField</span></code> primary key\n(<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/24958\">#24958</a>).</li>\n<li>Fixed a regression in the <code class=\"docutils literal notranslate\"><span class=\"pre\">unordered_list</span></code> template filter on certain\ninputs (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/25031\">#25031</a>).</li>\n<li>Fixed a regression in <code class=\"docutils literal notranslate\"><span class=\"pre\">URLValidator</span></code> that invalidated Punycode TLDs\n(<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/25059\">#25059</a>).</li>\n<li>Improved <code class=\"docutils literal notranslate\"><span class=\"pre\">pyinotify</span></code> <code class=\"docutils literal notranslate\"><span class=\"pre\">runserver</span></code> polling (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/23882\">#23882</a>).</li>\n</ul>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["releases/1.8.2", "Django 1.8.2 release notes", "N", "next"], ["releases/1.8.4", "Django 1.8.4 release notes", "P", "previous"]], "sourcename": "releases/1.8.3.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Django 1.8.3 release notes</a><ul>\n<li><a class=\"reference internal\" href=\"#denial-of-service-possibility-by-filling-session-store\">Denial-of-service possibility by filling session store</a></li>\n<li><a class=\"reference internal\" href=\"#header-injection-possibility-since-validators-accept-newlines-in-input\">Header injection possibility since validators accept newlines in input</a></li>\n<li><a class=\"reference internal\" href=\"#denial-of-service-possibility-in-url-validation\">Denial-of-service possibility in URL validation</a></li>\n<li><a class=\"reference internal\" href=\"#bugfixes\">Bugfixes</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "releases/1.8.3", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}