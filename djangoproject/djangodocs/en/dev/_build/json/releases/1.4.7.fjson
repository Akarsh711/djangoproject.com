{"parents": [{"link": "../", "title": "Release notes"}], "prev": {"link": "../1.4.8/", "title": "Django 1.4.8 release notes"}, "next": {"link": "../1.4.6/", "title": "Django 1.4.6 release notes"}, "title": "Django 1.4.7 release notes", "meta": {}, "body": "<div class=\"section\" id=\"s-django-1-4-7-release-notes\">\n<span id=\"django-1-4-7-release-notes\"></span><h1>Django 1.4.7 release notes<a class=\"headerlink\" href=\"#django-1-4-7-release-notes\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p><em>September 10, 2013</em></p>\n<p>Django 1.4.7 fixes one security issue present in previous Django releases in\nthe 1.4 series.</p>\n<div class=\"section\" id=\"s-directory-traversal-vulnerability-in-ssi-template-tag\">\n<span id=\"directory-traversal-vulnerability-in-ssi-template-tag\"></span><h2>Directory traversal vulnerability in <code class=\"docutils literal notranslate\"><span class=\"pre\">ssi</span></code> template tag<a class=\"headerlink\" href=\"#directory-traversal-vulnerability-in-ssi-template-tag\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>In previous versions of Django it was possible to bypass the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ALLOWED_INCLUDE_ROOTS</span></code> setting used for security with the <code class=\"docutils literal notranslate\"><span class=\"pre\">ssi</span></code>\ntemplate tag by specifying a relative path that starts with one of the allowed\nroots. For example, if <code class=\"docutils literal notranslate\"><span class=\"pre\">ALLOWED_INCLUDE_ROOTS</span> <span class=\"pre\">=</span> <span class=\"pre\">(&quot;/var/www&quot;,)</span></code> the following\nwould be possible:</p>\n<div class=\"highlight-html+django notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cp\">{%</span> <span class=\"k\">ssi</span> <span class=\"s2\">&quot;/var/www/../../etc/passwd&quot;</span> <span class=\"cp\">%}</span>\n</pre></div>\n</div>\n<p>In practice this is not a very common problem, as it would require the template\nauthor to put the <code class=\"docutils literal notranslate\"><span class=\"pre\">ssi</span></code> file in a user-controlled variable, but it\u2019s\npossible in principle.</p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["releases/1.4.6", "Django 1.4.6 release notes", "N", "next"], ["releases/1.4.8", "Django 1.4.8 release notes", "P", "previous"]], "sourcename": "releases/1.4.7.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Django 1.4.7 release notes</a><ul>\n<li><a class=\"reference internal\" href=\"#directory-traversal-vulnerability-in-ssi-template-tag\">Directory traversal vulnerability in <code class=\"docutils literal notranslate\"><span class=\"pre\">ssi</span></code> template tag</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "releases/1.4.7", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
