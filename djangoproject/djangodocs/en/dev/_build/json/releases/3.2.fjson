{"parents": [{"link": "../", "title": "Release notes"}], "prev": {"link": "../3.2.1/", "title": "Django 3.2.1 release notes"}, "next": {"link": "../3.1.14/", "title": "Django 3.1.14 release notes"}, "title": "Django 3.2 release notes", "meta": {}, "body": "<div class=\"section\" id=\"s-django-3-2-release-notes\">\n<span id=\"django-3-2-release-notes\"></span><h1>Django 3.2 release notes<a class=\"headerlink\" href=\"#django-3-2-release-notes\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p><em>April 6, 2021</em></p>\n<p>Welcome to Django 3.2!</p>\n<p>These release notes cover the <a class=\"reference internal\" href=\"#whats-new-3-2\"><span class=\"std std-ref\">new features</span></a>, as well as\nsome <a class=\"reference internal\" href=\"#backwards-incompatible-3-2\"><span class=\"std std-ref\">backwards incompatible changes</span></a> you\u2019ll\nwant to be aware of when upgrading from Django 3.1 or earlier. We\u2019ve\n<a class=\"reference internal\" href=\"#deprecated-features-3-2\"><span class=\"std std-ref\">begun the deprecation process for some features</span></a>.</p>\n<p>See the <a class=\"reference internal\" href=\"../../howto/upgrade-version/\"><span class=\"doc\">How to upgrade Django to a newer version</span></a> guide if you\u2019re updating an existing\nproject.</p>\n<p>Django 3.2 is designated as a <a class=\"reference internal\" href=\"../../internals/release-process/#term-Long-term-support-release\"><span class=\"xref std std-term\">long-term support release</span></a>. It will receive security updates for at least\nthree years after its release. Support for the previous LTS, Django 2.2, will\nend in April 2022.</p>\n<div class=\"section\" id=\"s-python-compatibility\">\n<span id=\"python-compatibility\"></span><h2>Python compatibility<a class=\"headerlink\" href=\"#python-compatibility\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Django 3.2 supports Python 3.6, 3.7, 3.8, 3.9, and 3.10 (as of 3.2.9). We\n<strong>highly recommend</strong> and only officially support the latest release of each\nseries.</p>\n</div>\n<div class=\"section\" id=\"s-what-s-new-in-django-3-2\">\n<span id=\"s-whats-new-3-2\"></span><span id=\"what-s-new-in-django-3-2\"></span><span id=\"whats-new-3-2\"></span><h2>What\u2019s new in Django 3.2<a class=\"headerlink\" href=\"#what-s-new-in-django-3-2\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-automatic-appconfig-discovery\">\n<span id=\"automatic-appconfig-discovery\"></span><h3>Automatic <a class=\"reference internal\" href=\"../../ref/applications/#django.apps.AppConfig\" title=\"django.apps.AppConfig\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AppConfig</span></code></a> discovery<a class=\"headerlink\" href=\"#automatic-appconfig-discovery\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Most pluggable applications define an <a class=\"reference internal\" href=\"../../ref/applications/#django.apps.AppConfig\" title=\"django.apps.AppConfig\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AppConfig</span></code></a> subclass\nin an <code class=\"docutils literal notranslate\"><span class=\"pre\">apps.py</span></code> submodule. Many define a <code class=\"docutils literal notranslate\"><span class=\"pre\">default_app_config</span></code> variable\npointing to this class in their <code class=\"docutils literal notranslate\"><span class=\"pre\">__init__.py</span></code>.</p>\n<p>When the <code class=\"docutils literal notranslate\"><span class=\"pre\">apps.py</span></code> submodule exists and defines a single\n<a class=\"reference internal\" href=\"../../ref/applications/#django.apps.AppConfig\" title=\"django.apps.AppConfig\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AppConfig</span></code></a> subclass, Django now uses that configuration\nautomatically, so you can remove <code class=\"docutils literal notranslate\"><span class=\"pre\">default_app_config</span></code>.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">default_app_config</span></code> made it possible to declare only the application\u2019s path\nin <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-INSTALLED_APPS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">INSTALLED_APPS</span></code></a> (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">'django.contrib.admin'</span></code>) rather than the\napp config\u2019s path (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">'django.contrib.admin.apps.AdminConfig'</span></code>). It was\nintroduced for backwards-compatibility with the former style, with the intent\nto switch the ecosystem to the latter, but the switch didn\u2019t happen.</p>\n<p>With automatic <code class=\"docutils literal notranslate\"><span class=\"pre\">AppConfig</span></code> discovery, <code class=\"docutils literal notranslate\"><span class=\"pre\">default_app_config</span></code> is no longer\nneeded. As a consequence, it\u2019s deprecated.</p>\n<p>See <a class=\"reference internal\" href=\"../../ref/applications/#configuring-applications-ref\"><span class=\"std std-ref\">Configuring applications</span></a> for full details.</p>\n</div>\n<div class=\"section\" id=\"s-customizing-type-of-auto-created-primary-keys\">\n<span id=\"customizing-type-of-auto-created-primary-keys\"></span><h3>Customizing type of auto-created primary keys<a class=\"headerlink\" href=\"#customizing-type-of-auto-created-primary-keys\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>When defining a model, if no field in a model is defined with\n<a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.Field.primary_key\" title=\"django.db.models.Field.primary_key\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">primary_key=True</span></code></a> an implicit\nprimary key is added. The type of this implicit primary key can now be\ncontrolled via the <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-DEFAULT_AUTO_FIELD\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEFAULT_AUTO_FIELD</span></code></a> setting and\n<a class=\"reference internal\" href=\"../../ref/applications/#django.apps.AppConfig.default_auto_field\" title=\"django.apps.AppConfig.default_auto_field\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">AppConfig.default_auto_field</span></code></a>\nattribute. No more needing to override primary keys in all models.</p>\n<p>Maintaining the historical behavior, the default value for\n<a class=\"reference internal\" href=\"../../ref/settings/#std-setting-DEFAULT_AUTO_FIELD\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEFAULT_AUTO_FIELD</span></code></a> is <a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.AutoField\" title=\"django.db.models.AutoField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AutoField</span></code></a>. Starting\nwith 3.2 new projects are generated with <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-DEFAULT_AUTO_FIELD\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEFAULT_AUTO_FIELD</span></code></a> set to\n<a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.BigAutoField\" title=\"django.db.models.BigAutoField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BigAutoField</span></code></a>. Also, new apps are generated with\n<a class=\"reference internal\" href=\"../../ref/applications/#django.apps.AppConfig.default_auto_field\" title=\"django.apps.AppConfig.default_auto_field\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">AppConfig.default_auto_field</span></code></a>\nset to <a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.BigAutoField\" title=\"django.db.models.BigAutoField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BigAutoField</span></code></a>. In a future Django release the\ndefault value of <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-DEFAULT_AUTO_FIELD\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEFAULT_AUTO_FIELD</span></code></a> will be changed to\n<a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.BigAutoField\" title=\"django.db.models.BigAutoField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BigAutoField</span></code></a>.</p>\n<p>To avoid unwanted migrations in the future, either explicitly set\n<a class=\"reference internal\" href=\"../../ref/settings/#std-setting-DEFAULT_AUTO_FIELD\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEFAULT_AUTO_FIELD</span></code></a> to <a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.AutoField\" title=\"django.db.models.AutoField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AutoField</span></code></a>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">DEFAULT_AUTO_FIELD</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;django.db.models.AutoField&quot;</span>\n</pre></div>\n</div>\n<p>or configure it on a per-app basis:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.apps</span> <span class=\"kn\">import</span> <span class=\"n\">AppConfig</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyAppConfig</span><span class=\"p\">(</span><span class=\"n\">AppConfig</span><span class=\"p\">):</span>\n    <span class=\"n\">default_auto_field</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;django.db.models.AutoField&quot;</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;my_app&quot;</span>\n</pre></div>\n</div>\n<p>or on a per-model basis:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">AutoField</span><span class=\"p\">(</span><span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>In anticipation of the changing default, a system check will provide a warning\nif you do not have an explicit setting for <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-DEFAULT_AUTO_FIELD\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEFAULT_AUTO_FIELD</span></code></a>.</p>\n<p>When changing the value of <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-DEFAULT_AUTO_FIELD\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEFAULT_AUTO_FIELD</span></code></a>, migrations for the\nprimary key of existing auto-created through tables cannot be generated\ncurrently. See the <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-DEFAULT_AUTO_FIELD\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEFAULT_AUTO_FIELD</span></code></a> docs for details on migrating\nsuch tables.</p>\n</div>\n<div class=\"section\" id=\"s-functional-indexes\">\n<span id=\"s-new-functional-indexes\"></span><span id=\"functional-indexes\"></span><span id=\"new-functional-indexes\"></span><h3>Functional indexes<a class=\"headerlink\" href=\"#functional-indexes\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The new <a class=\"reference internal\" href=\"../../ref/models/indexes/#django.db.models.Index.expressions\" title=\"django.db.models.Index.expressions\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">*expressions</span></code></a> positional\nargument of <a class=\"reference internal\" href=\"../../ref/models/indexes/#django.db.models.Index\" title=\"django.db.models.Index\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Index()</span></code></a> enables creating\nfunctional indexes on expressions and database functions. For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">F</span><span class=\"p\">,</span> <span class=\"n\">Index</span><span class=\"p\">,</span> <span class=\"n\">Value</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Lower</span><span class=\"p\">,</span> <span class=\"n\">Upper</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">first_name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">)</span>\n    <span class=\"n\">last_name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">)</span>\n    <span class=\"n\">height</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">()</span>\n    <span class=\"n\">weight</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">()</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">indexes</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">Index</span><span class=\"p\">(</span>\n                <span class=\"n\">Lower</span><span class=\"p\">(</span><span class=\"s2\">&quot;first_name&quot;</span><span class=\"p\">),</span>\n                <span class=\"n\">Upper</span><span class=\"p\">(</span><span class=\"s2\">&quot;last_name&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">desc</span><span class=\"p\">(),</span>\n                <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;first_last_name_idx&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">),</span>\n            <span class=\"n\">Index</span><span class=\"p\">(</span>\n                <span class=\"n\">F</span><span class=\"p\">(</span><span class=\"s2\">&quot;height&quot;</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">F</span><span class=\"p\">(</span><span class=\"s2\">&quot;weight&quot;</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">Value</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)),</span>\n                <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;calc_idx&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">),</span>\n        <span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>Functional indexes are added to models using the\n<a class=\"reference internal\" href=\"../../ref/models/options/#django.db.models.Options.indexes\" title=\"django.db.models.Options.indexes\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Meta.indexes</span></code></a> option.</p>\n</div>\n<div class=\"section\" id=\"s-pymemcache-support\">\n<span id=\"pymemcache-support\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">pymemcache</span></code> support<a class=\"headerlink\" href=\"#pymemcache-support\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">django.core.cache.backends.memcached.PyMemcacheCache</span></code> cache backend\nallows using the <a class=\"reference external\" href=\"https://pypi.org/project/pymemcache/\">pymemcache</a> library for memcached. <code class=\"docutils literal notranslate\"><span class=\"pre\">pymemcache</span></code> 3.4.0\nor higher is required. For more details, see the <a class=\"reference internal\" href=\"../../topics/cache/\"><span class=\"doc\">documentation on caching\nin Django</span></a>.</p>\n</div>\n<div class=\"section\" id=\"s-new-decorators-for-the-admin-site\">\n<span id=\"new-decorators-for-the-admin-site\"></span><h3>New decorators for the admin site<a class=\"headerlink\" href=\"#new-decorators-for-the-admin-site\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The new <a class=\"reference internal\" href=\"../../ref/contrib/admin/#django.contrib.admin.display\" title=\"django.contrib.admin.display\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">display()</span></code></a> decorator allows for easily\nadding options to custom display functions that can be used with\n<a class=\"reference internal\" href=\"../../ref/contrib/admin/#django.contrib.admin.ModelAdmin.list_display\" title=\"django.contrib.admin.ModelAdmin.list_display\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">list_display</span></code></a> or\n<a class=\"reference internal\" href=\"../../ref/contrib/admin/#django.contrib.admin.ModelAdmin.readonly_fields\" title=\"django.contrib.admin.ModelAdmin.readonly_fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">readonly_fields</span></code></a>.</p>\n<p>Likewise, the new <a class=\"reference internal\" href=\"../../ref/contrib/admin/actions/#django.contrib.admin.action\" title=\"django.contrib.admin.action\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">action()</span></code></a> decorator allows for\neasily adding options to action functions that can be used with\n<a class=\"reference internal\" href=\"../../ref/contrib/admin/#django.contrib.admin.ModelAdmin.actions\" title=\"django.contrib.admin.ModelAdmin.actions\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">actions</span></code></a>.</p>\n<p>Using the <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;display</span></code> decorator has the advantage that it is now\npossible to use the <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;property</span></code> decorator when needing to specify attributes\non the custom method. Prior to this it was necessary to use the <code class=\"docutils literal notranslate\"><span class=\"pre\">property()</span></code>\nfunction instead after assigning the required attributes to the method.</p>\n<p>Using decorators has the advantage that these options are more discoverable as\nthey can be suggested by completion utilities in code editors. They are merely\na convenience and still set the same attributes on the functions under the\nhood.</p>\n</div>\n<div class=\"section\" id=\"s-minor-features\">\n<span id=\"minor-features\"></span><h3>Minor features<a class=\"headerlink\" href=\"#minor-features\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<div class=\"section\" id=\"s-django-contrib-admin\">\n<span id=\"django-contrib-admin\"></span><h4><a class=\"reference internal\" href=\"../../ref/contrib/admin/#module-django.contrib.admin\" title=\"django.contrib.admin: Django's admin site.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.admin</span></code></a><a class=\"headerlink\" href=\"#django-contrib-admin\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"../../ref/contrib/admin/#django.contrib.admin.ModelAdmin.search_fields\" title=\"django.contrib.admin.ModelAdmin.search_fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.search_fields</span></code></a> now allows searching against quoted phrases\nwith spaces.</p>\n</li>\n<li><p class=\"first\">Read-only related fields are now rendered as navigable links if target models\nare registered in the admin.</p>\n</li>\n<li><p class=\"first\">The admin now supports theming, and includes a dark theme that is enabled\naccording to browser settings. See <a class=\"reference internal\" href=\"../../ref/contrib/admin/#admin-theming\"><span class=\"std std-ref\">Theming support</span></a> for more details.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"../../ref/contrib/admin/#django.contrib.admin.ModelAdmin.autocomplete_fields\" title=\"django.contrib.admin.ModelAdmin.autocomplete_fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.autocomplete_fields</span></code></a> now respects\n<a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.ForeignKey.to_field\" title=\"django.db.models.ForeignKey.to_field\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ForeignKey.to_field</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.ForeignKey.limit_choices_to\" title=\"django.db.models.ForeignKey.limit_choices_to\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ForeignKey.limit_choices_to</span></code></a> when searching a related\nmodel.</p>\n</li>\n<li><p class=\"first\">The admin now installs a final catch-all view that redirects unauthenticated\nusers to the login page, regardless of whether the URL is otherwise valid.\nThis protects against a potential model enumeration privacy issue.</p>\n<p>Although not recommended, you may set the new\n<a class=\"reference internal\" href=\"../../ref/contrib/admin/#django.contrib.admin.AdminSite.final_catch_all_view\" title=\"django.contrib.admin.AdminSite.final_catch_all_view\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">AdminSite.final_catch_all_view</span></code></a> to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> to disable the\ncatch-all view.</p>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-contrib-auth\">\n<span id=\"django-contrib-auth\"></span><h4><a class=\"reference internal\" href=\"../../topics/auth/#module-django.contrib.auth\" title=\"django.contrib.auth: Django's authentication framework.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.auth</span></code></a><a class=\"headerlink\" href=\"#django-contrib-auth\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul>\n<li><p class=\"first\">The default iteration count for the PBKDF2 password hasher is increased from\n216,000 to 260,000.</p>\n</li>\n<li><p class=\"first\">The default variant for the Argon2 password hasher is changed to Argon2id.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">memory_cost</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">parallelism</span></code> are increased to 102,400 and 8\nrespectively to match the <code class=\"docutils literal notranslate\"><span class=\"pre\">argon2-cffi</span></code> defaults.</p>\n<p>Increasing the <code class=\"docutils literal notranslate\"><span class=\"pre\">memory_cost</span></code> pushes the required memory from 512 KB to 100\nMB. This is still rather conservative but can lead to problems in memory\nconstrained environments. If this is the case, the existing hasher can be\nsubclassed to override the defaults.</p>\n</li>\n<li><p class=\"first\">The default salt entropy for the Argon2, MD5, PBKDF2, SHA-1 password hashers\nis increased from 71 to 128 bits.</p>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-contrib-contenttypes\">\n<span id=\"django-contrib-contenttypes\"></span><h4><a class=\"reference internal\" href=\"../../ref/contrib/contenttypes/#module-django.contrib.contenttypes\" title=\"django.contrib.contenttypes: Provides generic interface to installed models.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.contenttypes</span></code></a><a class=\"headerlink\" href=\"#django-contrib-contenttypes\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">absolute_max</span></code> argument for\n<a class=\"reference internal\" href=\"../../ref/contrib/contenttypes/#django.contrib.contenttypes.forms.generic_inlineformset_factory\" title=\"django.contrib.contenttypes.forms.generic_inlineformset_factory\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">generic_inlineformset_factory()</span></code></a>\nallows customizing the maximum number of forms that can be instantiated when\nsupplying <code class=\"docutils literal notranslate\"><span class=\"pre\">POST</span></code> data. See <a class=\"reference internal\" href=\"../../topics/forms/formsets/#formsets-absolute-max\"><span class=\"std std-ref\">Limiting the maximum number of instantiated forms</span></a> for more details.</li>\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">can_delete_extra</span></code> argument for\n<a class=\"reference internal\" href=\"../../ref/contrib/contenttypes/#django.contrib.contenttypes.forms.generic_inlineformset_factory\" title=\"django.contrib.contenttypes.forms.generic_inlineformset_factory\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">generic_inlineformset_factory()</span></code></a>\nallows removal of the option to delete extra forms. See\n<a class=\"reference internal\" href=\"../../topics/forms/formsets/#django.forms.formsets.BaseFormSet.can_delete_extra\" title=\"django.forms.formsets.BaseFormSet.can_delete_extra\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">can_delete_extra</span></code></a> for more information.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-contrib-gis\">\n<span id=\"django-contrib-gis\"></span><h4><a class=\"reference internal\" href=\"../../ref/contrib/gis/#module-django.contrib.gis\" title=\"django.contrib.gis: Geographic Information System (GIS) extensions for Django\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.gis</span></code></a><a class=\"headerlink\" href=\"#django-contrib-gis\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The <a class=\"reference internal\" href=\"../../ref/contrib/gis/gdal/#django.contrib.gis.gdal.GDALRaster.transform\" title=\"django.contrib.gis.gdal.GDALRaster.transform\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">GDALRaster.transform()</span></code></a> method now supports\n<a class=\"reference internal\" href=\"../../ref/contrib/gis/gdal/#django.contrib.gis.gdal.SpatialReference\" title=\"django.contrib.gis.gdal.SpatialReference\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SpatialReference</span></code></a>.</li>\n<li>The <a class=\"reference internal\" href=\"../../ref/contrib/gis/gdal/#django.contrib.gis.gdal.DataSource\" title=\"django.contrib.gis.gdal.DataSource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DataSource</span></code></a> class now supports\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/pathlib.html#pathlib.Path\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">pathlib.Path</span></code></a>.</li>\n<li>The <a class=\"reference internal\" href=\"../../ref/contrib/gis/layermapping/#django.contrib.gis.utils.LayerMapping\" title=\"django.contrib.gis.utils.LayerMapping\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LayerMapping</span></code></a> class now supports\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/pathlib.html#pathlib.Path\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">pathlib.Path</span></code></a>.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-contrib-postgres\">\n<span id=\"django-contrib-postgres\"></span><h4><a class=\"reference internal\" href=\"../../ref/contrib/postgres/#module-django.contrib.postgres\" title=\"django.contrib.postgres: PostgreSQL-specific fields and features\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.postgres</span></code></a><a class=\"headerlink\" href=\"#django-contrib-postgres\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <a class=\"reference internal\" href=\"../../ref/contrib/postgres/constraints/#django.contrib.postgres.constraints.ExclusionConstraint.include\" title=\"django.contrib.postgres.constraints.ExclusionConstraint.include\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ExclusionConstraint.include</span></code></a> attribute allows creating\ncovering exclusion constraints on PostgreSQL 12+.</li>\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">ExclusionConstraint.opclasses</span></code> attribute allows setting PostgreSQL\noperator classes.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/contrib/postgres/aggregates/#django.contrib.postgres.aggregates.JSONBAgg.ordering\" title=\"django.contrib.postgres.aggregates.JSONBAgg.ordering\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">JSONBAgg.ordering</span></code></a> attribute determines the ordering of the\naggregated elements.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/contrib/postgres/aggregates/#django.contrib.postgres.aggregates.JSONBAgg.distinct\" title=\"django.contrib.postgres.aggregates.JSONBAgg.distinct\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">JSONBAgg.distinct</span></code></a> attribute determines if aggregated values\nwill be distinct.</li>\n<li>The <a class=\"reference internal\" href=\"../../ref/contrib/postgres/operations/#django.contrib.postgres.operations.CreateExtension\" title=\"django.contrib.postgres.operations.CreateExtension\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CreateExtension</span></code></a> operation\nnow checks that the extension already exists in the database and skips the\nmigration if so.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/contrib/postgres/operations/#django.contrib.postgres.operations.CreateCollation\" title=\"django.contrib.postgres.operations.CreateCollation\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CreateCollation</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/contrib/postgres/operations/#django.contrib.postgres.operations.RemoveCollation\" title=\"django.contrib.postgres.operations.RemoveCollation\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RemoveCollation</span></code></a> operations\nallow creating and dropping collations on PostgreSQL. See\n<a class=\"reference internal\" href=\"../../ref/contrib/postgres/operations/#manage-postgresql-collations\"><span class=\"std std-ref\">Managing collations using migrations</span></a> for more details.</li>\n<li>Lookups for <a class=\"reference internal\" href=\"../../ref/contrib/postgres/fields/#django.contrib.postgres.fields.ArrayField\" title=\"django.contrib.postgres.fields.ArrayField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ArrayField</span></code></a> now allow\n(non-nested) arrays containing expressions as right-hand sides.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/contrib/postgres/indexes/#django.contrib.postgres.indexes.OpClass\" title=\"django.contrib.postgres.indexes.OpClass\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OpClass()</span></code></a>\nexpression allows creating functional indexes on expressions with a custom\noperator class. See <a class=\"reference internal\" href=\"#new-functional-indexes\"><span class=\"std std-ref\">Functional indexes</span></a> for more details.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-contrib-sitemaps\">\n<span id=\"django-contrib-sitemaps\"></span><h4><a class=\"reference internal\" href=\"../../ref/contrib/sitemaps/#module-django.contrib.sitemaps\" title=\"django.contrib.sitemaps: A framework for generating Google sitemap XML files.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.sitemaps</span></code></a><a class=\"headerlink\" href=\"#django-contrib-sitemaps\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <a class=\"reference internal\" href=\"../../ref/contrib/sitemaps/#django.contrib.sitemaps.Sitemap\" title=\"django.contrib.sitemaps.Sitemap\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Sitemap</span></code></a> attributes\n<a class=\"reference internal\" href=\"../../ref/contrib/sitemaps/#django.contrib.sitemaps.Sitemap.alternates\" title=\"django.contrib.sitemaps.Sitemap.alternates\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">alternates</span></code></a>,\n<a class=\"reference internal\" href=\"../../ref/contrib/sitemaps/#django.contrib.sitemaps.Sitemap.languages\" title=\"django.contrib.sitemaps.Sitemap.languages\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">languages</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/contrib/sitemaps/#django.contrib.sitemaps.Sitemap.x_default\" title=\"django.contrib.sitemaps.Sitemap.x_default\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">x_default</span></code></a> allow\ngenerating sitemap <em>alternates</em> to localized versions of your pages.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-contrib-syndication\">\n<span id=\"django-contrib-syndication\"></span><h4><a class=\"reference internal\" href=\"../../ref/contrib/syndication/#module-django.contrib.syndication\" title=\"django.contrib.syndication: A framework for generating syndication feeds, in RSS and Atom, quite easily.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.syndication</span></code></a><a class=\"headerlink\" href=\"#django-contrib-syndication\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">item_comments</span></code> hook allows specifying a comments URL per feed\nitem.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-database-backends\">\n<span id=\"database-backends\"></span><h4>Database backends<a class=\"headerlink\" href=\"#database-backends\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Third-party database backends can now skip or mark as expected failures\ntests in Django\u2019s test suite using the new\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseFeatures.django_test_skips</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django_test_expected_failures</span></code> attributes.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-decorators\">\n<span id=\"decorators\"></span><h4>Decorators<a class=\"headerlink\" href=\"#decorators\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <a class=\"reference internal\" href=\"../../topics/http/decorators/#django.views.decorators.common.no_append_slash\" title=\"django.views.decorators.common.no_append_slash\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">no_append_slash()</span></code></a> decorator\nallows individual views to be excluded from <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-APPEND_SLASH\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">APPEND_SLASH</span></code></a> URL\nnormalization.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-error-reporting\">\n<span id=\"error-reporting\"></span><h4>Error Reporting<a class=\"headerlink\" href=\"#error-reporting\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Custom <a class=\"reference internal\" href=\"../../howto/error-reporting/#django.views.debug.ExceptionReporter\" title=\"django.views.debug.ExceptionReporter\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ExceptionReporter</span></code></a> subclasses can now\ndefine the <a class=\"reference internal\" href=\"../../howto/error-reporting/#django.views.debug.ExceptionReporter.html_template_path\" title=\"django.views.debug.ExceptionReporter.html_template_path\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">html_template_path</span></code></a>\nand <a class=\"reference internal\" href=\"../../howto/error-reporting/#django.views.debug.ExceptionReporter.text_template_path\" title=\"django.views.debug.ExceptionReporter.text_template_path\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">text_template_path</span></code></a>\nproperties to override the templates used to render exception reports.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-file-uploads\">\n<span id=\"file-uploads\"></span><h4>File Uploads<a class=\"headerlink\" href=\"#file-uploads\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <a class=\"reference internal\" href=\"../../ref/files/uploads/#django.core.files.uploadhandler.FileUploadHandler.upload_interrupted\" title=\"django.core.files.uploadhandler.FileUploadHandler.upload_interrupted\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">FileUploadHandler.upload_interrupted()</span></code></a>\ncallback allows handling interrupted uploads.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-forms\">\n<span id=\"forms\"></span><h4>Forms<a class=\"headerlink\" href=\"#forms\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">absolute_max</span></code> argument for <a class=\"reference internal\" href=\"../../ref/forms/formsets/#django.forms.formsets.formset_factory\" title=\"django.forms.formsets.formset_factory\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">formset_factory()</span></code></a>,\n<a class=\"reference internal\" href=\"../../ref/forms/models/#django.forms.models.inlineformset_factory\" title=\"django.forms.models.inlineformset_factory\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">inlineformset_factory()</span></code></a>, and <a class=\"reference internal\" href=\"../../ref/forms/models/#django.forms.models.modelformset_factory\" title=\"django.forms.models.modelformset_factory\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">modelformset_factory()</span></code></a> allows\ncustomizing the maximum number of forms that can be instantiated when\nsupplying <code class=\"docutils literal notranslate\"><span class=\"pre\">POST</span></code> data. See <a class=\"reference internal\" href=\"../../topics/forms/formsets/#formsets-absolute-max\"><span class=\"std std-ref\">Limiting the maximum number of instantiated forms</span></a> for more details.</li>\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">can_delete_extra</span></code> argument for <a class=\"reference internal\" href=\"../../ref/forms/formsets/#django.forms.formsets.formset_factory\" title=\"django.forms.formsets.formset_factory\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">formset_factory()</span></code></a>,\n<a class=\"reference internal\" href=\"../../ref/forms/models/#django.forms.models.inlineformset_factory\" title=\"django.forms.models.inlineformset_factory\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">inlineformset_factory()</span></code></a>, and <a class=\"reference internal\" href=\"../../ref/forms/models/#django.forms.models.modelformset_factory\" title=\"django.forms.models.modelformset_factory\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">modelformset_factory()</span></code></a> allows\nremoval of the option to delete extra forms. See\n<a class=\"reference internal\" href=\"../../topics/forms/formsets/#django.forms.formsets.BaseFormSet.can_delete_extra\" title=\"django.forms.formsets.BaseFormSet.can_delete_extra\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">can_delete_extra</span></code></a> for more information.</li>\n<li><a class=\"reference internal\" href=\"../../topics/forms/formsets/#django.forms.formsets.BaseFormSet\" title=\"django.forms.formsets.BaseFormSet\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BaseFormSet</span></code></a> now reports a user facing error,\nrather than raising an exception, when the management form is missing or has\nbeen tampered with. To customize this error message, pass the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">error_messages</span></code> argument with the key <code class=\"docutils literal notranslate\"><span class=\"pre\">'missing_management_form'</span></code> when\ninstantiating the formset.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-generic-views\">\n<span id=\"generic-views\"></span><h4>Generic Views<a class=\"headerlink\" href=\"#generic-views\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">week_format</span></code> attributes of\n<a class=\"reference internal\" href=\"../../ref/class-based-views/mixins-date-based/#django.views.generic.dates.WeekMixin\" title=\"django.views.generic.dates.WeekMixin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">WeekMixin</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/class-based-views/generic-date-based/#django.views.generic.dates.WeekArchiveView\" title=\"django.views.generic.dates.WeekArchiveView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">WeekArchiveView</span></code></a> now support the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'%V'</span></code> ISO 8601 week format.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-management-commands\">\n<span id=\"management-commands\"></span><h4>Management Commands<a class=\"headerlink\" href=\"#management-commands\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-loaddata\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">loaddata</span></code></a> now supports fixtures stored in XZ archives (<code class=\"docutils literal notranslate\"><span class=\"pre\">.xz</span></code>) and\nLZMA archives (<code class=\"docutils literal notranslate\"><span class=\"pre\">.lzma</span></code>).</li>\n<li><a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-dumpdata\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">dumpdata</span></code></a> now can compress data in the <code class=\"docutils literal notranslate\"><span class=\"pre\">bz2</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">gz</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">lzma</span></code>,\nor <code class=\"docutils literal notranslate\"><span class=\"pre\">xz</span></code> formats.</li>\n<li><a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-makemigrations\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">makemigrations</span></code></a> can now be called without an active database\nconnection. In that case, check for a consistent migration history is\nskipped.</li>\n<li><a class=\"reference internal\" href=\"../../howto/custom-management-commands/#django.core.management.BaseCommand.requires_system_checks\" title=\"django.core.management.BaseCommand.requires_system_checks\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">BaseCommand.requires_system_checks</span></code></a> now supports specifying a list of\ntags. System checks registered in the chosen tags will be checked for errors\nprior to executing the command. In previous versions, either all or none\nof the system checks were performed.</li>\n<li>Support for colored terminal output on Windows is updated. Various modern\nterminal environments are automatically detected, and the options for\nenabling support in other cases are improved. See <a class=\"reference internal\" href=\"../../ref/django-admin/#syntax-coloring\"><span class=\"std std-ref\">Syntax coloring</span></a> for\nmore details.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-migrations\">\n<span id=\"migrations\"></span><h4>Migrations<a class=\"headerlink\" href=\"#migrations\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">Operation.migration_name_fragment</span></code> property allows providing a\nfilename fragment that will be used to name a migration containing only that\noperation.</li>\n<li>Migrations now support serialization of pure and concrete path objects from\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/pathlib.html#module-pathlib\" title=\"(in Python v3.11)\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pathlib</span></code></a>, and <a class=\"reference external\" href=\"https://docs.python.org/3/library/os.html#os.PathLike\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">os.PathLike</span></code></a> instances.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-models\">\n<span id=\"models\"></span><h4>Models<a class=\"headerlink\" href=\"#models\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">no_key</span></code> parameter for <a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.select_for_update\" title=\"django.db.models.query.QuerySet.select_for_update\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">QuerySet.select_for_update()</span></code></a>,\nsupported on PostgreSQL, allows acquiring weaker locks that don\u2019t block the\ncreation of rows that reference locked rows through a foreign key.</li>\n<li><a class=\"reference internal\" href=\"../../ref/models/conditional-expressions/#django.db.models.expressions.When\" title=\"django.db.models.expressions.When\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">When()</span></code></a> expression now allows\nusing the <code class=\"docutils literal notranslate\"><span class=\"pre\">condition</span></code> argument with <code class=\"docutils literal notranslate\"><span class=\"pre\">lookups</span></code>.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/models/indexes/#django.db.models.Index.include\" title=\"django.db.models.Index.include\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Index.include</span></code></a> and <a class=\"reference internal\" href=\"../../ref/models/constraints/#django.db.models.UniqueConstraint.include\" title=\"django.db.models.UniqueConstraint.include\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">UniqueConstraint.include</span></code></a>\nattributes allow creating covering indexes and covering unique constraints on\nPostgreSQL 11+.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/models/constraints/#django.db.models.UniqueConstraint.opclasses\" title=\"django.db.models.UniqueConstraint.opclasses\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">UniqueConstraint.opclasses</span></code></a> attribute allows setting\nPostgreSQL operator classes.</li>\n<li>The <a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.update\" title=\"django.db.models.query.QuerySet.update\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">QuerySet.update()</span></code></a> method now respects the <code class=\"docutils literal notranslate\"><span class=\"pre\">order_by()</span></code> clause on\nMySQL and MariaDB.</li>\n<li><a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.FilteredRelation\" title=\"django.db.models.FilteredRelation\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FilteredRelation()</span></code></a> now supports\nnested relations.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">of</span></code> argument of <a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.select_for_update\" title=\"django.db.models.query.QuerySet.select_for_update\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">QuerySet.select_for_update()</span></code></a> is now allowed\non MySQL 8.0.1+.</li>\n<li><a class=\"reference internal\" href=\"../../ref/models/expressions/#django.db.models.Value\" title=\"django.db.models.Value\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Value()</span></code></a> expression now\nautomatically resolves its <code class=\"docutils literal notranslate\"><span class=\"pre\">output_field</span></code> to the appropriate\n<a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.Field\" title=\"django.db.models.Field\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Field</span></code></a> subclass based on the type of\nits provided <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> for <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bool</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#bytes\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bytes</span></code></a>,\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">float</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">int</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></a>,\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.date\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">datetime.date</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.datetime\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">datetime.datetime</span></code></a>,\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.time\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">datetime.time</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.timedelta\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">datetime.timedelta</span></code></a>,\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/decimal.html#decimal.Decimal\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">decimal.Decimal</span></code></a>, and <a class=\"reference external\" href=\"https://docs.python.org/3/library/uuid.html#uuid.UUID\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">uuid.UUID</span></code></a> instances. As a\nconsequence, resolving an <code class=\"docutils literal notranslate\"><span class=\"pre\">output_field</span></code> for database functions and\ncombined expressions may now crash with mixed types when using <code class=\"docutils literal notranslate\"><span class=\"pre\">Value()</span></code>.\nYou will need to explicitly set the <code class=\"docutils literal notranslate\"><span class=\"pre\">output_field</span></code> in such cases.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.alias\" title=\"django.db.models.query.QuerySet.alias\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">QuerySet.alias()</span></code></a> method allows creating reusable aliases for\nexpressions that don\u2019t need to be selected but are used for filtering,\nordering, or as a part of complex expressions.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/models/database-functions/#django.db.models.functions.Collate\" title=\"django.db.models.functions.Collate\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Collate</span></code></a> function allows\nfiltering and ordering by specified database collations.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">field_name</span></code> argument of <a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.in_bulk\" title=\"django.db.models.query.QuerySet.in_bulk\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">QuerySet.in_bulk()</span></code></a> now accepts\ndistinct fields if there\u2019s only one field specified in\n<a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.distinct\" title=\"django.db.models.query.QuerySet.distinct\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">QuerySet.distinct()</span></code></a>.</li>\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">tzinfo</span></code> parameter of the\n<a class=\"reference internal\" href=\"../../ref/models/database-functions/#django.db.models.functions.TruncDate\" title=\"django.db.models.functions.TruncDate\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TruncDate</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/models/database-functions/#django.db.models.functions.TruncTime\" title=\"django.db.models.functions.TruncTime\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TruncTime</span></code></a> database functions allows\ntruncating datetimes in a specific timezone.</li>\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">db_collation</span></code> argument for\n<a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.CharField.db_collation\" title=\"django.db.models.CharField.db_collation\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">CharField</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.TextField.db_collation\" title=\"django.db.models.TextField.db_collation\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">TextField</span></code></a> allows setting a\ndatabase collation for the field.</li>\n<li>Added the <a class=\"reference internal\" href=\"../../ref/models/database-functions/#django.db.models.functions.Random\" title=\"django.db.models.functions.Random\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Random</span></code></a> database function.</li>\n<li><a class=\"reference internal\" href=\"../../ref/models/querysets/#aggregation-functions\"><span class=\"std std-ref\">Aggregation functions</span></a>, <a class=\"reference internal\" href=\"../../ref/models/expressions/#django.db.models.F\" title=\"django.db.models.F\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">F()</span></code></a>,\n<a class=\"reference internal\" href=\"../../ref/models/expressions/#django.db.models.OuterRef\" title=\"django.db.models.OuterRef\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OuterRef()</span></code></a>, and other expressions now\nallow using transforms. See <a class=\"reference internal\" href=\"../../topics/db/queries/#using-transforms-in-expressions\"><span class=\"std std-ref\">Expressions can reference transforms</span></a> for\ndetails.</li>\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">durable</span></code> argument for <a class=\"reference internal\" href=\"../../topics/db/transactions/#django.db.transaction.atomic\" title=\"django.db.transaction.atomic\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">atomic()</span></code></a>\nguarantees that changes made in the atomic block will be committed if the\nblock exits without errors. A nested atomic block marked as durable will\nraise a <code class=\"docutils literal notranslate\"><span class=\"pre\">RuntimeError</span></code>.</li>\n<li>Added the <a class=\"reference internal\" href=\"../../ref/models/database-functions/#django.db.models.functions.JSONObject\" title=\"django.db.models.functions.JSONObject\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">JSONObject</span></code></a> database function.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-pagination\">\n<span id=\"pagination\"></span><h4>Pagination<a class=\"headerlink\" href=\"#pagination\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <a class=\"reference internal\" href=\"../../ref/paginator/#django.core.paginator.Paginator.get_elided_page_range\" title=\"django.core.paginator.Paginator.get_elided_page_range\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">django.core.paginator.Paginator.get_elided_page_range()</span></code></a> method\nallows generating a page range with some of the values elided. If there are a\nlarge number of pages, this can be helpful for generating a reasonable number\nof page links in a template.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-requests-and-responses\">\n<span id=\"requests-and-responses\"></span><h4>Requests and Responses<a class=\"headerlink\" href=\"#requests-and-responses\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Response headers are now stored in <a class=\"reference internal\" href=\"../../ref/request-response/#django.http.HttpResponse.headers\" title=\"django.http.HttpResponse.headers\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">HttpResponse.headers</span></code></a>. This can be\nused instead of the original dict-like interface of <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpResponse</span></code> objects.\nBoth interfaces will continue to be supported. See\n<a class=\"reference internal\" href=\"../../ref/request-response/#setting-header-fields\"><span class=\"std std-ref\">Setting header fields</span></a> for details.</li>\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">headers</span></code> parameter of <a class=\"reference internal\" href=\"../../ref/request-response/#django.http.HttpResponse\" title=\"django.http.HttpResponse\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpResponse</span></code></a>,\n<a class=\"reference internal\" href=\"../../ref/template-response/#django.template.response.SimpleTemplateResponse\" title=\"django.template.response.SimpleTemplateResponse\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SimpleTemplateResponse</span></code></a>, and\n<a class=\"reference internal\" href=\"../../ref/template-response/#django.template.response.TemplateResponse\" title=\"django.template.response.TemplateResponse\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TemplateResponse</span></code></a> allows setting response\n<a class=\"reference internal\" href=\"../../ref/request-response/#django.http.HttpResponse.headers\" title=\"django.http.HttpResponse.headers\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">headers</span></code></a> on instantiation.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-security\">\n<span id=\"security\"></span><h4>Security<a class=\"headerlink\" href=\"#security\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul>\n<li><p class=\"first\">The <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-SECRET_KEY\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECRET_KEY</span></code></a> setting is now checked for a valid value upon first\naccess, rather than when settings are first loaded. This enables running\nmanagement commands that do not rely on the <code class=\"docutils literal notranslate\"><span class=\"pre\">SECRET_KEY</span></code> without needing to\nprovide a value. As a consequence of this, calling\n<a class=\"reference internal\" href=\"../../topics/settings/#django.conf.settings.configure\" title=\"django.conf.settings.configure\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">configure()</span></code></a> without providing a valid\n<code class=\"docutils literal notranslate\"><span class=\"pre\">SECRET_KEY</span></code>, and then going on to access <code class=\"docutils literal notranslate\"><span class=\"pre\">settings.SECRET_KEY</span></code> will now\nraise an <a class=\"reference internal\" href=\"../../ref/exceptions/#django.core.exceptions.ImproperlyConfigured\" title=\"django.core.exceptions.ImproperlyConfigured\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ImproperlyConfigured</span></code></a> exception.</p>\n</li>\n<li><p class=\"first\">The new <code class=\"docutils literal notranslate\"><span class=\"pre\">Signer.sign_object()</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">Signer.unsign_object()</span></code> methods allow\nsigning complex data structures. See <a class=\"reference internal\" href=\"../../topics/signing/#signing-complex-data\"><span class=\"std std-ref\">Protecting complex data structures</span></a> for more\ndetails.</p>\n<p>Also, <a class=\"reference internal\" href=\"../../topics/signing/#django.core.signing.dumps\" title=\"django.core.signing.dumps\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">signing.dumps()</span></code></a> and\n<a class=\"reference internal\" href=\"../../topics/signing/#django.core.signing.loads\" title=\"django.core.signing.loads\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">loads()</span></code></a> become shortcuts for\n<a class=\"reference internal\" href=\"../../topics/signing/#django.core.signing.TimestampSigner.sign_object\" title=\"django.core.signing.TimestampSigner.sign_object\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">TimestampSigner.sign_object()</span></code></a> and\n<a class=\"reference internal\" href=\"../../topics/signing/#django.core.signing.TimestampSigner.unsign_object\" title=\"django.core.signing.TimestampSigner.unsign_object\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">unsign_object()</span></code></a>.</p>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-serialization\">\n<span id=\"serialization\"></span><h4>Serialization<a class=\"headerlink\" href=\"#serialization\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <a class=\"reference internal\" href=\"../../topics/serialization/#serialization-formats-jsonl\"><span class=\"std std-ref\">JSONL</span></a> serializer allows using\nthe JSON Lines format with <a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-dumpdata\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">dumpdata</span></code></a> and <a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-loaddata\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">loaddata</span></code></a>. This\ncan be useful for populating large databases because data is loaded line by\nline into memory, rather than being loaded all at once.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-signals\">\n<span id=\"signals\"></span><h4>Signals<a class=\"headerlink\" href=\"#signals\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"../../topics/signals/#django.dispatch.Signal.send_robust\" title=\"django.dispatch.Signal.send_robust\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">Signal.send_robust()</span></code></a> now logs\nexceptions.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-templates\">\n<span id=\"templates\"></span><h4>Templates<a class=\"headerlink\" href=\"#templates\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"../../ref/templates/builtins/#std-templatefilter-floatformat\"><code class=\"xref std std-tfilter docutils literal notranslate\"><span class=\"pre\">floatformat</span></code></a> template filter now allows using the <code class=\"docutils literal notranslate\"><span class=\"pre\">g</span></code> suffix to\nforce grouping by the <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-THOUSAND_SEPARATOR\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">THOUSAND_SEPARATOR</span></code></a> for the active locale.</li>\n<li>Templates cached with <a class=\"reference internal\" href=\"../../ref/templates/api/#template-loaders\"><span class=\"std std-ref\">Cached template loaders</span></a> are\nnow correctly reloaded in development.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-tests\">\n<span id=\"tests\"></span><h4>Tests<a class=\"headerlink\" href=\"#tests\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Objects assigned to class attributes in <a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.TestCase.setUpTestData\" title=\"django.test.TestCase.setUpTestData\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">TestCase.setUpTestData()</span></code></a> are\nnow isolated for each test method. Such objects are now required to support\ncreating deep copies with <a class=\"reference external\" href=\"https://docs.python.org/3/library/copy.html#copy.deepcopy\" title=\"(in Python v3.11)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">copy.deepcopy()</span></code></a>. Assigning objects which\ndon\u2019t support <code class=\"docutils literal notranslate\"><span class=\"pre\">deepcopy()</span></code> is deprecated and will be removed in Django 4.1.</li>\n<li><a class=\"reference internal\" href=\"../../topics/testing/advanced/#django.test.runner.DiscoverRunner\" title=\"django.test.runner.DiscoverRunner\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DiscoverRunner</span></code></a> now enables\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/faulthandler.html#module-faulthandler\" title=\"(in Python v3.11)\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">faulthandler</span></code></a> by default. This can be disabled by using the\n<a class=\"reference internal\" href=\"../../ref/django-admin/#cmdoption-test-no-faulthandler\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">test</span> <span class=\"pre\">--no-faulthandler</span></code></a> option.</li>\n<li><a class=\"reference internal\" href=\"../../topics/testing/advanced/#django.test.runner.DiscoverRunner\" title=\"django.test.runner.DiscoverRunner\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DiscoverRunner</span></code></a> and the\n<a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-test\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">test</span></code></a> management command can now track timings, including database\nsetup and total run time. This can be enabled by using the <a class=\"reference internal\" href=\"../../ref/django-admin/#cmdoption-test-timing\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">test</span>\n<span class=\"pre\">--timing</span></code></a> option.</li>\n<li><a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.Client\" title=\"django.test.Client\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Client</span></code></a> now preserves the request query string when\nfollowing 307 and 308 redirects.</li>\n<li>The new <a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.TestCase.captureOnCommitCallbacks\" title=\"django.test.TestCase.captureOnCommitCallbacks\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">TestCase.captureOnCommitCallbacks()</span></code></a> method captures callback\nfunctions passed to <a class=\"reference internal\" href=\"../../topics/db/transactions/#django.db.transaction.on_commit\" title=\"django.db.transaction.on_commit\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">transaction.on_commit()</span></code></a> in a list. This allows you to test such\ncallbacks without using the slower <a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.TransactionTestCase\" title=\"django.test.TransactionTestCase\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TransactionTestCase</span></code></a>.</li>\n<li><a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.TransactionTestCase.assertQuerySetEqual\" title=\"django.test.TransactionTestCase.assertQuerySetEqual\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">TransactionTestCase.assertQuerysetEqual()</span></code></a> now supports direct\ncomparison against another queryset rather than being restricted to\ncomparison against a list of string representations of objects when using the\ndefault value for the <code class=\"docutils literal notranslate\"><span class=\"pre\">transform</span></code> argument.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-utilities\">\n<span id=\"utilities\"></span><h4>Utilities<a class=\"headerlink\" href=\"#utilities\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">depth</span></code> parameter of <code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.timesince.timesince()</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.timesince.timeuntil()</span></code> functions allows specifying the number\nof adjacent time units to return.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-validators\">\n<span id=\"validators\"></span><h4>Validators<a class=\"headerlink\" href=\"#validators\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Built-in validators now include the provided value in the <code class=\"docutils literal notranslate\"><span class=\"pre\">params</span></code> argument\nof a raised <a class=\"reference internal\" href=\"../../ref/exceptions/#django.core.exceptions.ValidationError\" title=\"django.core.exceptions.ValidationError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code></a>. This allows\ncustom error messages to use the <code class=\"docutils literal notranslate\"><span class=\"pre\">%(value)s</span></code> placeholder.</li>\n<li>The <a class=\"reference internal\" href=\"../../ref/exceptions/#django.core.exceptions.ValidationError\" title=\"django.core.exceptions.ValidationError\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code></a> equality operator now ignores <code class=\"docutils literal notranslate\"><span class=\"pre\">messages</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">params</span></code> ordering.</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"s-backwards-incompatible-changes-in-3-2\">\n<span id=\"s-backwards-incompatible-3-2\"></span><span id=\"backwards-incompatible-changes-in-3-2\"></span><span id=\"backwards-incompatible-3-2\"></span><h2>Backwards incompatible changes in 3.2<a class=\"headerlink\" href=\"#backwards-incompatible-changes-in-3-2\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-database-backend-api\">\n<span id=\"database-backend-api\"></span><h3>Database backend API<a class=\"headerlink\" href=\"#database-backend-api\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>This section describes changes that may be needed in third-party database\nbackends.</p>\n<ul class=\"simple\">\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseFeatures.introspected_field_types</span></code> property replaces these\nfeatures:<ul>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">can_introspect_autofield</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">can_introspect_big_integer_field</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">can_introspect_binary_field</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">can_introspect_decimal_field</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">can_introspect_duration_field</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">can_introspect_ip_address_field</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">can_introspect_positive_integer_field</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">can_introspect_small_integer_field</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">can_introspect_time_field</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">introspected_big_auto_field_type</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">introspected_small_auto_field_type</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">introspected_boolean_field_type</span></code></li>\n</ul>\n</li>\n<li>To enable support for covering indexes (<a class=\"reference internal\" href=\"../../ref/models/indexes/#django.db.models.Index.include\" title=\"django.db.models.Index.include\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Index.include</span></code></a>) and covering\nunique constraints (<a class=\"reference internal\" href=\"../../ref/models/constraints/#django.db.models.UniqueConstraint.include\" title=\"django.db.models.UniqueConstraint.include\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">UniqueConstraint.include</span></code></a>), set\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseFeatures.supports_covering_indexes</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</li>\n<li>Third-party database backends must implement support for column database\ncollations on <code class=\"docutils literal notranslate\"><span class=\"pre\">CharField</span></code>s and <code class=\"docutils literal notranslate\"><span class=\"pre\">TextField</span></code>s or set\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseFeatures.supports_collation_on_charfield</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseFeatures.supports_collation_on_textfield</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>. If\nnon-deterministic collations are not supported, set\n<code class=\"docutils literal notranslate\"><span class=\"pre\">supports_non_deterministic_collations</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseOperations.random_function_sql()</span></code> is removed in favor of the new\n<a class=\"reference internal\" href=\"../../ref/models/database-functions/#django.db.models.functions.Random\" title=\"django.db.models.functions.Random\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Random</span></code></a> database function.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseOperations.date_trunc_sql()</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseOperations.time_trunc_sql()</span></code> now take the optional <code class=\"docutils literal notranslate\"><span class=\"pre\">tzname</span></code>\nargument in order to truncate in a specific timezone.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseClient.runshell()</span></code> now gets arguments and an optional dictionary\nwith environment variables to the underlying command-line client from\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseClient.settings_to_cmd_args_env()</span></code> method. Third-party database\nbackends must implement <code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseClient.settings_to_cmd_args_env()</span></code> or\noverride <code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseClient.runshell()</span></code>.</li>\n<li>Third-party database backends must implement support for functional indexes\n(<a class=\"reference internal\" href=\"../../ref/models/indexes/#django.db.models.Index.expressions\" title=\"django.db.models.Index.expressions\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Index.expressions</span></code></a>) or set\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseFeatures.supports_expression_indexes</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>. If <code class=\"docutils literal notranslate\"><span class=\"pre\">COLLATE</span></code>\nis not a part of the <code class=\"docutils literal notranslate\"><span class=\"pre\">CREATE</span> <span class=\"pre\">INDEX</span></code> statement, set\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseFeatures.collate_as_index_expression</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-id1\">\n<span id=\"id1\"></span><h3><a class=\"reference internal\" href=\"../../ref/contrib/admin/#module-django.contrib.admin\" title=\"django.contrib.admin: Django's admin site.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.admin</span></code></a><a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<ul class=\"simple\">\n<li>Pagination links in the admin are now 1-indexed instead of 0-indexed, i.e.\nthe query string for the first page is <code class=\"docutils literal notranslate\"><span class=\"pre\">?p=1</span></code> instead of <code class=\"docutils literal notranslate\"><span class=\"pre\">?p=0</span></code>.</li>\n<li>The new admin catch-all view will break URL patterns routed after the admin\nURLs and matching the admin URL prefix. You can either adjust your URL\nordering or, if necessary, set <a class=\"reference internal\" href=\"../../ref/contrib/admin/#django.contrib.admin.AdminSite.final_catch_all_view\" title=\"django.contrib.admin.AdminSite.final_catch_all_view\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">AdminSite.final_catch_all_view</span></code></a> to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>,\ndisabling the catch-all view. See <a class=\"reference internal\" href=\"#whats-new-3-2\"><span class=\"std std-ref\">What\u2019s new in Django 3.2</span></a> for more details.</li>\n<li>Minified JavaScript files are no longer included with the admin. If you\nrequire these files to be minified, consider using a third party app or\nexternal build tool. The minified vendored JavaScript files packaged with the\nadmin (e.g. <a class=\"reference internal\" href=\"../../ref/contrib/admin/#contrib-admin-jquery\"><span class=\"std std-ref\">jquery.min.js</span></a>) are still included.</li>\n<li><a class=\"reference internal\" href=\"../../ref/contrib/admin/#django.contrib.admin.ModelAdmin.prepopulated_fields\" title=\"django.contrib.admin.ModelAdmin.prepopulated_fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.prepopulated_fields</span></code></a> no longer strips English stop words,\nsuch as <code class=\"docutils literal notranslate\"><span class=\"pre\">'a'</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">'an'</span></code>.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-id2\">\n<span id=\"id2\"></span><h3><a class=\"reference internal\" href=\"../../ref/contrib/gis/#module-django.contrib.gis\" title=\"django.contrib.gis: Geographic Information System (GIS) extensions for Django\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.gis</span></code></a><a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<ul class=\"simple\">\n<li>Support for PostGIS 2.2 is removed.</li>\n<li>The Oracle backend now clones polygons (and geometry collections containing\npolygons) before reorienting them and saving them to the database. They are\nno longer mutated in place. You might notice this if you use the polygons\nafter a model is saved.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-dropped-support-for-postgresql-9-5\">\n<span id=\"dropped-support-for-postgresql-9-5\"></span><h3>Dropped support for PostgreSQL 9.5<a class=\"headerlink\" href=\"#dropped-support-for-postgresql-9-5\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Upstream support for PostgreSQL 9.5 ends in February 2021. Django 3.2 supports\nPostgreSQL 9.6 and higher.</p>\n</div>\n<div class=\"section\" id=\"s-dropped-support-for-mysql-5-6\">\n<span id=\"dropped-support-for-mysql-5-6\"></span><h3>Dropped support for MySQL 5.6<a class=\"headerlink\" href=\"#dropped-support-for-mysql-5-6\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The end of upstream support for MySQL 5.6 is April 2021. Django 3.2 supports\nMySQL 5.7 and higher.</p>\n</div>\n<div class=\"section\" id=\"s-miscellaneous\">\n<span id=\"miscellaneous\"></span><h3>Miscellaneous<a class=\"headerlink\" href=\"#miscellaneous\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<ul>\n<li><p class=\"first\">Django now supports non-<code class=\"docutils literal notranslate\"><span class=\"pre\">pytz</span></code> time zones, such as Python 3.9+\u2019s\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/zoneinfo.html#module-zoneinfo\" title=\"(in Python v3.11)\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zoneinfo</span></code></a> module and its backport.</p>\n</li>\n<li><p class=\"first\">The undocumented <code class=\"docutils literal notranslate\"><span class=\"pre\">SpatiaLiteOperations.proj4_version()</span></code> method is renamed\nto <code class=\"docutils literal notranslate\"><span class=\"pre\">proj_version()</span></code>.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"../../ref/utils/#django.utils.text.slugify\" title=\"django.utils.text.slugify\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">slugify()</span></code></a> now removes leading and trailing dashes\nand underscores.</p>\n</li>\n<li><p class=\"first\">The <a class=\"reference internal\" href=\"../../ref/contrib/humanize/#std-templatefilter-intcomma\"><code class=\"xref std std-tfilter docutils literal notranslate\"><span class=\"pre\">intcomma</span></code></a> and <a class=\"reference internal\" href=\"../../ref/contrib/humanize/#std-templatefilter-intword\"><code class=\"xref std std-tfilter docutils literal notranslate\"><span class=\"pre\">intword</span></code></a> template filters no longer\ndepend on the <code class=\"docutils literal notranslate\"><span class=\"pre\">USE_L10N</span></code> setting.</p>\n</li>\n<li><p class=\"first\">Support for <code class=\"docutils literal notranslate\"><span class=\"pre\">argon2-cffi</span></code> &lt; 19.1.0 is removed.</p>\n</li>\n<li><p class=\"first\">The cache keys no longer includes the language when internationalization is\ndisabled (<code class=\"docutils literal notranslate\"><span class=\"pre\">USE_I18N</span> <span class=\"pre\">=</span> <span class=\"pre\">False</span></code>) and localization is enabled\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">USE_L10N</span> <span class=\"pre\">=</span> <span class=\"pre\">True</span></code>). After upgrading to Django 3.2 in such configurations,\nthe first request to any previously cached value will be a cache miss.</p>\n</li>\n<li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ForeignKey.validate()</span></code> now uses\n<a class=\"reference internal\" href=\"../../topics/db/managers/#django.db.models.Model._base_manager\" title=\"django.db.models.Model._base_manager\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">_base_manager</span></code></a> rather than\n<a class=\"reference internal\" href=\"../../topics/db/managers/#django.db.models.Model._default_manager\" title=\"django.db.models.Model._default_manager\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">_default_manager</span></code></a> to check that related\ninstances exist.</p>\n</li>\n<li><p class=\"first\">When an application defines an <a class=\"reference internal\" href=\"../../ref/applications/#django.apps.AppConfig\" title=\"django.apps.AppConfig\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AppConfig</span></code></a> subclass in\nan <code class=\"docutils literal notranslate\"><span class=\"pre\">apps.py</span></code> submodule, Django now uses this configuration automatically,\neven if it isn\u2019t enabled with <code class=\"docutils literal notranslate\"><span class=\"pre\">default_app_config</span></code>. Set <code class=\"docutils literal notranslate\"><span class=\"pre\">default</span> <span class=\"pre\">=</span> <span class=\"pre\">False</span></code>\nin the <a class=\"reference internal\" href=\"../../ref/applications/#django.apps.AppConfig\" title=\"django.apps.AppConfig\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AppConfig</span></code></a> subclass if you need to prevent this\nbehavior. See <a class=\"reference internal\" href=\"#whats-new-3-2\"><span class=\"std std-ref\">What\u2019s new in Django 3.2</span></a> for more details.</p>\n</li>\n<li><p class=\"first\">Instantiating an abstract model now raises <code class=\"docutils literal notranslate\"><span class=\"pre\">TypeError</span></code>.</p>\n</li>\n<li><p class=\"first\">Keyword arguments to <a class=\"reference internal\" href=\"../../topics/testing/advanced/#django.test.utils.setup_databases\" title=\"django.test.utils.setup_databases\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">setup_databases()</span></code></a> are now\nkeyword-only.</p>\n</li>\n<li><p class=\"first\">The undocumented <code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.http.limited_parse_qsl()</span></code> function is\nremoved. Please use <a class=\"reference external\" href=\"https://docs.python.org/3/library/urllib.parse.html#urllib.parse.parse_qsl\" title=\"(in Python v3.11)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">urllib.parse.parse_qsl()</span></code></a> instead.</p>\n</li>\n<li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.test.utils.TestContextDecorator</span></code> now uses\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/unittest.html#unittest.TestCase.addCleanup\" title=\"(in Python v3.11)\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">addCleanup()</span></code></a> so that cleanups registered in the\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/unittest.html#unittest.TestCase.setUp\" title=\"(in Python v3.11)\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">setUp()</span></code></a> method are called before\n<code class=\"docutils literal notranslate\"><span class=\"pre\">TestContextDecorator.disable()</span></code>.</p>\n</li>\n<li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SessionMiddleware</span></code> now raises a\n<a class=\"reference internal\" href=\"../../ref/exceptions/#django.contrib.sessions.exceptions.SessionInterrupted\" title=\"django.contrib.sessions.exceptions.SessionInterrupted\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">SessionInterrupted</span></code></a> exception\ninstead of <a class=\"reference internal\" href=\"../../ref/exceptions/#django.core.exceptions.SuspiciousOperation\" title=\"django.core.exceptions.SuspiciousOperation\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">SuspiciousOperation</span></code></a> when a session\nis destroyed in a concurrent request.</p>\n</li>\n<li><p class=\"first\">The <a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.Field\" title=\"django.db.models.Field\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.db.models.Field</span></code></a> equality operator now correctly\ndistinguishes inherited field instances across models. Additionally, the\nordering of such fields is now defined.</p>\n</li>\n<li><p class=\"first\">The undocumented <code class=\"docutils literal notranslate\"><span class=\"pre\">django.core.files.locks.lock()</span></code> function now returns\n<code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> if the file cannot be locked, instead of raising\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#BlockingIOError\" title=\"(in Python v3.11)\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">BlockingIOError</span></code></a>.</p>\n</li>\n<li><p class=\"first\">The password reset mechanism now invalidates tokens when the user email is\nchanged.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-makemessages\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">makemessages</span></code></a> command no longer processes invalid locales specified\nusing <a class=\"reference internal\" href=\"../../ref/django-admin/#cmdoption-makemessages-locale\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">makemessages</span> <span class=\"pre\">--locale</span></code></a> option, when they contain hyphens\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">'-'</span></code>).</p>\n</li>\n<li><p class=\"first\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.auth.forms.ReadOnlyPasswordHashField</span></code> form field is now\n<a class=\"reference internal\" href=\"../../ref/forms/fields/#django.forms.Field.disabled\" title=\"django.forms.Field.disabled\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">disabled</span></code></a> by default. Therefore\n<code class=\"docutils literal notranslate\"><span class=\"pre\">UserChangeForm.clean_password()</span></code> is no longer required to return the\ninitial value.</p>\n</li>\n<li><p class=\"first\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">cache.get_many()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">get_or_set()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">has_key()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">incr()</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">decr()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">incr_version()</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">decr_version()</span></code> cache operations now\ncorrectly handle <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> stored in the cache, in the same way as any other\nvalue, instead of behaving as though the key didn\u2019t exist.</p>\n<p>Due to a <code class=\"docutils literal notranslate\"><span class=\"pre\">python-memcached</span></code> limitation, the previous behavior is kept for\nthe deprecated <code class=\"docutils literal notranslate\"><span class=\"pre\">MemcachedCache</span></code> backend.</p>\n</li>\n<li><p class=\"first\">The minimum supported version of SQLite is increased from 3.8.3 to 3.9.0.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"../../ref/contrib/messages/#django.contrib.messages.storage.cookie.CookieStorage\" title=\"django.contrib.messages.storage.cookie.CookieStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CookieStorage</span></code></a> now stores\nmessages in the <span class=\"target\" id=\"index-0\"></span><a class=\"rfc reference external\" href=\"https://datatracker.ietf.org/doc/html/rfc6265.html\"><strong>RFC 6265</strong></a> compliant format. Support for cookies that use\nthe old format remains until Django 4.1.</p>\n</li>\n<li><p class=\"first\">The minimum supported version of <code class=\"docutils literal notranslate\"><span class=\"pre\">asgiref</span></code> is increased from 3.2.10 to\n3.3.2.</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"section\" id=\"s-features-deprecated-in-3-2\">\n<span id=\"s-deprecated-features-3-2\"></span><span id=\"features-deprecated-in-3-2\"></span><span id=\"deprecated-features-3-2\"></span><h2>Features deprecated in 3.2<a class=\"headerlink\" href=\"#features-deprecated-in-3-2\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-id3\">\n<span id=\"id3\"></span><h3>Miscellaneous<a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<ul class=\"simple\">\n<li>Assigning objects which don\u2019t support creating deep copies with\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/copy.html#copy.deepcopy\" title=\"(in Python v3.11)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">copy.deepcopy()</span></code></a> to class attributes in\n<a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.TestCase.setUpTestData\" title=\"django.test.TestCase.setUpTestData\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">TestCase.setUpTestData()</span></code></a> is deprecated.</li>\n<li>Using a boolean value in <a class=\"reference internal\" href=\"../../howto/custom-management-commands/#django.core.management.BaseCommand.requires_system_checks\" title=\"django.core.management.BaseCommand.requires_system_checks\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">BaseCommand.requires_system_checks</span></code></a> is\ndeprecated. Use <code class=\"docutils literal notranslate\"><span class=\"pre\">'__all__'</span></code> instead of <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code> (an empty list)\ninstead of <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">whitelist</span></code> argument and <code class=\"docutils literal notranslate\"><span class=\"pre\">domain_whitelist</span></code> attribute of\n<a class=\"reference internal\" href=\"../../ref/validators/#django.core.validators.EmailValidator\" title=\"django.core.validators.EmailValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">EmailValidator</span></code></a> are deprecated. Use\n<code class=\"docutils literal notranslate\"><span class=\"pre\">allowlist</span></code> instead of <code class=\"docutils literal notranslate\"><span class=\"pre\">whitelist</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">domain_allowlist</span></code> instead of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">domain_whitelist</span></code>. You may need to rename <code class=\"docutils literal notranslate\"><span class=\"pre\">whitelist</span></code> in existing\nmigrations.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">default_app_config</span></code> application configuration variable is deprecated,\ndue to the now automatic <code class=\"docutils literal notranslate\"><span class=\"pre\">AppConfig</span></code> discovery. See <a class=\"reference internal\" href=\"#whats-new-3-2\"><span class=\"std std-ref\">What\u2019s new in Django 3.2</span></a>\nfor more details.</li>\n<li>Automatically calling <code class=\"docutils literal notranslate\"><span class=\"pre\">repr()</span></code> on a queryset in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">TransactionTestCase.assertQuerysetEqual()</span></code>, when compared to string\nvalues, is deprecated. If you need the previous behavior, explicitly set\n<code class=\"docutils literal notranslate\"><span class=\"pre\">transform</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">repr</span></code>.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">django.core.cache.backends.memcached.MemcachedCache</span></code> backend is\ndeprecated as <code class=\"docutils literal notranslate\"><span class=\"pre\">python-memcached</span></code> has some problems and seems to be\nunmaintained. Use <code class=\"docutils literal notranslate\"><span class=\"pre\">django.core.cache.backends.memcached.PyMemcacheCache</span></code>\nor <code class=\"docutils literal notranslate\"><span class=\"pre\">django.core.cache.backends.memcached.PyLibMCCache</span></code> instead.</li>\n<li>The format of messages used by\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.messages.storage.cookie.CookieStorage</span></code> is different from\nthe format generated by older versions of Django. Support for the old format\nremains until Django 4.1.</li>\n</ul>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["releases/3.1.14", "Django 3.1.14 release notes", "N", "next"], ["releases/3.2.1", "Django 3.2.1 release notes", "P", "previous"]], "sourcename": "releases/3.2.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Django 3.2 release notes</a><ul>\n<li><a class=\"reference internal\" href=\"#python-compatibility\">Python compatibility</a></li>\n<li><a class=\"reference internal\" href=\"#what-s-new-in-django-3-2\">What\u2019s new in Django 3.2</a><ul>\n<li><a class=\"reference internal\" href=\"#automatic-appconfig-discovery\">Automatic <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AppConfig</span></code> discovery</a></li>\n<li><a class=\"reference internal\" href=\"#customizing-type-of-auto-created-primary-keys\">Customizing type of auto-created primary keys</a></li>\n<li><a class=\"reference internal\" href=\"#functional-indexes\">Functional indexes</a></li>\n<li><a class=\"reference internal\" href=\"#pymemcache-support\"><code class=\"docutils literal notranslate\"><span class=\"pre\">pymemcache</span></code> support</a></li>\n<li><a class=\"reference internal\" href=\"#new-decorators-for-the-admin-site\">New decorators for the admin site</a></li>\n<li><a class=\"reference internal\" href=\"#minor-features\">Minor features</a><ul>\n<li><a class=\"reference internal\" href=\"#django-contrib-admin\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.admin</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-contrib-auth\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.auth</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-contrib-contenttypes\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.contenttypes</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-contrib-gis\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.gis</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-contrib-postgres\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.postgres</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-contrib-sitemaps\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.sitemaps</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-contrib-syndication\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.syndication</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#database-backends\">Database backends</a></li>\n<li><a class=\"reference internal\" href=\"#decorators\">Decorators</a></li>\n<li><a class=\"reference internal\" href=\"#error-reporting\">Error Reporting</a></li>\n<li><a class=\"reference internal\" href=\"#file-uploads\">File Uploads</a></li>\n<li><a class=\"reference internal\" href=\"#forms\">Forms</a></li>\n<li><a class=\"reference internal\" href=\"#generic-views\">Generic Views</a></li>\n<li><a class=\"reference internal\" href=\"#management-commands\">Management Commands</a></li>\n<li><a class=\"reference internal\" href=\"#migrations\">Migrations</a></li>\n<li><a class=\"reference internal\" href=\"#models\">Models</a></li>\n<li><a class=\"reference internal\" href=\"#pagination\">Pagination</a></li>\n<li><a class=\"reference internal\" href=\"#requests-and-responses\">Requests and Responses</a></li>\n<li><a class=\"reference internal\" href=\"#security\">Security</a></li>\n<li><a class=\"reference internal\" href=\"#serialization\">Serialization</a></li>\n<li><a class=\"reference internal\" href=\"#signals\">Signals</a></li>\n<li><a class=\"reference internal\" href=\"#templates\">Templates</a></li>\n<li><a class=\"reference internal\" href=\"#tests\">Tests</a></li>\n<li><a class=\"reference internal\" href=\"#utilities\">Utilities</a></li>\n<li><a class=\"reference internal\" href=\"#validators\">Validators</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#backwards-incompatible-changes-in-3-2\">Backwards incompatible changes in 3.2</a><ul>\n<li><a class=\"reference internal\" href=\"#database-backend-api\">Database backend API</a></li>\n<li><a class=\"reference internal\" href=\"#id1\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.admin</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#id2\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.gis</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dropped-support-for-postgresql-9-5\">Dropped support for PostgreSQL 9.5</a></li>\n<li><a class=\"reference internal\" href=\"#dropped-support-for-mysql-5-6\">Dropped support for MySQL 5.6</a></li>\n<li><a class=\"reference internal\" href=\"#miscellaneous\">Miscellaneous</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#features-deprecated-in-3-2\">Features deprecated in 3.2</a><ul>\n<li><a class=\"reference internal\" href=\"#id3\">Miscellaneous</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "releases/3.2", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}