{"parents": [{"link": "../", "title": "Release notes"}], "prev": {"link": "../1.4.12/", "title": "Django 1.4.12 release notes"}, "next": {"link": "../1.4.10/", "title": "Django 1.4.10 release notes"}, "title": "Django 1.4.11 release notes", "meta": {}, "body": "<div class=\"section\" id=\"s-django-1-4-11-release-notes\">\n<span id=\"django-1-4-11-release-notes\"></span><h1>Django 1.4.11 release notes<a class=\"headerlink\" href=\"#django-1-4-11-release-notes\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p><em>April 21, 2014</em></p>\n<p>Django 1.4.11 fixes three security issues in 1.4.10. Additionally,\nDjango\u2019s vendored version of six, <code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.six</span></code>, has been\nupgraded to the latest release (1.6.1).</p>\n<div class=\"section\" id=\"s-unexpected-code-execution-using-reverse\">\n<span id=\"unexpected-code-execution-using-reverse\"></span><h2>Unexpected code execution using <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse()</span></code><a class=\"headerlink\" href=\"#unexpected-code-execution-using-reverse\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Django\u2019s URL handling is based on a mapping of regex patterns\n(representing the URLs) to callable views, and Django\u2019s own processing\nconsists of matching a requested URL against those patterns to\ndetermine the appropriate view to invoke.</p>\n<p>Django also provides a convenience function \u2013 <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse()</span></code> \u2013 which performs\nthis process in the opposite direction. The <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse()</span></code> function takes\ninformation about a view and returns a URL which would invoke that view. Use\nof <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse()</span></code> is encouraged for application developers, as the output of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse()</span></code> is always based on the current URL patterns, meaning developers\ndo not need to change other code when making changes to URLs.</p>\n<p>One argument signature for <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse()</span></code> is to pass a dotted Python\npath to the desired view. In this situation, Django will import the\nmodule indicated by that dotted path as part of generating the\nresulting URL. If such a module has import-time side effects, those\nside effects will occur.</p>\n<p>Thus it is possible for an attacker to cause unexpected code\nexecution, given the following conditions:</p>\n<ol class=\"arabic simple\">\n<li>One or more views are present which construct a URL based on user\ninput (commonly, a \u201cnext\u201d parameter in a querystring indicating\nwhere to redirect upon successful completion of an action).</li>\n<li>One or more modules are known to an attacker to exist on the\nserver\u2019s Python import path, which perform code execution with side\neffects on importing.</li>\n</ol>\n<p>To remedy this, <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse()</span></code> will now only accept and import dotted\npaths based on the view-containing modules listed in the project\u2019s <a class=\"reference internal\" href=\"../../topics/http/urls/\"><span class=\"doc\">URL\npattern configuration</span></a>, so as to ensure that only modules\nthe developer intended to be imported in this fashion can or will be imported.</p>\n</div>\n<div class=\"section\" id=\"s-caching-of-anonymous-pages-could-reveal-csrf-token\">\n<span id=\"caching-of-anonymous-pages-could-reveal-csrf-token\"></span><h2>Caching of anonymous pages could reveal CSRF token<a class=\"headerlink\" href=\"#caching-of-anonymous-pages-could-reveal-csrf-token\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Django includes both a <a class=\"reference internal\" href=\"../../topics/cache/\"><span class=\"doc\">caching framework</span></a> and a system\nfor <a class=\"reference internal\" href=\"../../ref/csrf/\"><span class=\"doc\">preventing cross-site request forgery (CSRF) attacks</span></a>. The CSRF-protection system is based on a random nonce\nsent to the client in a cookie which must be sent by the client on future\nrequests and, in forms, a hidden value which must be submitted back with the\nform.</p>\n<p>The caching framework includes an option to cache responses to\nanonymous (i.e., unauthenticated) clients.</p>\n<p>When the first anonymous request to a given page is by a client which\ndid not have a CSRF cookie, the cache framework will also cache the\nCSRF cookie and serve the same nonce to other anonymous clients who\ndo not have a CSRF cookie. This can allow an attacker to obtain a\nvalid CSRF cookie value and perform attacks which bypass the check for\nthe cookie.</p>\n<p>To remedy this, the caching framework will no longer cache such\nresponses. The heuristic for this will be:</p>\n<ol class=\"arabic simple\">\n<li>If the incoming request did not submit any cookies, and</li>\n<li>If the response did send one or more cookies, and</li>\n<li>If the <code class=\"docutils literal notranslate\"><span class=\"pre\">Vary:</span> <span class=\"pre\">Cookie</span></code> header is set on the response, then the\nresponse will not be cached.</li>\n</ol>\n</div>\n<div class=\"section\" id=\"s-mysql-typecasting\">\n<span id=\"mysql-typecasting\"></span><h2>MySQL typecasting<a class=\"headerlink\" href=\"#mysql-typecasting\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The MySQL database is known to \u201ctypecast\u201d on certain queries; for\nexample, when querying a table which contains string values, but using\na query which filters based on an integer value, MySQL will first\nsilently coerce the strings to integers and return a result based on that.</p>\n<p>If a query is performed without first converting values to the\nappropriate type, this can produce unexpected results, similar to what\nwould occur if the query itself had been manipulated.</p>\n<p>Django\u2019s model field classes are aware of their own types and most\nsuch classes perform explicit conversion of query arguments to the\ncorrect database-level type before querying. However, three model\nfield classes did not correctly convert their arguments:</p>\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.FilePathField\" title=\"django.db.models.FilePathField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FilePathField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.GenericIPAddressField\" title=\"django.db.models.GenericIPAddressField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GenericIPAddressField</span></code></a></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">IPAddressField</span></code></li>\n</ul>\n<p>These three fields have been updated to convert their arguments to the\ncorrect types before querying.</p>\n<p>Additionally, developers of custom model fields are now warned via\ndocumentation to ensure their custom field classes will perform\nappropriate type conversions, and users of the <a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.raw\" title=\"django.db.models.query.QuerySet.raw\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">raw()</span></code></a> and <a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.extra\" title=\"django.db.models.query.QuerySet.extra\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">extra()</span></code></a> query methods \u2013 which allow the\ndeveloper to supply raw SQL or SQL fragments \u2013 will be advised to ensure they\nperform appropriate manual type conversions prior to executing queries.</p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["releases/1.4.10", "Django 1.4.10 release notes", "N", "next"], ["releases/1.4.12", "Django 1.4.12 release notes", "P", "previous"]], "sourcename": "releases/1.4.11.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Django 1.4.11 release notes</a><ul>\n<li><a class=\"reference internal\" href=\"#unexpected-code-execution-using-reverse\">Unexpected code execution using <code class=\"docutils literal notranslate\"><span class=\"pre\">reverse()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#caching-of-anonymous-pages-could-reveal-csrf-token\">Caching of anonymous pages could reveal CSRF token</a></li>\n<li><a class=\"reference internal\" href=\"#mysql-typecasting\">MySQL typecasting</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "releases/1.4.11", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}