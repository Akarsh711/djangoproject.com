{"parents": [{"link": "../", "title": "Release notes"}], "prev": {"link": "../1.2.5/", "title": "Django 1.2.5 release notes"}, "next": {"link": "../1.2.3/", "title": "Django 1.2.3 release notes"}, "title": "Django 1.2.4 release notes", "meta": {}, "body": "<div class=\"section\" id=\"s-django-1-2-4-release-notes\">\n<span id=\"django-1-2-4-release-notes\"></span><h1>Django 1.2.4 release notes<a class=\"headerlink\" href=\"#django-1-2-4-release-notes\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Welcome to Django 1.2.4!</p>\n<p>This is the fourth \u201cbugfix\u201d release in the Django 1.2 series,\nimproving the stability and performance of the Django 1.2 codebase.</p>\n<p>With one exception, Django 1.2.4 maintains backwards compatibility\nwith Django 1.2.3. It also contains a number of fixes and other\nimprovements. Django 1.2.4 is a recommended upgrade for any\ndevelopment or deployment currently using or targeting Django 1.2.</p>\n<p>For full details on the new features, backwards incompatibilities, and\ndeprecated features in the 1.2 branch, see the <a class=\"reference internal\" href=\"../1.2/\"><span class=\"doc\">Django 1.2 release notes</span></a>.</p>\n<div class=\"section\" id=\"s-backwards-incompatible-changes\">\n<span id=\"backwards-incompatible-changes\"></span><h2>Backwards incompatible changes<a class=\"headerlink\" href=\"#backwards-incompatible-changes\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-restricted-filters-in-admin-interface\">\n<span id=\"restricted-filters-in-admin-interface\"></span><h3>Restricted filters in admin interface<a class=\"headerlink\" href=\"#restricted-filters-in-admin-interface\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The Django administrative interface, <code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.admin</span></code>, supports\nfiltering of displayed lists of objects by fields on the corresponding\nmodels, including across database-level relationships. This is\nimplemented by passing lookup arguments in the querystring portion of\nthe URL, and options on the ModelAdmin class allow developers to\nspecify particular fields or relationships which will generate\nautomatic links for filtering.</p>\n<p>One historically-undocumented and -unofficially-supported feature has\nbeen the ability for a user with sufficient knowledge of a model\u2019s\nstructure and the format of these lookup arguments to invent useful\nnew filters on the fly by manipulating the querystring.</p>\n<p>However, it has been demonstrated that this can be abused to gain\naccess to information outside of an admin user\u2019s permissions; for\nexample, an attacker with access to the admin and sufficient knowledge\nof model structure and relations could construct query strings which \u2013\nwith repeated use of regular-expression lookups supported by the\nDjango database API \u2013 expose sensitive information such as users\u2019\npassword hashes.</p>\n<p>To remedy this, <code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.admin</span></code> will now validate that\nquerystring lookup arguments either specify only fields on the model\nbeing viewed, or cross relations which have been explicitly\nallowed by the application developer using the preexisting\nmechanism mentioned above. This is backwards-incompatible for any\nusers relying on the prior ability to insert arbitrary lookups.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-one-new-feature\">\n<span id=\"one-new-feature\"></span><h2>One new feature<a class=\"headerlink\" href=\"#one-new-feature\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Ordinarily, a point release would not include new features, but in the\ncase of Django 1.2.4, we have made an exception to this rule.</p>\n<p>One of the bugs fixed in Django 1.2.4 involves a set of\ncircumstances whereby a running a test suite on a multiple database\nconfiguration could cause the original source database (i.e., the\nactual production database) to be dropped, causing catastrophic loss\nof data. In order to provide a fix for this problem, it was necessary\nto introduce a new setting \u2013 <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-TEST_DEPENDENCIES\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">TEST_DEPENDENCIES</span></code></a> \u2013 that\nallows you to define any creation order dependencies in your database\nconfiguration.</p>\n<p>Most users \u2013 even users with multiple-database configurations \u2013 need\nnot be concerned about the data loss bug, or the manual configuration of\n<a class=\"reference internal\" href=\"../../ref/settings/#std-setting-TEST_DEPENDENCIES\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">TEST_DEPENDENCIES</span></code></a>. See the <a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/14415\">original problem report</a>\ndocumentation on <a class=\"reference internal\" href=\"../../topics/testing/advanced/#topics-testing-creation-dependencies\"><span class=\"std std-ref\">controlling the creation order of test\ndatabases</span></a> for details.</p>\n</div>\n<div class=\"section\" id=\"s-geodjango\">\n<span id=\"geodjango\"></span><h2>GeoDjango<a class=\"headerlink\" href=\"#geodjango\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The function-based <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-TEST_RUNNER\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">TEST_RUNNER</span></code></a> previously used to execute\nthe GeoDjango test suite, <code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.gis.tests.run_gis_tests</span></code>,\nwas finally deprecated in favor of a class-based test runner,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.gis.tests.GeoDjangoTestSuiteRunner</span></code>, added in this\nrelease.</p>\n<p>In addition, the GeoDjango test suite is now included when\n<a class=\"reference internal\" href=\"../../internals/contributing/writing-code/unit-tests/#running-unit-tests\"><span class=\"std std-ref\">running the Django test suite</span></a> with <code class=\"docutils literal notranslate\"><span class=\"pre\">runtests.py</span></code>\nand using <a class=\"reference internal\" href=\"../../ref/contrib/gis/db-api/#spatial-backends\"><span class=\"std std-ref\">spatial database backends</span></a>.</p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["releases/1.2.3", "Django 1.2.3 release notes", "N", "next"], ["releases/1.2.5", "Django 1.2.5 release notes", "P", "previous"]], "sourcename": "releases/1.2.4.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Django 1.2.4 release notes</a><ul>\n<li><a class=\"reference internal\" href=\"#backwards-incompatible-changes\">Backwards incompatible changes</a><ul>\n<li><a class=\"reference internal\" href=\"#restricted-filters-in-admin-interface\">Restricted filters in admin interface</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#one-new-feature\">One new feature</a></li>\n<li><a class=\"reference internal\" href=\"#geodjango\">GeoDjango</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "releases/1.2.4", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}