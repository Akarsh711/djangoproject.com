{"parents": [{"link": "../", "title": "Release notes"}], "prev": {"link": "../4.1.1/", "title": "Django 4.1.1 release notes"}, "next": {"link": "../4.0.10/", "title": "Django 4.0.10 release notes"}, "title": "Django 4.1 release notes", "meta": {}, "body": "<div class=\"section\" id=\"s-django-4-1-release-notes\">\n<span id=\"django-4-1-release-notes\"></span><h1>Django 4.1 release notes<a class=\"headerlink\" href=\"#django-4-1-release-notes\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p><em>August 3, 2022</em></p>\n<p>Welcome to Django 4.1!</p>\n<p>These release notes cover the <a class=\"reference internal\" href=\"#whats-new-4-1\"><span class=\"std std-ref\">new features</span></a>, as well as\nsome <a class=\"reference internal\" href=\"#backwards-incompatible-4-1\"><span class=\"std std-ref\">backwards incompatible changes</span></a> you\u2019ll\nwant to be aware of when upgrading from Django 4.0 or earlier. We\u2019ve\n<a class=\"reference internal\" href=\"#deprecated-features-4-1\"><span class=\"std std-ref\">begun the deprecation process for some features</span></a>.</p>\n<p>See the <a class=\"reference internal\" href=\"../../howto/upgrade-version/\"><span class=\"doc\">How to upgrade Django to a newer version</span></a> guide if you\u2019re updating an existing\nproject.</p>\n<div class=\"section\" id=\"s-python-compatibility\">\n<span id=\"python-compatibility\"></span><h2>Python compatibility<a class=\"headerlink\" href=\"#python-compatibility\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Django 4.1 supports Python 3.8, 3.9, 3.10, and 3.11 (as of 4.1.3). We\n<strong>highly recommend</strong> and only officially support the latest release of each\nseries.</p>\n</div>\n<div class=\"section\" id=\"s-what-s-new-in-django-4-1\">\n<span id=\"s-whats-new-4-1\"></span><span id=\"what-s-new-in-django-4-1\"></span><span id=\"whats-new-4-1\"></span><h2>What\u2019s new in Django 4.1<a class=\"headerlink\" href=\"#what-s-new-in-django-4-1\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-asynchronous-handlers-for-class-based-views\">\n<span id=\"asynchronous-handlers-for-class-based-views\"></span><h3>Asynchronous handlers for class-based views<a class=\"headerlink\" href=\"#asynchronous-handlers-for-class-based-views\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>View subclasses may now define async HTTP method handlers:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.http</span> <span class=\"kn\">import</span> <span class=\"n\">HttpResponse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.views</span> <span class=\"kn\">import</span> <span class=\"n\">View</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AsyncView</span><span class=\"p\">(</span><span class=\"n\">View</span><span class=\"p\">):</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Perform view logic using await.</span>\n        <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">HttpResponse</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello async world!&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>See <a class=\"reference internal\" href=\"../../topics/class-based-views/#async-class-based-views\"><span class=\"std std-ref\">Asynchronous class-based views</span></a> for more details.</p>\n</div>\n<div class=\"section\" id=\"s-asynchronous-orm-interface\">\n<span id=\"asynchronous-orm-interface\"></span><h3>Asynchronous ORM interface<a class=\"headerlink\" href=\"#asynchronous-orm-interface\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">QuerySet</span></code> now provides an asynchronous interface for all data access\noperations. These are named as-per the existing synchronous operations but with\nan <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code> prefix, for example <code class=\"docutils literal notranslate\"><span class=\"pre\">acreate()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">aget()</span></code>, and so on.</p>\n<p>The new interface allows you to write asynchronous code without needing to wrap\nORM operations in <code class=\"docutils literal notranslate\"><span class=\"pre\">sync_to_async()</span></code>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">async</span> <span class=\"k\">for</span> <span class=\"n\">author</span> <span class=\"ow\">in</span> <span class=\"n\">Author</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">name__startswith</span><span class=\"o\">=</span><span class=\"s2\">&quot;A&quot;</span><span class=\"p\">):</span>\n    <span class=\"n\">book</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">author</span><span class=\"o\">.</span><span class=\"n\">books</span><span class=\"o\">.</span><span class=\"n\">afirst</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>Note that, at this stage, the underlying database operations remain\nsynchronous, with contributions ongoing to push asynchronous support down into\nthe SQL compiler, and integrate asynchronous database drivers. The new\nasynchronous queryset interface currently encapsulates the necessary\n<code class=\"docutils literal notranslate\"><span class=\"pre\">sync_to_async()</span></code> operations for you, and will allow your code to take\nadvantage of developments in the ORM\u2019s asynchronous support as it evolves.</p>\n<p>See <a class=\"reference internal\" href=\"../../topics/db/queries/#async-queries\"><span class=\"std std-ref\">Asynchronous queries</span></a> for details and limitations.</p>\n</div>\n<div class=\"section\" id=\"s-validation-of-constraints\">\n<span id=\"validation-of-constraints\"></span><h3>Validation of Constraints<a class=\"headerlink\" href=\"#validation-of-constraints\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p><a class=\"reference internal\" href=\"../../ref/models/constraints/#django.db.models.CheckConstraint\" title=\"django.db.models.CheckConstraint\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Check</span></code></a>,\n<a class=\"reference internal\" href=\"../../ref/models/constraints/#django.db.models.UniqueConstraint\" title=\"django.db.models.UniqueConstraint\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">unique</span></code></a>, and <a class=\"reference internal\" href=\"../../ref/contrib/postgres/constraints/#django.contrib.postgres.constraints.ExclusionConstraint\" title=\"django.contrib.postgres.constraints.ExclusionConstraint\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">exclusion</span></code></a> constraints defined\nin the <a class=\"reference internal\" href=\"../../ref/models/options/#django.db.models.Options.constraints\" title=\"django.db.models.Options.constraints\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Meta.constraints</span></code></a> option\nare now checked during <a class=\"reference internal\" href=\"../../ref/models/instances/#validating-objects\"><span class=\"std std-ref\">model validation</span></a>.</p>\n</div>\n<div class=\"section\" id=\"s-form-rendering-accessibility\">\n<span id=\"form-rendering-accessibility\"></span><h3>Form rendering accessibility<a class=\"headerlink\" href=\"#form-rendering-accessibility\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>In order to aid users with screen readers, and other assistive technology, new\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;div&gt;</span></code> based form templates are available from this release. These provide\nmore accessible navigation than the older templates, and are able to correctly\ngroup related controls, such as radio-lists, into fieldsets.</p>\n<p>The new templates are recommended, and will become the default form rendering\nstyle when outputting a form, like <code class=\"docutils literal notranslate\"><span class=\"pre\">{{</span> <span class=\"pre\">form</span> <span class=\"pre\">}}</span></code> in a template, from Django\n5.0.</p>\n<p>In order to ease adopting the new output style, the default form and formset\ntemplates are now configurable at the project level via the\n<a class=\"reference internal\" href=\"../../ref/settings/#std-setting-FORM_RENDERER\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">FORM_RENDERER</span></code></a> setting.</p>\n<p>See <a class=\"reference internal\" href=\"#forms-4-1\"><span class=\"std std-ref\">the Forms section (below)</span></a> for full details.</p>\n</div>\n<div class=\"section\" id=\"s-csrf-cookie-masked-setting\">\n<span id=\"s-csrf-cookie-masked-usage\"></span><span id=\"csrf-cookie-masked-setting\"></span><span id=\"csrf-cookie-masked-usage\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">CSRF_COOKIE_MASKED</span></code> setting<a class=\"headerlink\" href=\"#csrf-cookie-masked-setting\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">CSRF_COOKIE_MASKED</span></code> transitional setting allows specifying whether\nto mask the CSRF cookie.</p>\n<p><a class=\"reference internal\" href=\"../../ref/middleware/#django.middleware.csrf.CsrfViewMiddleware\" title=\"django.middleware.csrf.CsrfViewMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CsrfViewMiddleware</span></code></a> no longer masks the CSRF\ncookie like it does the CSRF token in the DOM. If you are upgrading multiple\ninstances of the same project to Django 4.1, you should set\n<code class=\"docutils literal notranslate\"><span class=\"pre\">CSRF_COOKIE_MASKED</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> during the transition, in order to allow\ncompatibility with the older versions of Django. Once the transition to 4.1 is\ncomplete you can stop overriding <code class=\"docutils literal notranslate\"><span class=\"pre\">CSRF_COOKIE_MASKED</span></code>.</p>\n<p>This setting is deprecated as of this release and will be removed in Django\n5.0.</p>\n</div>\n<div class=\"section\" id=\"s-minor-features\">\n<span id=\"minor-features\"></span><h3>Minor features<a class=\"headerlink\" href=\"#minor-features\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<div class=\"section\" id=\"s-django-contrib-admin\">\n<span id=\"django-contrib-admin\"></span><h4><a class=\"reference internal\" href=\"../../ref/contrib/admin/#module-django.contrib.admin\" title=\"django.contrib.admin: Django's admin site.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.admin</span></code></a><a class=\"headerlink\" href=\"#django-contrib-admin\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The admin <a class=\"reference internal\" href=\"../../ref/contrib/admin/#admin-theming\"><span class=\"std std-ref\">dark mode CSS variables</span></a> are now applied in a\nseparate stylesheet and template block.</li>\n<li><a class=\"reference internal\" href=\"../../ref/contrib/admin/filters/#modeladmin-list-filters\"><span class=\"std std-ref\">ModelAdmin List Filters</span></a> providing custom <code class=\"docutils literal notranslate\"><span class=\"pre\">FieldListFilter</span></code>\nsubclasses can now control the query string value separator when filtering\nfor multiple values using the <code class=\"docutils literal notranslate\"><span class=\"pre\">__in</span></code> lookup.</li>\n<li>The admin <a class=\"reference internal\" href=\"../../ref/contrib/admin/#django.contrib.admin.ModelAdmin.history_view\" title=\"django.contrib.admin.ModelAdmin.history_view\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">history</span> <span class=\"pre\">view</span></code></a>\nis now paginated.</li>\n<li>Related widget wrappers now have a link to object\u2019s change form.</li>\n<li>The <a class=\"reference internal\" href=\"../../ref/contrib/admin/#django.contrib.admin.AdminSite.get_app_list\" title=\"django.contrib.admin.AdminSite.get_app_list\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">AdminSite.get_app_list()</span></code></a> method now allows changing the order of\napps and models on the admin index page.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-contrib-auth\">\n<span id=\"django-contrib-auth\"></span><h4><a class=\"reference internal\" href=\"../../topics/auth/#module-django.contrib.auth\" title=\"django.contrib.auth: Django's authentication framework.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.auth</span></code></a><a class=\"headerlink\" href=\"#django-contrib-auth\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The default iteration count for the PBKDF2 password hasher is increased from\n320,000 to 390,000.</li>\n<li>The <a class=\"reference internal\" href=\"../../ref/contrib/auth/#django.contrib.auth.backends.RemoteUserBackend.configure_user\" title=\"django.contrib.auth.backends.RemoteUserBackend.configure_user\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">RemoteUserBackend.configure_user()</span></code></a> method now allows synchronizing\nuser attributes with attributes in a remote system such as an LDAP directory.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-contrib-gis\">\n<span id=\"django-contrib-gis\"></span><h4><a class=\"reference internal\" href=\"../../ref/contrib/gis/#module-django.contrib.gis\" title=\"django.contrib.gis: Geographic Information System (GIS) extensions for Django\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.gis</span></code></a><a class=\"headerlink\" href=\"#django-contrib-gis\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <a class=\"reference internal\" href=\"../../ref/contrib/gis/geos/#django.contrib.gis.geos.GEOSGeometry.make_valid\" title=\"django.contrib.gis.geos.GEOSGeometry.make_valid\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">GEOSGeometry.make_valid()</span></code></a> method allows converting invalid\ngeometries to valid ones.</li>\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">clone</span></code> argument for <a class=\"reference internal\" href=\"../../ref/contrib/gis/geos/#django.contrib.gis.geos.GEOSGeometry.normalize\" title=\"django.contrib.gis.geos.GEOSGeometry.normalize\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">GEOSGeometry.normalize()</span></code></a> allows\ncreating a normalized clone of the geometry.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-contrib-postgres\">\n<span id=\"django-contrib-postgres\"></span><h4><a class=\"reference internal\" href=\"../../ref/contrib/postgres/#module-django.contrib.postgres\" title=\"django.contrib.postgres: PostgreSQL-specific fields and features\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.postgres</span></code></a><a class=\"headerlink\" href=\"#django-contrib-postgres\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <a class=\"reference internal\" href=\"../../ref/contrib/postgres/aggregates/#django.contrib.postgres.aggregates.BitXor\" title=\"django.contrib.postgres.aggregates.BitXor\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BitXor()</span></code></a>\naggregate function returns an <code class=\"docutils literal notranslate\"><span class=\"pre\">int</span></code> of the bitwise <code class=\"docutils literal notranslate\"><span class=\"pre\">XOR</span></code> of all non-null\ninput values.</li>\n<li><a class=\"reference internal\" href=\"../../ref/contrib/postgres/indexes/#django.contrib.postgres.indexes.SpGistIndex\" title=\"django.contrib.postgres.indexes.SpGistIndex\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SpGistIndex</span></code></a> now supports covering\nindexes on PostgreSQL 14+.</li>\n<li><a class=\"reference internal\" href=\"../../ref/contrib/postgres/constraints/#django.contrib.postgres.constraints.ExclusionConstraint\" title=\"django.contrib.postgres.constraints.ExclusionConstraint\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ExclusionConstraint</span></code></a> now\nsupports covering exclusion constraints using SP-GiST indexes on PostgreSQL\n14+.</li>\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">default_bounds</span></code> attribute of <a class=\"reference internal\" href=\"../../ref/contrib/postgres/fields/#django.contrib.postgres.fields.DateTimeRangeField.default_bounds\" title=\"django.contrib.postgres.fields.DateTimeRangeField.default_bounds\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">DateTimeRangeField</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/contrib/postgres/fields/#django.contrib.postgres.fields.DecimalRangeField.default_bounds\" title=\"django.contrib.postgres.fields.DecimalRangeField.default_bounds\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">DecimalRangeField</span></code></a> allows\nspecifying bounds for list and tuple inputs.</li>\n<li><a class=\"reference internal\" href=\"../../ref/contrib/postgres/constraints/#django.contrib.postgres.constraints.ExclusionConstraint\" title=\"django.contrib.postgres.constraints.ExclusionConstraint\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ExclusionConstraint</span></code></a> now allows\nspecifying operator classes with the\n<a class=\"reference internal\" href=\"../../ref/contrib/postgres/indexes/#django.contrib.postgres.indexes.OpClass\" title=\"django.contrib.postgres.indexes.OpClass\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OpClass()</span></code></a> expression.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-contrib-sitemaps\">\n<span id=\"django-contrib-sitemaps\"></span><h4><a class=\"reference internal\" href=\"../../ref/contrib/sitemaps/#module-django.contrib.sitemaps\" title=\"django.contrib.sitemaps: A framework for generating Google sitemap XML files.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.sitemaps</span></code></a><a class=\"headerlink\" href=\"#django-contrib-sitemaps\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The default sitemap index template <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;sitemapindex&gt;</span></code> now includes the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;lastmod&gt;</span></code> timestamp where available, through the new\n<a class=\"reference internal\" href=\"../../ref/contrib/sitemaps/#django.contrib.sitemaps.Sitemap.get_latest_lastmod\" title=\"django.contrib.sitemaps.Sitemap.get_latest_lastmod\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_latest_lastmod()</span></code></a> method. Custom\nsitemap index templates should be updated for the adjusted <a class=\"reference internal\" href=\"../../ref/contrib/sitemaps/#sitemap-index-context-variables\"><span class=\"std std-ref\">context\nvariables</span></a>.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-contrib-staticfiles\">\n<span id=\"django-contrib-staticfiles\"></span><h4><a class=\"reference internal\" href=\"../../ref/contrib/staticfiles/#module-django.contrib.staticfiles\" title=\"django.contrib.staticfiles: An app for handling static files.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.staticfiles</span></code></a><a class=\"headerlink\" href=\"#django-contrib-staticfiles\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"../../ref/contrib/staticfiles/#django.contrib.staticfiles.storage.ManifestStaticFilesStorage\" title=\"django.contrib.staticfiles.storage.ManifestStaticFilesStorage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ManifestStaticFilesStorage</span></code></a> now\nreplaces paths to CSS source map references with their hashed counterparts.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-database-backends\">\n<span id=\"database-backends\"></span><h4>Database backends<a class=\"headerlink\" href=\"#database-backends\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Third-party database backends can now specify the minimum required version of\nthe database using the <code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseFeatures.minimum_database_version</span></code>\nattribute which is a tuple (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">(10,</span> <span class=\"pre\">0)</span></code> means \u201c10.0\u201d). If a minimum\nversion is specified, backends must also implement\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseWrapper.get_database_version()</span></code>, which returns a tuple of the\ncurrent database version. The backend\u2019s\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseWrapper.init_connection_state()</span></code> method must call <code class=\"docutils literal notranslate\"><span class=\"pre\">super()</span></code> in\norder for the check to run.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-forms\">\n<span id=\"s-forms-4-1\"></span><span id=\"forms\"></span><span id=\"forms-4-1\"></span><h4>Forms<a class=\"headerlink\" href=\"#forms\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul>\n<li><p class=\"first\">The default template used to render forms when cast to a string, e.g. in\ntemplates as <code class=\"docutils literal notranslate\"><span class=\"pre\">{{</span> <span class=\"pre\">form</span> <span class=\"pre\">}}</span></code>, is now configurable at the project-level by\nsetting <a class=\"reference internal\" href=\"../../ref/forms/renderers/#django.forms.renderers.BaseRenderer.form_template_name\" title=\"django.forms.renderers.BaseRenderer.form_template_name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">form_template_name</span></code></a> on\nthe class provided for <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-FORM_RENDERER\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">FORM_RENDERER</span></code></a>.</p>\n<p><a class=\"reference internal\" href=\"../../ref/forms/api/#django.forms.Form.template_name\" title=\"django.forms.Form.template_name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Form.template_name</span></code></a> is now a property deferring to the renderer, but\nmay be overridden with a string value to specify the template name per-form\nclass.</p>\n<p>Similarly, the default template used to render formsets can be specified via\nthe matching\n<a class=\"reference internal\" href=\"../../ref/forms/renderers/#django.forms.renderers.BaseRenderer.formset_template_name\" title=\"django.forms.renderers.BaseRenderer.formset_template_name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">formset_template_name</span></code></a> renderer\nattribute.</p>\n</li>\n<li><p class=\"first\">The new <code class=\"docutils literal notranslate\"><span class=\"pre\">div.html</span></code> form template, referencing\n<a class=\"reference internal\" href=\"../../ref/forms/api/#django.forms.Form.template_name_div\" title=\"django.forms.Form.template_name_div\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Form.template_name_div</span></code></a> attribute, and matching <a class=\"reference internal\" href=\"../../ref/forms/api/#django.forms.Form.as_div\" title=\"django.forms.Form.as_div\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">Form.as_div()</span></code></a>\nmethod, render forms using HTML <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;div&gt;</span></code> elements.</p>\n<p>This new output style is recommended over the existing\n<a class=\"reference internal\" href=\"../../ref/forms/api/#django.forms.Form.as_table\" title=\"django.forms.Form.as_table\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">as_table()</span></code></a>, <a class=\"reference internal\" href=\"../../ref/forms/api/#django.forms.Form.as_p\" title=\"django.forms.Form.as_p\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">as_p()</span></code></a> and <a class=\"reference internal\" href=\"../../ref/forms/api/#django.forms.Form.as_ul\" title=\"django.forms.Form.as_ul\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">as_ul()</span></code></a> styles,\nas the template implements <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;fieldset&gt;</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;legend&gt;</span></code> to group related\ninputs and is easier for screen reader users to navigate.</p>\n<p>The div-based output will become the default rendering style from Django 5.0.</p>\n</li>\n<li><p class=\"first\">In order to smooth adoption of the new <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;div&gt;</span></code> output style, two\ntransitional form renderer classes are available:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.forms.renderers.DjangoDivFormRenderer</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.forms.renderers.Jinja2DivFormRenderer</span></code>, for the Django and Jinja2\ntemplate backends respectively.</p>\n<p>You can apply one of these via the <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-FORM_RENDERER\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">FORM_RENDERER</span></code></a> setting. For\nexample:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">FORM_RENDERER</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;django.forms.renderers.DjangoDivFormRenderer&quot;</span>\n</pre></div>\n</div>\n<p>Once the <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;div&gt;</span></code> output style is the default, from Django 5.0, these\ntransitional renderers will be deprecated, for removal in Django 6.0. The\n<code class=\"docutils literal notranslate\"><span class=\"pre\">FORM_RENDERER</span></code> declaration can be removed at that time.</p>\n</li>\n<li><p class=\"first\">If the new <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;div&gt;</span></code> output style is not appropriate for your project, you should\ndefine a renderer subclass specifying\n<a class=\"reference internal\" href=\"../../ref/forms/renderers/#django.forms.renderers.BaseRenderer.form_template_name\" title=\"django.forms.renderers.BaseRenderer.form_template_name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">form_template_name</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/forms/renderers/#django.forms.renderers.BaseRenderer.formset_template_name\" title=\"django.forms.renderers.BaseRenderer.formset_template_name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">formset_template_name</span></code></a> for your\nrequired style, and set <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-FORM_RENDERER\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">FORM_RENDERER</span></code></a> accordingly.</p>\n<p>For example, for the <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;p&gt;</span></code> output style used by <a class=\"reference internal\" href=\"../../ref/forms/api/#django.forms.Form.as_p\" title=\"django.forms.Form.as_p\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">as_p()</span></code></a>, you\nwould define a form renderer setting <code class=\"docutils literal notranslate\"><span class=\"pre\">form_template_name</span></code> to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;django/forms/p.html&quot;</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">formset_template_name</span></code> to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;django/forms/formsets/p.html&quot;</span></code>.</p>\n</li>\n<li><p class=\"first\">The new <a class=\"reference internal\" href=\"../../ref/forms/api/#django.forms.BoundField.legend_tag\" title=\"django.forms.BoundField.legend_tag\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">legend_tag()</span></code></a> allows rendering field\nlabels in <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;legend&gt;</span></code> tags via the new <code class=\"docutils literal notranslate\"><span class=\"pre\">tag</span></code> argument of\n<a class=\"reference internal\" href=\"../../ref/forms/api/#django.forms.BoundField.label_tag\" title=\"django.forms.BoundField.label_tag\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">label_tag()</span></code></a>.</p>\n</li>\n<li><p class=\"first\">The new <code class=\"docutils literal notranslate\"><span class=\"pre\">edit_only</span></code> argument for <a class=\"reference internal\" href=\"../../ref/forms/models/#django.forms.models.modelformset_factory\" title=\"django.forms.models.modelformset_factory\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">modelformset_factory()</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/forms/models/#django.forms.models.inlineformset_factory\" title=\"django.forms.models.inlineformset_factory\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">inlineformset_factory()</span></code></a> allows preventing new objects creation.</p>\n</li>\n<li><p class=\"first\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">js</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">css</span></code> class attributes of <a class=\"reference internal\" href=\"../../topics/forms/media/\"><span class=\"doc\">Media</span></a>\nnow allow using hashable objects, not only path strings, as long as those\nobjects implement the <code class=\"docutils literal notranslate\"><span class=\"pre\">__html__()</span></code> method (typically when decorated with\nthe <a class=\"reference internal\" href=\"../../ref/utils/#django.utils.html.html_safe\" title=\"django.utils.html.html_safe\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">html_safe()</span></code></a> decorator).</p>\n</li>\n<li><p class=\"first\">The new <a class=\"reference internal\" href=\"../../ref/forms/api/#django.forms.BoundField.use_fieldset\" title=\"django.forms.BoundField.use_fieldset\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">BoundField.use_fieldset</span></code></a> and <a class=\"reference internal\" href=\"../../ref/forms/widgets/#django.forms.Widget.use_fieldset\" title=\"django.forms.Widget.use_fieldset\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Widget.use_fieldset</span></code></a>\nattributes help to identify widgets where its inputs should be grouped in a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;fieldset&gt;</span></code> with a <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;legend&gt;</span></code>.</p>\n</li>\n<li><p class=\"first\">The <a class=\"reference internal\" href=\"../../topics/forms/formsets/#formsets-error-messages\"><span class=\"std std-ref\">error_messages</span></a> argument for\n<a class=\"reference internal\" href=\"../../topics/forms/formsets/#django.forms.formsets.BaseFormSet\" title=\"django.forms.formsets.BaseFormSet\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BaseFormSet</span></code></a> now allows customizing\nerror messages for invalid number of forms by passing <code class=\"docutils literal notranslate\"><span class=\"pre\">'too_few_forms'</span></code>\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">'too_many_forms'</span></code> keys.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"../../ref/forms/fields/#django.forms.IntegerField\" title=\"django.forms.IntegerField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IntegerField</span></code></a>, <a class=\"reference internal\" href=\"../../ref/forms/fields/#django.forms.FloatField\" title=\"django.forms.FloatField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FloatField</span></code></a>, and\n<a class=\"reference internal\" href=\"../../ref/forms/fields/#django.forms.DecimalField\" title=\"django.forms.DecimalField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DecimalField</span></code></a> now optionally accept a <code class=\"docutils literal notranslate\"><span class=\"pre\">step_size</span></code>\nargument. This is used to set the <code class=\"docutils literal notranslate\"><span class=\"pre\">step</span></code> HTML attribute, and is validated\non form submission.</p>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-internationalization\">\n<span id=\"internationalization\"></span><h4>Internationalization<a class=\"headerlink\" href=\"#internationalization\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The <a class=\"reference internal\" href=\"../../topics/i18n/translation/#django.conf.urls.i18n.i18n_patterns\" title=\"django.conf.urls.i18n.i18n_patterns\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">i18n_patterns()</span></code></a> function now supports\nlanguages with both scripts and regions.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-management-commands\">\n<span id=\"management-commands\"></span><h4>Management Commands<a class=\"headerlink\" href=\"#management-commands\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"../../ref/django-admin/#cmdoption-makemigrations-noinput\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">makemigrations</span> <span class=\"pre\">--no-input</span></code></a> now logs default answers and reasons why\nmigrations cannot be created.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/django-admin/#cmdoption-makemigrations-scriptable\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">makemigrations</span> <span class=\"pre\">--scriptable</span></code></a> option diverts log output and\ninput prompts to <code class=\"docutils literal notranslate\"><span class=\"pre\">stderr</span></code>, writing only paths of generated migration files\nto <code class=\"docutils literal notranslate\"><span class=\"pre\">stdout</span></code>.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/django-admin/#cmdoption-migrate-prune\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">migrate</span> <span class=\"pre\">--prune</span></code></a> option allows deleting nonexistent\nmigrations from the <code class=\"docutils literal notranslate\"><span class=\"pre\">django_migrations</span></code> table.</li>\n<li>Python files created by <a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-startproject\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">startproject</span></code></a>, <a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-startapp\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">startapp</span></code></a>,\n<a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-optimizemigration\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">optimizemigration</span></code></a>, <a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-makemigrations\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">makemigrations</span></code></a>, and\n<a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-squashmigrations\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">squashmigrations</span></code></a> are now formatted using the <code class=\"docutils literal notranslate\"><span class=\"pre\">black</span></code> command if\nit is present on your <code class=\"docutils literal notranslate\"><span class=\"pre\">PATH</span></code>.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-optimizemigration\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">optimizemigration</span></code></a> command allows optimizing operations for\na migration.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-migrations\">\n<span id=\"migrations\"></span><h4>Migrations<a class=\"headerlink\" href=\"#migrations\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <a class=\"reference internal\" href=\"../../ref/migration-operations/#django.db.migrations.operations.RenameIndex\" title=\"django.db.migrations.operations.RenameIndex\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RenameIndex</span></code></a> operation\nallows renaming indexes defined in the\n<a class=\"reference internal\" href=\"../../ref/models/options/#django.db.models.Options.indexes\" title=\"django.db.models.Options.indexes\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Meta.indexes</span></code></a> or\n<a class=\"reference internal\" href=\"../../ref/models/options/#django.db.models.Options.index_together\" title=\"django.db.models.Options.index_together\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">index_together</span></code></a> options.</li>\n<li>The migrations autodetector now generates\n<a class=\"reference internal\" href=\"../../ref/migration-operations/#django.db.migrations.operations.RenameIndex\" title=\"django.db.migrations.operations.RenameIndex\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RenameIndex</span></code></a> operations instead of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">RemoveIndex</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">AddIndex</span></code>, when renaming indexes defined in the\n<a class=\"reference internal\" href=\"../../ref/models/options/#django.db.models.Options.indexes\" title=\"django.db.models.Options.indexes\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Meta.indexes</span></code></a>.</li>\n<li>The migrations autodetector now generates\n<a class=\"reference internal\" href=\"../../ref/migration-operations/#django.db.migrations.operations.RenameIndex\" title=\"django.db.migrations.operations.RenameIndex\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RenameIndex</span></code></a> operations instead of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">AlterIndexTogether</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">AddIndex</span></code>, when moving indexes defined in the\n<a class=\"reference internal\" href=\"../../ref/models/options/#django.db.models.Options.index_together\" title=\"django.db.models.Options.index_together\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Meta.index_together</span></code></a> to the\n<a class=\"reference internal\" href=\"../../ref/models/options/#django.db.models.Options.indexes\" title=\"django.db.models.Options.indexes\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Meta.indexes</span></code></a>.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-models\">\n<span id=\"models\"></span><h4>Models<a class=\"headerlink\" href=\"#models\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">order_by</span></code> argument of the\n<a class=\"reference internal\" href=\"../../ref/models/expressions/#django.db.models.expressions.Window\" title=\"django.db.models.expressions.Window\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Window</span></code></a> expression now accepts string\nreferences to fields and transforms.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-CONN_HEALTH_CHECKS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">CONN_HEALTH_CHECKS</span></code></a> setting allows enabling health checks\nfor <a class=\"reference internal\" href=\"../../ref/databases/#persistent-database-connections\"><span class=\"std std-ref\">persistent database connections</span></a>\nin order to reduce the number of failed requests, e.g. after database server\nrestart.</li>\n<li><a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.bulk_create\" title=\"django.db.models.query.QuerySet.bulk_create\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">QuerySet.bulk_create()</span></code></a> now supports updating fields when a row\ninsertion fails uniqueness constraints. This is supported on MariaDB, MySQL,\nPostgreSQL, and SQLite 3.24+.</li>\n<li><a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.iterator\" title=\"django.db.models.query.QuerySet.iterator\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">QuerySet.iterator()</span></code></a> now supports prefetching related objects as long\nas the <code class=\"docutils literal notranslate\"><span class=\"pre\">chunk_size</span></code> argument is provided. In older versions, no prefetching\nwas done.</li>\n<li><a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.Q\" title=\"django.db.models.Q\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Q</span></code></a> objects and querysets can now be combined using\n<code class=\"docutils literal notranslate\"><span class=\"pre\">^</span></code> as the exclusive or (<code class=\"docutils literal notranslate\"><span class=\"pre\">XOR</span></code>) operator. <code class=\"docutils literal notranslate\"><span class=\"pre\">XOR</span></code> is natively supported\non MariaDB and MySQL. For databases that do not support <code class=\"docutils literal notranslate\"><span class=\"pre\">XOR</span></code>, the query\nwill be converted to an equivalent using <code class=\"docutils literal notranslate\"><span class=\"pre\">AND</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">OR</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">NOT</span></code>.</li>\n<li>The new <a class=\"reference internal\" href=\"../../howto/custom-model-fields/#custom-field-non-db-attrs\"><span class=\"std std-ref\">Field.non_db_attrs</span></a> attribute\nallows customizing attributes of fields that don\u2019t affect a column\ndefinition.</li>\n<li>On PostgreSQL, <code class=\"docutils literal notranslate\"><span class=\"pre\">AutoField</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">BigAutoField</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">SmallAutoField</span></code> are\nnow created as identity columns rather than serial columns with sequences.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-requests-and-responses\">\n<span id=\"requests-and-responses\"></span><h4>Requests and Responses<a class=\"headerlink\" href=\"#requests-and-responses\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"../../ref/request-response/#django.http.HttpResponse.set_cookie\" title=\"django.http.HttpResponse.set_cookie\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">HttpResponse.set_cookie()</span></code></a> now supports <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.timedelta\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">timedelta</span></code></a>\nobjects for the <code class=\"docutils literal notranslate\"><span class=\"pre\">max_age</span></code> argument.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-security\">\n<span id=\"security\"></span><h4>Security<a class=\"headerlink\" href=\"#security\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-SECRET_KEY_FALLBACKS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECRET_KEY_FALLBACKS</span></code></a> setting allows providing a list of\nvalues for secret key rotation.</li>\n<li>The <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-SECURE_PROXY_SSL_HEADER\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_PROXY_SSL_HEADER</span></code></a> setting now supports a comma-separated\nlist of protocols in the header value.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-signals\">\n<span id=\"signals\"></span><h4>Signals<a class=\"headerlink\" href=\"#signals\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The <a class=\"reference internal\" href=\"../../ref/signals/#django.db.models.signals.pre_delete\" title=\"django.db.models.signals.pre_delete\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">pre_delete</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/signals/#django.db.models.signals.post_delete\" title=\"django.db.models.signals.post_delete\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">post_delete</span></code></a> signals now dispatch the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">origin</span></code> of the deletion.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-templates\">\n<span id=\"s-templates-4-1\"></span><span id=\"templates\"></span><span id=\"templates-4-1\"></span><h4>Templates<a class=\"headerlink\" href=\"#templates\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The HTML <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;script&gt;</span></code> element <code class=\"docutils literal notranslate\"><span class=\"pre\">id</span></code> attribute is no longer required when\nwrapping the <a class=\"reference internal\" href=\"../../ref/templates/builtins/#std-templatefilter-json_script\"><code class=\"xref std std-tfilter docutils literal notranslate\"><span class=\"pre\">json_script</span></code></a> template filter.</li>\n<li>The <a class=\"reference internal\" href=\"../../ref/templates/api/#django.template.loaders.cached.Loader\" title=\"django.template.loaders.cached.Loader\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">cached</span> <span class=\"pre\">template</span> <span class=\"pre\">loader</span></code></a>\nis now enabled in development, when <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-DEBUG\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEBUG</span></code></a> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, and\n<a class=\"reference internal\" href=\"../../ref/settings/#std-setting-TEMPLATES-OPTIONS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">OPTIONS['loaders']</span></code></a> isn\u2019t specified. You may\nspecify <code class=\"docutils literal notranslate\"><span class=\"pre\">OPTIONS['loaders']</span></code> to override this, if necessary.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-tests\">\n<span id=\"tests\"></span><h4>Tests<a class=\"headerlink\" href=\"#tests\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The <a class=\"reference internal\" href=\"../../topics/testing/advanced/#django.test.runner.DiscoverRunner\" title=\"django.test.runner.DiscoverRunner\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DiscoverRunner</span></code></a> now supports running tests in parallel on\nmacOS, Windows, and any other systems where the default\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing\" title=\"(in Python v3.11)\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">multiprocessing</span></code></a> start method is <code class=\"docutils literal notranslate\"><span class=\"pre\">spawn</span></code>.</li>\n<li>A nested atomic block marked as durable in <a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.TestCase\" title=\"django.test.TestCase\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.test.TestCase</span></code></a> now\nraises a <code class=\"docutils literal notranslate\"><span class=\"pre\">RuntimeError</span></code>, the same as outside of tests.</li>\n<li><a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.SimpleTestCase.assertFormError\" title=\"django.test.SimpleTestCase.assertFormError\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">SimpleTestCase.assertFormError()</span></code></a> and\n<a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.SimpleTestCase.assertFormSetError\" title=\"django.test.SimpleTestCase.assertFormSetError\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">assertFormsetError()</span></code></a>\nnow support passing a form/formset object directly.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-urls\">\n<span id=\"urls\"></span><h4>URLs<a class=\"headerlink\" href=\"#urls\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <a class=\"reference internal\" href=\"../../ref/urlresolvers/#django.urls.ResolverMatch.captured_kwargs\" title=\"django.urls.ResolverMatch.captured_kwargs\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ResolverMatch.captured_kwargs</span></code></a> attribute stores the captured\nkeyword arguments, as parsed from the URL.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/urlresolvers/#django.urls.ResolverMatch.extra_kwargs\" title=\"django.urls.ResolverMatch.extra_kwargs\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ResolverMatch.extra_kwargs</span></code></a> attribute stores the additional\nkeyword arguments passed to the view function.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-utilities\">\n<span id=\"utilities\"></span><h4>Utilities<a class=\"headerlink\" href=\"#utilities\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">SimpleLazyObject</span></code> now supports addition operations.</li>\n<li><a class=\"reference internal\" href=\"../../ref/utils/#django.utils.safestring.mark_safe\" title=\"django.utils.safestring.mark_safe\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">mark_safe()</span></code></a> now preserves lazy objects.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-validators\">\n<span id=\"validators\"></span><h4>Validators<a class=\"headerlink\" href=\"#validators\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <a class=\"reference internal\" href=\"../../ref/validators/#django.core.validators.StepValueValidator\" title=\"django.core.validators.StepValueValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StepValueValidator</span></code></a> checks if a value\nis an integral multiple of a given step size. This new validator is used for\nthe new <code class=\"docutils literal notranslate\"><span class=\"pre\">step_size</span></code> argument added to form fields representing numeric\nvalues.</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"s-backwards-incompatible-changes-in-4-1\">\n<span id=\"s-backwards-incompatible-4-1\"></span><span id=\"backwards-incompatible-changes-in-4-1\"></span><span id=\"backwards-incompatible-4-1\"></span><h2>Backwards incompatible changes in 4.1<a class=\"headerlink\" href=\"#backwards-incompatible-changes-in-4-1\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-database-backend-api\">\n<span id=\"database-backend-api\"></span><h3>Database backend API<a class=\"headerlink\" href=\"#database-backend-api\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>This section describes changes that may be needed in third-party database\nbackends.</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">BaseDatabaseFeatures.has_case_insensitive_like</span></code> is changed from <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>\nto <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> to reflect the behavior of most databases.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseIntrospection.get_key_columns()</span></code> is removed. Use\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseIntrospection.get_relations()</span></code> instead.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseOperations.ignore_conflicts_suffix_sql()</span></code> method is replaced by\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseOperations.on_conflict_suffix_sql()</span></code> that accepts the <code class=\"docutils literal notranslate\"><span class=\"pre\">fields</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">on_conflict</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">update_fields</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">unique_fields</span></code> arguments.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">ignore_conflicts</span></code> argument of the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseOperations.insert_statement()</span></code> method is replaced by\n<code class=\"docutils literal notranslate\"><span class=\"pre\">on_conflict</span></code> that accepts <code class=\"docutils literal notranslate\"><span class=\"pre\">django.db.models.constants.OnConflict</span></code>.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseOperations._convert_field_to_tz()</span></code> is replaced by\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseOperations._convert_sql_to_tz()</span></code> that accepts the <code class=\"docutils literal notranslate\"><span class=\"pre\">sql</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">params</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">tzname</span></code> arguments.</li>\n<li>Several date and time methods on <code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseOperations</span></code> now take <code class=\"docutils literal notranslate\"><span class=\"pre\">sql</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">params</span></code> arguments instead of <code class=\"docutils literal notranslate\"><span class=\"pre\">field_name</span></code> and return 2-tuple containing\nsome SQL and the parameters to be interpolated into that SQL. The changed\nmethods have these new signatures:<ul>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseOperations.date_extract_sql(lookup_type,</span> <span class=\"pre\">sql,</span> <span class=\"pre\">params)</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseOperations.datetime_extract_sql(lookup_type,</span> <span class=\"pre\">sql,</span> <span class=\"pre\">params,</span> <span class=\"pre\">tzname)</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseOperations.time_extract_sql(lookup_type,</span> <span class=\"pre\">sql,</span> <span class=\"pre\">params)</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseOperations.date_trunc_sql(lookup_type,</span> <span class=\"pre\">sql,</span> <span class=\"pre\">params,</span> <span class=\"pre\">tzname=None)</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseOperations.datetime_trunc_sql(self,</span> <span class=\"pre\">lookup_type,</span> <span class=\"pre\">sql,</span> <span class=\"pre\">params,</span> <span class=\"pre\">tzname)</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseOperations.time_trunc_sql(lookup_type,</span> <span class=\"pre\">sql,</span> <span class=\"pre\">params,</span> <span class=\"pre\">tzname=None)</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseOperations.datetime_cast_date_sql(sql,</span> <span class=\"pre\">params,</span> <span class=\"pre\">tzname)</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseOperations.datetime_cast_time_sql(sql,</span> <span class=\"pre\">params,</span> <span class=\"pre\">tzname)</span></code></li>\n</ul>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-id1\">\n<span id=\"id1\"></span><h3><a class=\"reference internal\" href=\"../../ref/contrib/gis/#module-django.contrib.gis\" title=\"django.contrib.gis: Geographic Information System (GIS) extensions for Django\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.gis</span></code></a><a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<ul class=\"simple\">\n<li>Support for GDAL 2.1 is removed.</li>\n<li>Support for PostGIS 2.4 is removed.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-dropped-support-for-postgresql-10\">\n<span id=\"dropped-support-for-postgresql-10\"></span><h3>Dropped support for PostgreSQL 10<a class=\"headerlink\" href=\"#dropped-support-for-postgresql-10\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Upstream support for PostgreSQL 10 ends in November 2022. Django 4.1 supports\nPostgreSQL 11 and higher.</p>\n</div>\n<div class=\"section\" id=\"s-dropped-support-for-mariadb-10-2\">\n<span id=\"dropped-support-for-mariadb-10-2\"></span><h3>Dropped support for MariaDB 10.2<a class=\"headerlink\" href=\"#dropped-support-for-mariadb-10-2\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Upstream support for MariaDB 10.2 ends in May 2022. Django 4.1 supports MariaDB\n10.3 and higher.</p>\n</div>\n<div class=\"section\" id=\"s-admin-changelist-searches-spanning-multi-valued-relationships-changes\">\n<span id=\"admin-changelist-searches-spanning-multi-valued-relationships-changes\"></span><h3>Admin changelist searches spanning multi-valued relationships changes<a class=\"headerlink\" href=\"#admin-changelist-searches-spanning-multi-valued-relationships-changes\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Admin changelist searches using multiple search terms are now applied in a\nsingle call to <code class=\"docutils literal notranslate\"><span class=\"pre\">filter()</span></code>, rather than in sequential <code class=\"docutils literal notranslate\"><span class=\"pre\">filter()</span></code> calls.</p>\n<p>For multi-valued relationships, this means that rows from the related model\nmust match all terms rather than any term. For example, if <code class=\"docutils literal notranslate\"><span class=\"pre\">search_fields</span></code>\nis set to <code class=\"docutils literal notranslate\"><span class=\"pre\">['child__name',</span> <span class=\"pre\">'child__age']</span></code>, and a user searches for\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'Jamal</span> <span class=\"pre\">17'</span></code>, parent rows will be returned only if there is a relationship to\nsome 17-year-old child named Jamal, rather than also returning parents who\nmerely have a younger or older child named Jamal in addition to some other\n17-year-old.</p>\n<p>See the <a class=\"reference internal\" href=\"../../topics/db/queries/#spanning-multi-valued-relationships\"><span class=\"std std-ref\">Spanning multi-valued relationships</span></a> topic for more discussion of\nthis difference. In Django 4.0 and earlier,\n<a class=\"reference internal\" href=\"../../ref/contrib/admin/#django.contrib.admin.ModelAdmin.get_search_results\" title=\"django.contrib.admin.ModelAdmin.get_search_results\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_search_results()</span></code></a> followed the\nsecond example query, but this undocumented behavior led to queries with\nexcessive joins.</p>\n</div>\n<div class=\"section\" id=\"s-reverse-foreign-key-changes-for-unsaved-model-instances\">\n<span id=\"reverse-foreign-key-changes-for-unsaved-model-instances\"></span><h3>Reverse foreign key changes for unsaved model instances<a class=\"headerlink\" href=\"#reverse-foreign-key-changes-for-unsaved-model-instances\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>In order to unify the behavior with many-to-many relations for unsaved model\ninstances, a reverse foreign key now raises <code class=\"docutils literal notranslate\"><span class=\"pre\">ValueError</span></code> when calling\n<a class=\"reference internal\" href=\"../../ref/models/relations/#django.db.models.fields.related.RelatedManager\" title=\"django.db.models.fields.related.RelatedManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">related</span> <span class=\"pre\">managers</span></code></a> for\nunsaved objects.</p>\n</div>\n<div class=\"section\" id=\"s-miscellaneous\">\n<span id=\"miscellaneous\"></span><h3>Miscellaneous<a class=\"headerlink\" href=\"#miscellaneous\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<ul class=\"simple\">\n<li>Related managers for <a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.ForeignKey\" title=\"django.db.models.ForeignKey\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ForeignKey</span></code></a>,\n<a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.ManyToManyField\" title=\"django.db.models.ManyToManyField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ManyToManyField</span></code></a>, and\n<a class=\"reference internal\" href=\"../../ref/contrib/contenttypes/#django.contrib.contenttypes.fields.GenericRelation\" title=\"django.contrib.contenttypes.fields.GenericRelation\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GenericRelation</span></code></a> are now cached\non the <a class=\"reference internal\" href=\"../../ref/models/instances/#django.db.models.Model\" title=\"django.db.models.Model\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Model</span></code></a> instance to which they belong. <em>This\nchange was reverted in Django 4.1.2.</em></li>\n<li>The Django test runner now returns a non-zero error code for unexpected\nsuccesses from tests marked with <a class=\"reference external\" href=\"https://docs.python.org/3/library/unittest.html#unittest.expectedFailure\" title=\"(in Python v3.11)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">unittest.expectedFailure()</span></code></a>.</li>\n<li><a class=\"reference internal\" href=\"../../ref/middleware/#django.middleware.csrf.CsrfViewMiddleware\" title=\"django.middleware.csrf.CsrfViewMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CsrfViewMiddleware</span></code></a> no longer masks the CSRF\ncookie like it does the CSRF token in the DOM.</li>\n<li><a class=\"reference internal\" href=\"../../ref/middleware/#django.middleware.csrf.CsrfViewMiddleware\" title=\"django.middleware.csrf.CsrfViewMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CsrfViewMiddleware</span></code></a> now uses\n<code class=\"docutils literal notranslate\"><span class=\"pre\">request.META['CSRF_COOKIE']</span></code> for storing the unmasked CSRF secret rather\nthan a masked version. This is an undocumented, private API.</li>\n<li>The <a class=\"reference internal\" href=\"../../ref/contrib/admin/#django.contrib.admin.ModelAdmin.actions\" title=\"django.contrib.admin.ModelAdmin.actions\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.actions</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/contrib/admin/#django.contrib.admin.ModelAdmin.inlines\" title=\"django.contrib.admin.ModelAdmin.inlines\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">inlines</span></code></a> attributes now default to an\nempty tuple rather than an empty list to discourage unintended mutation.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">type=&quot;text/css&quot;</span></code> attribute is no longer included in <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;link&gt;</span></code> tags\nfor CSS <a class=\"reference internal\" href=\"../../topics/forms/media/\"><span class=\"doc\">form media</span></a>.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">formset:added</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">formset:removed</span></code> JavaScript events are now pure\nJavaScript events and don\u2019t depend on jQuery. See\n<a class=\"reference internal\" href=\"../../ref/contrib/admin/javascript/#admin-javascript-inline-form-events\"><span class=\"std std-ref\">Inline form events</span></a> for more details on the change.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">exc_info</span></code> argument of the undocumented\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.log.log_response()</span></code> function is replaced by <code class=\"docutils literal notranslate\"><span class=\"pre\">exception</span></code>.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">size</span></code> argument of the undocumented\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.views.static.was_modified_since()</span></code> function is removed.</li>\n<li>The admin log out UI now uses <code class=\"docutils literal notranslate\"><span class=\"pre\">POST</span></code> requests.</li>\n<li>The undocumented <code class=\"docutils literal notranslate\"><span class=\"pre\">InlineAdminFormSet.non_form_errors</span></code> property is replaced\nby the <code class=\"docutils literal notranslate\"><span class=\"pre\">non_form_errors()</span></code> method. This is consistent with <code class=\"docutils literal notranslate\"><span class=\"pre\">BaseFormSet</span></code>.</li>\n<li>As per <a class=\"reference internal\" href=\"#templates-4-1\"><span class=\"std std-ref\">above</span></a>, the cached template loader is now\nenabled in development. You may specify <code class=\"docutils literal notranslate\"><span class=\"pre\">OPTIONS['loaders']</span></code> to override\nthis, if necessary.</li>\n<li>The undocumented <code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.auth.views.SuccessURLAllowedHostsMixin</span></code>\nmixin is replaced by <code class=\"docutils literal notranslate\"><span class=\"pre\">RedirectURLMixin</span></code>.</li>\n<li><a class=\"reference internal\" href=\"../../ref/models/constraints/#django.db.models.BaseConstraint\" title=\"django.db.models.BaseConstraint\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BaseConstraint</span></code></a> subclasses must implement\n<a class=\"reference internal\" href=\"../../ref/models/constraints/#django.db.models.BaseConstraint.validate\" title=\"django.db.models.BaseConstraint.validate\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">validate()</span></code></a> method to allow those\nconstraints to be used for validation.</li>\n<li>The undocumented <code class=\"docutils literal notranslate\"><span class=\"pre\">URLResolver._is_callback()</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">URLResolver._callback_strs</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">URLPattern.lookup_str()</span></code> are\nmoved to <code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.admindocs.utils</span></code>.</li>\n<li>The <a class=\"reference internal\" href=\"../../ref/models/instances/#django.db.models.Model.full_clean\" title=\"django.db.models.Model.full_clean\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">Model.full_clean()</span></code></a> method now converts an <code class=\"docutils literal notranslate\"><span class=\"pre\">exclude</span></code> value to a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">set</span></code>. It\u2019s also preferable to pass an <code class=\"docutils literal notranslate\"><span class=\"pre\">exclude</span></code> value as a <code class=\"docutils literal notranslate\"><span class=\"pre\">set</span></code> to\nthe <a class=\"reference internal\" href=\"../../ref/models/instances/#django.db.models.Model.clean_fields\" title=\"django.db.models.Model.clean_fields\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">Model.clean_fields()</span></code></a>, <a class=\"reference internal\" href=\"../../ref/models/instances/#django.db.models.Model.full_clean\" title=\"django.db.models.Model.full_clean\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">Model.full_clean()</span></code></a>,\n<a class=\"reference internal\" href=\"../../ref/models/instances/#django.db.models.Model.validate_unique\" title=\"django.db.models.Model.validate_unique\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">Model.validate_unique()</span></code></a>, and <a class=\"reference internal\" href=\"../../ref/models/instances/#django.db.models.Model.validate_constraints\" title=\"django.db.models.Model.validate_constraints\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">Model.validate_constraints()</span></code></a>\nmethods.</li>\n<li>The minimum supported version of <code class=\"docutils literal notranslate\"><span class=\"pre\">asgiref</span></code> is increased from 3.4.1 to\n3.5.2.</li>\n<li>Combined expressions no longer use the error-prone behavior of guessing\n<code class=\"docutils literal notranslate\"><span class=\"pre\">output_field</span></code> when argument types match. As a consequence, resolving an\n<code class=\"docutils literal notranslate\"><span class=\"pre\">output_field</span></code> for database functions and combined expressions may now\ncrash with mixed types. You will need to explicitly set the <code class=\"docutils literal notranslate\"><span class=\"pre\">output_field</span></code>\nin such cases.</li>\n<li>The <a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-makemessages\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">makemessages</span></code></a> command no longer changes <code class=\"docutils literal notranslate\"><span class=\"pre\">.po</span></code> files when up\nto date. In older versions, <code class=\"docutils literal notranslate\"><span class=\"pre\">POT-Creation-Date</span></code> was always updated.</li>\n</ul>\n</div>\n</div>\n<div class=\"section\" id=\"s-features-deprecated-in-4-1\">\n<span id=\"s-deprecated-features-4-1\"></span><span id=\"features-deprecated-in-4-1\"></span><span id=\"deprecated-features-4-1\"></span><h2>Features deprecated in 4.1<a class=\"headerlink\" href=\"#features-deprecated-in-4-1\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-log-out-via-get\">\n<span id=\"log-out-via-get\"></span><h3>Log out via GET<a class=\"headerlink\" href=\"#log-out-via-get\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Logging out via <code class=\"docutils literal notranslate\"><span class=\"pre\">GET</span></code> requests to the <a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.views.LogoutView\" title=\"django.contrib.auth.views.LogoutView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">built-in</span> <span class=\"pre\">logout</span> <span class=\"pre\">view</span></code></a> is deprecated. Use <code class=\"docutils literal notranslate\"><span class=\"pre\">POST</span></code> requests\ninstead.</p>\n<p>If you want to retain the user experience of an HTML link, you can use a form\nthat is styled to appear as a link:</p>\n<div class=\"highlight-html notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">&lt;</span><span class=\"nt\">form</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;logout-form&quot;</span> <span class=\"na\">method</span><span class=\"o\">=</span><span class=\"s\">&quot;post&quot;</span> <span class=\"na\">action</span><span class=\"o\">=</span><span class=\"s\">&quot;{% url &#39;admin:logout&#39; %}&quot;</span><span class=\"p\">&gt;</span>\n  {% csrf_token %}\n  <span class=\"p\">&lt;</span><span class=\"nt\">button</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">&quot;submit&quot;</span><span class=\"p\">&gt;</span>{% translate &quot;Log out&quot; %}<span class=\"p\">&lt;/</span><span class=\"nt\">button</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">form</span><span class=\"p\">&gt;</span>\n</pre></div>\n</div>\n<div class=\"highlight-css notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">#</span><span class=\"nn\">logout-form</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">display</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">inline</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">#</span><span class=\"nn\">logout-form</span><span class=\"w\"> </span><span class=\"nt\">button</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">background</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">none</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">border</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">none</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">cursor</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">pointer</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">padding</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">text-decoration</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">underline</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-id2\">\n<span id=\"id2\"></span><h3>Miscellaneous<a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<ul>\n<li><p class=\"first\">The context for sitemap index templates of a flat list of URLs is deprecated.\nCustom sitemap index templates should be updated for the adjusted\n<a class=\"reference internal\" href=\"../../ref/contrib/sitemaps/#sitemap-index-context-variables\"><span class=\"std std-ref\">context variables</span></a>, expecting a list\nof objects with <code class=\"docutils literal notranslate\"><span class=\"pre\">location</span></code> and optional <code class=\"docutils literal notranslate\"><span class=\"pre\">lastmod</span></code> attributes.</p>\n</li>\n<li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">CSRF_COOKIE_MASKED</span></code> transitional setting is deprecated.</p>\n</li>\n<li><p class=\"first\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> argument of <a class=\"reference internal\" href=\"../../ref/utils/#django.utils.functional.cached_property\" title=\"django.utils.functional.cached_property\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.utils.functional.cached_property()</span></code></a> is\ndeprecated as it\u2019s unnecessary as of Python 3.6.</p>\n</li>\n<li><p class=\"first\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">opclasses</span></code> argument of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.postgres.constraints.ExclusionConstraint</span></code> is deprecated in\nfavor of using <a class=\"reference internal\" href=\"../../ref/contrib/postgres/indexes/#django.contrib.postgres.indexes.OpClass\" title=\"django.contrib.postgres.indexes.OpClass\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OpClass()</span></code></a>\nin <a class=\"reference internal\" href=\"../../ref/contrib/postgres/constraints/#django.contrib.postgres.constraints.ExclusionConstraint.expressions\" title=\"django.contrib.postgres.constraints.ExclusionConstraint.expressions\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ExclusionConstraint.expressions</span></code></a>. To use it, you need to add\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'django.contrib.postgres'</span></code> in your <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-INSTALLED_APPS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">INSTALLED_APPS</span></code></a>.</p>\n<p>After making this change, <a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-makemigrations\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">makemigrations</span></code></a> will generate a new\nmigration with two operations: <code class=\"docutils literal notranslate\"><span class=\"pre\">RemoveConstraint</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">AddConstraint</span></code>.\nSince this change has no effect on the database schema,\nthe <a class=\"reference internal\" href=\"../../ref/migration-operations/#django.db.migrations.operations.SeparateDatabaseAndState\" title=\"django.db.migrations.operations.SeparateDatabaseAndState\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SeparateDatabaseAndState</span></code></a>\noperation can be used to only update the migration state without running any\nSQL. Move the generated operations into the <code class=\"docutils literal notranslate\"><span class=\"pre\">state_operations</span></code> argument of\n<a class=\"reference internal\" href=\"../../ref/migration-operations/#django.db.migrations.operations.SeparateDatabaseAndState\" title=\"django.db.migrations.operations.SeparateDatabaseAndState\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SeparateDatabaseAndState</span></code></a>. For\nexample:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Migration</span><span class=\"p\">(</span><span class=\"n\">migrations</span><span class=\"o\">.</span><span class=\"n\">Migration</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n\n    <span class=\"n\">operations</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">migrations</span><span class=\"o\">.</span><span class=\"n\">SeparateDatabaseAndState</span><span class=\"p\">(</span>\n            <span class=\"n\">database_operations</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n            <span class=\"n\">state_operations</span><span class=\"o\">=</span><span class=\"p\">[</span>\n                <span class=\"n\">migrations</span><span class=\"o\">.</span><span class=\"n\">RemoveConstraint</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">),</span>\n                <span class=\"n\">migrations</span><span class=\"o\">.</span><span class=\"n\">AddConstraint</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">),</span>\n            <span class=\"p\">],</span>\n        <span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">The undocumented ability to pass <code class=\"docutils literal notranslate\"><span class=\"pre\">errors=None</span></code> to\n<a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.SimpleTestCase.assertFormError\" title=\"django.test.SimpleTestCase.assertFormError\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">SimpleTestCase.assertFormError()</span></code></a> and\n<a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.SimpleTestCase.assertFormSetError\" title=\"django.test.SimpleTestCase.assertFormSetError\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">assertFormsetError()</span></code></a>\nis deprecated. Use <code class=\"docutils literal notranslate\"><span class=\"pre\">errors=[]</span></code> instead.</p>\n</li>\n<li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.sessions.serializers.PickleSerializer</span></code> is deprecated due to\nthe risk of remote code execution.</p>\n</li>\n<li><p class=\"first\">The usage of <code class=\"docutils literal notranslate\"><span class=\"pre\">QuerySet.iterator()</span></code> on a queryset that prefetches related\nobjects without providing the <code class=\"docutils literal notranslate\"><span class=\"pre\">chunk_size</span></code> argument is deprecated. In older\nversions, no prefetching was done. Providing a value for <code class=\"docutils literal notranslate\"><span class=\"pre\">chunk_size</span></code>\nsignifies that the additional query per chunk needed to prefetch is desired.</p>\n</li>\n<li><p class=\"first\">Passing unsaved model instances to related filters is deprecated. In Django\n5.0, the exception will be raised.</p>\n</li>\n<li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">created=True</span></code> is added to the signature of\n<a class=\"reference internal\" href=\"../../ref/contrib/auth/#django.contrib.auth.backends.RemoteUserBackend.configure_user\" title=\"django.contrib.auth.backends.RemoteUserBackend.configure_user\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">RemoteUserBackend.configure_user()</span></code></a>. Support  for <code class=\"docutils literal notranslate\"><span class=\"pre\">RemoteUserBackend</span></code>\nsubclasses that do not accept this argument is deprecated.</p>\n</li>\n<li><p class=\"first\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.timezone.utc</span></code> alias to <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.timezone.utc\" title=\"(in Python v3.11)\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">datetime.timezone.utc</span></code></a> is\ndeprecated. Use <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.timezone.utc\" title=\"(in Python v3.11)\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">datetime.timezone.utc</span></code></a> directly.</p>\n</li>\n<li><p class=\"first\">Passing a response object and a form/formset name to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">SimpleTestCase.assertFormError()</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">assertFormsetError()</span></code> is\ndeprecated. Use:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">assertFormError</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s2\">&quot;form_name&quot;</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">assertFormsetError</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s2\">&quot;formset_name&quot;</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>or pass the form/formset object directly instead.</p>\n</li>\n<li><p class=\"first\">The undocumented <code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.gis.admin.OpenLayersWidget</span></code> is deprecated.</p>\n</li>\n<li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.auth.hashers.CryptPasswordHasher</span></code> is deprecated.</p>\n</li>\n<li><p class=\"first\">The ability to pass <code class=\"docutils literal notranslate\"><span class=\"pre\">nulls_first=False</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">nulls_last=False</span></code> to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Expression.asc()</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">Expression.desc()</span></code> methods, and the <code class=\"docutils literal notranslate\"><span class=\"pre\">OrderBy</span></code>\nexpression is deprecated. Use <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> instead.</p>\n</li>\n<li><p class=\"first\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;django/forms/default.html&quot;</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;django/forms/formsets/default.html&quot;</span></code> templates which are a proxy to the\ntable-based templates are deprecated. Use the specific template instead.</p>\n</li>\n<li><p class=\"first\">The undocumented <code class=\"docutils literal notranslate\"><span class=\"pre\">LogoutView.get_next_page()</span></code> method is renamed to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">get_success_url()</span></code>.</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"section\" id=\"s-features-removed-in-4-1\">\n<span id=\"features-removed-in-4-1\"></span><h2>Features removed in 4.1<a class=\"headerlink\" href=\"#features-removed-in-4-1\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>These features have reached the end of their deprecation cycle and are removed\nin Django 4.1.</p>\n<p>See <a class=\"reference internal\" href=\"../3.2/#deprecated-features-3-2\"><span class=\"std std-ref\">Features deprecated in 3.2</span></a> for details on these changes, including how\nto remove usage of these features.</p>\n<ul class=\"simple\">\n<li>Support for assigning objects which don\u2019t support creating deep copies with\n<code class=\"docutils literal notranslate\"><span class=\"pre\">copy.deepcopy()</span></code> to class attributes in <code class=\"docutils literal notranslate\"><span class=\"pre\">TestCase.setUpTestData()</span></code> is\nremoved.</li>\n<li>Support for using a boolean value in\n<a class=\"reference internal\" href=\"../../howto/custom-management-commands/#django.core.management.BaseCommand.requires_system_checks\" title=\"django.core.management.BaseCommand.requires_system_checks\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">BaseCommand.requires_system_checks</span></code></a> is removed.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">whitelist</span></code> argument and <code class=\"docutils literal notranslate\"><span class=\"pre\">domain_whitelist</span></code> attribute of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.core.validators.EmailValidator</span></code> are removed.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">default_app_config</span></code> application configuration variable is removed.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">TransactionTestCase.assertQuerysetEqual()</span></code> no longer calls <code class=\"docutils literal notranslate\"><span class=\"pre\">repr()</span></code> on a\nqueryset when compared to string values.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">django.core.cache.backends.memcached.MemcachedCache</span></code> backend is\nremoved.</li>\n<li>Support for the pre-Django 3.2 format of messages used by\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.messages.storage.cookie.CookieStorage</span></code> is removed.</li>\n</ul>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["releases/4.0.10", "Django 4.0.10 release notes", "N", "next"], ["releases/4.1.1", "Django 4.1.1 release notes", "P", "previous"]], "sourcename": "releases/4.1.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Django 4.1 release notes</a><ul>\n<li><a class=\"reference internal\" href=\"#python-compatibility\">Python compatibility</a></li>\n<li><a class=\"reference internal\" href=\"#what-s-new-in-django-4-1\">What\u2019s new in Django 4.1</a><ul>\n<li><a class=\"reference internal\" href=\"#asynchronous-handlers-for-class-based-views\">Asynchronous handlers for class-based views</a></li>\n<li><a class=\"reference internal\" href=\"#asynchronous-orm-interface\">Asynchronous ORM interface</a></li>\n<li><a class=\"reference internal\" href=\"#validation-of-constraints\">Validation of Constraints</a></li>\n<li><a class=\"reference internal\" href=\"#form-rendering-accessibility\">Form rendering accessibility</a></li>\n<li><a class=\"reference internal\" href=\"#csrf-cookie-masked-setting\"><code class=\"docutils literal notranslate\"><span class=\"pre\">CSRF_COOKIE_MASKED</span></code> setting</a></li>\n<li><a class=\"reference internal\" href=\"#minor-features\">Minor features</a><ul>\n<li><a class=\"reference internal\" href=\"#django-contrib-admin\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.admin</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-contrib-auth\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.auth</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-contrib-gis\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.gis</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-contrib-postgres\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.postgres</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-contrib-sitemaps\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.sitemaps</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-contrib-staticfiles\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.staticfiles</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#database-backends\">Database backends</a></li>\n<li><a class=\"reference internal\" href=\"#forms\">Forms</a></li>\n<li><a class=\"reference internal\" href=\"#internationalization\">Internationalization</a></li>\n<li><a class=\"reference internal\" href=\"#management-commands\">Management Commands</a></li>\n<li><a class=\"reference internal\" href=\"#migrations\">Migrations</a></li>\n<li><a class=\"reference internal\" href=\"#models\">Models</a></li>\n<li><a class=\"reference internal\" href=\"#requests-and-responses\">Requests and Responses</a></li>\n<li><a class=\"reference internal\" href=\"#security\">Security</a></li>\n<li><a class=\"reference internal\" href=\"#signals\">Signals</a></li>\n<li><a class=\"reference internal\" href=\"#templates\">Templates</a></li>\n<li><a class=\"reference internal\" href=\"#tests\">Tests</a></li>\n<li><a class=\"reference internal\" href=\"#urls\">URLs</a></li>\n<li><a class=\"reference internal\" href=\"#utilities\">Utilities</a></li>\n<li><a class=\"reference internal\" href=\"#validators\">Validators</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#backwards-incompatible-changes-in-4-1\">Backwards incompatible changes in 4.1</a><ul>\n<li><a class=\"reference internal\" href=\"#database-backend-api\">Database backend API</a></li>\n<li><a class=\"reference internal\" href=\"#id1\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.gis</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#dropped-support-for-postgresql-10\">Dropped support for PostgreSQL 10</a></li>\n<li><a class=\"reference internal\" href=\"#dropped-support-for-mariadb-10-2\">Dropped support for MariaDB 10.2</a></li>\n<li><a class=\"reference internal\" href=\"#admin-changelist-searches-spanning-multi-valued-relationships-changes\">Admin changelist searches spanning multi-valued relationships changes</a></li>\n<li><a class=\"reference internal\" href=\"#reverse-foreign-key-changes-for-unsaved-model-instances\">Reverse foreign key changes for unsaved model instances</a></li>\n<li><a class=\"reference internal\" href=\"#miscellaneous\">Miscellaneous</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#features-deprecated-in-4-1\">Features deprecated in 4.1</a><ul>\n<li><a class=\"reference internal\" href=\"#log-out-via-get\">Log out via GET</a></li>\n<li><a class=\"reference internal\" href=\"#id2\">Miscellaneous</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#features-removed-in-4-1\">Features removed in 4.1</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "releases/4.1", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}