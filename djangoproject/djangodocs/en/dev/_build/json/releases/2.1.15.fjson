{"parents": [{"link": "../", "title": "Release notes"}], "prev": {"link": "../2.2/", "title": "Django 2.2 release notes"}, "next": {"link": "../2.1.14/", "title": "Django 2.1.14 release notes"}, "title": "Django 2.1.15 release notes", "meta": {}, "body": "<div class=\"section\" id=\"s-django-2-1-15-release-notes\">\n<span id=\"django-2-1-15-release-notes\"></span><h1>Django 2.1.15 release notes<a class=\"headerlink\" href=\"#django-2-1-15-release-notes\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p><em>December 2, 2019</em></p>\n<p>Django 2.1.15 fixes a security issue and a data loss bug in 2.1.14.</p>\n<div class=\"section\" id=\"s-cve-2019-19118-privilege-escalation-in-the-django-admin\">\n<span id=\"cve-2019-19118-privilege-escalation-in-the-django-admin\"></span><h2>CVE-2019-19118: Privilege escalation in the Django admin.<a class=\"headerlink\" href=\"#cve-2019-19118-privilege-escalation-in-the-django-admin\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Since Django 2.1, a Django model admin displaying a parent model with related\nmodel inlines, where the user has view-only permissions to a parent model but\nedit permissions to the inline model, would display a read-only view of the\nparent model but editable forms for the inline.</p>\n<p>Submitting these forms would not allow direct edits to the parent model, but\nwould trigger the parent model\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">save()</span></code> method, and cause pre and post-save\nsignal handlers to be invoked. This is a privilege escalation as a user who\nlacks permission to edit a model should not be able to trigger its save-related\nsignals.</p>\n<p>To resolve this issue, the permission handling code of the Django admin\ninterface has been changed. Now, if a user has only the \u201cview\u201d permission for a\nparent model, the entire displayed form will not be editable, even if the user\nhas permission to edit models included in inlines.</p>\n<p>This is a backwards-incompatible change, and the Django security team is aware\nthat some users of Django were depending on the ability to allow editing of\ninlines in the admin form of an otherwise view-only parent model.</p>\n<p>Given the complexity of the Django admin, and in-particular the permissions\nrelated checks, it is the view of the Django security team that this change was\nnecessary: that it is not currently feasible to maintain the existing behavior\nwhile escaping the potential privilege escalation in a way that would avoid a\nrecurrence of similar issues in the future, and that would be compatible with\nDjango\u2019s <em>safe by default</em> philosophy.</p>\n<p>For the time being, developers whose applications are affected by this change\nshould replace the use of inlines in read-only parents with custom forms and\nviews that explicitly implement the desired functionality. In the longer term,\nadding a documented, supported, and properly-tested mechanism for\npartially-editable multi-model forms to the admin interface may occur in Django\nitself.</p>\n</div>\n<div class=\"section\" id=\"s-bugfixes\">\n<span id=\"bugfixes\"></span><h2>Bugfixes<a class=\"headerlink\" href=\"#bugfixes\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul class=\"simple\">\n<li>Fixed a data loss possibility in the\n<a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.select_for_update\" title=\"django.db.models.query.QuerySet.select_for_update\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">select_for_update()</span></code></a>. When using\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'self'</span></code> in the <code class=\"docutils literal notranslate\"><span class=\"pre\">of</span></code> argument with <a class=\"reference internal\" href=\"../../topics/db/models/#multi-table-inheritance\"><span class=\"std std-ref\">multi-table inheritance</span></a>, a parent model was locked instead of the\nqueryset\u2019s model (<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/30953\">#30953</a>).</li>\n</ul>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["releases/2.1.14", "Django 2.1.14 release notes", "N", "next"], ["releases/2.2", "Django 2.2 release notes", "P", "previous"]], "sourcename": "releases/2.1.15.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Django 2.1.15 release notes</a><ul>\n<li><a class=\"reference internal\" href=\"#cve-2019-19118-privilege-escalation-in-the-django-admin\">CVE-2019-19118: Privilege escalation in the Django admin.</a></li>\n<li><a class=\"reference internal\" href=\"#bugfixes\">Bugfixes</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "releases/2.1.15", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}