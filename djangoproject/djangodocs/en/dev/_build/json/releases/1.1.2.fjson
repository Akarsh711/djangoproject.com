{"parents": [{"link": "../", "title": "Release notes"}], "prev": {"link": "../1.1.3/", "title": "Django 1.1.3 release notes"}, "next": {"link": "../1.1/", "title": "Django 1.1 release notes"}, "title": "Django 1.1.2 release notes", "meta": {}, "body": "<div class=\"section\" id=\"s-django-1-1-2-release-notes\">\n<span id=\"django-1-1-2-release-notes\"></span><h1>Django 1.1.2 release notes<a class=\"headerlink\" href=\"#django-1-1-2-release-notes\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Welcome to Django 1.1.2!</p>\n<p>This is the second \u201cbugfix\u201d release in the Django 1.1 series,\nimproving the stability and performance of the Django 1.1 codebase.</p>\n<p>Django 1.1.2 maintains backwards compatibility with Django\n1.1.0, but contain a number of fixes and other\nimprovements. Django 1.1.2 is a recommended upgrade for any\ndevelopment or deployment currently using or targeting Django 1.1.</p>\n<p>For full details on the new features, backwards incompatibilities, and\ndeprecated features in the 1.1 branch, see the <a class=\"reference internal\" href=\"../1.1/\"><span class=\"doc\">Django 1.1 release notes</span></a>.</p>\n<div class=\"section\" id=\"s-backwards-incompatible-changes-in-1-1-2\">\n<span id=\"backwards-incompatible-changes-in-1-1-2\"></span><h2>Backwards-incompatible changes in 1.1.2<a class=\"headerlink\" href=\"#backwards-incompatible-changes-in-1-1-2\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-test-runner-exit-status-code\">\n<span id=\"test-runner-exit-status-code\"></span><h3>Test runner exit status code<a class=\"headerlink\" href=\"#test-runner-exit-status-code\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The exit status code of the test runners (<code class=\"docutils literal notranslate\"><span class=\"pre\">tests/runtests.py</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">python</span>\n<span class=\"pre\">manage.py</span> <span class=\"pre\">test</span></code>) no longer represents the number of failed tests, since a\nfailure of 256 or more tests resulted in a wrong exit status code.  The exit\nstatus code for the test runner is now 0 for success (no failing tests) and 1\nfor any number of test failures.  If needed, the number of test failures can be\nfound at the end of the test runner\u2019s output.</p>\n</div>\n<div class=\"section\" id=\"s-cookie-encoding\">\n<span id=\"cookie-encoding\"></span><h3>Cookie encoding<a class=\"headerlink\" href=\"#cookie-encoding\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>To fix bugs with cookies in Internet Explorer, Safari, and possibly other\nbrowsers, our encoding of cookie values was changed so that the characters\ncomma and semi-colon are treated as non-safe characters, and are therefore\nencoded as <code class=\"docutils literal notranslate\"><span class=\"pre\">\\054</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">\\073</span></code> respectively.  This could produce backwards\nincompatibilities, especially if you are storing comma or semi-colon in\ncookies and have JavaScript code that parses and manipulates cookie values\nclient-side.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-one-new-feature\">\n<span id=\"one-new-feature\"></span><h2>One new feature<a class=\"headerlink\" href=\"#one-new-feature\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Ordinarily, a point release would not include new features, but in the\ncase of Django 1.1.2, we have made an exception to this rule. Django\n1.2 (the next major release of Django) will contain a feature that\nwill improve protection against Cross-Site Request Forgery (CSRF)\nattacks. This feature requires the use of a new <a class=\"reference internal\" href=\"../../ref/templates/builtins/#std-templatetag-csrf_token\"><code class=\"xref std std-ttag docutils literal notranslate\"><span class=\"pre\">csrf_token</span></code></a>\ntemplate tag in all forms that Django renders.</p>\n<p>To make it easier to support both 1.1.X and 1.2.X versions of Django with\nthe same templates, we have decided to introduce the <a class=\"reference internal\" href=\"../../ref/templates/builtins/#std-templatetag-csrf_token\"><code class=\"xref std std-ttag docutils literal notranslate\"><span class=\"pre\">csrf_token</span></code></a> template\ntag to the 1.1.X branch. In the 1.1.X branch, <a class=\"reference internal\" href=\"../../ref/templates/builtins/#std-templatetag-csrf_token\"><code class=\"xref std std-ttag docutils literal notranslate\"><span class=\"pre\">csrf_token</span></code></a> does nothing -\nit has no effect on templates or form processing. However, it means that the\nsame template will work with Django 1.2.</p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["releases/1.1", "Django 1.1 release notes", "N", "next"], ["releases/1.1.3", "Django 1.1.3 release notes", "P", "previous"]], "sourcename": "releases/1.1.2.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Django 1.1.2 release notes</a><ul>\n<li><a class=\"reference internal\" href=\"#backwards-incompatible-changes-in-1-1-2\">Backwards-incompatible changes in 1.1.2</a><ul>\n<li><a class=\"reference internal\" href=\"#test-runner-exit-status-code\">Test runner exit status code</a></li>\n<li><a class=\"reference internal\" href=\"#cookie-encoding\">Cookie encoding</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#one-new-feature\">One new feature</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "releases/1.1.2", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}