{"parents": [{"link": "../", "title": "Release notes"}], "prev": {"link": "../1.11.1/", "title": "Django 1.11.1 release notes"}, "next": {"link": "../1.10.8/", "title": "Django 1.10.8 release notes"}, "title": "Django 1.11 release notes", "meta": {}, "body": "<div class=\"section\" id=\"s-django-1-11-release-notes\">\n<span id=\"django-1-11-release-notes\"></span><h1>Django 1.11 release notes<a class=\"headerlink\" href=\"#django-1-11-release-notes\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p><em>April 4, 2017</em></p>\n<p>Welcome to Django 1.11!</p>\n<p>These release notes cover the <a class=\"reference internal\" href=\"#whats-new-1-11\"><span class=\"std std-ref\">new features</span></a>, as well as\nsome <a class=\"reference internal\" href=\"#backwards-incompatible-1-11\"><span class=\"std std-ref\">backwards incompatible changes</span></a> you\u2019ll\nwant to be aware of when upgrading from Django 1.10 or older versions. We\u2019ve\n<a class=\"reference internal\" href=\"#deprecated-features-1-11\"><span class=\"std std-ref\">begun the deprecation process for some features</span></a>.</p>\n<p>See the <a class=\"reference internal\" href=\"../../howto/upgrade-version/\"><span class=\"doc\">How to upgrade Django to a newer version</span></a> guide if you\u2019re updating an existing\nproject.</p>\n<p>Django 1.11 is designated as a <a class=\"reference internal\" href=\"../../internals/release-process/#term-Long-term-support-release\"><span class=\"xref std std-term\">long-term support release</span></a>. It will receive security updates for at least\nthree years after its release. Support for the previous LTS, Django 1.8, will\nend in April 2018.</p>\n<div class=\"section\" id=\"s-python-compatibility\">\n<span id=\"python-compatibility\"></span><h2>Python compatibility<a class=\"headerlink\" href=\"#python-compatibility\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Django 1.11 requires Python 2.7, 3.4, 3.5, 3.6, or 3.7 (as of 1.11.17). We\n<strong>highly recommend</strong> and only officially support the latest release of each\nseries.</p>\n<p>The Django 1.11.x series is the last to support Python 2. The next major\nrelease, Django 2.0, will only support Python 3.4+.</p>\n</div>\n<div class=\"section\" id=\"s-deprecating-warnings-are-no-longer-loud-by-default\">\n<span id=\"deprecating-warnings-are-no-longer-loud-by-default\"></span><h2>Deprecating warnings are no longer loud by default<a class=\"headerlink\" href=\"#deprecating-warnings-are-no-longer-loud-by-default\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Unlike older versions of Django, Django\u2019s own deprecation warnings are no\nlonger displayed by default. This is consistent with Python\u2019s default behavior.</p>\n<p>This change allows third-party apps to support both Django 1.11 LTS and Django\n1.8 LTS without having to add code to avoid deprecation warnings.</p>\n<p>Following the release of Django 2.0, we suggest that third-party app authors\ndrop support for all versions of Django prior to 1.11. At that time, you should\nbe able run your package\u2019s tests using <code class=\"docutils literal notranslate\"><span class=\"pre\">python</span> <span class=\"pre\">-Wd</span></code> so that deprecation\nwarnings do appear. After making the deprecation warning fixes, your app should\nbe compatible with Django 2.0.</p>\n</div>\n<div class=\"section\" id=\"s-what-s-new-in-django-1-11\">\n<span id=\"s-whats-new-1-11\"></span><span id=\"what-s-new-in-django-1-11\"></span><span id=\"whats-new-1-11\"></span><h2>What\u2019s new in Django 1.11<a class=\"headerlink\" href=\"#what-s-new-in-django-1-11\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-class-based-model-indexes\">\n<span id=\"class-based-model-indexes\"></span><h3>Class-based model indexes<a class=\"headerlink\" href=\"#class-based-model-indexes\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The new <a class=\"reference internal\" href=\"../../ref/models/indexes/#module-django.db.models.indexes\" title=\"django.db.models.indexes\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.db.models.indexes</span></code></a> module contains classes which ease\ncreating database indexes. Indexes are added to models using the\n<a class=\"reference internal\" href=\"../../ref/models/options/#django.db.models.Options.indexes\" title=\"django.db.models.Options.indexes\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Meta.indexes</span></code></a> option.</p>\n<p>The <a class=\"reference internal\" href=\"../../ref/models/indexes/#django.db.models.Index\" title=\"django.db.models.Index\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Index</span></code></a> class creates a b-tree index, as if you\nused <a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.Field.db_index\" title=\"django.db.models.Field.db_index\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">db_index</span></code></a> on the model field or\n<a class=\"reference internal\" href=\"../../ref/models/options/#django.db.models.Options.index_together\" title=\"django.db.models.Options.index_together\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">index_together</span></code></a> on the model <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta</span></code> class.\nIt can be subclassed to support different index types, such as\n<a class=\"reference internal\" href=\"../../ref/contrib/postgres/indexes/#django.contrib.postgres.indexes.GinIndex\" title=\"django.contrib.postgres.indexes.GinIndex\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GinIndex</span></code></a>. It also allows defining the\norder (ASC/DESC) for the columns of the index.</p>\n</div>\n<div class=\"section\" id=\"s-template-based-widget-rendering\">\n<span id=\"template-based-widget-rendering\"></span><h3>Template-based widget rendering<a class=\"headerlink\" href=\"#template-based-widget-rendering\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>To ease customizing widgets, form widget rendering is now done using the\ntemplate system rather than in Python. See <a class=\"reference internal\" href=\"../../ref/forms/renderers/\"><span class=\"doc\">The form rendering API</span></a>.</p>\n<p>You may need to adjust any custom widgets that you\u2019ve written for a few\n<a class=\"reference internal\" href=\"#template-widget-incompatibilities-1-11\"><span class=\"std std-ref\">backwards incompatible changes</span></a>.</p>\n</div>\n<div class=\"section\" id=\"s-subquery-expressions\">\n<span id=\"subquery-expressions\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">Subquery</span></code> expressions<a class=\"headerlink\" href=\"#subquery-expressions\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The new <a class=\"reference internal\" href=\"../../ref/models/expressions/#django.db.models.Subquery\" title=\"django.db.models.Subquery\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Subquery</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/models/expressions/#django.db.models.Exists\" title=\"django.db.models.Exists\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Exists</span></code></a> database expressions allow creating\nexplicit subqueries. Subqueries may refer to fields from the outer queryset\nusing the <a class=\"reference internal\" href=\"../../ref/models/expressions/#django.db.models.OuterRef\" title=\"django.db.models.OuterRef\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">OuterRef</span></code></a> class.</p>\n</div>\n<div class=\"section\" id=\"s-minor-features\">\n<span id=\"minor-features\"></span><h3>Minor features<a class=\"headerlink\" href=\"#minor-features\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<div class=\"section\" id=\"s-django-contrib-admin\">\n<span id=\"django-contrib-admin\"></span><h4><a class=\"reference internal\" href=\"../../ref/contrib/admin/#module-django.contrib.admin\" title=\"django.contrib.admin: Django's admin site.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.admin</span></code></a><a class=\"headerlink\" href=\"#django-contrib-admin\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"../../ref/contrib/admin/#django.contrib.admin.ModelAdmin.date_hierarchy\" title=\"django.contrib.admin.ModelAdmin.date_hierarchy\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.date_hierarchy</span></code></a> can now reference fields across relations.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/contrib/admin/#django.contrib.admin.ModelAdmin.get_exclude\" title=\"django.contrib.admin.ModelAdmin.get_exclude\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">ModelAdmin.get_exclude()</span></code></a> hook allows specifying the\nexclude fields based on the request or model instance.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">popup_response.html</span></code> template can now be overridden per app, per\nmodel, or by setting the <a class=\"reference internal\" href=\"../../ref/contrib/admin/#django.contrib.admin.ModelAdmin.popup_response_template\" title=\"django.contrib.admin.ModelAdmin.popup_response_template\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.popup_response_template</span></code></a>\nattribute.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-contrib-auth\">\n<span id=\"django-contrib-auth\"></span><h4><a class=\"reference internal\" href=\"../../topics/auth/#module-django.contrib.auth\" title=\"django.contrib.auth: Django's authentication framework.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.auth</span></code></a><a class=\"headerlink\" href=\"#django-contrib-auth\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The default iteration count for the PBKDF2 password hasher is increased by\n20%.</li>\n<li>The <a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.views.LoginView\" title=\"django.contrib.auth.views.LoginView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LoginView</span></code></a> and\n<a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.views.LogoutView\" title=\"django.contrib.auth.views.LogoutView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LogoutView</span></code></a> class-based views supersede the\ndeprecated <code class=\"docutils literal notranslate\"><span class=\"pre\">login()</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">logout()</span></code> function-based views.</li>\n<li>The <a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.views.PasswordChangeView\" title=\"django.contrib.auth.views.PasswordChangeView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PasswordChangeView</span></code></a>,\n<a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.views.PasswordChangeDoneView\" title=\"django.contrib.auth.views.PasswordChangeDoneView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PasswordChangeDoneView</span></code></a>,\n<a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.views.PasswordResetView\" title=\"django.contrib.auth.views.PasswordResetView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PasswordResetView</span></code></a>,\n<a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.views.PasswordResetDoneView\" title=\"django.contrib.auth.views.PasswordResetDoneView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PasswordResetDoneView</span></code></a>,\n<a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.views.PasswordResetConfirmView\" title=\"django.contrib.auth.views.PasswordResetConfirmView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PasswordResetConfirmView</span></code></a>, and\n<a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.views.PasswordResetCompleteView\" title=\"django.contrib.auth.views.PasswordResetCompleteView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PasswordResetCompleteView</span></code></a> class-based\nviews supersede the deprecated <code class=\"docutils literal notranslate\"><span class=\"pre\">password_change()</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">password_change_done()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">password_reset()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">password_reset_done()</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">password_reset_confirm()</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">password_reset_complete()</span></code> function-based\nviews.</li>\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">post_reset_login</span></code> attribute for\n<a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.views.PasswordResetConfirmView\" title=\"django.contrib.auth.views.PasswordResetConfirmView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PasswordResetConfirmView</span></code></a> allows\nautomatically logging in a user after a successful password reset.\nIf you have multiple <code class=\"docutils literal notranslate\"><span class=\"pre\">AUTHENTICATION_BACKENDS</span></code> configured, use the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">post_reset_login_backend</span></code> attribute to choose which one to use.</li>\n<li>To avoid the possibility of leaking a password reset token via the HTTP\nReferer header (for example, if the reset page includes a reference to CSS or\nJavaScript hosted on another domain), the\n<a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.views.PasswordResetConfirmView\" title=\"django.contrib.auth.views.PasswordResetConfirmView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PasswordResetConfirmView</span></code></a> (but not the\ndeprecated <code class=\"docutils literal notranslate\"><span class=\"pre\">password_reset_confirm()</span></code> function-based view) stores the token\nin a session and redirects to itself to present the password change form to\nthe user without the token in the URL.</li>\n<li><a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.update_session_auth_hash\" title=\"django.contrib.auth.update_session_auth_hash\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">update_session_auth_hash()</span></code></a> now rotates the session\nkey to allow a password change to invalidate stolen session cookies.</li>\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">success_url_allowed_hosts</span></code> attribute for\n<a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.views.LoginView\" title=\"django.contrib.auth.views.LoginView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LoginView</span></code></a> and\n<a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.views.LogoutView\" title=\"django.contrib.auth.views.LogoutView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LogoutView</span></code></a> allows specifying a set of\nhosts that are safe for redirecting after login and logout.</li>\n<li>Added password validators <code class=\"docutils literal notranslate\"><span class=\"pre\">help_text</span></code> to\n<a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.forms.UserCreationForm\" title=\"django.contrib.auth.forms.UserCreationForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">UserCreationForm</span></code></a>.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> is now passed to <a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.authenticate\" title=\"django.contrib.auth.authenticate\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">authenticate()</span></code></a>\nwhich in turn passes it to the authentication backend if it accepts a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code> argument.</li>\n<li>The <a class=\"reference internal\" href=\"../../ref/contrib/auth/#django.contrib.auth.signals.user_login_failed\" title=\"django.contrib.auth.signals.user_login_failed\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">user_login_failed()</span></code></a> signal now\nreceives a <code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code> argument.</li>\n<li><a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.forms.PasswordResetForm\" title=\"django.contrib.auth.forms.PasswordResetForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PasswordResetForm</span></code></a> supports custom user\nmodels that use an email field named something other than <code class=\"docutils literal notranslate\"><span class=\"pre\">'email'</span></code>.\nSet <a class=\"reference internal\" href=\"../../topics/auth/customizing/#django.contrib.auth.models.CustomUser.EMAIL_FIELD\" title=\"django.contrib.auth.models.CustomUser.EMAIL_FIELD\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">CustomUser.EMAIL_FIELD</span></code></a> to the name of the field.</li>\n<li><a class=\"reference internal\" href=\"../../topics/auth/customizing/#django.contrib.auth.get_user_model\" title=\"django.contrib.auth.get_user_model\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">get_user_model()</span></code></a> can now be called at import time,\neven in modules that define models.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-contrib-contenttypes\">\n<span id=\"django-contrib-contenttypes\"></span><h4><a class=\"reference internal\" href=\"../../ref/contrib/contenttypes/#module-django.contrib.contenttypes\" title=\"django.contrib.contenttypes: Provides generic interface to installed models.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.contenttypes</span></code></a><a class=\"headerlink\" href=\"#django-contrib-contenttypes\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>When stale content types are detected in the\n<a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-remove_stale_contenttypes\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">remove_stale_contenttypes</span></code></a> command, there\u2019s now a list of related\nobjects such as <code class=\"docutils literal notranslate\"><span class=\"pre\">auth.Permission</span></code>s that will also be deleted. Previously,\nonly the content types were listed (and this prompt was after <code class=\"docutils literal notranslate\"><span class=\"pre\">migrate</span></code>\nrather than in a separate command).</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-contrib-gis\">\n<span id=\"django-contrib-gis\"></span><h4><a class=\"reference internal\" href=\"../../ref/contrib/gis/#module-django.contrib.gis\" title=\"django.contrib.gis: Geographic Information System (GIS) extensions for Django\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.gis</span></code></a><a class=\"headerlink\" href=\"#django-contrib-gis\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <a class=\"reference internal\" href=\"../../ref/contrib/gis/geos/#django.contrib.gis.geos.GEOSGeometry.from_gml\" title=\"django.contrib.gis.geos.GEOSGeometry.from_gml\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">GEOSGeometry.from_gml()</span></code></a> and <a class=\"reference internal\" href=\"../../ref/contrib/gis/gdal/#django.contrib.gis.gdal.OGRGeometry.from_gml\" title=\"django.contrib.gis.gdal.OGRGeometry.from_gml\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">OGRGeometry.from_gml()</span></code></a>\nmethods allow creating geometries from GML.</li>\n<li>Added support for the <a class=\"reference internal\" href=\"../../ref/contrib/gis/geoquerysets/#std-fieldlookup-dwithin\"><code class=\"xref std std-lookup docutils literal notranslate\"><span class=\"pre\">dwithin</span></code></a> lookup on SpatiaLite.</li>\n<li>The <a class=\"reference internal\" href=\"../../ref/contrib/gis/functions/#django.contrib.gis.db.models.functions.Area\" title=\"django.contrib.gis.db.models.functions.Area\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Area</span></code></a> function,\n<a class=\"reference internal\" href=\"../../ref/contrib/gis/functions/#django.contrib.gis.db.models.functions.Distance\" title=\"django.contrib.gis.db.models.functions.Distance\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Distance</span></code></a> function, and\ndistance lookups now work with geodetic coordinates on SpatiaLite.</li>\n<li>The OpenLayers-based form widgets now use <code class=\"docutils literal notranslate\"><span class=\"pre\">OpenLayers.js</span></code> from\n<code class=\"docutils literal notranslate\"><span class=\"pre\">https://cdnjs.cloudflare.com</span></code> which is more suitable for production use\nthan the old <code class=\"docutils literal notranslate\"><span class=\"pre\">https://openlayers.org/</span></code> source. They are also updated to use\nOpenLayers 3.</li>\n<li>PostGIS migrations can now change field dimensions.</li>\n<li>Added the ability to pass the <code class=\"docutils literal notranslate\"><span class=\"pre\">size</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">shape</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">offset</span></code> parameters\nwhen creating <a class=\"reference internal\" href=\"../../ref/contrib/gis/gdal/#django.contrib.gis.gdal.GDALRaster\" title=\"django.contrib.gis.gdal.GDALRaster\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GDALRaster</span></code></a> objects.</li>\n<li>Added SpatiaLite support for the\n<a class=\"reference internal\" href=\"../../ref/contrib/gis/functions/#django.contrib.gis.db.models.functions.IsValid\" title=\"django.contrib.gis.db.models.functions.IsValid\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IsValid</span></code></a> function,\n<a class=\"reference internal\" href=\"../../ref/contrib/gis/functions/#django.contrib.gis.db.models.functions.MakeValid\" title=\"django.contrib.gis.db.models.functions.MakeValid\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MakeValid</span></code></a> function, and\n<a class=\"reference internal\" href=\"../../ref/contrib/gis/geoquerysets/#std-fieldlookup-isvalid\"><code class=\"xref std std-lookup docutils literal notranslate\"><span class=\"pre\">isvalid</span></code></a> lookup.</li>\n<li>Added Oracle support for the\n<a class=\"reference internal\" href=\"../../ref/contrib/gis/functions/#django.contrib.gis.db.models.functions.AsGML\" title=\"django.contrib.gis.db.models.functions.AsGML\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AsGML</span></code></a> function,\n<a class=\"reference internal\" href=\"../../ref/contrib/gis/functions/#django.contrib.gis.db.models.functions.BoundingCircle\" title=\"django.contrib.gis.db.models.functions.BoundingCircle\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BoundingCircle</span></code></a> function,\n<a class=\"reference internal\" href=\"../../ref/contrib/gis/functions/#django.contrib.gis.db.models.functions.IsValid\" title=\"django.contrib.gis.db.models.functions.IsValid\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">IsValid</span></code></a> function, and\n<a class=\"reference internal\" href=\"../../ref/contrib/gis/geoquerysets/#std-fieldlookup-isvalid\"><code class=\"xref std std-lookup docutils literal notranslate\"><span class=\"pre\">isvalid</span></code></a> lookup.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-contrib-postgres\">\n<span id=\"django-contrib-postgres\"></span><h4><a class=\"reference internal\" href=\"../../ref/contrib/postgres/#module-django.contrib.postgres\" title=\"django.contrib.postgres: PostgreSQL-specific fields and features\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.postgres</span></code></a><a class=\"headerlink\" href=\"#django-contrib-postgres\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">distinct</span></code> argument for\n<a class=\"reference internal\" href=\"../../ref/contrib/postgres/aggregates/#django.contrib.postgres.aggregates.StringAgg\" title=\"django.contrib.postgres.aggregates.StringAgg\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StringAgg</span></code></a> determines if\nconcatenated values will be distinct.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/contrib/postgres/indexes/#django.contrib.postgres.indexes.GinIndex\" title=\"django.contrib.postgres.indexes.GinIndex\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GinIndex</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/contrib/postgres/indexes/#django.contrib.postgres.indexes.BrinIndex\" title=\"django.contrib.postgres.indexes.BrinIndex\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BrinIndex</span></code></a> classes allow\ncreating <code class=\"docutils literal notranslate\"><span class=\"pre\">GIN</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">BRIN</span></code> indexes in the database.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.postgres.fields.JSONField</span></code> accepts a new <code class=\"docutils literal notranslate\"><span class=\"pre\">encoder</span></code>\nparameter to specify a custom class to encode data types not supported by the\nstandard encoder.</li>\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">CIText</span></code> mixin and\n<a class=\"reference internal\" href=\"../../ref/contrib/postgres/operations/#django.contrib.postgres.operations.CITextExtension\" title=\"django.contrib.postgres.operations.CITextExtension\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CITextExtension</span></code></a> migration\noperation allow using PostgreSQL\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">citext</span></code> extension for case-insensitive\nlookups. Three fields are provided: <code class=\"docutils literal notranslate\"><span class=\"pre\">CICharField</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">CIEmailField</span></code>, and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">CITextField</span></code>.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/contrib/postgres/aggregates/#django.contrib.postgres.aggregates.JSONBAgg\" title=\"django.contrib.postgres.aggregates.JSONBAgg\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">JSONBAgg</span></code></a> allows\naggregating values as a JSON array.</li>\n<li>The <a class=\"reference internal\" href=\"../../ref/contrib/postgres/fields/#django.contrib.postgres.fields.HStoreField\" title=\"django.contrib.postgres.fields.HStoreField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HStoreField</span></code></a> (model field) and\n<a class=\"reference internal\" href=\"../../ref/contrib/postgres/forms/#django.contrib.postgres.forms.HStoreField\" title=\"django.contrib.postgres.forms.HStoreField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HStoreField</span></code></a> (form field) allow\nstoring null values.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-cache\">\n<span id=\"cache\"></span><h4>Cache<a class=\"headerlink\" href=\"#cache\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Memcached backends now pass the contents of <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-CACHES-OPTIONS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">OPTIONS</span></code></a>\nas keyword arguments to the client constructors, allowing for more advanced\ncontrol of client behavior. See the <a class=\"reference internal\" href=\"../../topics/cache/#cache-arguments\"><span class=\"std std-ref\">cache arguments</span></a>\ndocumentation for examples.</li>\n<li>Memcached backends now allow defining multiple servers as a comma-delimited\nstring in <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-CACHES-LOCATION\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">LOCATION</span></code></a>, for convenience with\nthird-party services that use such strings in environment variables.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-csrf\">\n<span id=\"csrf\"></span><h4>CSRF<a class=\"headerlink\" href=\"#csrf\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Added the <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-CSRF_USE_SESSIONS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">CSRF_USE_SESSIONS</span></code></a> setting to allow storing the CSRF\ntoken in the user\u2019s session rather than in a cookie.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-database-backends\">\n<span id=\"database-backends\"></span><h4>Database backends<a class=\"headerlink\" href=\"#database-backends\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Added the <code class=\"docutils literal notranslate\"><span class=\"pre\">skip_locked</span></code> argument to <a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.select_for_update\" title=\"django.db.models.query.QuerySet.select_for_update\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">QuerySet.select_for_update()</span></code></a>\non PostgreSQL 9.5+ and Oracle to execute queries with\n<code class=\"docutils literal notranslate\"><span class=\"pre\">FOR</span> <span class=\"pre\">UPDATE</span> <span class=\"pre\">SKIP</span> <span class=\"pre\">LOCKED</span></code>.</li>\n<li>Added the <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-TEST_TEMPLATE\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">TEST['TEMPLATE']</span></code></a> setting to let\nPostgreSQL users specify a template for creating the test database.</li>\n<li><a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.iterator\" title=\"django.db.models.query.QuerySet.iterator\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">QuerySet.iterator()</span></code></a> now uses <a class=\"reference external\" href=\"https://www.psycopg.org/docs/usage.html#server-side-cursors\">server-side cursors</a> on PostgreSQL.\nThis feature transfers some of the worker memory load (used to hold query\nresults) to the database and might increase database memory usage.</li>\n<li>Added MySQL support for the <code class=\"docutils literal notranslate\"><span class=\"pre\">'isolation_level'</span></code> option in\n<a class=\"reference internal\" href=\"../../ref/settings/#std-setting-OPTIONS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">OPTIONS</span></code></a> to allow specifying the <a class=\"reference internal\" href=\"../../ref/databases/#mysql-isolation-level\"><span class=\"std std-ref\">transaction isolation level</span></a>. To avoid possible data loss, it\u2019s recommended to\nswitch from MySQL\u2019s default level, repeatable read, to read committed.</li>\n<li>Added support for <code class=\"docutils literal notranslate\"><span class=\"pre\">cx_Oracle</span></code> 5.3.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-email\">\n<span id=\"email\"></span><h4>Email<a class=\"headerlink\" href=\"#email\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Added the <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-EMAIL_USE_LOCALTIME\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">EMAIL_USE_LOCALTIME</span></code></a> setting to allow sending SMTP date\nheaders in the local time zone rather than in UTC.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">EmailMessage.attach()</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">attach_file()</span></code> now fall back to MIME type\n<em class=\"mimetype\">application/octet-stream</em> when binary content that can\u2019t be\ndecoded as UTF-8 is specified for a <em class=\"mimetype\">text/*</em> attachment.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-file-storage\">\n<span id=\"file-storage\"></span><h4>File Storage<a class=\"headerlink\" href=\"#file-storage\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>To make it wrappable by <a class=\"reference external\" href=\"https://docs.python.org/3/library/io.html#io.TextIOWrapper\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">io.TextIOWrapper</span></code></a>,\n<a class=\"reference internal\" href=\"../../ref/files/file/#django.core.files.File\" title=\"django.core.files.File\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">File</span></code></a> now has the <code class=\"docutils literal notranslate\"><span class=\"pre\">readable()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">writable()</span></code>,\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">seekable()</span></code> methods.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-forms\">\n<span id=\"forms\"></span><h4>Forms<a class=\"headerlink\" href=\"#forms\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">empty_value</span></code> attribute on <a class=\"reference internal\" href=\"../../ref/forms/fields/#django.forms.CharField\" title=\"django.forms.CharField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CharField</span></code></a>,\n<a class=\"reference internal\" href=\"../../ref/forms/fields/#django.forms.EmailField\" title=\"django.forms.EmailField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">EmailField</span></code></a>, <a class=\"reference internal\" href=\"../../ref/forms/fields/#django.forms.RegexField\" title=\"django.forms.RegexField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RegexField</span></code></a>,\n<a class=\"reference internal\" href=\"../../ref/forms/fields/#django.forms.SlugField\" title=\"django.forms.SlugField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SlugField</span></code></a>, and <a class=\"reference internal\" href=\"../../ref/forms/fields/#django.forms.URLField\" title=\"django.forms.URLField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">URLField</span></code></a> allows\nspecifying the Python value to use to represent \u201cempty\u201d.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/forms/api/#django.forms.Form.get_initial_for_field\" title=\"django.forms.Form.get_initial_for_field\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">Form.get_initial_for_field()</span></code></a> method returns initial data for a\nform field.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-internationalization\">\n<span id=\"internationalization\"></span><h4>Internationalization<a class=\"headerlink\" href=\"#internationalization\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Number formatting and the <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-NUMBER_GROUPING\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">NUMBER_GROUPING</span></code></a> setting support\nnon-uniform digit grouping.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-management-commands\">\n<span id=\"management-commands\"></span><h4>Management Commands<a class=\"headerlink\" href=\"#management-commands\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <a class=\"reference internal\" href=\"../../ref/django-admin/#cmdoption-loaddata-exclude\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">loaddata</span> <span class=\"pre\">--exclude</span></code></a> option allows excluding models and apps\nwhile loading data from fixtures.</li>\n<li>The new <a class=\"reference internal\" href=\"../../ref/django-admin/#cmdoption-diffsettings-default\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">diffsettings</span> <span class=\"pre\">--default</span></code></a> option allows specifying a settings\nmodule other than Django\u2019s default settings to compare against.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">app_label</span></code>s arguments now limit the <a class=\"reference internal\" href=\"../../ref/django-admin/#cmdoption-showmigrations-plan\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">showmigrations</span> <span class=\"pre\">--plan</span></code></a>\noutput.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-migrations\">\n<span id=\"migrations\"></span><h4>Migrations<a class=\"headerlink\" href=\"#migrations\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Added support for serialization of <code class=\"docutils literal notranslate\"><span class=\"pre\">uuid.UUID</span></code> objects.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-models\">\n<span id=\"models\"></span><h4>Models<a class=\"headerlink\" href=\"#models\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Added support for callable values in the <code class=\"docutils literal notranslate\"><span class=\"pre\">defaults</span></code> argument of\n<a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.update_or_create\" title=\"django.db.models.query.QuerySet.update_or_create\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">QuerySet.update_or_create()</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.get_or_create\" title=\"django.db.models.query.QuerySet.get_or_create\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_or_create()</span></code></a>.</li>\n<li><a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.ImageField\" title=\"django.db.models.ImageField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ImageField</span></code></a> now has a default\n<a class=\"reference internal\" href=\"../../ref/validators/#django.core.validators.validate_image_file_extension\" title=\"django.core.validators.validate_image_file_extension\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">validate_image_file_extension</span></code></a> validator.\n(This validator moved to the form field in <a class=\"reference internal\" href=\"../1.11.2/\"><span class=\"doc\">Django 1.11.2</span></a>.)</li>\n<li>Added support for time truncation to\n<a class=\"reference internal\" href=\"../../ref/models/database-functions/#django.db.models.functions.Trunc\" title=\"django.db.models.functions.Trunc\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Trunc</span></code></a> functions.</li>\n<li>Added the <a class=\"reference internal\" href=\"../../ref/models/database-functions/#django.db.models.functions.ExtractWeek\" title=\"django.db.models.functions.ExtractWeek\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ExtractWeek</span></code></a> function to\nextract the week from <a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.DateField\" title=\"django.db.models.DateField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DateField</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.DateTimeField\" title=\"django.db.models.DateTimeField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code></a> and exposed it through the\n<a class=\"reference internal\" href=\"../../ref/models/querysets/#std-fieldlookup-week\"><code class=\"xref std std-lookup docutils literal notranslate\"><span class=\"pre\">week</span></code></a> lookup.</li>\n<li>Added the <a class=\"reference internal\" href=\"../../ref/models/database-functions/#django.db.models.functions.TruncTime\" title=\"django.db.models.functions.TruncTime\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TruncTime</span></code></a> function to truncate\n<a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.DateTimeField\" title=\"django.db.models.DateTimeField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code></a> to its time component and exposed it\nthrough the <a class=\"reference internal\" href=\"../../ref/models/querysets/#std-fieldlookup-time\"><code class=\"xref std std-lookup docutils literal notranslate\"><span class=\"pre\">time</span></code></a> lookup.</li>\n<li>Added support for expressions in <a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.values\" title=\"django.db.models.query.QuerySet.values\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">QuerySet.values()</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.values_list\" title=\"django.db.models.query.QuerySet.values_list\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">values_list()</span></code></a>.</li>\n<li>Added support for query expressions on lookups that take multiple arguments,\nsuch as <code class=\"docutils literal notranslate\"><span class=\"pre\">range</span></code>.</li>\n<li>You can now use the <code class=\"docutils literal notranslate\"><span class=\"pre\">unique=True</span></code> option with\n<a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.FileField\" title=\"django.db.models.FileField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FileField</span></code></a>.</li>\n<li>Added the <code class=\"docutils literal notranslate\"><span class=\"pre\">nulls_first</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">nulls_last</span></code> parameters to\n<a class=\"reference internal\" href=\"../../ref/models/expressions/#django.db.models.Expression.asc\" title=\"django.db.models.Expression.asc\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Expression.asc()</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/models/expressions/#django.db.models.Expression.desc\" title=\"django.db.models.Expression.desc\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">desc()</span></code></a> to control\nthe ordering of null values.</li>\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">F</span></code> expression <code class=\"docutils literal notranslate\"><span class=\"pre\">bitleftshift()</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">bitrightshift()</span></code> methods\nallow <a class=\"reference internal\" href=\"../../topics/db/queries/#using-f-expressions-in-filters\"><span class=\"std std-ref\">bitwise shift operations</span></a>.</li>\n<li>Added <a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.union\" title=\"django.db.models.query.QuerySet.union\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">QuerySet.union()</span></code></a>, <a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.intersection\" title=\"django.db.models.query.QuerySet.intersection\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">intersection()</span></code></a>, and\n<a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.difference\" title=\"django.db.models.query.QuerySet.difference\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">difference()</span></code></a>.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-requests-and-responses\">\n<span id=\"requests-and-responses\"></span><h4>Requests and Responses<a class=\"headerlink\" href=\"#requests-and-responses\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Added <a class=\"reference internal\" href=\"../../ref/request-response/#django.http.QueryDict.fromkeys\" title=\"django.http.QueryDict.fromkeys\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">QueryDict.fromkeys()</span></code></a>.</li>\n<li><a class=\"reference internal\" href=\"../../ref/middleware/#django.middleware.common.CommonMiddleware\" title=\"django.middleware.common.CommonMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CommonMiddleware</span></code></a> now sets the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Content-Length</span></code> response header for non-streaming responses.</li>\n<li>Added the <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-SECURE_HSTS_PRELOAD\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_HSTS_PRELOAD</span></code></a> setting to allow appending the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">preload</span></code> directive to the <code class=\"docutils literal notranslate\"><span class=\"pre\">Strict-Transport-Security</span></code> header.</li>\n<li><a class=\"reference internal\" href=\"../../ref/middleware/#django.middleware.http.ConditionalGetMiddleware\" title=\"django.middleware.http.ConditionalGetMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ConditionalGetMiddleware</span></code></a> now adds the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ETag</span></code> header to responses.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-serialization\">\n<span id=\"serialization\"></span><h4>Serialization<a class=\"headerlink\" href=\"#serialization\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">django.core.serializers.base.Serializer.stream_class</span></code> attribute\nallows subclasses to customize the default stream.</li>\n<li>The encoder used by the <a class=\"reference internal\" href=\"../../topics/serialization/#serialization-formats-json\"><span class=\"std std-ref\">JSON serializer</span></a>\ncan now be customized by passing a <code class=\"docutils literal notranslate\"><span class=\"pre\">cls</span></code> keyword argument to the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">serializers.serialize()</span></code> function.</li>\n<li><a class=\"reference internal\" href=\"../../topics/serialization/#django.core.serializers.json.DjangoJSONEncoder\" title=\"django.core.serializers.json.DjangoJSONEncoder\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DjangoJSONEncoder</span></code></a> now serializes\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.timedelta\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">timedelta</span></code></a> objects (used by\n<a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.DurationField\" title=\"django.db.models.DurationField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DurationField</span></code></a>).</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-templates\">\n<span id=\"templates\"></span><h4>Templates<a class=\"headerlink\" href=\"#templates\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"../../ref/utils/#django.utils.safestring.mark_safe\" title=\"django.utils.safestring.mark_safe\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">mark_safe()</span></code></a> can now be used as a decorator.</li>\n<li>The <a class=\"reference internal\" href=\"../../topics/templates/#django.template.backends.jinja2.Jinja2\" title=\"django.template.backends.jinja2.Jinja2\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Jinja2</span></code></a> template backend now\nsupports context processors by setting the <code class=\"docutils literal notranslate\"><span class=\"pre\">'context_processors'</span></code> option in\n<a class=\"reference internal\" href=\"../../ref/settings/#std-setting-TEMPLATES-OPTIONS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">OPTIONS</span></code></a>.</li>\n<li>The <a class=\"reference internal\" href=\"../../ref/templates/builtins/#std-templatetag-regroup\"><code class=\"xref std std-ttag docutils literal notranslate\"><span class=\"pre\">regroup</span></code></a> tag now returns <code class=\"docutils literal notranslate\"><span class=\"pre\">namedtuple</span></code>s instead of dictionaries\nso you can unpack the group object directly in a loop, e.g.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">{%</span> <span class=\"pre\">for</span> <span class=\"pre\">grouper,</span> <span class=\"pre\">list</span> <span class=\"pre\">in</span> <span class=\"pre\">regrouped</span> <span class=\"pre\">%}</span></code>.</li>\n<li>Added a <a class=\"reference internal\" href=\"../../ref/templates/builtins/#std-templatetag-resetcycle\"><code class=\"xref std std-ttag docutils literal notranslate\"><span class=\"pre\">resetcycle</span></code></a> template tag to allow resetting the sequence of\nthe <a class=\"reference internal\" href=\"../../ref/templates/builtins/#std-templatetag-cycle\"><code class=\"xref std std-ttag docutils literal notranslate\"><span class=\"pre\">cycle</span></code></a> template tag.</li>\n<li>You can now specify specific directories for a particular\n<a class=\"reference internal\" href=\"../../ref/templates/api/#django.template.loaders.filesystem.Loader\" title=\"django.template.loaders.filesystem.Loader\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">filesystem.Loader</span></code></a>.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-tests\">\n<span id=\"tests\"></span><h4>Tests<a class=\"headerlink\" href=\"#tests\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Added <a class=\"reference internal\" href=\"../../topics/testing/advanced/#django.test.runner.DiscoverRunner.get_test_runner_kwargs\" title=\"django.test.runner.DiscoverRunner.get_test_runner_kwargs\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">DiscoverRunner.get_test_runner_kwargs()</span></code></a> to allow customizing the\nkeyword arguments passed to the test runner.</li>\n<li>Added the <a class=\"reference internal\" href=\"../../ref/django-admin/#cmdoption-test-debug-mode\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">test</span> <span class=\"pre\">--debug-mode</span></code></a> option to help troubleshoot test\nfailures by setting the <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-DEBUG\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEBUG</span></code></a> setting to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</li>\n<li>The new <a class=\"reference internal\" href=\"../../topics/testing/advanced/#django.test.utils.setup_databases\" title=\"django.test.utils.setup_databases\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.test.utils.setup_databases()</span></code></a> (moved from\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.test.runner</span></code>) and <a class=\"reference internal\" href=\"../../topics/testing/advanced/#django.test.utils.teardown_databases\" title=\"django.test.utils.teardown_databases\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">teardown_databases()</span></code></a>\nfunctions make it easier to build custom test runners.</li>\n<li>Added support for <a class=\"reference external\" href=\"https://docs.python.org/3/library/unittest.html#unittest.TestCase.subTest\" title=\"(in Python v3.11)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">unittest.TestCase.subTest()</span></code></a>\u2019s when using the\n<a class=\"reference internal\" href=\"../../ref/django-admin/#cmdoption-test-parallel\"><code class=\"xref std std-option docutils literal notranslate\"><span class=\"pre\">test</span> <span class=\"pre\">--parallel</span></code></a> option.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">DiscoverRunner</span></code> now runs the system checks at the start of a test run.\nOverride the <a class=\"reference internal\" href=\"../../topics/testing/advanced/#django.test.runner.DiscoverRunner.run_checks\" title=\"django.test.runner.DiscoverRunner.run_checks\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">DiscoverRunner.run_checks()</span></code></a> method if you want to disable\nthat.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-validators\">\n<span id=\"validators\"></span><h4>Validators<a class=\"headerlink\" href=\"#validators\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<ul class=\"simple\">\n<li>Added <a class=\"reference internal\" href=\"../../ref/validators/#django.core.validators.FileExtensionValidator\" title=\"django.core.validators.FileExtensionValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FileExtensionValidator</span></code></a> to validate\nfile extensions and\n<a class=\"reference internal\" href=\"../../ref/validators/#django.core.validators.validate_image_file_extension\" title=\"django.core.validators.validate_image_file_extension\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">validate_image_file_extension</span></code></a> to validate\nimage files.</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"s-backwards-incompatible-changes-in-1-11\">\n<span id=\"s-backwards-incompatible-1-11\"></span><span id=\"backwards-incompatible-changes-in-1-11\"></span><span id=\"backwards-incompatible-1-11\"></span><h2>Backwards incompatible changes in 1.11<a class=\"headerlink\" href=\"#backwards-incompatible-changes-in-1-11\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-id1\">\n<span id=\"id1\"></span><h3><a class=\"reference internal\" href=\"../../ref/contrib/gis/#module-django.contrib.gis\" title=\"django.contrib.gis: Geographic Information System (GIS) extensions for Django\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.gis</span></code></a><a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<ul class=\"simple\">\n<li>To simplify the codebase and because it\u2019s easier to install than when\n<code class=\"docutils literal notranslate\"><span class=\"pre\">contrib.gis</span></code> was first released, <a class=\"reference internal\" href=\"../../ref/contrib/gis/install/geolibs/#gdalbuild\"><span class=\"std std-ref\">GDAL</span></a> is now a required\ndependency for GeoDjango. In older versions, it\u2019s only required for SQLite.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">contrib.gis.maps</span></code> is removed as it interfaces with a retired version of\nthe Google Maps API and seems to be unmaintained. If you\u2019re using it,\n<a class=\"reference external\" href=\"https://code.djangoproject.com/ticket/14284\">let us know</a>.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">GEOSGeometry</span></code> equality operator now also compares SRID.</li>\n<li>The OpenLayers-based form widgets now use OpenLayers 3, and the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">gis/openlayers.html</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">gis/openlayers-osm.html</span></code> templates have been\nupdated. Check your project if you subclass these widgets or extend the\ntemplates. Also, the new widgets work a bit differently than the old ones.\nInstead of using a toolbar in the widget, you click to draw, click and drag\nto move the map, and click and drag a point/vertex/corner to move it.</li>\n<li>Support for SpatiaLite &lt; 4.0 is dropped.</li>\n<li>Support for GDAL 1.7 and 1.8 is dropped.</li>\n<li>The widgets in <code class=\"docutils literal notranslate\"><span class=\"pre\">contrib.gis.forms.widgets</span></code> and the admin\u2019s\n<code class=\"docutils literal notranslate\"><span class=\"pre\">OpenLayersWidget</span></code> use the <a class=\"reference internal\" href=\"../../ref/forms/renderers/\"><span class=\"doc\">form rendering API</span></a>\nrather than <code class=\"docutils literal notranslate\"><span class=\"pre\">loader.render_to_string()</span></code>. If you\u2019re using a custom widget\ntemplate, you\u2019ll need to be sure your form renderer can locate it. For\nexample, you could use the <a class=\"reference internal\" href=\"../../ref/forms/renderers/#django.forms.renderers.TemplatesSetting\" title=\"django.forms.renderers.TemplatesSetting\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TemplatesSetting</span></code></a>\nrenderer.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-contrib-staticfiles\">\n<span id=\"django-contrib-staticfiles\"></span><h3><a class=\"reference internal\" href=\"../../ref/contrib/staticfiles/#module-django.contrib.staticfiles\" title=\"django.contrib.staticfiles: An app for handling static files.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.staticfiles</span></code></a><a class=\"headerlink\" href=\"#django-contrib-staticfiles\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">collectstatic</span></code> may now fail during post-processing when using a hashed\nstatic files storage if a reference loop exists (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">'foo.css'</span></code>\nreferences <code class=\"docutils literal notranslate\"><span class=\"pre\">'bar.css'</span></code> which itself references <code class=\"docutils literal notranslate\"><span class=\"pre\">'foo.css'</span></code>) or if the\nchain of files referencing other files is too deep to resolve in several\npasses. In the latter case, increase the number of passes using\n<a class=\"reference internal\" href=\"../../ref/contrib/staticfiles/#django.contrib.staticfiles.storage.ManifestStaticFilesStorage.max_post_process_passes\" title=\"django.contrib.staticfiles.storage.ManifestStaticFilesStorage.max_post_process_passes\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ManifestStaticFilesStorage.max_post_process_passes</span></code></a>.</li>\n<li>When using <code class=\"docutils literal notranslate\"><span class=\"pre\">ManifestStaticFilesStorage</span></code>, static files not found in the\nmanifest at runtime now raise a <code class=\"docutils literal notranslate\"><span class=\"pre\">ValueError</span></code> instead of returning an\nunchanged path. You can revert to the old behavior by setting\n<a class=\"reference internal\" href=\"../../ref/contrib/staticfiles/#django.contrib.staticfiles.storage.ManifestStaticFilesStorage.manifest_strict\" title=\"django.contrib.staticfiles.storage.ManifestStaticFilesStorage.manifest_strict\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ManifestStaticFilesStorage.manifest_strict</span></code></a> to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-database-backend-api\">\n<span id=\"database-backend-api\"></span><h3>Database backend API<a class=\"headerlink\" href=\"#database-backend-api\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>This section describes changes that may be needed in third-party database\nbackends.</p>\n<ul class=\"simple\">\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseOperations.time_trunc_sql()</span></code> method is added to support\n<code class=\"docutils literal notranslate\"><span class=\"pre\">TimeField</span></code> truncation. It accepts a <code class=\"docutils literal notranslate\"><span class=\"pre\">lookup_type</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">field_name</span></code>\narguments and returns the appropriate SQL to truncate the given time field\n<code class=\"docutils literal notranslate\"><span class=\"pre\">field_name</span></code> to a time object with only the given specificity. The\n<code class=\"docutils literal notranslate\"><span class=\"pre\">lookup_type</span></code> argument can be either <code class=\"docutils literal notranslate\"><span class=\"pre\">'hour'</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">'minute'</span></code>, or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'second'</span></code>.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseOperations.datetime_cast_time_sql()</span></code> method is added to\nsupport the <a class=\"reference internal\" href=\"../../ref/models/querysets/#std-fieldlookup-time\"><code class=\"xref std std-lookup docutils literal notranslate\"><span class=\"pre\">time</span></code></a> lookup. It accepts a <code class=\"docutils literal notranslate\"><span class=\"pre\">field_name</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">tzname</span></code>\narguments and returns the SQL necessary to cast a datetime value to time value.</li>\n<li>To enable <code class=\"docutils literal notranslate\"><span class=\"pre\">FOR</span> <span class=\"pre\">UPDATE</span> <span class=\"pre\">SKIP</span> <span class=\"pre\">LOCKED</span></code> support, set\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseFeatures.has_select_for_update_skip_locked</span> <span class=\"pre\">=</span> <span class=\"pre\">True</span></code>.</li>\n<li>The new <code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseFeatures.supports_index_column_ordering</span></code> attribute\nspecifies if a database allows defining ordering for columns in indexes. The\ndefault value is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> and the <code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseIntrospection.get_constraints()</span></code>\nmethod should include an <code class=\"docutils literal notranslate\"><span class=\"pre\">'orders'</span></code> key in each of the returned\ndictionaries with a list of <code class=\"docutils literal notranslate\"><span class=\"pre\">'ASC'</span></code> and/or <code class=\"docutils literal notranslate\"><span class=\"pre\">'DESC'</span></code> values corresponding\nto the ordering of each column in the index.</li>\n<li><a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-inspectdb\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">inspectdb</span></code></a> no longer calls <code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseIntrospection.get_indexes()</span></code>\nwhich is deprecated. Custom database backends should ensure all types of\nindexes are returned by <code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseIntrospection.get_constraints()</span></code>.</li>\n<li>Renamed the <code class=\"docutils literal notranslate\"><span class=\"pre\">ignores_quoted_identifier_case</span></code> feature to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ignores_table_name_case</span></code> to more accurately reflect how it is used.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> keyword argument is added to the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseWrapper.create_cursor(self,</span> <span class=\"pre\">name=None)</span></code> method to allow usage of\nserver-side cursors on backends that support it.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-dropped-support-for-postgresql-9-2-and-postgis-2-0\">\n<span id=\"dropped-support-for-postgresql-9-2-and-postgis-2-0\"></span><h3>Dropped support for PostgreSQL 9.2 and PostGIS 2.0<a class=\"headerlink\" href=\"#dropped-support-for-postgresql-9-2-and-postgis-2-0\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Upstream support for PostgreSQL 9.2 ends in September 2017. As a consequence,\nDjango 1.11 sets PostgreSQL 9.3 as the minimum version it officially supports.</p>\n<p>Support for PostGIS 2.0 is also removed as PostgreSQL 9.2 is the last version\nto support it.</p>\n<p>Also, the minimum supported version of psycopg2 is increased from 2.4.5 to\n2.5.4.</p>\n</div>\n<div class=\"section\" id=\"s-liveservertestcase-binds-to-port-zero\">\n<span id=\"s-liveservertestcase-port-zero-change\"></span><span id=\"liveservertestcase-binds-to-port-zero\"></span><span id=\"liveservertestcase-port-zero-change\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">LiveServerTestCase</span></code> binds to port zero<a class=\"headerlink\" href=\"#liveservertestcase-binds-to-port-zero\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Rather than taking a port range and iterating to find a free port,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">LiveServerTestCase</span></code> binds to port zero and relies on the operating system\nto assign a free port. The <code class=\"docutils literal notranslate\"><span class=\"pre\">DJANGO_LIVE_TEST_SERVER_ADDRESS</span></code> environment\nvariable is no longer used, and as it\u2019s also no longer used, the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">manage.py</span> <span class=\"pre\">test</span> <span class=\"pre\">--liveserver</span></code> option is removed.</p>\n<p>If you need to bind <code class=\"docutils literal notranslate\"><span class=\"pre\">LiveServerTestCase</span></code> to a specific port, use the <code class=\"docutils literal notranslate\"><span class=\"pre\">port</span></code>\nattribute added in Django 1.11.2.</p>\n</div>\n<div class=\"section\" id=\"s-protection-against-insecure-redirects-in-django-contrib-auth-and-i18n-views\">\n<span id=\"protection-against-insecure-redirects-in-django-contrib-auth-and-i18n-views\"></span><h3>Protection against insecure redirects in <a class=\"reference internal\" href=\"../../topics/auth/#module-django.contrib.auth\" title=\"django.contrib.auth: Django's authentication framework.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.auth</span></code></a> and <code class=\"docutils literal notranslate\"><span class=\"pre\">i18n</span></code> views<a class=\"headerlink\" href=\"#protection-against-insecure-redirects-in-django-contrib-auth-and-i18n-views\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">LoginView</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">LogoutView</span></code> (and the deprecated function-based equivalents),\nand <a class=\"reference internal\" href=\"../../topics/i18n/translation/#django.views.i18n.set_language\" title=\"django.views.i18n.set_language\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">set_language()</span></code></a> protect users from being redirected\nto non-HTTPS <code class=\"docutils literal notranslate\"><span class=\"pre\">next</span></code> URLs when the app is running over HTTPS.</p>\n</div>\n<div class=\"section\" id=\"s-queryset-get-or-create-and-update-or-create-validate-arguments\">\n<span id=\"queryset-get-or-create-and-update-or-create-validate-arguments\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">QuerySet.get_or_create()</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">update_or_create()</span></code> validate arguments<a class=\"headerlink\" href=\"#queryset-get-or-create-and-update-or-create-validate-arguments\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>To prevent typos from passing silently,\n<a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.get_or_create\" title=\"django.db.models.query.QuerySet.get_or_create\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_or_create()</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.update_or_create\" title=\"django.db.models.query.QuerySet.update_or_create\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">update_or_create()</span></code></a> check that their\narguments are model fields. This should be backwards-incompatible only in the\nfact that it might expose a bug in your project.</p>\n</div>\n<div class=\"section\" id=\"s-pytz-is-a-required-dependency-and-support-for-settings-time-zone-none-is-removed\">\n<span id=\"pytz-is-a-required-dependency-and-support-for-settings-time-zone-none-is-removed\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">pytz</span></code> is a required dependency and support for <code class=\"docutils literal notranslate\"><span class=\"pre\">settings.TIME_ZONE</span> <span class=\"pre\">=</span> <span class=\"pre\">None</span></code> is removed<a class=\"headerlink\" href=\"#pytz-is-a-required-dependency-and-support-for-settings-time-zone-none-is-removed\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>To simplify Django\u2019s timezone handling, <code class=\"docutils literal notranslate\"><span class=\"pre\">pytz</span></code> is now a required dependency.\nIt\u2019s automatically installed along with Django.</p>\n<p>Support for <code class=\"docutils literal notranslate\"><span class=\"pre\">settings.TIME_ZONE</span> <span class=\"pre\">=</span> <span class=\"pre\">None</span></code> is removed as the behavior isn\u2019t\ncommonly used and is questionably useful. If you want to automatically detect\nthe timezone based on the system timezone, you can use <a class=\"reference external\" href=\"https://pypi.org/project/tzlocal/\">tzlocal</a>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">tzlocal</span> <span class=\"kn\">import</span> <span class=\"n\">get_localzone</span>\n\n<span class=\"n\">TIME_ZONE</span> <span class=\"o\">=</span> <span class=\"n\">get_localzone</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">zone</span>\n</pre></div>\n</div>\n<p>This works similar to <code class=\"docutils literal notranslate\"><span class=\"pre\">settings.TIME_ZONE</span> <span class=\"pre\">=</span> <span class=\"pre\">None</span></code> except that it also sets\n<code class=\"docutils literal notranslate\"><span class=\"pre\">os.environ['TZ']</span></code>. <a class=\"reference external\" href=\"https://groups.google.com/g/django-developers/c/OAV3FChfuPM/discussion\">Let us know</a>\nif there\u2019s a use case where you find you can\u2019t adapt your code to set a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">TIME_ZONE</span></code>.</p>\n</div>\n<div class=\"section\" id=\"s-html-changes-in-admin-templates\">\n<span id=\"html-changes-in-admin-templates\"></span><h3>HTML changes in admin templates<a class=\"headerlink\" href=\"#html-changes-in-admin-templates\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;p</span> <span class=\"pre\">class=&quot;help&quot;&gt;</span></code> is replaced with a <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;div&gt;</span></code> tag to allow including lists\ninside help text.</p>\n<p>Read-only fields are wrapped in <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;div</span> <span class=\"pre\">class=&quot;readonly&quot;&gt;...&lt;/div&gt;</span></code> instead of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;p&gt;...&lt;/p&gt;</span></code> to allow any kind of HTML as the field\u2019s content.</p>\n</div>\n<div class=\"section\" id=\"s-changes-due-to-the-introduction-of-template-based-widget-rendering\">\n<span id=\"s-template-widget-incompatibilities-1-11\"></span><span id=\"changes-due-to-the-introduction-of-template-based-widget-rendering\"></span><span id=\"template-widget-incompatibilities-1-11\"></span><h3>Changes due to the introduction of template-based widget rendering<a class=\"headerlink\" href=\"#changes-due-to-the-introduction-of-template-based-widget-rendering\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Some undocumented classes in <code class=\"docutils literal notranslate\"><span class=\"pre\">django.forms.widgets</span></code> are removed:</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">SubWidget</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">RendererMixin</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">ChoiceFieldRenderer</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">RadioFieldRenderer</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">CheckboxFieldRenderer</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">ChoiceInput</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">RadioChoiceInput</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">CheckboxChoiceInput</span></code></li>\n</ul>\n<p>The undocumented <code class=\"docutils literal notranslate\"><span class=\"pre\">Select.render_option()</span></code> method is removed.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">Widget.format_output()</span></code> method is removed. Use a custom widget template\ninstead.</p>\n<p>Some widget values, such as <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;select&gt;</span></code> options, are now localized if\n<code class=\"docutils literal notranslate\"><span class=\"pre\">settings.USE_L10N=True</span></code>. You could revert to the old behavior with custom\nwidget templates that uses the <a class=\"reference internal\" href=\"../../topics/i18n/formatting/#std-templatetag-localize\"><code class=\"xref std std-ttag docutils literal notranslate\"><span class=\"pre\">localize</span></code></a> template tag to turn off\nlocalization.</p>\n</div>\n<div class=\"section\" id=\"s-django-template-backends-django-template-render-prohibits-non-dict-context\">\n<span id=\"django-template-backends-django-template-render-prohibits-non-dict-context\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">django.template.backends.django.Template.render()</span></code> prohibits non-dict context<a class=\"headerlink\" href=\"#django-template-backends-django-template-render-prohibits-non-dict-context\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>For compatibility with multiple template engines,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.template.backends.django.Template.render()</span></code> (returned from high-level\ntemplate loader APIs such as <code class=\"docutils literal notranslate\"><span class=\"pre\">loader.get_template()</span></code>) must receive a\ndictionary of context rather than <code class=\"docutils literal notranslate\"><span class=\"pre\">Context</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">RequestContext</span></code>. If you\nwere passing either of the two classes, pass a dictionary instead \u2013 doing so\nis backwards-compatible with older versions of Django.</p>\n</div>\n<div class=\"section\" id=\"s-model-state-changes-in-migration-operations\">\n<span id=\"model-state-changes-in-migration-operations\"></span><h3>Model state changes in migration operations<a class=\"headerlink\" href=\"#model-state-changes-in-migration-operations\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>To improve the speed of applying migrations, rendering of related models is\ndelayed until an operation that needs them (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">RunPython</span></code>). If you have a\ncustom operation that works with model classes or model instances from the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">from_state</span></code> argument in <code class=\"docutils literal notranslate\"><span class=\"pre\">database_forwards()</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">database_backwards()</span></code>,\nyou must render model states using the <code class=\"docutils literal notranslate\"><span class=\"pre\">clear_delayed_apps_cache()</span></code> method as\ndescribed in <a class=\"reference internal\" href=\"../../ref/migration-operations/#writing-your-own-migration-operation\"><span class=\"std std-ref\">writing your own migration operation</span></a>.</p>\n</div>\n<div class=\"section\" id=\"s-server-side-cursors-on-postgresql\">\n<span id=\"server-side-cursors-on-postgresql\"></span><h3>Server-side cursors on PostgreSQL<a class=\"headerlink\" href=\"#server-side-cursors-on-postgresql\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The change to make <a class=\"reference internal\" href=\"../../ref/models/querysets/#django.db.models.query.QuerySet.iterator\" title=\"django.db.models.query.QuerySet.iterator\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">QuerySet.iterator()</span></code></a> use server-side cursors on\nPostgreSQL prevents running Django with PgBouncer in transaction pooling mode.\nTo reallow that, use the <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-DATABASE-DISABLE_SERVER_SIDE_CURSORS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DISABLE_SERVER_SIDE_CURSORS</span></code></a> setting (added in Django 1.11.1) in\n<a class=\"reference internal\" href=\"../../ref/settings/#std-setting-DATABASES\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DATABASES</span></code></a>.</p>\n<p>See <a class=\"reference internal\" href=\"../../ref/databases/#transaction-pooling-server-side-cursors\"><span class=\"std std-ref\">Transaction pooling and server-side cursors</span></a> for more discussion.</p>\n</div>\n<div class=\"section\" id=\"s-miscellaneous\">\n<span id=\"miscellaneous\"></span><h3>Miscellaneous<a class=\"headerlink\" href=\"#miscellaneous\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<ul>\n<li><p class=\"first\">If no items in the feed have a <code class=\"docutils literal notranslate\"><span class=\"pre\">pubdate</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">updateddate</span></code> attribute,\n<a class=\"reference internal\" href=\"../../ref/utils/#django.utils.feedgenerator.SyndicationFeed.latest_post_date\" title=\"django.utils.feedgenerator.SyndicationFeed.latest_post_date\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">SyndicationFeed.latest_post_date()</span></code></a> now returns\nthe current UTC date/time, instead of a datetime without any timezone\ninformation.</p>\n</li>\n<li><p class=\"first\">CSRF failures are logged to the <code class=\"docutils literal notranslate\"><span class=\"pre\">django.security.csrf</span></code> logger instead of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.request</span></code>.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"../../ref/settings/#std-setting-ALLOWED_HOSTS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">ALLOWED_HOSTS</span></code></a> validation is no longer disabled when running tests.\nIf your application includes tests with custom host names, you must include\nthose host names in <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-ALLOWED_HOSTS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">ALLOWED_HOSTS</span></code></a>. See\n<a class=\"reference internal\" href=\"../../topics/testing/advanced/#topics-testing-advanced-multiple-hosts\"><span class=\"std std-ref\">Tests and multiple host names</span></a>.</p>\n</li>\n<li><p class=\"first\">Using a foreign key\u2019s id (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">'field_id'</span></code>) in <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin.list_display</span></code>\ndisplays the related object\u2019s ID. Remove the <code class=\"docutils literal notranslate\"><span class=\"pre\">_id</span></code> suffix if you want the\nold behavior of the string representation of the object.</p>\n</li>\n<li><p class=\"first\">In model forms, <a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.CharField\" title=\"django.db.models.CharField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CharField</span></code></a> with <code class=\"docutils literal notranslate\"><span class=\"pre\">null=True</span></code> now\nsaves <code class=\"docutils literal notranslate\"><span class=\"pre\">NULL</span></code> for blank values instead of empty strings.</p>\n</li>\n<li><p class=\"first\">On Oracle, <a class=\"reference internal\" href=\"../../ref/models/instances/#django.db.models.Model.validate_unique\" title=\"django.db.models.Model.validate_unique\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">Model.validate_unique()</span></code></a> no longer checks empty strings for\nuniqueness as the database interprets the value as <code class=\"docutils literal notranslate\"><span class=\"pre\">NULL</span></code>.</p>\n</li>\n<li><p class=\"first\">If you subclass <a class=\"reference internal\" href=\"../../topics/auth/customizing/#django.contrib.auth.models.AbstractUser\" title=\"django.contrib.auth.models.AbstractUser\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AbstractUser</span></code></a> and override <code class=\"docutils literal notranslate\"><span class=\"pre\">clean()</span></code>, be sure it\ncalls <code class=\"docutils literal notranslate\"><span class=\"pre\">super()</span></code>. <a class=\"reference internal\" href=\"../../topics/auth/customizing/#django.contrib.auth.models.BaseUserManager.normalize_email\" title=\"django.contrib.auth.models.BaseUserManager.normalize_email\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">BaseUserManager.normalize_email()</span></code></a> is called in a\nnew <a class=\"reference internal\" href=\"../../topics/auth/customizing/#django.contrib.auth.models.AbstractUser.clean\" title=\"django.contrib.auth.models.AbstractUser.clean\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">AbstractUser.clean()</span></code></a> method so that normalization is applied in\ncases like model form validation.</p>\n</li>\n<li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">EmailField</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">URLField</span></code> no longer accept the <code class=\"docutils literal notranslate\"><span class=\"pre\">strip</span></code> keyword\nargument. Remove it because it doesn\u2019t have an effect in older versions of\nDjango as these fields always strip whitespace.</p>\n</li>\n<li><p class=\"first\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">checked</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">selected</span></code> attribute rendered by form widgets now uses\nHTML5 boolean syntax rather than XHTML\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">checked='checked'</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">selected='selected'</span></code>.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"../../ref/models/relations/#django.db.models.fields.related.RelatedManager.add\" title=\"django.db.models.fields.related.RelatedManager.add\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">RelatedManager.add()</span></code></a>,\n<a class=\"reference internal\" href=\"../../ref/models/relations/#django.db.models.fields.related.RelatedManager.remove\" title=\"django.db.models.fields.related.RelatedManager.remove\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">remove()</span></code></a>,\n<a class=\"reference internal\" href=\"../../ref/models/relations/#django.db.models.fields.related.RelatedManager.clear\" title=\"django.db.models.fields.related.RelatedManager.clear\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">clear()</span></code></a>, and\n<a class=\"reference internal\" href=\"../../ref/models/relations/#django.db.models.fields.related.RelatedManager.set\" title=\"django.db.models.fields.related.RelatedManager.set\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">set()</span></code></a> now\nclear the <code class=\"docutils literal notranslate\"><span class=\"pre\">prefetch_related()</span></code> cache.</p>\n</li>\n<li><p class=\"first\">To prevent possible loss of saved settings,\n<a class=\"reference internal\" href=\"../../topics/testing/advanced/#django.test.utils.setup_test_environment\" title=\"django.test.utils.setup_test_environment\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">setup_test_environment()</span></code></a> now raises an exception if\ncalled a second time before calling\n<a class=\"reference internal\" href=\"../../topics/testing/advanced/#django.test.utils.teardown_test_environment\" title=\"django.test.utils.teardown_test_environment\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">teardown_test_environment()</span></code></a>.</p>\n</li>\n<li><p class=\"first\">The undocumented <code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeAwareJSONEncoder</span></code> alias for\n<a class=\"reference internal\" href=\"../../topics/serialization/#django.core.serializers.json.DjangoJSONEncoder\" title=\"django.core.serializers.json.DjangoJSONEncoder\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DjangoJSONEncoder</span></code></a> (renamed in Django\n1.0) is removed.</p>\n</li>\n<li><p class=\"first\">The <a class=\"reference internal\" href=\"../../ref/templates/api/#django.template.loaders.cached.Loader\" title=\"django.template.loaders.cached.Loader\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">cached</span> <span class=\"pre\">template</span> <span class=\"pre\">loader</span></code></a>\nis now enabled if <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-TEMPLATES-OPTIONS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">OPTIONS['loaders']</span></code></a> isn\u2019t\nspecified and <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-TEMPLATES-OPTIONS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">OPTIONS['debug']</span></code></a> is <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>\n(the latter option defaults to the value of <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-DEBUG\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEBUG</span></code></a>). This could\nbe backwards-incompatible if you have some <a class=\"reference internal\" href=\"../../howto/custom-template-tags/#template-tag-thread-safety\"><span class=\"std std-ref\">template tags that aren\u2019t\nthread safe</span></a>.</p>\n</li>\n<li><p class=\"first\">The prompt for stale content type deletion no longer occurs after running the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">migrate</span></code> command. Use the new <a class=\"reference internal\" href=\"../../ref/django-admin/#django-admin-remove_stale_contenttypes\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">remove_stale_contenttypes</span></code></a> command\ninstead.</p>\n</li>\n<li><p class=\"first\">The admin\u2019s widget for <code class=\"docutils literal notranslate\"><span class=\"pre\">IntegerField</span></code> uses <code class=\"docutils literal notranslate\"><span class=\"pre\">type=&quot;number&quot;</span></code> rather than\n<code class=\"docutils literal notranslate\"><span class=\"pre\">type=&quot;text&quot;</span></code>.</p>\n</li>\n<li><p class=\"first\">Conditional HTTP headers are now parsed and compared according to the\n<span class=\"target\" id=\"index-0\"></span><a class=\"rfc reference external\" href=\"https://datatracker.ietf.org/doc/html/rfc7232.html\"><strong>RFC 7232</strong></a> Conditional Requests specification rather than the older\n<span class=\"target\" id=\"index-1\"></span><a class=\"rfc reference external\" href=\"https://datatracker.ietf.org/doc/html/rfc2616.html\"><strong>RFC 2616</strong></a>.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"../../ref/utils/#django.utils.cache.patch_response_headers\" title=\"django.utils.cache.patch_response_headers\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">patch_response_headers()</span></code></a> no longer adds a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Last-Modified</span></code> header. According to the <span class=\"target\" id=\"index-2\"></span><a class=\"rfc reference external\" href=\"https://datatracker.ietf.org/doc/html/rfc7234.html#section-4.2.2\"><strong>RFC 7234#section-4.2.2</strong></a>, this\nheader is useless alongside other caching headers that provide an explicit\nexpiration time, e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">Expires</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">Cache-Control</span></code>.\n<a class=\"reference internal\" href=\"../../ref/middleware/#django.middleware.cache.UpdateCacheMiddleware\" title=\"django.middleware.cache.UpdateCacheMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">UpdateCacheMiddleware</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/utils/#django.utils.cache.add_never_cache_headers\" title=\"django.utils.cache.add_never_cache_headers\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">add_never_cache_headers()</span></code></a> call\n<code class=\"docutils literal notranslate\"><span class=\"pre\">patch_response_headers()</span></code> and therefore are also affected by this change.</p>\n</li>\n<li><p class=\"first\">In the admin templates, <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;p</span> <span class=\"pre\">class=&quot;help&quot;&gt;</span></code> is replaced with a <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;div&gt;</span></code> tag\nto allow including lists inside help text.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"../../ref/middleware/#django.middleware.http.ConditionalGetMiddleware\" title=\"django.middleware.http.ConditionalGetMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ConditionalGetMiddleware</span></code></a> no longer sets the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Date</span></code> header as web servers set that header. It also no longer sets the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Content-Length</span></code> header as this is now done by\n<a class=\"reference internal\" href=\"../../ref/middleware/#django.middleware.common.CommonMiddleware\" title=\"django.middleware.common.CommonMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CommonMiddleware</span></code></a>.</p>\n<p>If you have a middleware that modifies a response\u2019s content and appears\nbefore <code class=\"docutils literal notranslate\"><span class=\"pre\">CommonMiddleware</span></code> in the <code class=\"docutils literal notranslate\"><span class=\"pre\">MIDDLEWARE</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">MIDDLEWARE_CLASSES</span></code>\nsettings, you must reorder your middleware so that responses aren\u2019t modified\nafter <code class=\"docutils literal notranslate\"><span class=\"pre\">Content-Length</span></code> is set, or have the response modifying middleware\nreset the <code class=\"docutils literal notranslate\"><span class=\"pre\">Content-Length</span></code> header.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"../../ref/applications/#django.apps.AppConfig.get_model\" title=\"django.apps.AppConfig.get_model\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_model()</span></code></a> and\n<a class=\"reference internal\" href=\"../../ref/applications/#django.apps.AppConfig.get_models\" title=\"django.apps.AppConfig.get_models\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_models()</span></code></a> now raise\n<a class=\"reference internal\" href=\"../../ref/exceptions/#django.core.exceptions.AppRegistryNotReady\" title=\"django.core.exceptions.AppRegistryNotReady\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">AppRegistryNotReady</span></code></a> if they\u2019re called before\nmodels of all applications have been loaded. Previously they only required\nthe target application\u2019s models to be loaded and thus could return models\nwithout all their relations set up. If you need the old behavior of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">get_model()</span></code>, set the <code class=\"docutils literal notranslate\"><span class=\"pre\">require_ready</span></code> argument to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</li>\n<li><p class=\"first\">The unused <code class=\"docutils literal notranslate\"><span class=\"pre\">BaseCommand.can_import_settings</span></code> attribute is removed.</p>\n</li>\n<li><p class=\"first\">The undocumented <code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.functional.lazy_property</span></code> is removed.</p>\n</li>\n<li><p class=\"first\">For consistency with non-multipart requests, <code class=\"docutils literal notranslate\"><span class=\"pre\">MultiPartParser.parse()</span></code> now\nleaves <code class=\"docutils literal notranslate\"><span class=\"pre\">request.POST</span></code> immutable. If you\u2019re modifying that <code class=\"docutils literal notranslate\"><span class=\"pre\">QueryDict</span></code>,\nyou must now first copy it, e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">request.POST.copy()</span></code>.</p>\n</li>\n<li><p class=\"first\">Support for <code class=\"docutils literal notranslate\"><span class=\"pre\">cx_Oracle</span></code> &lt; 5.2 is removed.</p>\n</li>\n<li><p class=\"first\">Support for IPython &lt; 1.0 is removed from the <code class=\"docutils literal notranslate\"><span class=\"pre\">shell</span></code> command.</p>\n</li>\n<li><p class=\"first\">The signature of private API <code class=\"docutils literal notranslate\"><span class=\"pre\">Widget.build_attrs()</span></code> changed from\n<code class=\"docutils literal notranslate\"><span class=\"pre\">extra_attrs=None,</span> <span class=\"pre\">**kwargs</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">base_attrs,</span> <span class=\"pre\">extra_attrs=None</span></code>.</p>\n</li>\n<li><p class=\"first\">File-like objects (e.g., <a class=\"reference external\" href=\"https://docs.python.org/3/library/io.html#io.StringIO\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StringIO</span></code></a> and <a class=\"reference external\" href=\"https://docs.python.org/3/library/io.html#io.BytesIO\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BytesIO</span></code></a>)\nuploaded to an <a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.ImageField\" title=\"django.db.models.ImageField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ImageField</span></code></a> using the test client\nnow require a <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> attribute with a value that passes the\n<a class=\"reference internal\" href=\"../../ref/validators/#django.core.validators.validate_image_file_extension\" title=\"django.core.validators.validate_image_file_extension\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">validate_image_file_extension</span></code></a> validator.\nSee the note in <a class=\"reference internal\" href=\"../../topics/testing/tools/#django.test.Client.post\" title=\"django.test.Client.post\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">Client.post()</span></code></a>.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.FileField\" title=\"django.db.models.FileField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FileField</span></code></a> now moves rather than copies the file\nit receives. With the default file upload settings, files larger than\n<a class=\"reference internal\" href=\"../../ref/settings/#std-setting-FILE_UPLOAD_MAX_MEMORY_SIZE\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">FILE_UPLOAD_MAX_MEMORY_SIZE</span></code></a> now have the same permissions as\ntemporary files (often <code class=\"docutils literal notranslate\"><span class=\"pre\">0o600</span></code>) rather than the system\u2019s standard umask\n(often <code class=\"docutils literal notranslate\"><span class=\"pre\">0o6644</span></code>). Set the <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-FILE_UPLOAD_PERMISSIONS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">FILE_UPLOAD_PERMISSIONS</span></code></a> if you need\nthe same permission regardless of file size.</p>\n</li>\n</ul>\n</div>\n</div>\n<div class=\"section\" id=\"s-features-deprecated-in-1-11\">\n<span id=\"s-deprecated-features-1-11\"></span><span id=\"features-deprecated-in-1-11\"></span><span id=\"deprecated-features-1-11\"></span><h2>Features deprecated in 1.11<a class=\"headerlink\" href=\"#features-deprecated-in-1-11\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-models-permalink-decorator\">\n<span id=\"models-permalink-decorator\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">models.permalink()</span></code> decorator<a class=\"headerlink\" href=\"#models-permalink-decorator\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Use <a class=\"reference internal\" href=\"../../ref/urlresolvers/#django.urls.reverse\" title=\"django.urls.reverse\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.urls.reverse()</span></code></a> instead. For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n\n    <span class=\"nd\">@models</span><span class=\"o\">.</span><span class=\"n\">permalink</span>\n    <span class=\"k\">def</span> <span class=\"nf\">url</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"s2\">&quot;guitarist_detail&quot;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">slug</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<p>becomes:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">reverse</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">url</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s2\">&quot;guitarist_detail&quot;</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">slug</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-id2\">\n<span id=\"id2\"></span><h3>Miscellaneous<a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">contrib.auth</span></code>\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">login()</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">logout()</span></code> function-based views are\ndeprecated in favor of new class-based views\n<a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.views.LoginView\" title=\"django.contrib.auth.views.LoginView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LoginView</span></code></a> and\n<a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.views.LogoutView\" title=\"django.contrib.auth.views.LogoutView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LogoutView</span></code></a>.</li>\n<li>The unused <code class=\"docutils literal notranslate\"><span class=\"pre\">extra_context</span></code> parameter of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">contrib.auth.views.logout_then_login()</span></code>  is deprecated.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">contrib.auth</span></code>\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">password_change()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">password_change_done()</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">password_reset()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">password_reset_done()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">password_reset_confirm()</span></code>,\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">password_reset_complete()</span></code> function-based views are deprecated in favor\nof new class-based views\n<a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.views.PasswordChangeView\" title=\"django.contrib.auth.views.PasswordChangeView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PasswordChangeView</span></code></a>,\n<a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.views.PasswordChangeDoneView\" title=\"django.contrib.auth.views.PasswordChangeDoneView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PasswordChangeDoneView</span></code></a>,\n<a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.views.PasswordResetView\" title=\"django.contrib.auth.views.PasswordResetView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PasswordResetView</span></code></a>,\n<a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.views.PasswordResetDoneView\" title=\"django.contrib.auth.views.PasswordResetDoneView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PasswordResetDoneView</span></code></a>,\n<a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.views.PasswordResetConfirmView\" title=\"django.contrib.auth.views.PasswordResetConfirmView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PasswordResetConfirmView</span></code></a>, and\n<a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.views.PasswordResetCompleteView\" title=\"django.contrib.auth.views.PasswordResetCompleteView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PasswordResetCompleteView</span></code></a>.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">django.test.runner.setup_databases()</span></code> is moved to\n<a class=\"reference internal\" href=\"../../topics/testing/advanced/#django.test.utils.setup_databases\" title=\"django.test.utils.setup_databases\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.test.utils.setup_databases()</span></code></a>. The old location is deprecated.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.translation.string_concat()</span></code> is deprecated in\nfavor of <a class=\"reference internal\" href=\"../../ref/utils/#django.utils.text.format_lazy\" title=\"django.utils.text.format_lazy\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.utils.text.format_lazy()</span></code></a>. <code class=\"docutils literal notranslate\"><span class=\"pre\">string_concat(*strings)</span></code>\ncan be replaced by <code class=\"docutils literal notranslate\"><span class=\"pre\">format_lazy('{}'</span> <span class=\"pre\">*</span> <span class=\"pre\">len(strings),</span> <span class=\"pre\">*strings)</span></code>.</li>\n<li>For the <code class=\"docutils literal notranslate\"><span class=\"pre\">PyLibMCCache</span></code> cache backend, passing <code class=\"docutils literal notranslate\"><span class=\"pre\">pylibmc</span></code> behavior settings\nas top-level attributes of <code class=\"docutils literal notranslate\"><span class=\"pre\">OPTIONS</span></code> is deprecated. Set them under a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">behaviors</span></code> key within <code class=\"docutils literal notranslate\"><span class=\"pre\">OPTIONS</span></code> instead.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">host</span></code> parameter of <code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.http.is_safe_url()</span></code> is deprecated\nin favor of the new <code class=\"docutils literal notranslate\"><span class=\"pre\">allowed_hosts</span></code> parameter.</li>\n<li>Silencing exceptions raised while rendering the\n<a class=\"reference internal\" href=\"../../ref/templates/builtins/#std-templatetag-include\"><code class=\"xref std std-ttag docutils literal notranslate\"><span class=\"pre\">{%</span> <span class=\"pre\">include</span> <span class=\"pre\">%}</span></code></a> template tag is deprecated as the behavior is\noften more confusing than helpful. In Django 2.1, the exception will be\nraised.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseIntrospection.get_indexes()</span></code> is deprecated in favor of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DatabaseIntrospection.get_constraints()</span></code>.</li>\n<li><a class=\"reference internal\" href=\"../../topics/auth/default/#django.contrib.auth.authenticate\" title=\"django.contrib.auth.authenticate\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">authenticate()</span></code></a> now passes a <code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code> argument\nto the <code class=\"docutils literal notranslate\"><span class=\"pre\">authenticate()</span></code> method of authentication backends. Support for\nmethods that don\u2019t accept <code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code> as the first positional argument will\nbe removed in Django 2.1.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">USE_ETAGS</span></code> setting is deprecated in favor of\n<a class=\"reference internal\" href=\"../../ref/middleware/#django.middleware.http.ConditionalGetMiddleware\" title=\"django.middleware.http.ConditionalGetMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ConditionalGetMiddleware</span></code></a> which now adds the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ETag</span></code> header to responses regardless of the setting. <code class=\"docutils literal notranslate\"><span class=\"pre\">CommonMiddleware</span></code>\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.cache.patch_response_headers()</span></code> will no longer set ETags\nwhen the deprecation ends.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">Model._meta.has_auto_field</span></code> is deprecated in favor of checking if\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Model._meta.auto_field</span> <span class=\"pre\">is</span> <span class=\"pre\">not</span> <span class=\"pre\">None</span></code>.</li>\n<li>Using regular expression groups with <code class=\"docutils literal notranslate\"><span class=\"pre\">iLmsu#</span></code> in <code class=\"docutils literal notranslate\"><span class=\"pre\">url()</span></code> is deprecated.\nThe only group that\u2019s useful is <code class=\"docutils literal notranslate\"><span class=\"pre\">(?i)</span></code> for case-insensitive URLs, however,\ncase-insensitive URLs aren\u2019t a good practice because they create multiple\nentries for search engines, for example. An alternative solution could be to\ncreate a <a class=\"reference internal\" href=\"../../ref/urls/#django.conf.urls.handler404\" title=\"django.conf.urls.handler404\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">handler404</span></code></a> that looks for uppercase\ncharacters in the URL and redirects to a lowercase equivalent.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">renderer</span></code> argument is added to the <a class=\"reference internal\" href=\"../../ref/forms/widgets/#django.forms.Widget.render\" title=\"django.forms.Widget.render\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">Widget.render()</span></code></a> method. Methods that don\u2019t accept that argument\nwill work through a deprecation period.</li>\n</ul>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["releases/1.10.8", "Django 1.10.8 release notes", "N", "next"], ["releases/1.11.1", "Django 1.11.1 release notes", "P", "previous"]], "sourcename": "releases/1.11.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Django 1.11 release notes</a><ul>\n<li><a class=\"reference internal\" href=\"#python-compatibility\">Python compatibility</a></li>\n<li><a class=\"reference internal\" href=\"#deprecating-warnings-are-no-longer-loud-by-default\">Deprecating warnings are no longer loud by default</a></li>\n<li><a class=\"reference internal\" href=\"#what-s-new-in-django-1-11\">What\u2019s new in Django 1.11</a><ul>\n<li><a class=\"reference internal\" href=\"#class-based-model-indexes\">Class-based model indexes</a></li>\n<li><a class=\"reference internal\" href=\"#template-based-widget-rendering\">Template-based widget rendering</a></li>\n<li><a class=\"reference internal\" href=\"#subquery-expressions\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Subquery</span></code> expressions</a></li>\n<li><a class=\"reference internal\" href=\"#minor-features\">Minor features</a><ul>\n<li><a class=\"reference internal\" href=\"#django-contrib-admin\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.admin</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-contrib-auth\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.auth</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-contrib-contenttypes\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.contenttypes</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-contrib-gis\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.gis</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-contrib-postgres\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.postgres</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#cache\">Cache</a></li>\n<li><a class=\"reference internal\" href=\"#csrf\">CSRF</a></li>\n<li><a class=\"reference internal\" href=\"#database-backends\">Database backends</a></li>\n<li><a class=\"reference internal\" href=\"#email\">Email</a></li>\n<li><a class=\"reference internal\" href=\"#file-storage\">File Storage</a></li>\n<li><a class=\"reference internal\" href=\"#forms\">Forms</a></li>\n<li><a class=\"reference internal\" href=\"#internationalization\">Internationalization</a></li>\n<li><a class=\"reference internal\" href=\"#management-commands\">Management Commands</a></li>\n<li><a class=\"reference internal\" href=\"#migrations\">Migrations</a></li>\n<li><a class=\"reference internal\" href=\"#models\">Models</a></li>\n<li><a class=\"reference internal\" href=\"#requests-and-responses\">Requests and Responses</a></li>\n<li><a class=\"reference internal\" href=\"#serialization\">Serialization</a></li>\n<li><a class=\"reference internal\" href=\"#templates\">Templates</a></li>\n<li><a class=\"reference internal\" href=\"#tests\">Tests</a></li>\n<li><a class=\"reference internal\" href=\"#validators\">Validators</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#backwards-incompatible-changes-in-1-11\">Backwards incompatible changes in 1.11</a><ul>\n<li><a class=\"reference internal\" href=\"#id1\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.gis</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-contrib-staticfiles\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.staticfiles</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#database-backend-api\">Database backend API</a></li>\n<li><a class=\"reference internal\" href=\"#dropped-support-for-postgresql-9-2-and-postgis-2-0\">Dropped support for PostgreSQL 9.2 and PostGIS 2.0</a></li>\n<li><a class=\"reference internal\" href=\"#liveservertestcase-binds-to-port-zero\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LiveServerTestCase</span></code> binds to port zero</a></li>\n<li><a class=\"reference internal\" href=\"#protection-against-insecure-redirects-in-django-contrib-auth-and-i18n-views\">Protection against insecure redirects in <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.auth</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">i18n</span></code> views</a></li>\n<li><a class=\"reference internal\" href=\"#queryset-get-or-create-and-update-or-create-validate-arguments\"><code class=\"docutils literal notranslate\"><span class=\"pre\">QuerySet.get_or_create()</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">update_or_create()</span></code> validate arguments</a></li>\n<li><a class=\"reference internal\" href=\"#pytz-is-a-required-dependency-and-support-for-settings-time-zone-none-is-removed\"><code class=\"docutils literal notranslate\"><span class=\"pre\">pytz</span></code> is a required dependency and support for <code class=\"docutils literal notranslate\"><span class=\"pre\">settings.TIME_ZONE</span> <span class=\"pre\">=</span> <span class=\"pre\">None</span></code> is removed</a></li>\n<li><a class=\"reference internal\" href=\"#html-changes-in-admin-templates\">HTML changes in admin templates</a></li>\n<li><a class=\"reference internal\" href=\"#changes-due-to-the-introduction-of-template-based-widget-rendering\">Changes due to the introduction of template-based widget rendering</a></li>\n<li><a class=\"reference internal\" href=\"#django-template-backends-django-template-render-prohibits-non-dict-context\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.template.backends.django.Template.render()</span></code> prohibits non-dict context</a></li>\n<li><a class=\"reference internal\" href=\"#model-state-changes-in-migration-operations\">Model state changes in migration operations</a></li>\n<li><a class=\"reference internal\" href=\"#server-side-cursors-on-postgresql\">Server-side cursors on PostgreSQL</a></li>\n<li><a class=\"reference internal\" href=\"#miscellaneous\">Miscellaneous</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#features-deprecated-in-1-11\">Features deprecated in 1.11</a><ul>\n<li><a class=\"reference internal\" href=\"#models-permalink-decorator\"><code class=\"docutils literal notranslate\"><span class=\"pre\">models.permalink()</span></code> decorator</a></li>\n<li><a class=\"reference internal\" href=\"#id2\">Miscellaneous</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "releases/1.11", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}