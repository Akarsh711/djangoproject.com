{"parents": [{"link": "../", "title": "API Reference"}], "prev": {"link": "../logging/", "title": "Logging"}, "next": {"link": "../migration-operations/", "title": "Migration Operations"}, "title": "Middleware", "meta": {}, "body": "<div class=\"section\" id=\"s-module-django.middleware\">\n<span id=\"s-middleware\"></span><span id=\"module-django.middleware\"></span><span id=\"middleware\"></span><h1>Middleware<a class=\"headerlink\" href=\"#module-django.middleware\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This document explains all middleware components that come with Django. For\ninformation on how to use them and how to write your own middleware, see\nthe <a class=\"reference internal\" href=\"../../topics/http/middleware/\"><span class=\"doc\">middleware usage guide</span></a>.</p>\n<div class=\"section\" id=\"s-available-middleware\">\n<span id=\"available-middleware\"></span><h2>Available middleware<a class=\"headerlink\" href=\"#available-middleware\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-module-django.middleware.cache\">\n<span id=\"s-cache-middleware\"></span><span id=\"module-django.middleware.cache\"></span><span id=\"cache-middleware\"></span><h3>Cache middleware<a class=\"headerlink\" href=\"#module-django.middleware.cache\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.middleware.cache.UpdateCacheMiddleware\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">UpdateCacheMiddleware</span></code><a class=\"reference internal\" href=\"../../_modules/django/middleware/cache/#UpdateCacheMiddleware\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.middleware.cache.UpdateCacheMiddleware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.middleware.cache.FetchFromCacheMiddleware\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">FetchFromCacheMiddleware</span></code><a class=\"reference internal\" href=\"../../_modules/django/middleware/cache/#FetchFromCacheMiddleware\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.middleware.cache.FetchFromCacheMiddleware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Enable the site-wide cache. If these are enabled, each Django-powered page will\nbe cached for as long as the <a class=\"reference internal\" href=\"../settings/#std-setting-CACHE_MIDDLEWARE_SECONDS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">CACHE_MIDDLEWARE_SECONDS</span></code></a> setting\ndefines. See the <a class=\"reference internal\" href=\"../../topics/cache/\"><span class=\"doc\">cache documentation</span></a>.</p>\n</div>\n<div class=\"section\" id=\"s-module-django.middleware.common\">\n<span id=\"s-common-middleware\"></span><span id=\"module-django.middleware.common\"></span><span id=\"common-middleware\"></span><h3>\u201cCommon\u201d middleware<a class=\"headerlink\" href=\"#module-django.middleware.common\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.middleware.common.CommonMiddleware\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">CommonMiddleware</span></code><a class=\"reference internal\" href=\"../../_modules/django/middleware/common/#CommonMiddleware\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.middleware.common.CommonMiddleware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Adds a few conveniences for perfectionists:</p>\n<ul>\n<li><p class=\"first\">Forbids access to user agents in the <a class=\"reference internal\" href=\"../settings/#std-setting-DISALLOWED_USER_AGENTS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DISALLOWED_USER_AGENTS</span></code></a>\nsetting, which should be a list of compiled regular expression objects.</p>\n</li>\n<li><p class=\"first\">Performs URL rewriting based on the <a class=\"reference internal\" href=\"../settings/#std-setting-APPEND_SLASH\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">APPEND_SLASH</span></code></a> and\n<a class=\"reference internal\" href=\"../settings/#std-setting-PREPEND_WWW\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">PREPEND_WWW</span></code></a> settings.</p>\n<p>If <a class=\"reference internal\" href=\"../settings/#std-setting-APPEND_SLASH\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">APPEND_SLASH</span></code></a> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> and the initial URL doesn\u2019t end\nwith a slash, and it is not found in the URLconf, then a new URL is\nformed by appending a slash at the end. If this new URL is found in the\nURLconf, then Django redirects the request to this new URL. Otherwise,\nthe initial URL is processed as usual.</p>\n<p>For example, <code class=\"docutils literal notranslate\"><span class=\"pre\">foo.com/bar</span></code> will be redirected to <code class=\"docutils literal notranslate\"><span class=\"pre\">foo.com/bar/</span></code> if\nyou don\u2019t have a valid URL pattern for <code class=\"docutils literal notranslate\"><span class=\"pre\">foo.com/bar</span></code> but <em>do</em> have a\nvalid pattern for <code class=\"docutils literal notranslate\"><span class=\"pre\">foo.com/bar/</span></code>.</p>\n<p>If <a class=\"reference internal\" href=\"../settings/#std-setting-PREPEND_WWW\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">PREPEND_WWW</span></code></a> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, URLs that lack a leading \u201cwww.\u201d\nwill be redirected to the same URL with a leading \u201cwww.\u201d</p>\n<p>Both of these options are meant to normalize URLs. The philosophy is that\neach URL should exist in one, and only one, place. Technically a URL\n<code class=\"docutils literal notranslate\"><span class=\"pre\">foo.com/bar</span></code> is distinct from <code class=\"docutils literal notranslate\"><span class=\"pre\">foo.com/bar/</span></code> \u2013 a search-engine\nindexer would treat them as separate URLs \u2013 so it\u2019s best practice to\nnormalize URLs.</p>\n<p>If necessary, individual views may be excluded from the <code class=\"docutils literal notranslate\"><span class=\"pre\">APPEND_SLASH</span></code>\nbehavior using the <a class=\"reference internal\" href=\"../../topics/http/decorators/#django.views.decorators.common.no_append_slash\" title=\"django.views.decorators.common.no_append_slash\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">no_append_slash()</span></code></a>\ndecorator:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.views.decorators.common</span> <span class=\"kn\">import</span> <span class=\"n\">no_append_slash</span>\n\n\n<span class=\"nd\">@no_append_slash</span>\n<span class=\"k\">def</span> <span class=\"nf\">sensitive_fbv</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;View to be excluded from APPEND_SLASH.&quot;&quot;&quot;</span>\n    <span class=\"k\">return</span> <span class=\"n\">HttpResponse</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">Sets the <code class=\"docutils literal notranslate\"><span class=\"pre\">Content-Length</span></code> header for non-streaming responses.</p>\n</li>\n</ul>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.middleware.common.CommonMiddleware.response_redirect_class\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">CommonMiddleware.</span></code><code class=\"sig-name descname\"><span class=\"pre\">response_redirect_class</span></code><a class=\"headerlink\" href=\"#django.middleware.common.CommonMiddleware.response_redirect_class\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Defaults to <a class=\"reference internal\" href=\"../request-response/#django.http.HttpResponsePermanentRedirect\" title=\"django.http.HttpResponsePermanentRedirect\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpResponsePermanentRedirect</span></code></a>. Subclass\n<code class=\"docutils literal notranslate\"><span class=\"pre\">CommonMiddleware</span></code> and override the attribute to customize the redirects\nissued by the middleware.</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.middleware.common.BrokenLinkEmailsMiddleware\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">BrokenLinkEmailsMiddleware</span></code><a class=\"reference internal\" href=\"../../_modules/django/middleware/common/#BrokenLinkEmailsMiddleware\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.middleware.common.BrokenLinkEmailsMiddleware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<ul class=\"simple\">\n<li>Sends broken link notification emails to <a class=\"reference internal\" href=\"../settings/#std-setting-MANAGERS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">MANAGERS</span></code></a> (see\n<a class=\"reference internal\" href=\"../../howto/error-reporting/\"><span class=\"doc\">How to manage error reporting</span></a>).</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-module-django.middleware.gzip\">\n<span id=\"s-gzip-middleware\"></span><span id=\"module-django.middleware.gzip\"></span><span id=\"gzip-middleware\"></span><h3>GZip middleware<a class=\"headerlink\" href=\"#module-django.middleware.gzip\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.middleware.gzip.GZipMiddleware\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">GZipMiddleware</span></code><a class=\"reference internal\" href=\"../../_modules/django/middleware/gzip/#GZipMiddleware\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.middleware.gzip.GZipMiddleware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.middleware.gzip.GZipMiddleware.max_random_bytes\">\n<code class=\"sig-name descname\"><span class=\"pre\">max_random_bytes</span></code><a class=\"headerlink\" href=\"#django.middleware.gzip.GZipMiddleware.max_random_bytes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defaults to 100. Subclass <code class=\"docutils literal notranslate\"><span class=\"pre\">GZipMiddleware</span></code> and override the attribute\nto change the maximum number of random bytes that is included with\ncompressed responses.</p>\n</dd></dl>\n\n</dd></dl>\n\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p>Security researchers revealed that when compression techniques (including\n<code class=\"docutils literal notranslate\"><span class=\"pre\">GZipMiddleware</span></code>) are used on a website, the site may become exposed to a\nnumber of possible attacks.</p>\n<p>To mitigate attacks, Django implements a technique called <em>Heal The Breach\n(HTB)</em>. It adds up to 100 bytes (see\n<a class=\"reference internal\" href=\"#django.middleware.gzip.GZipMiddleware.max_random_bytes\" title=\"django.middleware.gzip.GZipMiddleware.max_random_bytes\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">max_random_bytes</span></code></a>) of random bytes to each response\nto make the attacks less effective.</p>\n<p class=\"last\">For more details, see the <a class=\"reference external\" href=\"https://www.breachattack.com/resources/BREACH%20-%20SSL,%20gone%20in%2030%20seconds.pdf\">BREACH paper (PDF)</a>, <a class=\"reference external\" href=\"https://www.breachattack.com/\">breachattack.com</a>, and\nthe <a class=\"reference external\" href=\"https://ieeexplore.ieee.org/document/9754554\">Heal The Breach (HTB) paper</a>.</p>\n</div>\n<div class=\"versionchanged\">\n<span class=\"title\">Changed in Django 4.2:</span> <p>Mitigation for the BREACH attack was added.</p>\n</div>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">django.middleware.gzip.GZipMiddleware</span></code> compresses content for browsers\nthat understand GZip compression (all modern browsers).</p>\n<p>This middleware should be placed before any other middleware that need to\nread or write the response body so that compression happens afterward.</p>\n<p>It will NOT compress content if any of the following are true:</p>\n<ul class=\"simple\">\n<li>The content body is less than 200 bytes long.</li>\n<li>The response has already set the <code class=\"docutils literal notranslate\"><span class=\"pre\">Content-Encoding</span></code> header.</li>\n<li>The request (the browser) hasn\u2019t sent an <code class=\"docutils literal notranslate\"><span class=\"pre\">Accept-Encoding</span></code> header\ncontaining <code class=\"docutils literal notranslate\"><span class=\"pre\">gzip</span></code>.</li>\n</ul>\n<p>If the response has an <code class=\"docutils literal notranslate\"><span class=\"pre\">ETag</span></code> header, the ETag is made weak to comply with\n<span class=\"target\" id=\"index-0\"></span><a class=\"rfc reference external\" href=\"https://datatracker.ietf.org/doc/html/rfc9110.html#section-8.8.1\"><strong>RFC 9110#section-8.8.1</strong></a>.</p>\n<p>You can apply GZip compression to individual views using the\n<a class=\"reference internal\" href=\"../../topics/http/decorators/#django.views.decorators.gzip.gzip_page\" title=\"django.views.decorators.gzip.gzip_page\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">gzip_page()</span></code></a> decorator.</p>\n</div>\n<div class=\"section\" id=\"s-module-django.middleware.http\">\n<span id=\"s-conditional-get-middleware\"></span><span id=\"module-django.middleware.http\"></span><span id=\"conditional-get-middleware\"></span><h3>Conditional GET middleware<a class=\"headerlink\" href=\"#module-django.middleware.http\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.middleware.http.ConditionalGetMiddleware\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ConditionalGetMiddleware</span></code><a class=\"reference internal\" href=\"../../_modules/django/middleware/http/#ConditionalGetMiddleware\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.middleware.http.ConditionalGetMiddleware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Handles conditional GET operations. If the response doesn\u2019t have an <code class=\"docutils literal notranslate\"><span class=\"pre\">ETag</span></code>\nheader, the middleware adds one if needed. If the response has an <code class=\"docutils literal notranslate\"><span class=\"pre\">ETag</span></code> or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Last-Modified</span></code> header, and the request has <code class=\"docutils literal notranslate\"><span class=\"pre\">If-None-Match</span></code> or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">If-Modified-Since</span></code>, the response is replaced by an\n<a class=\"reference internal\" href=\"../request-response/#django.http.HttpResponseNotModified\" title=\"django.http.HttpResponseNotModified\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpResponseNotModified</span></code></a>.</p>\n</div>\n<div class=\"section\" id=\"s-module-django.middleware.locale\">\n<span id=\"s-locale-middleware\"></span><span id=\"module-django.middleware.locale\"></span><span id=\"locale-middleware\"></span><h3>Locale middleware<a class=\"headerlink\" href=\"#module-django.middleware.locale\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.middleware.locale.LocaleMiddleware\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">LocaleMiddleware</span></code><a class=\"reference internal\" href=\"../../_modules/django/middleware/locale/#LocaleMiddleware\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.middleware.locale.LocaleMiddleware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Enables language selection based on data from the request. It customizes\ncontent for each user. See the <a class=\"reference internal\" href=\"../../topics/i18n/translation/\"><span class=\"doc\">internationalization documentation</span></a>.</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.middleware.locale.LocaleMiddleware.response_redirect_class\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">LocaleMiddleware.</span></code><code class=\"sig-name descname\"><span class=\"pre\">response_redirect_class</span></code><a class=\"headerlink\" href=\"#django.middleware.locale.LocaleMiddleware.response_redirect_class\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Defaults to <a class=\"reference internal\" href=\"../request-response/#django.http.HttpResponseRedirect\" title=\"django.http.HttpResponseRedirect\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpResponseRedirect</span></code></a>. Subclass\n<code class=\"docutils literal notranslate\"><span class=\"pre\">LocaleMiddleware</span></code> and override the attribute to customize the redirects\nissued by the middleware.</p>\n</div>\n<div class=\"section\" id=\"s-module-django.contrib.messages.middleware\">\n<span id=\"s-message-middleware\"></span><span id=\"module-django.contrib.messages.middleware\"></span><span id=\"message-middleware\"></span><h3>Message middleware<a class=\"headerlink\" href=\"#module-django.contrib.messages.middleware\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.messages.middleware.MessageMiddleware\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">MessageMiddleware</span></code><a class=\"reference internal\" href=\"../../_modules/django/contrib/messages/middleware/#MessageMiddleware\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.messages.middleware.MessageMiddleware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Enables cookie- and session-based message support. See the\n<a class=\"reference internal\" href=\"../contrib/messages/\"><span class=\"doc\">messages documentation</span></a>.</p>\n</div>\n<div class=\"section\" id=\"s-module-django.middleware.security\">\n<span id=\"s-id1\"></span><span id=\"s-security-middleware\"></span><span id=\"module-django.middleware.security\"></span><span id=\"id1\"></span><span id=\"security-middleware\"></span><h3>Security middleware<a class=\"headerlink\" href=\"#module-django.middleware.security\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p class=\"last\">If your deployment situation allows, it\u2019s usually a good idea to have your\nfront-end web server perform the functionality provided by the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">SecurityMiddleware</span></code>. That way, if there are requests that aren\u2019t served\nby Django (such as static media or user-uploaded files), they will have\nthe same protections as requests to your Django application.</p>\n</div>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.middleware.security.SecurityMiddleware\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">SecurityMiddleware</span></code><a class=\"reference internal\" href=\"../../_modules/django/middleware/security/#SecurityMiddleware\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.middleware.security.SecurityMiddleware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">django.middleware.security.SecurityMiddleware</span></code> provides several security\nenhancements to the request/response cycle. Each one can be independently\nenabled or disabled with a setting.</p>\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_CONTENT_TYPE_NOSNIFF\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_CONTENT_TYPE_NOSNIFF</span></code></a></li>\n<li><a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_CROSS_ORIGIN_OPENER_POLICY\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_CROSS_ORIGIN_OPENER_POLICY</span></code></a></li>\n<li><a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_HSTS_INCLUDE_SUBDOMAINS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_HSTS_INCLUDE_SUBDOMAINS</span></code></a></li>\n<li><a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_HSTS_PRELOAD\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_HSTS_PRELOAD</span></code></a></li>\n<li><a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_HSTS_SECONDS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_HSTS_SECONDS</span></code></a></li>\n<li><a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_REDIRECT_EXEMPT\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_REDIRECT_EXEMPT</span></code></a></li>\n<li><a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_REFERRER_POLICY\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_REFERRER_POLICY</span></code></a></li>\n<li><a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_SSL_HOST\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_SSL_HOST</span></code></a></li>\n<li><a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_SSL_REDIRECT\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_SSL_REDIRECT</span></code></a></li>\n</ul>\n<div class=\"section\" id=\"s-http-strict-transport-security\">\n<span id=\"s-id2\"></span><span id=\"http-strict-transport-security\"></span><span id=\"id2\"></span><h4>HTTP Strict Transport Security<a class=\"headerlink\" href=\"#http-strict-transport-security\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>For sites that should only be accessed over HTTPS, you can instruct modern\nbrowsers to refuse to connect to your domain name via an insecure connection\n(for a given period of time) by setting the <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security\">\u201cStrict-Transport-Security\u201d\nheader</a>. This reduces your exposure to some SSL-stripping man-in-the-middle\n(MITM) attacks.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">SecurityMiddleware</span></code> will set this header for you on all HTTPS responses if\nyou set the <a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_HSTS_SECONDS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_HSTS_SECONDS</span></code></a> setting to a non-zero integer value.</p>\n<p>When enabling HSTS, it\u2019s a good idea to first use a small value for testing,\nfor example, <a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_HSTS_SECONDS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_HSTS_SECONDS</span> <span class=\"pre\">=</span> <span class=\"pre\">3600</span></code></a> for one\nhour. Each time a web browser sees the HSTS header from your site, it will\nrefuse to communicate non-securely (using HTTP) with your domain for the given\nperiod of time. Once you confirm that all assets are served securely on your\nsite (i.e. HSTS didn\u2019t break anything), it\u2019s a good idea to increase this value\nso that infrequent visitors will be protected (31536000 seconds, i.e. 1 year,\nis common).</p>\n<p>Additionally, if you set the <a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_HSTS_INCLUDE_SUBDOMAINS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_HSTS_INCLUDE_SUBDOMAINS</span></code></a> setting\nto <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">SecurityMiddleware</span></code> will add the <code class=\"docutils literal notranslate\"><span class=\"pre\">includeSubDomains</span></code> directive\nto the <code class=\"docutils literal notranslate\"><span class=\"pre\">Strict-Transport-Security</span></code> header. This is recommended (assuming all\nsubdomains are served exclusively using HTTPS), otherwise your site may still\nbe vulnerable via an insecure connection to a subdomain.</p>\n<p>If you wish to submit your site to the <a class=\"reference external\" href=\"https://hstspreload.org/\">browser preload list</a>, set the\n<a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_HSTS_PRELOAD\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_HSTS_PRELOAD</span></code></a> setting to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>. That appends the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">preload</span></code> directive to the <code class=\"docutils literal notranslate\"><span class=\"pre\">Strict-Transport-Security</span></code> header.</p>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p>The HSTS policy applies to your entire domain, not just the URL of the\nresponse that you set the header on. Therefore, you should only use it if\nyour entire domain is served via HTTPS only.</p>\n<p class=\"last\">Browsers properly respecting the HSTS header will refuse to allow users to\nbypass warnings and connect to a site with an expired, self-signed, or\notherwise invalid SSL certificate. If you use HSTS, make sure your\ncertificates are in good shape and stay that way!</p>\n</div>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">If you are deployed behind a load-balancer or reverse-proxy server, and the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Strict-Transport-Security</span></code> header is not being added to your responses,\nit may be because Django doesn\u2019t realize that it\u2019s on a secure connection;\nyou may need to set the <a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_PROXY_SSL_HEADER\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_PROXY_SSL_HEADER</span></code></a> setting.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-referrer-policy\">\n<span id=\"s-id4\"></span><span id=\"referrer-policy\"></span><span id=\"id4\"></span><h4>Referrer Policy<a class=\"headerlink\" href=\"#referrer-policy\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>Browsers use <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer\">the Referer header</a> as a way to send information to a site\nabout how users got there. When a user clicks a link, the browser will send the\nfull URL of the linking page as the referrer. While this can be useful for some\npurposes \u2013 like figuring out who\u2019s linking to your site \u2013 it also can cause\nprivacy concerns by informing one site that a user was visiting another site.</p>\n<p>Some browsers have the ability to accept hints about whether they should send\nthe HTTP <code class=\"docutils literal notranslate\"><span class=\"pre\">Referer</span></code> header when a user clicks a link; this hint is provided\nvia <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy\">the Referrer-Policy header</a>. This header can suggest any of three\nbehaviors to browsers:</p>\n<ul class=\"simple\">\n<li>Full URL: send the entire URL in the <code class=\"docutils literal notranslate\"><span class=\"pre\">Referer</span></code> header. For example, if the\nuser is visiting <code class=\"docutils literal notranslate\"><span class=\"pre\">https://example.com/page.html</span></code>, the <code class=\"docutils literal notranslate\"><span class=\"pre\">Referer</span></code> header\nwould contain <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;https://example.com/page.html&quot;</span></code>.</li>\n<li>Origin only: send only the \u201corigin\u201d in the referrer. The origin consists of\nthe scheme, host and (optionally) port number. For example, if the user is\nvisiting <code class=\"docutils literal notranslate\"><span class=\"pre\">https://example.com/page.html</span></code>, the origin would be\n<code class=\"docutils literal notranslate\"><span class=\"pre\">https://example.com/</span></code>.</li>\n<li>No referrer: do not send a <code class=\"docutils literal notranslate\"><span class=\"pre\">Referer</span></code> header at all.</li>\n</ul>\n<p>There are two types of conditions this header can tell a browser to watch out\nfor:</p>\n<ul class=\"simple\">\n<li>Same-origin versus cross-origin: a link from <code class=\"docutils literal notranslate\"><span class=\"pre\">https://example.com/1.html</span></code>\nto <code class=\"docutils literal notranslate\"><span class=\"pre\">https://example.com/2.html</span></code> is same-origin. A link from\n<code class=\"docutils literal notranslate\"><span class=\"pre\">https://example.com/page.html</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">https://not.example.com/page.html</span></code> is\ncross-origin.</li>\n<li>Protocol downgrade: a downgrade occurs if the page containing the link is\nserved via HTTPS, but the page being linked to is not served via HTTPS.</li>\n</ul>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p class=\"last\">When your site is served via HTTPS, <a class=\"reference internal\" href=\"../csrf/#how-csrf-works\"><span class=\"std std-ref\">Django\u2019s CSRF protection system</span></a> requires the <code class=\"docutils literal notranslate\"><span class=\"pre\">Referer</span></code> header to be present, so\ncompletely disabling the <code class=\"docutils literal notranslate\"><span class=\"pre\">Referer</span></code> header will interfere with CSRF\nprotection. To gain most of the benefits of disabling <code class=\"docutils literal notranslate\"><span class=\"pre\">Referer</span></code> headers\nwhile also keeping CSRF protection, consider enabling only same-origin\nreferrers.</p>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">SecurityMiddleware</span></code> can set the <code class=\"docutils literal notranslate\"><span class=\"pre\">Referrer-Policy</span></code> header for you, based on\nthe <a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_REFERRER_POLICY\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_REFERRER_POLICY</span></code></a> setting (note spelling: browsers send a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Referer</span></code> header when a user clicks a link, but the header instructing a\nbrowser whether to do so is spelled <code class=\"docutils literal notranslate\"><span class=\"pre\">Referrer-Policy</span></code>). The valid values for\nthis setting are:</p>\n<dl class=\"docutils\">\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">no-referrer</span></code></dt><dd>Instructs the browser to send no referrer for links clicked on this site.</dd>\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">no-referrer-when-downgrade</span></code></dt><dd>Instructs the browser to send a full URL as the referrer, but only when no\nprotocol downgrade occurs.</dd>\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">origin</span></code></dt><dd>Instructs the browser to send only the origin, not the full URL, as the\nreferrer.</dd>\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">origin-when-cross-origin</span></code></dt><dd>Instructs the browser to send the full URL as the referrer for same-origin\nlinks, and only the origin for cross-origin links.</dd>\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">same-origin</span></code></dt><dd>Instructs the browser to send a full URL, but only for same-origin links. No\nreferrer will be sent for cross-origin links.</dd>\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">strict-origin</span></code></dt><dd>Instructs the browser to send only the origin, not the full URL, and to send\nno referrer when a protocol downgrade occurs.</dd>\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">strict-origin-when-cross-origin</span></code></dt><dd>Instructs the browser to send the full URL when the link is same-origin and\nno protocol downgrade occurs; send only the origin when the link is\ncross-origin and no protocol downgrade occurs; and no referrer when a\nprotocol downgrade occurs.</dd>\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">unsafe-url</span></code></dt><dd>Instructs the browser to always send the full URL as the referrer.</dd>\n</dl>\n<div class=\"admonition-unknown-policy-values admonition\">\n<p class=\"first admonition-title\">Unknown Policy Values</p>\n<p class=\"last\">Where a policy value is <a class=\"reference external\" href=\"https://w3c.github.io/webappsec-referrer-policy/#unknown-policy-values\">unknown</a> by a user agent, it is possible to\nspecify multiple policy values to provide a fallback. The last specified\nvalue that is understood takes precedence. To support this, an iterable or\ncomma-separated string can be used with <a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_REFERRER_POLICY\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_REFERRER_POLICY</span></code></a>.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-cross-origin-opener-policy\">\n<span id=\"s-id8\"></span><span id=\"cross-origin-opener-policy\"></span><span id=\"id8\"></span><h4>Cross-Origin Opener Policy<a class=\"headerlink\" href=\"#cross-origin-opener-policy\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>Some browsers have the ability to isolate top-level windows from other\ndocuments by putting them in a separate browsing context group based on the\nvalue of the <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy\">Cross-Origin Opener Policy</a> (COOP) header. If a document that\nis isolated in this way opens a cross-origin popup window, the popup\u2019s\n<code class=\"docutils literal notranslate\"><span class=\"pre\">window.opener</span></code> property will be <code class=\"docutils literal notranslate\"><span class=\"pre\">null</span></code>. Isolating windows using COOP is a\ndefense-in-depth protection against cross-origin attacks, especially those like\nSpectre which allowed exfiltration of data loaded into a shared browsing\ncontext.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">SecurityMiddleware</span></code> can set the <code class=\"docutils literal notranslate\"><span class=\"pre\">Cross-Origin-Opener-Policy</span></code> header for\nyou, based on the <a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_CROSS_ORIGIN_OPENER_POLICY\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_CROSS_ORIGIN_OPENER_POLICY</span></code></a> setting. The\nvalid values for this setting are:</p>\n<dl class=\"docutils\">\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">same-origin</span></code></dt><dd>Isolates the browsing context exclusively to same-origin documents.\nCross-origin documents are not loaded in the same browsing context. This\nis the default and most secure option.</dd>\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">same-origin-allow-popups</span></code></dt><dd>Isolates the browsing context to same-origin documents or those which\neither don\u2019t set COOP or which opt out of isolation by setting a COOP of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">unsafe-none</span></code>.</dd>\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">unsafe-none</span></code></dt><dd>Allows the document to be added to its opener\u2019s browsing context group\nunless the opener itself has a COOP of <code class=\"docutils literal notranslate\"><span class=\"pre\">same-origin</span></code> or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">same-origin-allow-popups</span></code>.</dd>\n</dl>\n</div>\n<div class=\"section\" id=\"s-x-content-type-options-nosniff\">\n<span id=\"s-x-content-type-options\"></span><span id=\"x-content-type-options-nosniff\"></span><span id=\"x-content-type-options\"></span><h4><code class=\"docutils literal notranslate\"><span class=\"pre\">X-Content-Type-Options:</span> <span class=\"pre\">nosniff</span></code><a class=\"headerlink\" href=\"#x-content-type-options-nosniff\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>Some browsers will try to guess the content types of the assets that they\nfetch, overriding the <code class=\"docutils literal notranslate\"><span class=\"pre\">Content-Type</span></code> header. While this can help display\nsites with improperly configured servers, it can also pose a security\nrisk.</p>\n<p>If your site serves user-uploaded files, a malicious user could upload a\nspecially-crafted file that would be interpreted as HTML or JavaScript by\nthe browser when you expected it to be something harmless.</p>\n<p>To prevent the browser from guessing the content type and force it to\nalways use the type provided in the <code class=\"docutils literal notranslate\"><span class=\"pre\">Content-Type</span></code> header, you can pass\nthe <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options\">X-Content-Type-Options: nosniff</a> header.  <code class=\"docutils literal notranslate\"><span class=\"pre\">SecurityMiddleware</span></code> will\ndo this for all responses if the <a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_CONTENT_TYPE_NOSNIFF\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_CONTENT_TYPE_NOSNIFF</span></code></a> setting\nis <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n<p>Note that in most deployment situations where Django isn\u2019t involved in serving\nuser-uploaded files, this setting won\u2019t help you. For example, if your\n<a class=\"reference internal\" href=\"../settings/#std-setting-MEDIA_URL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">MEDIA_URL</span></code></a> is served directly by your front-end web server (nginx,\nApache, etc.) then you\u2019d want to set this header there. On the other hand, if\nyou are using Django to do something like require authorization in order to\ndownload files and you cannot set the header using your web server, this\nsetting will be useful.</p>\n</div>\n<div class=\"section\" id=\"s-ssl-redirect\">\n<span id=\"s-id11\"></span><span id=\"ssl-redirect\"></span><span id=\"id11\"></span><h4>SSL Redirect<a class=\"headerlink\" href=\"#ssl-redirect\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>If your site offers both HTTP and HTTPS connections, most users will end up\nwith an unsecured connection by default. For best security, you should redirect\nall HTTP connections to HTTPS.</p>\n<p>If you set the <a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_SSL_REDIRECT\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_SSL_REDIRECT</span></code></a> setting to True,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">SecurityMiddleware</span></code> will permanently (HTTP 301) redirect all HTTP\nconnections to HTTPS.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">For performance reasons, it\u2019s preferable to do these redirects outside of\nDjango, in a front-end load balancer or reverse-proxy server such as\n<a class=\"reference external\" href=\"https://nginx.org/\">nginx</a>. <a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_SSL_REDIRECT\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_SSL_REDIRECT</span></code></a> is intended for the deployment\nsituations where this isn\u2019t an option.</p>\n</div>\n<p>If the <a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_SSL_HOST\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_SSL_HOST</span></code></a> setting has a value, all redirects will be\nsent to that host instead of the originally-requested host.</p>\n<p>If there are a few pages on your site that should be available over HTTP, and\nnot redirected to HTTPS, you can list regular expressions to match those URLs\nin the <a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_REDIRECT_EXEMPT\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_REDIRECT_EXEMPT</span></code></a> setting.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">If you are deployed behind a load-balancer or reverse-proxy server and\nDjango can\u2019t seem to tell when a request actually is already secure, you\nmay need to set the <a class=\"reference internal\" href=\"../settings/#std-setting-SECURE_PROXY_SSL_HEADER\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECURE_PROXY_SSL_HEADER</span></code></a> setting.</p>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"s-module-django.contrib.sessions.middleware\">\n<span id=\"s-session-middleware\"></span><span id=\"module-django.contrib.sessions.middleware\"></span><span id=\"session-middleware\"></span><h3>Session middleware<a class=\"headerlink\" href=\"#module-django.contrib.sessions.middleware\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.sessions.middleware.SessionMiddleware\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">SessionMiddleware</span></code><a class=\"reference internal\" href=\"../../_modules/django/contrib/sessions/middleware/#SessionMiddleware\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.sessions.middleware.SessionMiddleware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Enables session support. See the <a class=\"reference internal\" href=\"../../topics/http/sessions/\"><span class=\"doc\">session documentation</span></a>.</p>\n</div>\n<div class=\"section\" id=\"s-module-django.contrib.sites.middleware\">\n<span id=\"s-site-middleware\"></span><span id=\"module-django.contrib.sites.middleware\"></span><span id=\"site-middleware\"></span><h3>Site middleware<a class=\"headerlink\" href=\"#module-django.contrib.sites.middleware\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.sites.middleware.CurrentSiteMiddleware\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">CurrentSiteMiddleware</span></code><a class=\"reference internal\" href=\"../../_modules/django/contrib/sites/middleware/#CurrentSiteMiddleware\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.sites.middleware.CurrentSiteMiddleware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Adds the <code class=\"docutils literal notranslate\"><span class=\"pre\">site</span></code> attribute representing the current site to every incoming\n<code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> object. See the <a class=\"reference internal\" href=\"../contrib/sites/#site-middleware\"><span class=\"std std-ref\">sites documentation</span></a>.</p>\n</div>\n<div class=\"section\" id=\"s-module-django.contrib.auth.middleware\">\n<span id=\"s-authentication-middleware\"></span><span id=\"module-django.contrib.auth.middleware\"></span><span id=\"authentication-middleware\"></span><h3>Authentication middleware<a class=\"headerlink\" href=\"#module-django.contrib.auth.middleware\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.middleware.AuthenticationMiddleware\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">AuthenticationMiddleware</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.middleware.AuthenticationMiddleware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Adds the <code class=\"docutils literal notranslate\"><span class=\"pre\">user</span></code> attribute, representing the currently-logged-in user, to\nevery incoming <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> object. See <a class=\"reference internal\" href=\"../../topics/auth/default/#auth-web-requests\"><span class=\"std std-ref\">Authentication in web requests</span></a>.</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.middleware.RemoteUserMiddleware\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">RemoteUserMiddleware</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.middleware.RemoteUserMiddleware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Middleware for utilizing web server provided authentication. See\n<a class=\"reference internal\" href=\"../../howto/auth-remote-user/\"><span class=\"doc\">How to authenticate using REMOTE_USER</span></a> for usage details.</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.middleware.PersistentRemoteUserMiddleware\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">PersistentRemoteUserMiddleware</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.middleware.PersistentRemoteUserMiddleware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Middleware for utilizing web server provided authentication when enabled only\non the login page. See <a class=\"reference internal\" href=\"../../howto/auth-remote-user/#persistent-remote-user-middleware-howto\"><span class=\"std std-ref\">Using REMOTE_USER on login pages only</span></a> for usage\ndetails.</p>\n</div>\n<div class=\"section\" id=\"s-csrf-protection-middleware\">\n<span id=\"csrf-protection-middleware\"></span><h3>CSRF protection middleware<a class=\"headerlink\" href=\"#csrf-protection-middleware\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.middleware.csrf.CsrfViewMiddleware\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">CsrfViewMiddleware</span></code><a class=\"reference internal\" href=\"../../_modules/django/middleware/csrf/#CsrfViewMiddleware\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.middleware.csrf.CsrfViewMiddleware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Adds protection against Cross Site Request Forgeries by adding hidden form\nfields to POST forms and checking requests for the correct value. See the\n<a class=\"reference internal\" href=\"../csrf/\"><span class=\"doc\">Cross Site Request Forgery protection documentation</span></a>.</p>\n</div>\n<div class=\"section\" id=\"s-x-frame-options-middleware\">\n<span id=\"x-frame-options-middleware\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">X-Frame-Options</span></code> middleware<a class=\"headerlink\" href=\"#x-frame-options-middleware\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.middleware.clickjacking.XFrameOptionsMiddleware\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">XFrameOptionsMiddleware</span></code><a class=\"reference internal\" href=\"../../_modules/django/middleware/clickjacking/#XFrameOptionsMiddleware\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.middleware.clickjacking.XFrameOptionsMiddleware\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Simple <a class=\"reference internal\" href=\"../clickjacking/\"><span class=\"doc\">clickjacking protection via the X-Frame-Options header</span></a>.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-middleware-ordering\">\n<span id=\"s-id12\"></span><span id=\"middleware-ordering\"></span><span id=\"id12\"></span><h2>Middleware ordering<a class=\"headerlink\" href=\"#middleware-ordering\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Here are some hints about the ordering of various Django middleware classes:</p>\n<ol class=\"arabic\">\n<li><p class=\"first\"><a class=\"reference internal\" href=\"#django.middleware.security.SecurityMiddleware\" title=\"django.middleware.security.SecurityMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SecurityMiddleware</span></code></a></p>\n<p>It should go near the top of the list if you\u2019re going to turn on the SSL\nredirect as that avoids running through a bunch of other unnecessary\nmiddleware.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"#django.middleware.cache.UpdateCacheMiddleware\" title=\"django.middleware.cache.UpdateCacheMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">UpdateCacheMiddleware</span></code></a></p>\n<p>Before those that modify the <code class=\"docutils literal notranslate\"><span class=\"pre\">Vary</span></code> header (<code class=\"docutils literal notranslate\"><span class=\"pre\">SessionMiddleware</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">GZipMiddleware</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">LocaleMiddleware</span></code>).</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"#django.middleware.gzip.GZipMiddleware\" title=\"django.middleware.gzip.GZipMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GZipMiddleware</span></code></a></p>\n<p>Before any middleware that may change or use the response body.</p>\n<p>After <code class=\"docutils literal notranslate\"><span class=\"pre\">UpdateCacheMiddleware</span></code>: Modifies <code class=\"docutils literal notranslate\"><span class=\"pre\">Vary</span></code> header.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"#django.contrib.sessions.middleware.SessionMiddleware\" title=\"django.contrib.sessions.middleware.SessionMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SessionMiddleware</span></code></a></p>\n<p>Before any middleware that may raise an exception to trigger an error\nview (such as <a class=\"reference internal\" href=\"../exceptions/#django.core.exceptions.PermissionDenied\" title=\"django.core.exceptions.PermissionDenied\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">PermissionDenied</span></code></a>) if you\u2019re\nusing <a class=\"reference internal\" href=\"../settings/#std-setting-CSRF_USE_SESSIONS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">CSRF_USE_SESSIONS</span></code></a>.</p>\n<p>After <code class=\"docutils literal notranslate\"><span class=\"pre\">UpdateCacheMiddleware</span></code>: Modifies <code class=\"docutils literal notranslate\"><span class=\"pre\">Vary</span></code> header.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"#django.middleware.http.ConditionalGetMiddleware\" title=\"django.middleware.http.ConditionalGetMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ConditionalGetMiddleware</span></code></a></p>\n<p>Before any middleware that may change the response (it sets the <code class=\"docutils literal notranslate\"><span class=\"pre\">ETag</span></code>\nheader).</p>\n<p>After <code class=\"docutils literal notranslate\"><span class=\"pre\">GZipMiddleware</span></code> so it won\u2019t calculate an <code class=\"docutils literal notranslate\"><span class=\"pre\">ETag</span></code> header on gzipped\ncontents.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"#django.middleware.locale.LocaleMiddleware\" title=\"django.middleware.locale.LocaleMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LocaleMiddleware</span></code></a></p>\n<p>One of the topmost, after <code class=\"docutils literal notranslate\"><span class=\"pre\">SessionMiddleware</span></code> (uses session data) and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">UpdateCacheMiddleware</span></code> (modifies <code class=\"docutils literal notranslate\"><span class=\"pre\">Vary</span></code> header).</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"#django.middleware.common.CommonMiddleware\" title=\"django.middleware.common.CommonMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CommonMiddleware</span></code></a></p>\n<p>Before any middleware that may change the response (it sets the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Content-Length</span></code> header). A middleware that appears before\n<code class=\"docutils literal notranslate\"><span class=\"pre\">CommonMiddleware</span></code> and changes the response must reset <code class=\"docutils literal notranslate\"><span class=\"pre\">Content-Length</span></code>.</p>\n<p>Close to the top: it redirects when <a class=\"reference internal\" href=\"../settings/#std-setting-APPEND_SLASH\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">APPEND_SLASH</span></code></a> or\n<a class=\"reference internal\" href=\"../settings/#std-setting-PREPEND_WWW\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">PREPEND_WWW</span></code></a> are set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n<p>After <code class=\"docutils literal notranslate\"><span class=\"pre\">SessionMiddleware</span></code> if you\u2019re using <a class=\"reference internal\" href=\"../settings/#std-setting-CSRF_USE_SESSIONS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">CSRF_USE_SESSIONS</span></code></a>.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"#django.middleware.csrf.CsrfViewMiddleware\" title=\"django.middleware.csrf.CsrfViewMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CsrfViewMiddleware</span></code></a></p>\n<p>Before any view middleware that assumes that CSRF attacks have been dealt\nwith.</p>\n<p>Before <a class=\"reference internal\" href=\"#django.contrib.auth.middleware.RemoteUserMiddleware\" title=\"django.contrib.auth.middleware.RemoteUserMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RemoteUserMiddleware</span></code></a>, or any\nother authentication middleware that may perform a login, and hence rotate\nthe CSRF token, before calling down the middleware chain.</p>\n<p>After <code class=\"docutils literal notranslate\"><span class=\"pre\">SessionMiddleware</span></code> if you\u2019re using <a class=\"reference internal\" href=\"../settings/#std-setting-CSRF_USE_SESSIONS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">CSRF_USE_SESSIONS</span></code></a>.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"#django.contrib.auth.middleware.AuthenticationMiddleware\" title=\"django.contrib.auth.middleware.AuthenticationMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AuthenticationMiddleware</span></code></a></p>\n<p>After <code class=\"docutils literal notranslate\"><span class=\"pre\">SessionMiddleware</span></code>: uses session storage.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"#django.contrib.messages.middleware.MessageMiddleware\" title=\"django.contrib.messages.middleware.MessageMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MessageMiddleware</span></code></a></p>\n<p>After <code class=\"docutils literal notranslate\"><span class=\"pre\">SessionMiddleware</span></code>: can use session-based storage.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"#django.middleware.cache.FetchFromCacheMiddleware\" title=\"django.middleware.cache.FetchFromCacheMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FetchFromCacheMiddleware</span></code></a></p>\n<p>After any middleware that modifies the <code class=\"docutils literal notranslate\"><span class=\"pre\">Vary</span></code> header: that header is used\nto pick a value for the cache hash-key.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"../contrib/flatpages/#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware\" title=\"django.contrib.flatpages.middleware.FlatpageFallbackMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FlatpageFallbackMiddleware</span></code></a></p>\n<p>Should be near the bottom as it\u2019s a last-resort type of middleware.</p>\n</li>\n<li><p class=\"first\"><a class=\"reference internal\" href=\"../contrib/redirects/#django.contrib.redirects.middleware.RedirectFallbackMiddleware\" title=\"django.contrib.redirects.middleware.RedirectFallbackMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RedirectFallbackMiddleware</span></code></a></p>\n<p>Should be near the bottom as it\u2019s a last-resort type of middleware.</p>\n</li>\n</ol>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["ref/migration-operations", "Migration Operations", "N", "next"], ["ref/logging", "Logging", "P", "previous"]], "sourcename": "ref/middleware.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Middleware</a><ul>\n<li><a class=\"reference internal\" href=\"#available-middleware\">Available middleware</a><ul>\n<li><a class=\"reference internal\" href=\"#module-django.middleware.cache\">Cache middleware</a></li>\n<li><a class=\"reference internal\" href=\"#module-django.middleware.common\">\u201cCommon\u201d middleware</a></li>\n<li><a class=\"reference internal\" href=\"#module-django.middleware.gzip\">GZip middleware</a></li>\n<li><a class=\"reference internal\" href=\"#module-django.middleware.http\">Conditional GET middleware</a></li>\n<li><a class=\"reference internal\" href=\"#module-django.middleware.locale\">Locale middleware</a></li>\n<li><a class=\"reference internal\" href=\"#module-django.contrib.messages.middleware\">Message middleware</a></li>\n<li><a class=\"reference internal\" href=\"#module-django.middleware.security\">Security middleware</a><ul>\n<li><a class=\"reference internal\" href=\"#http-strict-transport-security\">HTTP Strict Transport Security</a></li>\n<li><a class=\"reference internal\" href=\"#referrer-policy\">Referrer Policy</a></li>\n<li><a class=\"reference internal\" href=\"#cross-origin-opener-policy\">Cross-Origin Opener Policy</a></li>\n<li><a class=\"reference internal\" href=\"#x-content-type-options-nosniff\"><code class=\"docutils literal notranslate\"><span class=\"pre\">X-Content-Type-Options:</span> <span class=\"pre\">nosniff</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#ssl-redirect\">SSL Redirect</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#module-django.contrib.sessions.middleware\">Session middleware</a></li>\n<li><a class=\"reference internal\" href=\"#module-django.contrib.sites.middleware\">Site middleware</a></li>\n<li><a class=\"reference internal\" href=\"#module-django.contrib.auth.middleware\">Authentication middleware</a></li>\n<li><a class=\"reference internal\" href=\"#csrf-protection-middleware\">CSRF protection middleware</a></li>\n<li><a class=\"reference internal\" href=\"#x-frame-options-middleware\"><code class=\"docutils literal notranslate\"><span class=\"pre\">X-Frame-Options</span></code> middleware</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#middleware-ordering\">Middleware ordering</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "ref/middleware", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}