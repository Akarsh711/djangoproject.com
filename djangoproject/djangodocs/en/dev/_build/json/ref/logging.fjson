{"parents": [{"link": "../", "title": "API Reference"}], "prev": {"link": "../forms/validation/", "title": "Form and field validation"}, "next": {"link": "../middleware/", "title": "Middleware"}, "title": "Logging", "meta": {}, "body": "<div class=\"section\" id=\"s-logging\">\n<span id=\"s-logging-ref\"></span><span id=\"logging\"></span><span id=\"logging-ref\"></span><h1>Logging<a class=\"headerlink\" href=\"#logging\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<ul class=\"last simple\">\n<li><a class=\"reference internal\" href=\"../../howto/logging/#logging-how-to\"><span class=\"std std-ref\">How to configure and use logging</span></a></li>\n<li><a class=\"reference internal\" href=\"../../topics/logging/#logging-explanation\"><span class=\"std std-ref\">Django logging overview</span></a></li>\n</ul>\n</div>\n<span class=\"target\" id=\"module-django.utils.log\"></span><p>Django\u2019s logging module extends Python\u2019s builtin <a class=\"reference external\" href=\"https://docs.python.org/3/library/logging.html#module-logging\" title=\"(in Python v3.11)\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">logging</span></code></a>.</p>\n<p>Logging is configured as part of the general Django <a class=\"reference internal\" href=\"../applications/#django.setup\" title=\"django.setup\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.setup()</span></code></a>\nfunction, so it\u2019s always available unless explicitly disabled.</p>\n<div class=\"section\" id=\"s-django-s-default-logging-configuration\">\n<span id=\"s-default-logging-configuration\"></span><span id=\"django-s-default-logging-configuration\"></span><span id=\"default-logging-configuration\"></span><h2>Django\u2019s default logging configuration<a class=\"headerlink\" href=\"#django-s-default-logging-configuration\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>By default, Django uses Python\u2019s <a class=\"reference external\" href=\"https://docs.python.org/3/library/logging.config.html#logging-config-dictschema\" title=\"(in Python v3.11)\"><span class=\"xref std std-ref\">logging.config.dictConfig format</span></a>.</p>\n<div class=\"section\" id=\"s-default-logging-conditions\">\n<span id=\"default-logging-conditions\"></span><h3>Default logging conditions<a class=\"headerlink\" href=\"#default-logging-conditions\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The full set of default logging conditions are:</p>\n<p>When <a class=\"reference internal\" href=\"../settings/#std-setting-DEBUG\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEBUG</span></code></a> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>:</p>\n<ul class=\"simple\">\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">django</span></code> logger sends messages in the <code class=\"docutils literal notranslate\"><span class=\"pre\">django</span></code> hierarchy (except\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.server</span></code>) at the <code class=\"docutils literal notranslate\"><span class=\"pre\">INFO</span></code> level or higher to the console.</li>\n</ul>\n<p>When <a class=\"reference internal\" href=\"../settings/#std-setting-DEBUG\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEBUG</span></code></a> is <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>:</p>\n<ul class=\"simple\">\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">django</span></code> logger sends messages in the <code class=\"docutils literal notranslate\"><span class=\"pre\">django</span></code> hierarchy (except\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.server</span></code>)  with <code class=\"docutils literal notranslate\"><span class=\"pre\">ERROR</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">CRITICAL</span></code> level to\n<a class=\"reference internal\" href=\"#django.utils.log.AdminEmailHandler\" title=\"django.utils.log.AdminEmailHandler\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AdminEmailHandler</span></code></a>.</li>\n</ul>\n<p>Independently of the value of <a class=\"reference internal\" href=\"../settings/#std-setting-DEBUG\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEBUG</span></code></a>:</p>\n<ul class=\"simple\">\n<li>The <a class=\"reference internal\" href=\"#django-server-logger\"><span class=\"std std-ref\">django.server</span></a> logger sends messages at the <code class=\"docutils literal notranslate\"><span class=\"pre\">INFO</span></code> level\nor higher to the console.</li>\n</ul>\n<p>All loggers except <a class=\"reference internal\" href=\"#django-server-logger\"><span class=\"std std-ref\">django.server</span></a> propagate logging to their\nparents, up to the root <code class=\"docutils literal notranslate\"><span class=\"pre\">django</span></code> logger. The <code class=\"docutils literal notranslate\"><span class=\"pre\">console</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">mail_admins</span></code>\nhandlers are attached to the root logger to provide the behavior described\nabove.</p>\n<p>Python\u2019s own defaults send records of level <code class=\"docutils literal notranslate\"><span class=\"pre\">WARNING</span></code> and higher\nto the console.</p>\n</div>\n<div class=\"section\" id=\"s-default-logging-definition\">\n<span id=\"s-id1\"></span><span id=\"default-logging-definition\"></span><span id=\"id1\"></span><h3>Default logging definition<a class=\"headerlink\" href=\"#default-logging-definition\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Django\u2019s default logging configuration inherits Python\u2019s defaults. It\u2019s\navailable as <code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.log.DEFAULT_LOGGING</span></code> and defined in\n<a class=\"reference external\" href=\"https://github.com/django/django/blob/main/django/utils/log.py\">django/utils/log.py</a>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;version&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;disable_existing_loggers&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;filters&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;require_debug_false&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;()&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;django.utils.log.RequireDebugFalse&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;require_debug_true&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;()&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;django.utils.log.RequireDebugTrue&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;formatters&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;django.server&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;()&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;django.utils.log.ServerFormatter&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;format&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;[</span><span class=\"si\">{server_time}</span><span class=\"s2\">] </span><span class=\"si\">{message}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;style&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;{&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;handlers&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;console&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;level&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;INFO&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;filters&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;require_debug_true&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;class&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;logging.StreamHandler&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;django.server&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;level&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;INFO&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;class&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;logging.StreamHandler&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;formatter&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;django.server&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;mail_admins&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;level&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ERROR&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;filters&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;require_debug_false&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;class&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;django.utils.log.AdminEmailHandler&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;loggers&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;django&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;handlers&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;console&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;mail_admins&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;level&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;INFO&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">&quot;django.server&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;handlers&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;django.server&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;level&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;INFO&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;propagate&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>See <a class=\"reference internal\" href=\"../../topics/logging/#configuring-logging\"><span class=\"std std-ref\">Configuring logging</span></a> on how to complement or replace this default\nlogging configuration.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-django-logging-extensions\">\n<span id=\"django-logging-extensions\"></span><h2>Django logging extensions<a class=\"headerlink\" href=\"#django-logging-extensions\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Django provides a number of utilities to handle the particular requirements of\nlogging in a web server environment.</p>\n<div class=\"section\" id=\"s-loggers\">\n<span id=\"loggers\"></span><h3>Loggers<a class=\"headerlink\" href=\"#loggers\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Django provides several built-in loggers.</p>\n<div class=\"section\" id=\"s-django\">\n<span id=\"s-django-logger\"></span><span id=\"django\"></span><span id=\"django-logger\"></span><h4><code class=\"docutils literal notranslate\"><span class=\"pre\">django</span></code><a class=\"headerlink\" href=\"#django\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>The parent logger for messages in the <code class=\"docutils literal notranslate\"><span class=\"pre\">django</span></code> <a class=\"reference internal\" href=\"../../howto/logging/#naming-loggers-hierarchy\"><span class=\"std std-ref\">named logger hierarchy</span></a>. Django does not post messages using this name.\nInstead, it uses one of the loggers below.</p>\n</div>\n<div class=\"section\" id=\"s-django-request\">\n<span id=\"s-django-request-logger\"></span><span id=\"django-request\"></span><span id=\"django-request-logger\"></span><h4><code class=\"docutils literal notranslate\"><span class=\"pre\">django.request</span></code><a class=\"headerlink\" href=\"#django-request\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>Log messages related to the handling of requests. 5XX responses are\nraised as <code class=\"docutils literal notranslate\"><span class=\"pre\">ERROR</span></code> messages; 4XX responses are raised as <code class=\"docutils literal notranslate\"><span class=\"pre\">WARNING</span></code>\nmessages. Requests that are logged to the <code class=\"docutils literal notranslate\"><span class=\"pre\">django.security</span></code> logger aren\u2019t\nlogged to <code class=\"docutils literal notranslate\"><span class=\"pre\">django.request</span></code>.</p>\n<p>Messages to this logger have the following extra context:</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">status_code</span></code>: The HTTP response code associated with the request.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code>: The request object that generated the logging message.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-server\">\n<span id=\"s-django-server-logger\"></span><span id=\"django-server\"></span><span id=\"django-server-logger\"></span><h4><code class=\"docutils literal notranslate\"><span class=\"pre\">django.server</span></code><a class=\"headerlink\" href=\"#django-server\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>Log messages related to the handling of requests received by the server invoked\nby the <a class=\"reference internal\" href=\"../django-admin/#django-admin-runserver\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">runserver</span></code></a> command. HTTP 5XX responses are logged as <code class=\"docutils literal notranslate\"><span class=\"pre\">ERROR</span></code>\nmessages, 4XX responses are logged as <code class=\"docutils literal notranslate\"><span class=\"pre\">WARNING</span></code> messages, and everything else\nis logged as <code class=\"docutils literal notranslate\"><span class=\"pre\">INFO</span></code>.</p>\n<p>Messages to this logger have the following extra context:</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">status_code</span></code>: The HTTP response code associated with the request.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code>: The request object that generated the logging message.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-template\">\n<span id=\"s-django-template-logger\"></span><span id=\"django-template\"></span><span id=\"django-template-logger\"></span><h4><code class=\"docutils literal notranslate\"><span class=\"pre\">django.template</span></code><a class=\"headerlink\" href=\"#django-template\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>Log messages related to the rendering of templates.</p>\n<ul class=\"simple\">\n<li>Missing context variables are logged as <code class=\"docutils literal notranslate\"><span class=\"pre\">DEBUG</span></code> messages.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-db-backends\">\n<span id=\"s-django-db-logger\"></span><span id=\"django-db-backends\"></span><span id=\"django-db-logger\"></span><h4><code class=\"docutils literal notranslate\"><span class=\"pre\">django.db.backends</span></code><a class=\"headerlink\" href=\"#django-db-backends\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>Messages relating to the interaction of code with the database. For example,\nevery application-level SQL statement executed by a request is logged at the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DEBUG</span></code> level to this logger.</p>\n<p>Messages to this logger have the following extra context:</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">duration</span></code>: The time taken to execute the SQL statement.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">sql</span></code>: The SQL statement that was executed.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">params</span></code>: The parameters that were used in the SQL call.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">alias</span></code>: The alias of the database used in the SQL call.</li>\n</ul>\n<p>For performance reasons, SQL logging is only enabled when\n<code class=\"docutils literal notranslate\"><span class=\"pre\">settings.DEBUG</span></code> is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, regardless of the logging\nlevel or handlers that are installed.</p>\n<p>This logging does not include framework-level initialization (e.g.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">SET</span> <span class=\"pre\">TIMEZONE</span></code>). Turn on query logging in your database if you wish to view\nall database queries.</p>\n<div class=\"versionchanged\">\n<span class=\"title\">Changed in Django 4.2:</span> <p>Support for logging transaction management queries (<code class=\"docutils literal notranslate\"><span class=\"pre\">BEGIN</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">COMMIT</span></code>,\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">ROLLBACK</span></code>) was added.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-django-security\">\n<span id=\"s-django-security-logger\"></span><span id=\"django-security\"></span><span id=\"django-security-logger\"></span><h4><code class=\"docutils literal notranslate\"><span class=\"pre\">django.security.*</span></code><a class=\"headerlink\" href=\"#django-security\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>The security loggers will receive messages on any occurrence of\n<a class=\"reference internal\" href=\"../exceptions/#django.core.exceptions.SuspiciousOperation\" title=\"django.core.exceptions.SuspiciousOperation\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">SuspiciousOperation</span></code></a> and other security-related\nerrors. There is a sub-logger for each subtype of security error, including all\n<code class=\"docutils literal notranslate\"><span class=\"pre\">SuspiciousOperation</span></code>s. The level of the log event depends on where the\nexception is handled.  Most occurrences are logged as a warning, while\nany <code class=\"docutils literal notranslate\"><span class=\"pre\">SuspiciousOperation</span></code> that reaches the WSGI handler will be logged as an\nerror. For example, when an HTTP <code class=\"docutils literal notranslate\"><span class=\"pre\">Host</span></code> header is included in a request from\na client that does not match <a class=\"reference internal\" href=\"../settings/#std-setting-ALLOWED_HOSTS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">ALLOWED_HOSTS</span></code></a>, Django will return a 400\nresponse, and an error message will be logged to the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.security.DisallowedHost</span></code> logger.</p>\n<p>These log events will reach the <code class=\"docutils literal notranslate\"><span class=\"pre\">django</span></code> logger by default, which mails error\nevents to admins when <code class=\"docutils literal notranslate\"><span class=\"pre\">DEBUG=False</span></code>. Requests resulting in a 400 response due\nto a <code class=\"docutils literal notranslate\"><span class=\"pre\">SuspiciousOperation</span></code> will not be logged to the <code class=\"docutils literal notranslate\"><span class=\"pre\">django.request</span></code>\nlogger, but only to the <code class=\"docutils literal notranslate\"><span class=\"pre\">django.security</span></code> logger.</p>\n<p>To silence a particular type of <code class=\"docutils literal notranslate\"><span class=\"pre\">SuspiciousOperation</span></code>, you can override that\nspecific logger following this example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">LOGGING</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"s2\">&quot;handlers&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;null&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;class&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;logging.NullHandler&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;loggers&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;django.security.DisallowedHost&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;handlers&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;null&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;propagate&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"c1\"># ...</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>Other <code class=\"docutils literal notranslate\"><span class=\"pre\">django.security</span></code> loggers not based on <code class=\"docutils literal notranslate\"><span class=\"pre\">SuspiciousOperation</span></code> are:</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">django.security.csrf</span></code>: For <a class=\"reference internal\" href=\"../../howto/csrf/#csrf-rejected-requests\"><span class=\"std std-ref\">CSRF failures</span></a>.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-django-db-backends-schema\">\n<span id=\"django-db-backends-schema\"></span><h4><code class=\"docutils literal notranslate\"><span class=\"pre\">django.db.backends.schema</span></code><a class=\"headerlink\" href=\"#django-db-backends-schema\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>Logs the SQL queries that are executed during schema changes to the database by\nthe <a class=\"reference internal\" href=\"../../topics/migrations/\"><span class=\"doc\">migrations framework</span></a>. Note that it won\u2019t log the\nqueries executed by <a class=\"reference internal\" href=\"../migration-operations/#django.db.migrations.operations.RunPython\" title=\"django.db.migrations.operations.RunPython\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RunPython</span></code></a>.\nMessages to this logger have <code class=\"docutils literal notranslate\"><span class=\"pre\">params</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">sql</span></code> in their extra context (but\nunlike <code class=\"docutils literal notranslate\"><span class=\"pre\">django.db.backends</span></code>, not duration). The values have the same meaning\nas explained in <a class=\"reference internal\" href=\"#django-db-logger\"><span class=\"std std-ref\">django.db.backends</span></a>.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-handlers\">\n<span id=\"handlers\"></span><h3>Handlers<a class=\"headerlink\" href=\"#handlers\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Django provides one log handler in addition to <a class=\"reference external\" href=\"https://docs.python.org/3/library/logging.handlers.html#module-logging.handlers\" title=\"(in Python v3.11)\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">those</span> <span class=\"pre\">provided</span> <span class=\"pre\">by</span> <span class=\"pre\">the</span>\n<span class=\"pre\">Python</span> <span class=\"pre\">logging</span> <span class=\"pre\">module</span></code></a>.</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.utils.log.AdminEmailHandler\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">AdminEmailHandler</span></code>(<em><span class=\"n\"><span class=\"pre\">include_html</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em><span class=\"n\"><span class=\"pre\">email_backend</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">reporter_class</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/log/#AdminEmailHandler\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.log.AdminEmailHandler\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This handler sends an email to the site <a class=\"reference internal\" href=\"../settings/#std-setting-ADMINS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">ADMINS</span></code></a> for each log\nmessage it receives.</p>\n<p>If the log record contains a <code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code> attribute, the full details\nof the request will be included in the email. The email subject will\ninclude the phrase \u201cinternal IP\u201d if the client\u2019s IP address is in the\n<a class=\"reference internal\" href=\"../settings/#std-setting-INTERNAL_IPS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">INTERNAL_IPS</span></code></a> setting; if not, it will include \u201cEXTERNAL IP\u201d.</p>\n<p>If the log record contains stack trace information, that stack\ntrace will be included in the email.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">include_html</span></code> argument of <code class=\"docutils literal notranslate\"><span class=\"pre\">AdminEmailHandler</span></code> is used to\ncontrol whether the traceback email includes an HTML attachment\ncontaining the full content of the debug web page that would have been\nproduced if <a class=\"reference internal\" href=\"../settings/#std-setting-DEBUG\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEBUG</span></code></a> were <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>. To set this value in your\nconfiguration, include it in the handler definition for\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.log.AdminEmailHandler</span></code>, like this:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"s2\">&quot;handlers&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;mail_admins&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;level&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ERROR&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;class&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;django.utils.log.AdminEmailHandler&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;include_html&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>Be aware of the <a class=\"reference internal\" href=\"../../topics/logging/#logging-security-implications\"><span class=\"std std-ref\">security implications of logging</span></a> when using the <code class=\"docutils literal notranslate\"><span class=\"pre\">AdminEmailHandler</span></code>.</p>\n<p>By setting the <code class=\"docutils literal notranslate\"><span class=\"pre\">email_backend</span></code> argument of <code class=\"docutils literal notranslate\"><span class=\"pre\">AdminEmailHandler</span></code>, the\n<a class=\"reference internal\" href=\"../../topics/email/#topic-email-backends\"><span class=\"std std-ref\">email backend</span></a> that is being used by the\nhandler can be overridden, like this:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"s2\">&quot;handlers&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;mail_admins&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;level&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ERROR&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;class&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;django.utils.log.AdminEmailHandler&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;email_backend&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;django.core.mail.backends.filebased.EmailBackend&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>By default, an instance of the email backend specified in\n<a class=\"reference internal\" href=\"../settings/#std-setting-EMAIL_BACKEND\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">EMAIL_BACKEND</span></code></a> will be used.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">reporter_class</span></code> argument of <code class=\"docutils literal notranslate\"><span class=\"pre\">AdminEmailHandler</span></code> allows providing\nan <code class=\"docutils literal notranslate\"><span class=\"pre\">django.views.debug.ExceptionReporter</span></code> subclass to customize the\ntraceback text sent in the email body. You provide a string import path to\nthe class you wish to use, like this:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"s2\">&quot;handlers&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;mail_admins&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;level&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ERROR&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;class&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;django.utils.log.AdminEmailHandler&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;include_html&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;reporter_class&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;somepackage.error_reporter.CustomErrorReporter&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.utils.log.AdminEmailHandler.send_mail\">\n<code class=\"sig-name descname\"><span class=\"pre\">send_mail</span></code>(<em><span class=\"n\"><span class=\"pre\">subject</span></span></em>, <em><span class=\"n\"><span class=\"pre\">message</span></span></em>, <em><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/log/#AdminEmailHandler.send_mail\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.log.AdminEmailHandler.send_mail\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends emails to admin users. To customize this behavior, you can\nsubclass the <a class=\"reference internal\" href=\"#django.utils.log.AdminEmailHandler\" title=\"django.utils.log.AdminEmailHandler\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AdminEmailHandler</span></code></a> class and\noverride this method.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-filters\">\n<span id=\"filters\"></span><h3>Filters<a class=\"headerlink\" href=\"#filters\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Django provides some log filters in addition to those provided by the Python\nlogging module.</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.utils.log.CallbackFilter\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">CallbackFilter</span></code>(<em><span class=\"n\"><span class=\"pre\">callback</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/utils/log/#CallbackFilter\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.log.CallbackFilter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This filter accepts a callback function (which should accept a single\nargument, the record to be logged), and calls it for each record that\npasses through the filter. Handling of that record will not proceed if the\ncallback returns False.</p>\n<p>For instance, to filter out <a class=\"reference internal\" href=\"../exceptions/#django.http.UnreadablePostError\" title=\"django.http.UnreadablePostError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">UnreadablePostError</span></code></a>\n(raised when a user cancels an upload) from the admin emails, you would\ncreate a filter function:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.http</span> <span class=\"kn\">import</span> <span class=\"n\">UnreadablePostError</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">skip_unreadable_post</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">exc_info</span><span class=\"p\">:</span>\n        <span class=\"n\">exc_type</span><span class=\"p\">,</span> <span class=\"n\">exc_value</span> <span class=\"o\">=</span> <span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">exc_info</span><span class=\"p\">[:</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">exc_value</span><span class=\"p\">,</span> <span class=\"n\">UnreadablePostError</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n    <span class=\"k\">return</span> <span class=\"kc\">True</span>\n</pre></div>\n</div>\n<p>and then add it to your logging config:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">LOGGING</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"s2\">&quot;filters&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;skip_unreadable_posts&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;()&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;django.utils.log.CallbackFilter&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;callback&quot;</span><span class=\"p\">:</span> <span class=\"n\">skip_unreadable_post</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;handlers&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;mail_admins&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;level&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ERROR&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;filters&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;skip_unreadable_posts&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;class&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;django.utils.log.AdminEmailHandler&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"c1\"># ...</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.utils.log.RequireDebugFalse\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">RequireDebugFalse</span></code><a class=\"reference internal\" href=\"../../_modules/django/utils/log/#RequireDebugFalse\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.log.RequireDebugFalse\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This filter will only pass on records when settings.DEBUG is False.</p>\n<p>This filter is used as follows in the default <a class=\"reference internal\" href=\"../settings/#std-setting-LOGGING\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">LOGGING</span></code></a>\nconfiguration to ensure that the <a class=\"reference internal\" href=\"#django.utils.log.AdminEmailHandler\" title=\"django.utils.log.AdminEmailHandler\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AdminEmailHandler</span></code></a> only sends\nerror emails to admins when <a class=\"reference internal\" href=\"../settings/#std-setting-DEBUG\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEBUG</span></code></a> is <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">LOGGING</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"s2\">&quot;filters&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;require_debug_false&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;()&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;django.utils.log.RequireDebugFalse&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">&quot;handlers&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;mail_admins&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;level&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ERROR&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;filters&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;require_debug_false&quot;</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;class&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;django.utils.log.AdminEmailHandler&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"c1\"># ...</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.utils.log.RequireDebugTrue\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">RequireDebugTrue</span></code><a class=\"reference internal\" href=\"../../_modules/django/utils/log/#RequireDebugTrue\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.utils.log.RequireDebugTrue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This filter is similar to <a class=\"reference internal\" href=\"#django.utils.log.RequireDebugFalse\" title=\"django.utils.log.RequireDebugFalse\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RequireDebugFalse</span></code></a>, except that records are\npassed only when <a class=\"reference internal\" href=\"../settings/#std-setting-DEBUG\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEBUG</span></code></a> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n</dd></dl>\n\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["ref/middleware", "Middleware", "N", "next"], ["ref/forms/validation", "Form and field validation", "P", "previous"]], "sourcename": "ref/logging.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Logging</a><ul>\n<li><a class=\"reference internal\" href=\"#django-s-default-logging-configuration\">Django\u2019s default logging configuration</a><ul>\n<li><a class=\"reference internal\" href=\"#default-logging-conditions\">Default logging conditions</a></li>\n<li><a class=\"reference internal\" href=\"#default-logging-definition\">Default logging definition</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#django-logging-extensions\">Django logging extensions</a><ul>\n<li><a class=\"reference internal\" href=\"#loggers\">Loggers</a><ul>\n<li><a class=\"reference internal\" href=\"#django\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-request\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.request</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-server\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.server</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-template\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.template</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-db-backends\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.db.backends</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-security\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.security.*</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django-db-backends-schema\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.db.backends.schema</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#handlers\">Handlers</a></li>\n<li><a class=\"reference internal\" href=\"#filters\">Filters</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "ref/logging", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}