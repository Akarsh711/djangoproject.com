{"parents": [{"link": "../../", "title": "API Reference"}, {"link": "../", "title": "Forms"}], "prev": {"link": "../api/", "title": "The Forms API"}, "next": {"link": "../models/", "title": "Model Form Functions"}, "title": "Form fields", "meta": {}, "body": "<div class=\"section\" id=\"s-module-django.forms.fields\">\n<span id=\"s-form-fields\"></span><span id=\"module-django.forms.fields\"></span><span id=\"form-fields\"></span><h1>Form fields<a class=\"headerlink\" href=\"#module-django.forms.fields\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.Field\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">Field</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#Field\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.Field\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>When you create a <code class=\"docutils literal notranslate\"><span class=\"pre\">Form</span></code> class, the most important part is defining the\nfields of the form. Each field has custom validation logic, along with a few\nother hooks.</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.forms.Field.clean\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">Field.</span></code><code class=\"sig-name descname\"><span class=\"pre\">clean</span></code>(<em><span class=\"n\"><span class=\"pre\">value</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#Field.clean\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.Field.clean\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>Although the primary way you\u2019ll use <code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> classes is in <code class=\"docutils literal notranslate\"><span class=\"pre\">Form</span></code> classes,\nyou can also instantiate them and use them directly to get a better idea of\nhow they work. Each <code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> instance has a <code class=\"docutils literal notranslate\"><span class=\"pre\">clean()</span></code> method, which takes\na single argument and either raises a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.core.exceptions.ValidationError</span></code> exception or returns the clean\nvalue:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">EmailField</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">(</span><span class=\"s2\">&quot;foo@example.com&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;foo@example.com&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">(</span><span class=\"s2\">&quot;invalid email address&quot;</span><span class=\"p\">)</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n<span class=\"c\">...</span>\n<span class=\"gr\">ValidationError</span>: <span class=\"n\">[&#39;Enter a valid email address.&#39;]</span>\n</pre></div>\n</div>\n<div class=\"section\" id=\"s-core-field-arguments\">\n<span id=\"s-id1\"></span><span id=\"core-field-arguments\"></span><span id=\"id1\"></span><h2>Core field arguments<a class=\"headerlink\" href=\"#core-field-arguments\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Each <code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> class constructor takes at least these arguments. Some\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> classes take additional, field-specific arguments, but the following\nshould <em>always</em> be accepted:</p>\n<div class=\"section\" id=\"s-required\">\n<span id=\"required\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code><a class=\"headerlink\" href=\"#required\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.Field.required\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">Field.</span></code><code class=\"sig-name descname\"><span class=\"pre\">required</span></code><a class=\"headerlink\" href=\"#django.forms.Field.required\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>By default, each <code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> class assumes the value is required, so if you pass\nan empty value \u2013 either <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> or the empty string (<code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;&quot;</span></code>) \u2013 then\n<code class=\"docutils literal notranslate\"><span class=\"pre\">clean()</span></code> will raise a <code class=\"docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code> exception:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">(</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;foo&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n<span class=\"c\">...</span>\n<span class=\"gr\">ValidationError</span>: <span class=\"n\">[&#39;This field is required.&#39;]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n<span class=\"c\">...</span>\n<span class=\"gr\">ValidationError</span>: <span class=\"n\">[&#39;This field is required.&#39;]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39; &#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;0&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;True&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;False&#39;</span>\n</pre></div>\n</div>\n<p>To specify that a field is <em>not</em> required, pass <code class=\"docutils literal notranslate\"><span class=\"pre\">required=False</span></code> to the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> constructor:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">(</span><span class=\"s2\">&quot;foo&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;foo&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;0&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;True&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;False&#39;</span>\n</pre></div>\n</div>\n<p>If a <code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> has <code class=\"docutils literal notranslate\"><span class=\"pre\">required=False</span></code> and you pass <code class=\"docutils literal notranslate\"><span class=\"pre\">clean()</span></code> an empty value,\nthen <code class=\"docutils literal notranslate\"><span class=\"pre\">clean()</span></code> will return a <em>normalized</em> empty value rather than raising\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code>. For <code class=\"docutils literal notranslate\"><span class=\"pre\">CharField</span></code>, this will return\n<a class=\"reference internal\" href=\"#django.forms.CharField.empty_value\" title=\"django.forms.CharField.empty_value\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">empty_value</span></code></a> which defaults to an empty string. For other\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> classes, it might be <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>. (This varies from field to field.)</p>\n<p>Widgets of required form fields have the <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code> HTML attribute. Set the\n<a class=\"reference internal\" href=\"../api/#django.forms.Form.use_required_attribute\" title=\"django.forms.Form.use_required_attribute\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Form.use_required_attribute</span></code></a> attribute to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> to disable it. The\n<code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code> attribute isn\u2019t included on forms of formsets because the browser\nvalidation may not be correct when adding and deleting formsets.</p>\n</div>\n<div class=\"section\" id=\"s-label\">\n<span id=\"label\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">label</span></code><a class=\"headerlink\" href=\"#label\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.Field.label\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">Field.</span></code><code class=\"sig-name descname\"><span class=\"pre\">label</span></code><a class=\"headerlink\" href=\"#django.forms.Field.label\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">label</span></code> argument lets you specify the \u201chuman-friendly\u201d label for this\nfield. This is used when the <code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> is displayed in a <code class=\"docutils literal notranslate\"><span class=\"pre\">Form</span></code>.</p>\n<p>As explained in \u201cOutputting forms as HTML\u201d above, the default label for a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> is generated from the field name by converting all underscores to\nspaces and upper-casing the first letter. Specify <code class=\"docutils literal notranslate\"><span class=\"pre\">label</span></code> if that default\nbehavior doesn\u2019t result in an adequate label.</p>\n<p>Here\u2019s a full example <code class=\"docutils literal notranslate\"><span class=\"pre\">Form</span></code> that implements <code class=\"docutils literal notranslate\"><span class=\"pre\">label</span></code> for two of its fields.\nWe\u2019ve specified <code class=\"docutils literal notranslate\"><span class=\"pre\">auto_id=False</span></code> to simplify the output:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">CommentForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;Your name&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">URLField</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;Your website&quot;</span><span class=\"p\">,</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">comment</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">()</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">CommentForm</span><span class=\"p\">(</span><span class=\"n\">auto_id</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;div&gt;Your name:&lt;input type=&quot;text&quot; name=&quot;name&quot; required&gt;&lt;/div&gt;</span>\n<span class=\"go\">&lt;div&gt;Your website:&lt;input type=&quot;url&quot; name=&quot;url&quot;&gt;&lt;/div&gt;</span>\n<span class=\"go\">&lt;div&gt;Comment:&lt;input type=&quot;text&quot; name=&quot;comment&quot; required&gt;&lt;/div&gt;</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-label-suffix\">\n<span id=\"label-suffix\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">label_suffix</span></code><a class=\"headerlink\" href=\"#label-suffix\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.Field.label_suffix\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">Field.</span></code><code class=\"sig-name descname\"><span class=\"pre\">label_suffix</span></code><a class=\"headerlink\" href=\"#django.forms.Field.label_suffix\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">label_suffix</span></code> argument lets you override the form\u2019s\n<a class=\"reference internal\" href=\"../api/#django.forms.Form.label_suffix\" title=\"django.forms.Form.label_suffix\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">label_suffix</span></code></a> on a per-field basis:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">ContactForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">()</span>\n<span class=\"gp\">... </span>    <span class=\"n\">nationality</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">()</span>\n<span class=\"gp\">... </span>    <span class=\"n\">captcha_answer</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">&quot;2 + 2&quot;</span><span class=\"p\">,</span> <span class=\"n\">label_suffix</span><span class=\"o\">=</span><span class=\"s2\">&quot; =&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">ContactForm</span><span class=\"p\">(</span><span class=\"n\">label_suffix</span><span class=\"o\">=</span><span class=\"s2\">&quot;?&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;div&gt;&lt;label for=&quot;id_age&quot;&gt;Age?&lt;/label&gt;&lt;input type=&quot;number&quot; name=&quot;age&quot; required id=&quot;id_age&quot;&gt;&lt;/div&gt;</span>\n<span class=\"go\">&lt;div&gt;&lt;label for=&quot;id_nationality&quot;&gt;Nationality?&lt;/label&gt;&lt;input type=&quot;text&quot; name=&quot;nationality&quot; required id=&quot;id_nationality&quot;&gt;&lt;/div&gt;</span>\n<span class=\"go\">&lt;div&gt;&lt;label for=&quot;id_captcha_answer&quot;&gt;2 + 2 =&lt;/label&gt;&lt;input type=&quot;number&quot; name=&quot;captcha_answer&quot; required id=&quot;id_captcha_answer&quot;&gt;&lt;/div&gt;</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-initial\">\n<span id=\"initial\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">initial</span></code><a class=\"headerlink\" href=\"#initial\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.Field.initial\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">Field.</span></code><code class=\"sig-name descname\"><span class=\"pre\">initial</span></code><a class=\"headerlink\" href=\"#django.forms.Field.initial\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">initial</span></code> argument lets you specify the initial value to use when\nrendering this <code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> in an unbound <code class=\"docutils literal notranslate\"><span class=\"pre\">Form</span></code>.</p>\n<p>To specify dynamic initial data, see the <a class=\"reference internal\" href=\"../api/#django.forms.Form.initial\" title=\"django.forms.Form.initial\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Form.initial</span></code></a> parameter.</p>\n<p>The use-case for this is when you want to display an \u201cempty\u201d form in which a\nfield is initialized to a particular value. For example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">CommentForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">initial</span><span class=\"o\">=</span><span class=\"s2\">&quot;Your name&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">URLField</span><span class=\"p\">(</span><span class=\"n\">initial</span><span class=\"o\">=</span><span class=\"s2\">&quot;http://&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">comment</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">()</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">CommentForm</span><span class=\"p\">(</span><span class=\"n\">auto_id</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;div&gt;Name:&lt;input type=&quot;text&quot; name=&quot;name&quot; value=&quot;Your name&quot; required&gt;&lt;/div&gt;</span>\n<span class=\"go\">&lt;div&gt;Url:&lt;input type=&quot;url&quot; name=&quot;url&quot; value=&quot;http://&quot; required&gt;&lt;/div&gt;</span>\n<span class=\"go\">&lt;div&gt;Comment:&lt;input type=&quot;text&quot; name=&quot;comment&quot; required&gt;&lt;/div&gt;</span>\n</pre></div>\n</div>\n<p>You may be thinking, why not just pass a dictionary of the initial values as\ndata when displaying the form? Well, if you do that, you\u2019ll trigger validation,\nand the HTML output will include any validation errors:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">CommentForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">()</span>\n<span class=\"gp\">... </span>    <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">URLField</span><span class=\"p\">()</span>\n<span class=\"gp\">... </span>    <span class=\"n\">comment</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">()</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">default_data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Your name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://&quot;</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">CommentForm</span><span class=\"p\">(</span><span class=\"n\">default_data</span><span class=\"p\">,</span> <span class=\"n\">auto_id</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;div&gt;Name:&lt;input type=&quot;text&quot; name=&quot;name&quot; value=&quot;Your name&quot; required&gt;&lt;/div&gt;</span>\n<span class=\"go\">&lt;div&gt;Url:&lt;ul class=&quot;errorlist&quot;&gt;&lt;li&gt;Enter a valid URL.&lt;/li&gt;&lt;/ul&gt;&lt;input type=&quot;url&quot; name=&quot;url&quot; value=&quot;http://&quot; required&gt;&lt;/div&gt;</span>\n<span class=\"go\">&lt;div&gt;Comment:&lt;ul class=&quot;errorlist&quot;&gt;&lt;li&gt;This field is required.&lt;/li&gt;&lt;/ul&gt;&lt;input type=&quot;text&quot; name=&quot;comment&quot; required&gt;&lt;/div&gt;</span>\n</pre></div>\n</div>\n<p>This is why <code class=\"docutils literal notranslate\"><span class=\"pre\">initial</span></code> values are only displayed for unbound forms. For bound\nforms, the HTML output will use the bound data.</p>\n<p>Also note that <code class=\"docutils literal notranslate\"><span class=\"pre\">initial</span></code> values are <em>not</em> used as \u201cfallback\u201d data in\nvalidation if a particular field\u2019s value is not given. <code class=\"docutils literal notranslate\"><span class=\"pre\">initial</span></code> values are\n<em>only</em> intended for initial form display:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">CommentForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">initial</span><span class=\"o\">=</span><span class=\"s2\">&quot;Your name&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">URLField</span><span class=\"p\">(</span><span class=\"n\">initial</span><span class=\"o\">=</span><span class=\"s2\">&quot;http://&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">comment</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">()</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;comment&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Foo&quot;</span><span class=\"p\">}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">CommentForm</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">is_valid</span><span class=\"p\">()</span>\n<span class=\"go\">False</span>\n<span class=\"go\"># The form does *not* fall back to using the initial values.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">errors</span>\n<span class=\"go\">{&#39;url&#39;: [&#39;This field is required.&#39;], &#39;name&#39;: [&#39;This field is required.&#39;]}</span>\n</pre></div>\n</div>\n<p>Instead of a constant, you can also pass any callable:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">DateForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">day</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">DateField</span><span class=\"p\">(</span><span class=\"n\">initial</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"o\">.</span><span class=\"n\">today</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">DateForm</span><span class=\"p\">())</span>\n<span class=\"go\">&lt;div&gt;&lt;label for=&quot;id_day&quot;&gt;Day:&lt;/label&gt;&lt;input type=&quot;text&quot; name=&quot;day&quot; value=&quot;2023-02-11&quot; required id=&quot;id_day&quot;&gt;&lt;/div&gt;</span>\n</pre></div>\n</div>\n<p>The callable will be evaluated only when the unbound form is displayed, not when it is defined.</p>\n</div>\n<div class=\"section\" id=\"s-widget\">\n<span id=\"widget\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">widget</span></code><a class=\"headerlink\" href=\"#widget\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.Field.widget\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">Field.</span></code><code class=\"sig-name descname\"><span class=\"pre\">widget</span></code><a class=\"headerlink\" href=\"#django.forms.Field.widget\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">widget</span></code> argument lets you specify a <code class=\"docutils literal notranslate\"><span class=\"pre\">Widget</span></code> class to use when\nrendering this <code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code>. See <a class=\"reference internal\" href=\"../widgets/\"><span class=\"doc\">Widgets</span></a> for more information.</p>\n</div>\n<div class=\"section\" id=\"s-help-text\">\n<span id=\"help-text\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">help_text</span></code><a class=\"headerlink\" href=\"#help-text\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.Field.help_text\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">Field.</span></code><code class=\"sig-name descname\"><span class=\"pre\">help_text</span></code><a class=\"headerlink\" href=\"#django.forms.Field.help_text\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">help_text</span></code> argument lets you specify descriptive text for this\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code>. If you provide <code class=\"docutils literal notranslate\"><span class=\"pre\">help_text</span></code>, it will be displayed next to the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> when the <code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> is rendered by one of the convenience <code class=\"docutils literal notranslate\"><span class=\"pre\">Form</span></code>\nmethods (e.g., <code class=\"docutils literal notranslate\"><span class=\"pre\">as_ul()</span></code>).</p>\n<p>Like the model field\u2019s <a class=\"reference internal\" href=\"../../models/fields/#django.db.models.Field.help_text\" title=\"django.db.models.Field.help_text\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">help_text</span></code></a>, this value\nisn\u2019t HTML-escaped in automatically-generated forms.</p>\n<p>Here\u2019s a full example <code class=\"docutils literal notranslate\"><span class=\"pre\">Form</span></code> that implements <code class=\"docutils literal notranslate\"><span class=\"pre\">help_text</span></code> for two of its\nfields. We\u2019ve specified <code class=\"docutils literal notranslate\"><span class=\"pre\">auto_id=False</span></code> to simplify the output:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">HelpTextContactForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">subject</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">help_text</span><span class=\"o\">=</span><span class=\"s2\">&quot;100 characters max.&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">()</span>\n<span class=\"gp\">... </span>    <span class=\"n\">sender</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">EmailField</span><span class=\"p\">(</span><span class=\"n\">help_text</span><span class=\"o\">=</span><span class=\"s2\">&quot;A valid email address, please.&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">cc_myself</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">BooleanField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">HelpTextContactForm</span><span class=\"p\">(</span><span class=\"n\">auto_id</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;div&gt;Subject:&lt;div class=&quot;helptext&quot;&gt;100 characters max.&lt;/div&gt;&lt;input type=&quot;text&quot; name=&quot;subject&quot; maxlength=&quot;100&quot; required&gt;&lt;/div&gt;</span>\n<span class=\"go\">&lt;div&gt;Message:&lt;input type=&quot;text&quot; name=&quot;message&quot; required&gt;&lt;/div&gt;</span>\n<span class=\"go\">&lt;div&gt;Sender:&lt;div class=&quot;helptext&quot;&gt;A valid email address, please.&lt;/div&gt;&lt;input type=&quot;email&quot; name=&quot;sender&quot; required&gt;&lt;/div&gt;</span>\n<span class=\"go\">&lt;div&gt;Cc myself:&lt;input type=&quot;checkbox&quot; name=&quot;cc_myself&quot;&gt;&lt;/div&gt;</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-error-messages\">\n<span id=\"error-messages\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">error_messages</span></code><a class=\"headerlink\" href=\"#error-messages\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.Field.error_messages\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">Field.</span></code><code class=\"sig-name descname\"><span class=\"pre\">error_messages</span></code><a class=\"headerlink\" href=\"#django.forms.Field.error_messages\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">error_messages</span></code> argument lets you override the default messages that the\nfield will raise. Pass in a dictionary with keys matching the error messages you\nwant to override. For example, here is the default error message:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">generic</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">generic</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n  <span class=\"c\">...</span>\n<span class=\"gr\">ValidationError</span>: <span class=\"n\">[&#39;This field is required.&#39;]</span>\n</pre></div>\n</div>\n<p>And here is a custom error message:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">error_messages</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;required&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Please enter your name&quot;</span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n  <span class=\"c\">...</span>\n<span class=\"gr\">ValidationError</span>: <span class=\"n\">[&#39;Please enter your name&#39;]</span>\n</pre></div>\n</div>\n<p>In the <a class=\"reference internal\" href=\"#built-in-field-classes\">built-in Field classes</a> section below, each <code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> defines the\nerror message keys it uses.</p>\n</div>\n<div class=\"section\" id=\"s-validators\">\n<span id=\"validators\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">validators</span></code><a class=\"headerlink\" href=\"#validators\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.Field.validators\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">Field.</span></code><code class=\"sig-name descname\"><span class=\"pre\">validators</span></code><a class=\"headerlink\" href=\"#django.forms.Field.validators\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">validators</span></code> argument lets you provide a list of validation functions\nfor this field.</p>\n<p>See the <a class=\"reference internal\" href=\"../../validators/\"><span class=\"doc\">validators documentation</span></a> for more information.</p>\n</div>\n<div class=\"section\" id=\"s-localize\">\n<span id=\"localize\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">localize</span></code><a class=\"headerlink\" href=\"#localize\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.Field.localize\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">Field.</span></code><code class=\"sig-name descname\"><span class=\"pre\">localize</span></code><a class=\"headerlink\" href=\"#django.forms.Field.localize\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">localize</span></code> argument enables the localization of form data input, as well\nas the rendered output.</p>\n<p>See the <a class=\"reference internal\" href=\"../../../topics/i18n/formatting/\"><span class=\"doc\">format localization</span></a> documentation for\nmore information.</p>\n</div>\n<div class=\"section\" id=\"s-disabled\">\n<span id=\"disabled\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">disabled</span></code><a class=\"headerlink\" href=\"#disabled\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.Field.disabled\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">Field.</span></code><code class=\"sig-name descname\"><span class=\"pre\">disabled</span></code><a class=\"headerlink\" href=\"#django.forms.Field.disabled\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">disabled</span></code> boolean argument, when set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, disables a form field\nusing the <code class=\"docutils literal notranslate\"><span class=\"pre\">disabled</span></code> HTML attribute so that it won\u2019t be editable by users.\nEven if a user tampers with the field\u2019s value submitted to the server, it will\nbe ignored in favor of the value from the form\u2019s initial data.</p>\n</div>\n<div class=\"section\" id=\"s-template-name\">\n<span id=\"template-name\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">template_name</span></code><a class=\"headerlink\" href=\"#template-name\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.Field.template_name\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">Field.</span></code><code class=\"sig-name descname\"><span class=\"pre\">template_name</span></code><a class=\"headerlink\" href=\"#django.forms.Field.template_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<div class=\"versionadded\">\n<span class=\"title\">New in Django Development version.</span> </div>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">template_name</span></code> argument allows a custom template to be used when the\nfield is rendered with <a class=\"reference internal\" href=\"../api/#django.forms.BoundField.as_field_group\" title=\"django.forms.BoundField.as_field_group\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">as_field_group()</span></code></a>. By\ndefault this value is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;django/forms/field.html&quot;</span></code>. Can be changed per\nfield by overriding this attribute or more generally by overriding the default\ntemplate, see also <a class=\"reference internal\" href=\"../renderers/#overriding-built-in-field-templates\"><span class=\"std std-ref\">Overriding built-in field templates</span></a>.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-checking-if-the-field-data-has-changed\">\n<span id=\"checking-if-the-field-data-has-changed\"></span><h2>Checking if the field data has changed<a class=\"headerlink\" href=\"#checking-if-the-field-data-has-changed\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-has-changed\">\n<span id=\"has-changed\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">has_changed()</span></code><a class=\"headerlink\" href=\"#has-changed\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.forms.Field.has_changed\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">Field.</span></code><code class=\"sig-name descname\"><span class=\"pre\">has_changed</span></code>()<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#Field.has_changed\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.Field.has_changed\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">has_changed()</span></code> method is used to determine if the field value has changed\nfrom the initial value. Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n<p>See the <a class=\"reference internal\" href=\"../api/#django.forms.Form.has_changed\" title=\"django.forms.Form.has_changed\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Form.has_changed()</span></code></a> documentation for more information.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-built-in-field-classes\">\n<span id=\"s-built-in-fields\"></span><span id=\"built-in-field-classes\"></span><span id=\"built-in-fields\"></span><h2>Built-in <code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> classes<a class=\"headerlink\" href=\"#built-in-field-classes\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Naturally, the <code class=\"docutils literal notranslate\"><span class=\"pre\">forms</span></code> library comes with a set of <code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> classes that\nrepresent common validation needs. This section documents each built-in field.</p>\n<p>For each field, we describe the default widget used if you don\u2019t specify\n<code class=\"docutils literal notranslate\"><span class=\"pre\">widget</span></code>. We also specify the value returned when you provide an empty value\n(see the section on <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code> above to understand what that means).</p>\n<div class=\"section\" id=\"s-booleanfield\">\n<span id=\"booleanfield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">BooleanField</span></code><a class=\"headerlink\" href=\"#booleanfield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.BooleanField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">BooleanField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#BooleanField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.BooleanField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.CheckboxInput\" title=\"django.forms.CheckboxInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CheckboxInput</span></code></a></li>\n<li>Empty value: <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code></li>\n<li>Normalizes to: A Python <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> value.</li>\n<li>Validates that the value is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> (e.g. the check box is checked) if\nthe field has <code class=\"docutils literal notranslate\"><span class=\"pre\">required=True</span></code>.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code></li>\n</ul>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Since all <code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> subclasses have <code class=\"docutils literal notranslate\"><span class=\"pre\">required=True</span></code> by default, the\nvalidation condition here is important. If you want to include a boolean\nin your form that can be either <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> (e.g. a checked or\nunchecked checkbox), you must remember to pass in <code class=\"docutils literal notranslate\"><span class=\"pre\">required=False</span></code> when\ncreating the <code class=\"docutils literal notranslate\"><span class=\"pre\">BooleanField</span></code>.</p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-charfield\">\n<span id=\"charfield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">CharField</span></code><a class=\"headerlink\" href=\"#charfield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.CharField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">CharField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#CharField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.CharField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.TextInput\" title=\"django.forms.TextInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TextInput</span></code></a></li>\n<li>Empty value: Whatever you\u2019ve given as <a class=\"reference internal\" href=\"#django.forms.CharField.empty_value\" title=\"django.forms.CharField.empty_value\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">empty_value</span></code></a>.</li>\n<li>Normalizes to: A string.</li>\n<li>Uses <a class=\"reference internal\" href=\"../../validators/#django.core.validators.MaxLengthValidator\" title=\"django.core.validators.MaxLengthValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MaxLengthValidator</span></code></a> and\n<a class=\"reference internal\" href=\"../../validators/#django.core.validators.MinLengthValidator\" title=\"django.core.validators.MinLengthValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MinLengthValidator</span></code></a> if <code class=\"docutils literal notranslate\"><span class=\"pre\">max_length</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">min_length</span></code> are provided. Otherwise, all inputs are valid.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">max_length</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">min_length</span></code></li>\n</ul>\n<p>Has the following optional arguments for validation:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.CharField.max_length\">\n<code class=\"sig-name descname\"><span class=\"pre\">max_length</span></code><a class=\"headerlink\" href=\"#django.forms.CharField.max_length\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.CharField.min_length\">\n<code class=\"sig-name descname\"><span class=\"pre\">min_length</span></code><a class=\"headerlink\" href=\"#django.forms.CharField.min_length\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>If provided, these arguments ensure that the string is at most or at\nleast the given length.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.CharField.strip\">\n<code class=\"sig-name descname\"><span class=\"pre\">strip</span></code><a class=\"headerlink\" href=\"#django.forms.CharField.strip\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> (default), the value will be stripped of leading and\ntrailing whitespace.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.CharField.empty_value\">\n<code class=\"sig-name descname\"><span class=\"pre\">empty_value</span></code><a class=\"headerlink\" href=\"#django.forms.CharField.empty_value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The value to use to represent \u201cempty\u201d. Defaults to an empty string.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-choicefield\">\n<span id=\"choicefield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">ChoiceField</span></code><a class=\"headerlink\" href=\"#choicefield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ChoiceField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ChoiceField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#ChoiceField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.ChoiceField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.Select\" title=\"django.forms.Select\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Select</span></code></a></li>\n<li>Empty value: <code class=\"docutils literal notranslate\"><span class=\"pre\">''</span></code> (an empty string)</li>\n<li>Normalizes to: A string.</li>\n<li>Validates that the given value exists in the list of choices.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid_choice</span></code></li>\n</ul>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid_choice</span></code> error message may contain <code class=\"docutils literal notranslate\"><span class=\"pre\">%(value)s</span></code>, which will be\nreplaced with the selected choice.</p>\n<p>Takes one extra argument:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ChoiceField.choices\">\n<code class=\"sig-name descname\"><span class=\"pre\">choices</span></code><a class=\"headerlink\" href=\"#django.forms.ChoiceField.choices\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Either an <a class=\"reference external\" href=\"https://docs.python.org/3/glossary.html#term-iterable\" title=\"(in Python v3.11)\"><span class=\"xref std std-term\">iterable</span></a> of 2-tuples to use as choices for this\nfield, <a class=\"reference internal\" href=\"../../models/fields/#field-choices-enum-types\"><span class=\"std std-ref\">enumeration type</span></a>, or a\ncallable that returns such an iterable. This argument accepts the same\nformats as the <code class=\"docutils literal notranslate\"><span class=\"pre\">choices</span></code> argument to a model field. See the\n<a class=\"reference internal\" href=\"../../models/fields/#field-choices\"><span class=\"std std-ref\">model field reference documentation on choices</span></a>\nfor more details. If the argument is a callable, it is evaluated each\ntime the field\u2019s form is initialized, in addition to during rendering.\nDefaults to an empty list.</p>\n</dd></dl>\n\n<div class=\"versionchanged\">\n<span class=\"title\">Changed in Django Development version:</span> <p>Support for using <a class=\"reference internal\" href=\"../../models/fields/#field-choices-enum-types\"><span class=\"std std-ref\">enumeration types</span></a>\ndirectly in the <code class=\"docutils literal notranslate\"><span class=\"pre\">choices</span></code> was added.</p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-datefield\">\n<span id=\"datefield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">DateField</span></code><a class=\"headerlink\" href=\"#datefield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.DateField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">DateField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#DateField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.DateField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.DateInput\" title=\"django.forms.DateInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DateInput</span></code></a></li>\n<li>Empty value: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code></li>\n<li>Normalizes to: A Python <code class=\"docutils literal notranslate\"><span class=\"pre\">datetime.date</span></code> object.</li>\n<li>Validates that the given value is either a <code class=\"docutils literal notranslate\"><span class=\"pre\">datetime.date</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">datetime.datetime</span></code> or string formatted in a particular date format.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid</span></code></li>\n</ul>\n<p>Takes one optional argument:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.DateField.input_formats\">\n<code class=\"sig-name descname\"><span class=\"pre\">input_formats</span></code><a class=\"headerlink\" href=\"#django.forms.DateField.input_formats\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An iterable of formats used to attempt to convert a string to a valid\n<code class=\"docutils literal notranslate\"><span class=\"pre\">datetime.date</span></code> object.</p>\n</dd></dl>\n\n<p>If no <code class=\"docutils literal notranslate\"><span class=\"pre\">input_formats</span></code> argument is provided, the default input formats are\ntaken from the active locale format <code class=\"docutils literal notranslate\"><span class=\"pre\">DATE_INPUT_FORMATS</span></code> key, or from\n<a class=\"reference internal\" href=\"../../settings/#std-setting-DATE_INPUT_FORMATS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DATE_INPUT_FORMATS</span></code></a> if localization is disabled. See also\n<a class=\"reference internal\" href=\"../../../topics/i18n/formatting/\"><span class=\"doc\">format localization</span></a>.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-datetimefield\">\n<span id=\"datetimefield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code><a class=\"headerlink\" href=\"#datetimefield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.DateTimeField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">DateTimeField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#DateTimeField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.DateTimeField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.DateTimeInput\" title=\"django.forms.DateTimeInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DateTimeInput</span></code></a></li>\n<li>Empty value: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code></li>\n<li>Normalizes to: A Python <code class=\"docutils literal notranslate\"><span class=\"pre\">datetime.datetime</span></code> object.</li>\n<li>Validates that the given value is either a <code class=\"docutils literal notranslate\"><span class=\"pre\">datetime.datetime</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">datetime.date</span></code> or string formatted in a particular datetime format.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid</span></code></li>\n</ul>\n<p>Takes one optional argument:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.DateTimeField.input_formats\">\n<code class=\"sig-name descname\"><span class=\"pre\">input_formats</span></code><a class=\"headerlink\" href=\"#django.forms.DateTimeField.input_formats\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An iterable of formats used to attempt to convert a string to a valid\n<code class=\"docutils literal notranslate\"><span class=\"pre\">datetime.datetime</span></code> object, in addition to ISO 8601 formats.</p>\n</dd></dl>\n\n<p>The field always accepts strings in ISO 8601 formatted dates or similar\nrecognized by <a class=\"reference internal\" href=\"../../utils/#django.utils.dateparse.parse_datetime\" title=\"django.utils.dateparse.parse_datetime\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">parse_datetime()</span></code></a>. Some examples\nare:</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">'2006-10-25</span> <span class=\"pre\">14:30:59'</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">'2006-10-25T14:30:59'</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">'2006-10-25</span> <span class=\"pre\">14:30'</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">'2006-10-25T14:30'</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">'2006-10-25T14:30Z'</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">'2006-10-25T14:30+02:00'</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">'2006-10-25'</span></code></li>\n</ul>\n<p>If no <code class=\"docutils literal notranslate\"><span class=\"pre\">input_formats</span></code> argument is provided, the default input formats are\ntaken from the active locale format <code class=\"docutils literal notranslate\"><span class=\"pre\">DATETIME_INPUT_FORMATS</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DATE_INPUT_FORMATS</span></code> keys, or from <a class=\"reference internal\" href=\"../../settings/#std-setting-DATETIME_INPUT_FORMATS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DATETIME_INPUT_FORMATS</span></code></a> and\n<a class=\"reference internal\" href=\"../../settings/#std-setting-DATE_INPUT_FORMATS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DATE_INPUT_FORMATS</span></code></a> if localization is disabled. See also\n<a class=\"reference internal\" href=\"../../../topics/i18n/formatting/\"><span class=\"doc\">format localization</span></a>.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-decimalfield\">\n<span id=\"decimalfield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">DecimalField</span></code><a class=\"headerlink\" href=\"#decimalfield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.DecimalField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">DecimalField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#DecimalField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.DecimalField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.NumberInput\" title=\"django.forms.NumberInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">NumberInput</span></code></a> when <a class=\"reference internal\" href=\"#django.forms.Field.localize\" title=\"django.forms.Field.localize\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Field.localize</span></code></a> is\n<code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>, else <a class=\"reference internal\" href=\"../widgets/#django.forms.TextInput\" title=\"django.forms.TextInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TextInput</span></code></a>.</li>\n<li>Empty value: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code></li>\n<li>Normalizes to: A Python <code class=\"docutils literal notranslate\"><span class=\"pre\">decimal</span></code>.</li>\n<li>Validates that the given value is a decimal. Uses\n<a class=\"reference internal\" href=\"../../validators/#django.core.validators.MaxValueValidator\" title=\"django.core.validators.MaxValueValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MaxValueValidator</span></code></a> and\n<a class=\"reference internal\" href=\"../../validators/#django.core.validators.MinValueValidator\" title=\"django.core.validators.MinValueValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MinValueValidator</span></code></a> if <code class=\"docutils literal notranslate\"><span class=\"pre\">max_value</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">min_value</span></code> are provided. Uses\n<a class=\"reference internal\" href=\"../../validators/#django.core.validators.StepValueValidator\" title=\"django.core.validators.StepValueValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StepValueValidator</span></code></a> if <code class=\"docutils literal notranslate\"><span class=\"pre\">step_size</span></code> is\nprovided. Leading and trailing whitespace is ignored.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">max_value</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">min_value</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">max_digits</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">max_decimal_places</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">max_whole_digits</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">step_size</span></code>.</li>\n</ul>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">max_value</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">min_value</span></code> error messages may contain\n<code class=\"docutils literal notranslate\"><span class=\"pre\">%(limit_value)s</span></code>, which will be substituted by the appropriate limit.\nSimilarly, the <code class=\"docutils literal notranslate\"><span class=\"pre\">max_digits</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">max_decimal_places</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">max_whole_digits</span></code> error messages may contain <code class=\"docutils literal notranslate\"><span class=\"pre\">%(max)s</span></code>.</p>\n<p>Takes five optional arguments:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.DecimalField.max_value\">\n<code class=\"sig-name descname\"><span class=\"pre\">max_value</span></code><a class=\"headerlink\" href=\"#django.forms.DecimalField.max_value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.DecimalField.min_value\">\n<code class=\"sig-name descname\"><span class=\"pre\">min_value</span></code><a class=\"headerlink\" href=\"#django.forms.DecimalField.min_value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>These control the range of values permitted in the field, and should be\ngiven as <code class=\"docutils literal notranslate\"><span class=\"pre\">decimal.Decimal</span></code> values.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.DecimalField.max_digits\">\n<code class=\"sig-name descname\"><span class=\"pre\">max_digits</span></code><a class=\"headerlink\" href=\"#django.forms.DecimalField.max_digits\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The maximum number of digits (those before the decimal point plus those\nafter the decimal point, with leading zeros stripped) permitted in the\nvalue.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.DecimalField.decimal_places\">\n<code class=\"sig-name descname\"><span class=\"pre\">decimal_places</span></code><a class=\"headerlink\" href=\"#django.forms.DecimalField.decimal_places\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The maximum number of decimal places permitted.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.DecimalField.step_size\">\n<code class=\"sig-name descname\"><span class=\"pre\">step_size</span></code><a class=\"headerlink\" href=\"#django.forms.DecimalField.step_size\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Limit valid inputs to an integral multiple of <code class=\"docutils literal notranslate\"><span class=\"pre\">step_size</span></code>.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-durationfield\">\n<span id=\"durationfield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">DurationField</span></code><a class=\"headerlink\" href=\"#durationfield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.DurationField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">DurationField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#DurationField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.DurationField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.TextInput\" title=\"django.forms.TextInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TextInput</span></code></a></li>\n<li>Empty value: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code></li>\n<li>Normalizes to: A Python <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.timedelta\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">timedelta</span></code></a>.</li>\n<li>Validates that the given value is a string which can be converted into a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">timedelta</span></code>. The value must be between <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.timedelta.min\" title=\"(in Python v3.11)\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">datetime.timedelta.min</span></code></a>\nand <a class=\"reference external\" href=\"https://docs.python.org/3/library/datetime.html#datetime.timedelta.max\" title=\"(in Python v3.11)\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">datetime.timedelta.max</span></code></a>.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">overflow</span></code>.</li>\n</ul>\n<p>Accepts any format understood by\n<a class=\"reference internal\" href=\"../../utils/#django.utils.dateparse.parse_duration\" title=\"django.utils.dateparse.parse_duration\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">parse_duration()</span></code></a>.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-emailfield\">\n<span id=\"emailfield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">EmailField</span></code><a class=\"headerlink\" href=\"#emailfield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.EmailField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">EmailField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#EmailField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.EmailField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.EmailInput\" title=\"django.forms.EmailInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">EmailInput</span></code></a></li>\n<li>Empty value: Whatever you\u2019ve given as <code class=\"docutils literal notranslate\"><span class=\"pre\">empty_value</span></code>.</li>\n<li>Normalizes to: A string.</li>\n<li>Uses <a class=\"reference internal\" href=\"../../validators/#django.core.validators.EmailValidator\" title=\"django.core.validators.EmailValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">EmailValidator</span></code></a> to validate that\nthe given value is a valid email address, using a moderately complex\nregular expression.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid</span></code></li>\n</ul>\n<p>Has the optional arguments <code class=\"docutils literal notranslate\"><span class=\"pre\">max_length</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">min_length</span></code>, and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">empty_value</span></code> which work just as they do for <a class=\"reference internal\" href=\"#django.forms.CharField\" title=\"django.forms.CharField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CharField</span></code></a>.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-filefield\">\n<span id=\"filefield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">FileField</span></code><a class=\"headerlink\" href=\"#filefield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.FileField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">FileField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#FileField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.FileField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.ClearableFileInput\" title=\"django.forms.ClearableFileInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ClearableFileInput</span></code></a></li>\n<li>Empty value: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code></li>\n<li>Normalizes to: An <code class=\"docutils literal notranslate\"><span class=\"pre\">UploadedFile</span></code> object that wraps the file content\nand file name into a single object.</li>\n<li>Can validate that non-empty file data has been bound to the form.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">missing</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">empty</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">max_length</span></code></li>\n</ul>\n<p>Has the optional arguments for validation: <code class=\"docutils literal notranslate\"><span class=\"pre\">max_length</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">allow_empty_file</span></code>. If provided, these ensure that the file name is at\nmost the given length, and that validation will succeed even if the file\ncontent is empty.</p>\n<p>To learn more about the <code class=\"docutils literal notranslate\"><span class=\"pre\">UploadedFile</span></code> object, see the <a class=\"reference internal\" href=\"../../../topics/http/file-uploads/\"><span class=\"doc\">file uploads\ndocumentation</span></a>.</p>\n<p>When you use a <code class=\"docutils literal notranslate\"><span class=\"pre\">FileField</span></code> in a form, you must also remember to\n<a class=\"reference internal\" href=\"../api/#binding-uploaded-files\"><span class=\"std std-ref\">bind the file data to the form</span></a>.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">max_length</span></code> error refers to the length of the filename. In the error\nmessage for that key, <code class=\"docutils literal notranslate\"><span class=\"pre\">%(max)d</span></code> will be replaced with the maximum filename\nlength and <code class=\"docutils literal notranslate\"><span class=\"pre\">%(length)d</span></code> will be replaced with the current filename length.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-filepathfield\">\n<span id=\"filepathfield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">FilePathField</span></code><a class=\"headerlink\" href=\"#filepathfield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.FilePathField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">FilePathField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#FilePathField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.FilePathField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.Select\" title=\"django.forms.Select\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Select</span></code></a></li>\n<li>Empty value: <code class=\"docutils literal notranslate\"><span class=\"pre\">''</span></code> (an empty string)</li>\n<li>Normalizes to: A string.</li>\n<li>Validates that the selected choice exists in the list of choices.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid_choice</span></code></li>\n</ul>\n<p>The field allows choosing from files inside a certain directory. It takes five\nextra arguments; only <code class=\"docutils literal notranslate\"><span class=\"pre\">path</span></code> is required:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.FilePathField.path\">\n<code class=\"sig-name descname\"><span class=\"pre\">path</span></code><a class=\"headerlink\" href=\"#django.forms.FilePathField.path\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The absolute path to the directory whose contents you want listed. This\ndirectory must exist.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.FilePathField.recursive\">\n<code class=\"sig-name descname\"><span class=\"pre\">recursive</span></code><a class=\"headerlink\" href=\"#django.forms.FilePathField.recursive\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> (the default) only the direct contents of <code class=\"docutils literal notranslate\"><span class=\"pre\">path</span></code> will be\noffered as choices. If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, the directory will be descended into\nrecursively and all descendants will be listed as choices.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.FilePathField.match\">\n<code class=\"sig-name descname\"><span class=\"pre\">match</span></code><a class=\"headerlink\" href=\"#django.forms.FilePathField.match\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A regular expression pattern; only files with names matching this expression\nwill be allowed as choices.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.FilePathField.allow_files\">\n<code class=\"sig-name descname\"><span class=\"pre\">allow_files</span></code><a class=\"headerlink\" href=\"#django.forms.FilePathField.allow_files\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Optional.  Either <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.  Default is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.  Specifies\nwhether files in the specified location should be included.  Either this or\n<a class=\"reference internal\" href=\"#django.forms.FilePathField.allow_folders\" title=\"django.forms.FilePathField.allow_folders\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">allow_folders</span></code></a> must be <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.FilePathField.allow_folders\">\n<code class=\"sig-name descname\"><span class=\"pre\">allow_folders</span></code><a class=\"headerlink\" href=\"#django.forms.FilePathField.allow_folders\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Optional.  Either <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.  Default is <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.  Specifies\nwhether folders in the specified location should be included.  Either this or\n<a class=\"reference internal\" href=\"#django.forms.FilePathField.allow_files\" title=\"django.forms.FilePathField.allow_files\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">allow_files</span></code></a> must be <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-floatfield\">\n<span id=\"floatfield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">FloatField</span></code><a class=\"headerlink\" href=\"#floatfield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.FloatField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">FloatField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#FloatField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.FloatField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.NumberInput\" title=\"django.forms.NumberInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">NumberInput</span></code></a> when <a class=\"reference internal\" href=\"#django.forms.Field.localize\" title=\"django.forms.Field.localize\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Field.localize</span></code></a> is\n<code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>, else <a class=\"reference internal\" href=\"../widgets/#django.forms.TextInput\" title=\"django.forms.TextInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TextInput</span></code></a>.</li>\n<li>Empty value: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code></li>\n<li>Normalizes to: A Python float.</li>\n<li>Validates that the given value is a float. Uses\n<a class=\"reference internal\" href=\"../../validators/#django.core.validators.MaxValueValidator\" title=\"django.core.validators.MaxValueValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MaxValueValidator</span></code></a> and\n<a class=\"reference internal\" href=\"../../validators/#django.core.validators.MinValueValidator\" title=\"django.core.validators.MinValueValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MinValueValidator</span></code></a> if <code class=\"docutils literal notranslate\"><span class=\"pre\">max_value</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">min_value</span></code> are provided. Uses\n<a class=\"reference internal\" href=\"../../validators/#django.core.validators.StepValueValidator\" title=\"django.core.validators.StepValueValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StepValueValidator</span></code></a> if <code class=\"docutils literal notranslate\"><span class=\"pre\">step_size</span></code> is\nprovided. Leading and trailing whitespace is allowed, as in Python\u2019s\n<code class=\"docutils literal notranslate\"><span class=\"pre\">float()</span></code> function.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">max_value</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">min_value</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">step_size</span></code>.</li>\n</ul>\n<p>Takes three optional arguments:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.FloatField.max_value\">\n<code class=\"sig-name descname\"><span class=\"pre\">max_value</span></code><a class=\"headerlink\" href=\"#django.forms.FloatField.max_value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.FloatField.min_value\">\n<code class=\"sig-name descname\"><span class=\"pre\">min_value</span></code><a class=\"headerlink\" href=\"#django.forms.FloatField.min_value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>These control the range of values permitted in the field.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.FloatField.step_size\">\n<code class=\"sig-name descname\"><span class=\"pre\">step_size</span></code><a class=\"headerlink\" href=\"#django.forms.FloatField.step_size\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Limit valid inputs to an integral multiple of <code class=\"docutils literal notranslate\"><span class=\"pre\">step_size</span></code>.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-genericipaddressfield\">\n<span id=\"genericipaddressfield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">GenericIPAddressField</span></code><a class=\"headerlink\" href=\"#genericipaddressfield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.GenericIPAddressField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">GenericIPAddressField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#GenericIPAddressField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.GenericIPAddressField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A field containing either an IPv4 or an IPv6 address.</p>\n<ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.TextInput\" title=\"django.forms.TextInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TextInput</span></code></a></li>\n<li>Empty value: <code class=\"docutils literal notranslate\"><span class=\"pre\">''</span></code> (an empty string)</li>\n<li>Normalizes to: A string. IPv6 addresses are normalized as described below.</li>\n<li>Validates that the given value is a valid IP address.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid</span></code></li>\n</ul>\n<p>The IPv6 address normalization follows <span class=\"target\" id=\"index-0\"></span><a class=\"rfc reference external\" href=\"https://datatracker.ietf.org/doc/html/rfc4291.html#section-2.2\"><strong>RFC 4291#section-2.2</strong></a> section 2.2,\nincluding using the IPv4 format suggested in paragraph 3 of that section, like\n<code class=\"docutils literal notranslate\"><span class=\"pre\">::ffff:192.0.2.0</span></code>. For example, <code class=\"docutils literal notranslate\"><span class=\"pre\">2001:0::0:01</span></code> would be normalized to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">2001::1</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">::ffff:0a0a:0a0a</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">::ffff:10.10.10.10</span></code>. All characters\nare converted to lowercase.</p>\n<p>Takes two optional arguments:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.GenericIPAddressField.protocol\">\n<code class=\"sig-name descname\"><span class=\"pre\">protocol</span></code><a class=\"headerlink\" href=\"#django.forms.GenericIPAddressField.protocol\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Limits valid inputs to the specified protocol.\nAccepted values are <code class=\"docutils literal notranslate\"><span class=\"pre\">both</span></code> (default), <code class=\"docutils literal notranslate\"><span class=\"pre\">IPv4</span></code>\nor <code class=\"docutils literal notranslate\"><span class=\"pre\">IPv6</span></code>. Matching is case insensitive.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.GenericIPAddressField.unpack_ipv4\">\n<code class=\"sig-name descname\"><span class=\"pre\">unpack_ipv4</span></code><a class=\"headerlink\" href=\"#django.forms.GenericIPAddressField.unpack_ipv4\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Unpacks IPv4 mapped addresses like <code class=\"docutils literal notranslate\"><span class=\"pre\">::ffff:192.0.2.1</span></code>.\nIf this option is enabled that address would be unpacked to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">192.0.2.1</span></code>. Default is disabled. Can only be used\nwhen <code class=\"docutils literal notranslate\"><span class=\"pre\">protocol</span></code> is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">'both'</span></code>.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-imagefield\">\n<span id=\"imagefield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">ImageField</span></code><a class=\"headerlink\" href=\"#imagefield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ImageField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ImageField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#ImageField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.ImageField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.ClearableFileInput\" title=\"django.forms.ClearableFileInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ClearableFileInput</span></code></a></li>\n<li>Empty value: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code></li>\n<li>Normalizes to: An <code class=\"docutils literal notranslate\"><span class=\"pre\">UploadedFile</span></code> object that wraps the file content\nand file name into a single object.</li>\n<li>Validates that file data has been bound to the form. Also uses\n<a class=\"reference internal\" href=\"../../validators/#django.core.validators.FileExtensionValidator\" title=\"django.core.validators.FileExtensionValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FileExtensionValidator</span></code></a> to validate that\nthe file extension is supported by Pillow.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">missing</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">empty</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">invalid_image</span></code></li>\n</ul>\n<p>Using an <code class=\"docutils literal notranslate\"><span class=\"pre\">ImageField</span></code> requires that <a class=\"reference external\" href=\"https://pillow.readthedocs.io/en/latest/\">Pillow</a> is installed with support\nfor the image formats you use. If you encounter a <code class=\"docutils literal notranslate\"><span class=\"pre\">corrupt</span> <span class=\"pre\">image</span></code> error\nwhen you upload an image, it usually means that Pillow doesn\u2019t understand\nits format. To fix this, install the appropriate library and reinstall\nPillow.</p>\n<p>When you use an <code class=\"docutils literal notranslate\"><span class=\"pre\">ImageField</span></code> on a form, you must also remember to\n<a class=\"reference internal\" href=\"../api/#binding-uploaded-files\"><span class=\"std std-ref\">bind the file data to the form</span></a>.</p>\n<p>After the field has been cleaned and validated, the <code class=\"docutils literal notranslate\"><span class=\"pre\">UploadedFile</span></code>\nobject will have an additional <code class=\"docutils literal notranslate\"><span class=\"pre\">image</span></code> attribute containing the Pillow\n<a class=\"reference external\" href=\"https://pillow.readthedocs.io/en/latest/reference/Image.html\">Image</a> instance used to check if the file was a valid image. Pillow\ncloses the underlying file descriptor after verifying an image, so while\nnon-image data attributes, such as <code class=\"docutils literal notranslate\"><span class=\"pre\">format</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">height</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">width</span></code>,\nare available, methods that access the underlying image data, such as\n<code class=\"docutils literal notranslate\"><span class=\"pre\">getdata()</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">getpixel()</span></code>, cannot be used without reopening the file.\nFor example:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">PIL</span> <span class=\"kn\">import</span> <span class=\"n\">Image</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.core.files.uploadedfile</span> <span class=\"kn\">import</span> <span class=\"n\">SimpleUploadedFile</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">ImageForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">ImageField</span><span class=\"p\">()</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">file_data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;img&quot;</span><span class=\"p\">:</span> <span class=\"n\">SimpleUploadedFile</span><span class=\"p\">(</span><span class=\"s2\">&quot;test.png&quot;</span><span class=\"p\">,</span> <span class=\"sa\">b</span><span class=\"s2\">&quot;file data&quot;</span><span class=\"p\">)}</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">ImageForm</span><span class=\"p\">({},</span> <span class=\"n\">file_data</span><span class=\"p\">)</span>\n<span class=\"go\"># Pillow closes the underlying file descriptor.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">is_valid</span><span class=\"p\">()</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">image_field</span> <span class=\"o\">=</span> <span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">cleaned_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;img&quot;</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">image_field</span><span class=\"o\">.</span><span class=\"n\">image</span>\n<span class=\"go\">&lt;PIL.PngImagePlugin.PngImageFile image mode=RGBA size=191x287 at 0x7F5985045C18&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">image_field</span><span class=\"o\">.</span><span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">width</span>\n<span class=\"go\">191</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">image_field</span><span class=\"o\">.</span><span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">height</span>\n<span class=\"go\">287</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">image_field</span><span class=\"o\">.</span><span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">format</span>\n<span class=\"go\">&#39;PNG&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">image_field</span><span class=\"o\">.</span><span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">getdata</span><span class=\"p\">()</span>\n<span class=\"go\"># Raises AttributeError: &#39;NoneType&#39; object has no attribute &#39;seek&#39;.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">image_field</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">getdata</span><span class=\"p\">()</span>\n<span class=\"go\">&lt;ImagingCore object at 0x7f5984f874b0&gt;</span>\n</pre></div>\n</div>\n<p>Additionally, <code class=\"docutils literal notranslate\"><span class=\"pre\">UploadedFile.content_type</span></code> will be updated with the\nimage\u2019s content type if Pillow can determine it, otherwise it will be set\nto <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-integerfield\">\n<span id=\"integerfield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">IntegerField</span></code><a class=\"headerlink\" href=\"#integerfield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.IntegerField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">IntegerField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#IntegerField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.IntegerField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.NumberInput\" title=\"django.forms.NumberInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">NumberInput</span></code></a> when <a class=\"reference internal\" href=\"#django.forms.Field.localize\" title=\"django.forms.Field.localize\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Field.localize</span></code></a> is\n<code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>, else <a class=\"reference internal\" href=\"../widgets/#django.forms.TextInput\" title=\"django.forms.TextInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TextInput</span></code></a>.</li>\n<li>Empty value: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code></li>\n<li>Normalizes to: A Python integer.</li>\n<li>Validates that the given value is an integer. Uses\n<a class=\"reference internal\" href=\"../../validators/#django.core.validators.MaxValueValidator\" title=\"django.core.validators.MaxValueValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MaxValueValidator</span></code></a> and\n<a class=\"reference internal\" href=\"../../validators/#django.core.validators.MinValueValidator\" title=\"django.core.validators.MinValueValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MinValueValidator</span></code></a> if <code class=\"docutils literal notranslate\"><span class=\"pre\">max_value</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">min_value</span></code> are provided. Uses\n<a class=\"reference internal\" href=\"../../validators/#django.core.validators.StepValueValidator\" title=\"django.core.validators.StepValueValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StepValueValidator</span></code></a> if <code class=\"docutils literal notranslate\"><span class=\"pre\">step_size</span></code> is\nprovided. Leading and trailing whitespace is allowed, as in Python\u2019s\n<code class=\"docutils literal notranslate\"><span class=\"pre\">int()</span></code> function.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">max_value</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">min_value</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">step_size</span></code></li>\n</ul>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">max_value</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">min_value</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">step_size</span></code> error messages may\ncontain <code class=\"docutils literal notranslate\"><span class=\"pre\">%(limit_value)s</span></code>, which will be substituted by the appropriate\nlimit.</p>\n<p>Takes three optional arguments for validation:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.IntegerField.max_value\">\n<code class=\"sig-name descname\"><span class=\"pre\">max_value</span></code><a class=\"headerlink\" href=\"#django.forms.IntegerField.max_value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.IntegerField.min_value\">\n<code class=\"sig-name descname\"><span class=\"pre\">min_value</span></code><a class=\"headerlink\" href=\"#django.forms.IntegerField.min_value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>These control the range of values permitted in the field.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.IntegerField.step_size\">\n<code class=\"sig-name descname\"><span class=\"pre\">step_size</span></code><a class=\"headerlink\" href=\"#django.forms.IntegerField.step_size\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Limit valid inputs to an integral multiple of <code class=\"docutils literal notranslate\"><span class=\"pre\">step_size</span></code>.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-jsonfield\">\n<span id=\"jsonfield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">JSONField</span></code><a class=\"headerlink\" href=\"#jsonfield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.JSONField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">JSONField</span></code>(<em><span class=\"n\"><span class=\"pre\">encoder</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">decoder</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#JSONField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.JSONField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A field which accepts JSON encoded data for a\n<a class=\"reference internal\" href=\"../../models/fields/#django.db.models.JSONField\" title=\"django.db.models.JSONField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">JSONField</span></code></a>.</p>\n<ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.Textarea\" title=\"django.forms.Textarea\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Textarea</span></code></a></li>\n<li>Empty value: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code></li>\n<li>Normalizes to: A Python representation of the JSON value (usually as a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dict</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code>, or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>), depending on <a class=\"reference internal\" href=\"#django.forms.JSONField.decoder\" title=\"django.forms.JSONField.decoder\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">JSONField.decoder</span></code></a>.</li>\n<li>Validates that the given value is a valid JSON.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid</span></code></li>\n</ul>\n<p>Takes two optional arguments:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.JSONField.encoder\">\n<code class=\"sig-name descname\"><span class=\"pre\">encoder</span></code><a class=\"headerlink\" href=\"#django.forms.JSONField.encoder\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A <a class=\"reference external\" href=\"https://docs.python.org/3/library/json.html#json.JSONEncoder\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">json.JSONEncoder</span></code></a> subclass to serialize data types not\nsupported by the standard JSON serializer (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">datetime.datetime</span></code>\nor <a class=\"reference external\" href=\"https://docs.python.org/3/library/uuid.html#uuid.UUID\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">UUID</span></code></a>). For example, you can use the\n<a class=\"reference internal\" href=\"../../../topics/serialization/#django.core.serializers.json.DjangoJSONEncoder\" title=\"django.core.serializers.json.DjangoJSONEncoder\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DjangoJSONEncoder</span></code></a> class.</p>\n<p>Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">json.JSONEncoder</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.JSONField.decoder\">\n<code class=\"sig-name descname\"><span class=\"pre\">decoder</span></code><a class=\"headerlink\" href=\"#django.forms.JSONField.decoder\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A <a class=\"reference external\" href=\"https://docs.python.org/3/library/json.html#json.JSONDecoder\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">json.JSONDecoder</span></code></a> subclass to deserialize the input. Your\ndeserialization may need to account for the fact that you can\u2019t be\ncertain of the input type. For example, you run the risk of returning a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">datetime</span></code> that was actually a string that just happened to be in the\nsame format chosen for <code class=\"docutils literal notranslate\"><span class=\"pre\">datetime</span></code>s.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">decoder</span></code> can be used to validate the input. If\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/json.html#json.JSONDecodeError\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">json.JSONDecodeError</span></code></a> is raised during the deserialization,\na <code class=\"docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code> will be raised.</p>\n<p>Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">json.JSONDecoder</span></code>.</p>\n</dd></dl>\n\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">If you use a <a class=\"reference internal\" href=\"../../../topics/forms/modelforms/#django.forms.ModelForm\" title=\"django.forms.ModelForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelForm</span></code></a>, the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">encoder</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">decoder</span></code> from <a class=\"reference internal\" href=\"../../models/fields/#django.db.models.JSONField\" title=\"django.db.models.JSONField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">JSONField</span></code></a>\nwill be used.</p>\n</div>\n<div class=\"admonition-user-friendly-forms admonition\">\n<p class=\"first admonition-title\">User friendly forms</p>\n<p class=\"last\"><code class=\"docutils literal notranslate\"><span class=\"pre\">JSONField</span></code> is not particularly user friendly in most cases. However,\nit is a useful way to format data from a client-side widget for\nsubmission to the server.</p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-multiplechoicefield\">\n<span id=\"multiplechoicefield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">MultipleChoiceField</span></code><a class=\"headerlink\" href=\"#multiplechoicefield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.MultipleChoiceField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">MultipleChoiceField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#MultipleChoiceField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.MultipleChoiceField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.SelectMultiple\" title=\"django.forms.SelectMultiple\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SelectMultiple</span></code></a></li>\n<li>Empty value: <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code> (an empty list)</li>\n<li>Normalizes to: A list of strings.</li>\n<li>Validates that every value in the given list of values exists in the list\nof choices.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid_choice</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid_list</span></code></li>\n</ul>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid_choice</span></code> error message may contain <code class=\"docutils literal notranslate\"><span class=\"pre\">%(value)s</span></code>, which will be\nreplaced with the selected choice.</p>\n<p>Takes one extra required argument, <code class=\"docutils literal notranslate\"><span class=\"pre\">choices</span></code>, as for <a class=\"reference internal\" href=\"#django.forms.ChoiceField\" title=\"django.forms.ChoiceField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ChoiceField</span></code></a>.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-nullbooleanfield\">\n<span id=\"nullbooleanfield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">NullBooleanField</span></code><a class=\"headerlink\" href=\"#nullbooleanfield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.NullBooleanField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">NullBooleanField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#NullBooleanField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.NullBooleanField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.NullBooleanSelect\" title=\"django.forms.NullBooleanSelect\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">NullBooleanSelect</span></code></a></li>\n<li>Empty value: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code></li>\n<li>Normalizes to: A Python <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> value.</li>\n<li>Validates nothing (i.e., it never raises a <code class=\"docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code>).</li>\n</ul>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">NullBooleanField</span></code> may be used with widgets such as\n<a class=\"reference internal\" href=\"../widgets/#django.forms.Select\" title=\"django.forms.Select\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Select</span></code></a> or <a class=\"reference internal\" href=\"../widgets/#django.forms.RadioSelect\" title=\"django.forms.RadioSelect\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RadioSelect</span></code></a>\nby providing the widget <code class=\"docutils literal notranslate\"><span class=\"pre\">choices</span></code>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">NullBooleanField</span><span class=\"p\">(</span>\n    <span class=\"n\">widget</span><span class=\"o\">=</span><span class=\"n\">Select</span><span class=\"p\">(</span>\n        <span class=\"n\">choices</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Unknown&quot;</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Yes&quot;</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s2\">&quot;No&quot;</span><span class=\"p\">),</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-regexfield\">\n<span id=\"regexfield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">RegexField</span></code><a class=\"headerlink\" href=\"#regexfield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.RegexField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">RegexField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#RegexField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.RegexField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.TextInput\" title=\"django.forms.TextInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TextInput</span></code></a></li>\n<li>Empty value: Whatever you\u2019ve given as <code class=\"docutils literal notranslate\"><span class=\"pre\">empty_value</span></code>.</li>\n<li>Normalizes to: A string.</li>\n<li>Uses <a class=\"reference internal\" href=\"../../validators/#django.core.validators.RegexValidator\" title=\"django.core.validators.RegexValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RegexValidator</span></code></a> to validate that\nthe given value matches a certain regular expression.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid</span></code></li>\n</ul>\n<p>Takes one required argument:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.RegexField.regex\">\n<code class=\"sig-name descname\"><span class=\"pre\">regex</span></code><a class=\"headerlink\" href=\"#django.forms.RegexField.regex\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A regular expression specified either as a string or a compiled regular\nexpression object.</p>\n</dd></dl>\n\n<p>Also takes <code class=\"docutils literal notranslate\"><span class=\"pre\">max_length</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">min_length</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">strip</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">empty_value</span></code>\nwhich work just as they do for <a class=\"reference internal\" href=\"#django.forms.CharField\" title=\"django.forms.CharField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CharField</span></code></a>.</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.RegexField.strip\">\n<code class=\"sig-name descname\"><span class=\"pre\">strip</span></code><a class=\"headerlink\" href=\"#django.forms.RegexField.strip\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>. If enabled, stripping will be applied before the\nregex validation.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-slugfield\">\n<span id=\"slugfield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">SlugField</span></code><a class=\"headerlink\" href=\"#slugfield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.SlugField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">SlugField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#SlugField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.SlugField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.TextInput\" title=\"django.forms.TextInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TextInput</span></code></a></li>\n<li>Empty value: Whatever you\u2019ve given as <a class=\"reference internal\" href=\"#django.forms.SlugField.empty_value\" title=\"django.forms.SlugField.empty_value\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">empty_value</span></code></a>.</li>\n<li>Normalizes to: A string.</li>\n<li>Uses <a class=\"reference internal\" href=\"../../validators/#django.core.validators.validate_slug\" title=\"django.core.validators.validate_slug\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">validate_slug</span></code></a> or\n<a class=\"reference internal\" href=\"../../validators/#django.core.validators.validate_unicode_slug\" title=\"django.core.validators.validate_unicode_slug\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">validate_unicode_slug</span></code></a> to validate that\nthe given value contains only letters, numbers, underscores, and hyphens.</li>\n<li>Error messages: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid</span></code></li>\n</ul>\n<p>This field is intended for use in representing a model\n<a class=\"reference internal\" href=\"../../models/fields/#django.db.models.SlugField\" title=\"django.db.models.SlugField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SlugField</span></code></a> in forms.</p>\n<p>Takes two optional parameters:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.SlugField.allow_unicode\">\n<code class=\"sig-name descname\"><span class=\"pre\">allow_unicode</span></code><a class=\"headerlink\" href=\"#django.forms.SlugField.allow_unicode\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A boolean instructing the field to accept Unicode letters in addition\nto ASCII letters. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.SlugField.empty_value\">\n<code class=\"sig-name descname\"><span class=\"pre\">empty_value</span></code><a class=\"headerlink\" href=\"#django.forms.SlugField.empty_value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The value to use to represent \u201cempty\u201d. Defaults to an empty string.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-timefield\">\n<span id=\"timefield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">TimeField</span></code><a class=\"headerlink\" href=\"#timefield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.TimeField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">TimeField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#TimeField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.TimeField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.TimeInput\" title=\"django.forms.TimeInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TimeInput</span></code></a></li>\n<li>Empty value: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code></li>\n<li>Normalizes to: A Python <code class=\"docutils literal notranslate\"><span class=\"pre\">datetime.time</span></code> object.</li>\n<li>Validates that the given value is either a <code class=\"docutils literal notranslate\"><span class=\"pre\">datetime.time</span></code> or string\nformatted in a particular time format.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid</span></code></li>\n</ul>\n<p>Takes one optional argument:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.TimeField.input_formats\">\n<code class=\"sig-name descname\"><span class=\"pre\">input_formats</span></code><a class=\"headerlink\" href=\"#django.forms.TimeField.input_formats\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An iterable of formats used to attempt to convert a string to a valid\n<code class=\"docutils literal notranslate\"><span class=\"pre\">datetime.time</span></code> object.</p>\n</dd></dl>\n\n<p>If no <code class=\"docutils literal notranslate\"><span class=\"pre\">input_formats</span></code> argument is provided, the default input formats are\ntaken from the active locale format <code class=\"docutils literal notranslate\"><span class=\"pre\">TIME_INPUT_FORMATS</span></code> key, or from\n<a class=\"reference internal\" href=\"../../settings/#std-setting-TIME_INPUT_FORMATS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">TIME_INPUT_FORMATS</span></code></a> if localization is disabled. See also\n<a class=\"reference internal\" href=\"../../../topics/i18n/formatting/\"><span class=\"doc\">format localization</span></a>.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-typedchoicefield\">\n<span id=\"typedchoicefield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">TypedChoiceField</span></code><a class=\"headerlink\" href=\"#typedchoicefield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.TypedChoiceField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">TypedChoiceField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#TypedChoiceField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.TypedChoiceField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Just like a <a class=\"reference internal\" href=\"#django.forms.ChoiceField\" title=\"django.forms.ChoiceField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ChoiceField</span></code></a>, except <a class=\"reference internal\" href=\"#django.forms.TypedChoiceField\" title=\"django.forms.TypedChoiceField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TypedChoiceField</span></code></a> takes two\nextra arguments, <a class=\"reference internal\" href=\"#django.forms.TypedChoiceField.coerce\" title=\"django.forms.TypedChoiceField.coerce\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">coerce</span></code></a> and <a class=\"reference internal\" href=\"#django.forms.TypedChoiceField.empty_value\" title=\"django.forms.TypedChoiceField.empty_value\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">empty_value</span></code></a>.</p>\n<ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.Select\" title=\"django.forms.Select\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Select</span></code></a></li>\n<li>Empty value: Whatever you\u2019ve given as <a class=\"reference internal\" href=\"#django.forms.TypedChoiceField.empty_value\" title=\"django.forms.TypedChoiceField.empty_value\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">empty_value</span></code></a>.</li>\n<li>Normalizes to: A value of the type provided by the <a class=\"reference internal\" href=\"#django.forms.TypedChoiceField.coerce\" title=\"django.forms.TypedChoiceField.coerce\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">coerce</span></code></a>\nargument.</li>\n<li>Validates that the given value exists in the list of choices and can be\ncoerced.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid_choice</span></code></li>\n</ul>\n<p>Takes extra arguments:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.TypedChoiceField.coerce\">\n<code class=\"sig-name descname\"><span class=\"pre\">coerce</span></code><a class=\"headerlink\" href=\"#django.forms.TypedChoiceField.coerce\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A function that takes one argument and returns a coerced value. Examples\ninclude the built-in <code class=\"docutils literal notranslate\"><span class=\"pre\">int</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">float</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code> and other types. Defaults\nto an identity function. Note that coercion happens after input\nvalidation, so it is possible to coerce to a value not present in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">choices</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.TypedChoiceField.empty_value\">\n<code class=\"sig-name descname\"><span class=\"pre\">empty_value</span></code><a class=\"headerlink\" href=\"#django.forms.TypedChoiceField.empty_value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The value to use to represent \u201cempty.\u201d Defaults to the empty string;\n<code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> is another common choice here. Note that this value will not be\ncoerced by the function given in the <code class=\"docutils literal notranslate\"><span class=\"pre\">coerce</span></code> argument, so choose it\naccordingly.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-typedmultiplechoicefield\">\n<span id=\"typedmultiplechoicefield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">TypedMultipleChoiceField</span></code><a class=\"headerlink\" href=\"#typedmultiplechoicefield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.TypedMultipleChoiceField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">TypedMultipleChoiceField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#TypedMultipleChoiceField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.TypedMultipleChoiceField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Just like a <a class=\"reference internal\" href=\"#django.forms.MultipleChoiceField\" title=\"django.forms.MultipleChoiceField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MultipleChoiceField</span></code></a>, except <a class=\"reference internal\" href=\"#django.forms.TypedMultipleChoiceField\" title=\"django.forms.TypedMultipleChoiceField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TypedMultipleChoiceField</span></code></a>\ntakes two extra arguments, <code class=\"docutils literal notranslate\"><span class=\"pre\">coerce</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">empty_value</span></code>.</p>\n<ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.SelectMultiple\" title=\"django.forms.SelectMultiple\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SelectMultiple</span></code></a></li>\n<li>Empty value: Whatever you\u2019ve given as <code class=\"docutils literal notranslate\"><span class=\"pre\">empty_value</span></code></li>\n<li>Normalizes to: A list of values of the type provided by the <code class=\"docutils literal notranslate\"><span class=\"pre\">coerce</span></code>\nargument.</li>\n<li>Validates that the given values exists in the list of choices and can be\ncoerced.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid_choice</span></code></li>\n</ul>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid_choice</span></code> error message may contain <code class=\"docutils literal notranslate\"><span class=\"pre\">%(value)s</span></code>, which will be\nreplaced with the selected choice.</p>\n<p>Takes two extra arguments, <code class=\"docutils literal notranslate\"><span class=\"pre\">coerce</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">empty_value</span></code>, as for\n<a class=\"reference internal\" href=\"#django.forms.TypedChoiceField\" title=\"django.forms.TypedChoiceField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TypedChoiceField</span></code></a>.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-urlfield\">\n<span id=\"urlfield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">URLField</span></code><a class=\"headerlink\" href=\"#urlfield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.URLField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">URLField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#URLField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.URLField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.URLInput\" title=\"django.forms.URLInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">URLInput</span></code></a></li>\n<li>Empty value: Whatever you\u2019ve given as <code class=\"docutils literal notranslate\"><span class=\"pre\">empty_value</span></code>.</li>\n<li>Normalizes to: A string.</li>\n<li>Uses <a class=\"reference internal\" href=\"../../validators/#django.core.validators.URLValidator\" title=\"django.core.validators.URLValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">URLValidator</span></code></a> to validate that the\ngiven value is a valid URL.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid</span></code></li>\n</ul>\n<p>Has the optional arguments <code class=\"docutils literal notranslate\"><span class=\"pre\">max_length</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">min_length</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">empty_value</span></code>\nwhich work just as they do for <a class=\"reference internal\" href=\"#django.forms.CharField\" title=\"django.forms.CharField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">CharField</span></code></a>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">assume_scheme</span></code>\nthat defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;http&quot;</span></code>.</p>\n<div class=\"versionchanged\">\n<span class=\"title\">Changed in Django Development version:</span> <p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">assume_scheme</span></code> argument was added.</p>\n</div>\n<div class=\"deprecated\">\n<p><span class=\"versionmodified deprecated\">Deprecated since version 5.0: </span>The default value for <code class=\"docutils literal notranslate\"><span class=\"pre\">assume_scheme</span></code> will change from <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;http&quot;</span></code> to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;https&quot;</span></code> in Django 6.0.</p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-uuidfield\">\n<span id=\"uuidfield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">UUIDField</span></code><a class=\"headerlink\" href=\"#uuidfield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.UUIDField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">UUIDField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#UUIDField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.UUIDField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.TextInput\" title=\"django.forms.TextInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TextInput</span></code></a></li>\n<li>Empty value: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code></li>\n<li>Normalizes to: A <a class=\"reference external\" href=\"https://docs.python.org/3/library/uuid.html#uuid.UUID\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">UUID</span></code></a> object.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid</span></code></li>\n</ul>\n<p>This field will accept any string format accepted as the <code class=\"docutils literal notranslate\"><span class=\"pre\">hex</span></code> argument\nto the <a class=\"reference external\" href=\"https://docs.python.org/3/library/uuid.html#uuid.UUID\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">UUID</span></code></a> constructor.</p>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"s-slightly-complex-built-in-field-classes\">\n<span id=\"slightly-complex-built-in-field-classes\"></span><h2>Slightly complex built-in <code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> classes<a class=\"headerlink\" href=\"#slightly-complex-built-in-field-classes\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-combofield\">\n<span id=\"combofield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">ComboField</span></code><a class=\"headerlink\" href=\"#combofield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ComboField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ComboField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#ComboField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.ComboField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.TextInput\" title=\"django.forms.TextInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TextInput</span></code></a></li>\n<li>Empty value: <code class=\"docutils literal notranslate\"><span class=\"pre\">''</span></code> (an empty string)</li>\n<li>Normalizes to: A string.</li>\n<li>Validates the given value against each of the fields specified\nas an argument to the <code class=\"docutils literal notranslate\"><span class=\"pre\">ComboField</span></code>.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid</span></code></li>\n</ul>\n<p>Takes one extra required argument:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ComboField.fields\">\n<code class=\"sig-name descname\"><span class=\"pre\">fields</span></code><a class=\"headerlink\" href=\"#django.forms.ComboField.fields\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The list of fields that should be used to validate the field\u2019s value (in\nthe order in which they are provided).</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.forms</span> <span class=\"kn\">import</span> <span class=\"n\">ComboField</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">ComboField</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">),</span> <span class=\"n\">EmailField</span><span class=\"p\">()])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">(</span><span class=\"s1\">&#39;test@example.com&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;test@example.com&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">(</span><span class=\"s1\">&#39;longemailaddress@example.com&#39;</span><span class=\"p\">)</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n<span class=\"c\">...</span>\n<span class=\"gr\">ValidationError</span>: <span class=\"n\">[&#39;Ensure this value has at most 20 characters (it has 28).&#39;]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-multivaluefield\">\n<span id=\"multivaluefield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">MultiValueField</span></code><a class=\"headerlink\" href=\"#multivaluefield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.MultiValueField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">MultiValueField</span></code>(<em><span class=\"n\"><span class=\"pre\">fields</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#MultiValueField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.MultiValueField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.TextInput\" title=\"django.forms.TextInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TextInput</span></code></a></li>\n<li>Empty value: <code class=\"docutils literal notranslate\"><span class=\"pre\">''</span></code> (an empty string)</li>\n<li>Normalizes to: the type returned by the <code class=\"docutils literal notranslate\"><span class=\"pre\">compress</span></code> method of the subclass.</li>\n<li>Validates the given value against each of the fields specified\nas an argument to the <code class=\"docutils literal notranslate\"><span class=\"pre\">MultiValueField</span></code>.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">incomplete</span></code></li>\n</ul>\n<p>Aggregates the logic of multiple fields that together produce a single\nvalue.</p>\n<p>This field is abstract and must be subclassed. In contrast with the\nsingle-value fields, subclasses of <a class=\"reference internal\" href=\"#django.forms.MultiValueField\" title=\"django.forms.MultiValueField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MultiValueField</span></code></a> must not\nimplement <a class=\"reference internal\" href=\"#django.forms.Field.clean\" title=\"django.forms.Field.clean\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">clean()</span></code></a> but instead - implement\n<a class=\"reference internal\" href=\"#django.forms.MultiValueField.compress\" title=\"django.forms.MultiValueField.compress\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">compress()</span></code></a>.</p>\n<p>Takes one extra required argument:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.MultiValueField.fields\">\n<code class=\"sig-name descname\"><span class=\"pre\">fields</span></code><a class=\"headerlink\" href=\"#django.forms.MultiValueField.fields\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A tuple of fields whose values are cleaned and subsequently combined\ninto a single value.  Each value of the field is cleaned by the\ncorresponding field in <code class=\"docutils literal notranslate\"><span class=\"pre\">fields</span></code> \u2013 the first value is cleaned by the\nfirst field, the second value is cleaned by the second field, etc.\nOnce all fields are cleaned, the list of clean values is combined into\na single value by <a class=\"reference internal\" href=\"#django.forms.MultiValueField.compress\" title=\"django.forms.MultiValueField.compress\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">compress()</span></code></a>.</p>\n</dd></dl>\n\n<p>Also takes some optional arguments:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.MultiValueField.require_all_fields\">\n<code class=\"sig-name descname\"><span class=\"pre\">require_all_fields</span></code><a class=\"headerlink\" href=\"#django.forms.MultiValueField.require_all_fields\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, in which case a <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code> validation error\nwill be raised if no value is supplied for any field.</p>\n<p>When set to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>, the <a class=\"reference internal\" href=\"#django.forms.Field.required\" title=\"django.forms.Field.required\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">Field.required</span></code></a> attribute can be set\nto <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> for individual fields to make them optional. If no value\nis supplied for a required field, an <code class=\"docutils literal notranslate\"><span class=\"pre\">incomplete</span></code> validation error\nwill be raised.</p>\n<p>A default <code class=\"docutils literal notranslate\"><span class=\"pre\">incomplete</span></code> error message can be defined on the\n<a class=\"reference internal\" href=\"#django.forms.MultiValueField\" title=\"django.forms.MultiValueField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MultiValueField</span></code></a> subclass, or different messages can be defined\non each individual field. For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.core.validators</span> <span class=\"kn\">import</span> <span class=\"n\">RegexValidator</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PhoneField</span><span class=\"p\">(</span><span class=\"n\">MultiValueField</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Define one message for all fields.</span>\n        <span class=\"n\">error_messages</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;incomplete&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Enter a country calling code and a phone number.&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n        <span class=\"c1\"># Or define a different message for each field.</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"n\">CharField</span><span class=\"p\">(</span>\n                <span class=\"n\">error_messages</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;incomplete&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Enter a country calling code.&quot;</span><span class=\"p\">},</span>\n                <span class=\"n\">validators</span><span class=\"o\">=</span><span class=\"p\">[</span>\n                    <span class=\"n\">RegexValidator</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">&quot;^[0-9]+$&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Enter a valid country calling code.&quot;</span><span class=\"p\">),</span>\n                <span class=\"p\">],</span>\n            <span class=\"p\">),</span>\n            <span class=\"n\">CharField</span><span class=\"p\">(</span>\n                <span class=\"n\">error_messages</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;incomplete&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Enter a phone number.&quot;</span><span class=\"p\">},</span>\n                <span class=\"n\">validators</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">RegexValidator</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">&quot;^[0-9]+$&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Enter a valid phone number.&quot;</span><span class=\"p\">)],</span>\n            <span class=\"p\">),</span>\n            <span class=\"n\">CharField</span><span class=\"p\">(</span>\n                <span class=\"n\">validators</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">RegexValidator</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">&quot;^[0-9]+$&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Enter a valid extension.&quot;</span><span class=\"p\">)],</span>\n                <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"n\">error_messages</span><span class=\"o\">=</span><span class=\"n\">error_messages</span><span class=\"p\">,</span>\n            <span class=\"n\">fields</span><span class=\"o\">=</span><span class=\"n\">fields</span><span class=\"p\">,</span>\n            <span class=\"n\">require_all_fields</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"o\">**</span><span class=\"n\">kwargs</span>\n        <span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.MultiValueField.widget\">\n<code class=\"sig-name descname\"><span class=\"pre\">widget</span></code><a class=\"headerlink\" href=\"#django.forms.MultiValueField.widget\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Must be a subclass of <a class=\"reference internal\" href=\"../widgets/#django.forms.MultiWidget\" title=\"django.forms.MultiWidget\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.forms.MultiWidget</span></code></a>.\nDefault value is <a class=\"reference internal\" href=\"../widgets/#django.forms.TextInput\" title=\"django.forms.TextInput\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TextInput</span></code></a>, which\nprobably is not very useful in this case.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.forms.MultiValueField.compress\">\n<code class=\"sig-name descname\"><span class=\"pre\">compress</span></code>(<em><span class=\"n\"><span class=\"pre\">data_list</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#MultiValueField.compress\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.MultiValueField.compress\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Takes a list of valid values and returns  a \u201ccompressed\u201d version of\nthose values \u2013 in a single value. For example,\n<a class=\"reference internal\" href=\"#django.forms.SplitDateTimeField\" title=\"django.forms.SplitDateTimeField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SplitDateTimeField</span></code></a> is a subclass which combines a time field\nand a date field into a <code class=\"docutils literal notranslate\"><span class=\"pre\">datetime</span></code> object.</p>\n<p>This method must be implemented in the subclasses.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-splitdatetimefield\">\n<span id=\"splitdatetimefield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">SplitDateTimeField</span></code><a class=\"headerlink\" href=\"#splitdatetimefield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.SplitDateTimeField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">SplitDateTimeField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/fields/#SplitDateTimeField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.SplitDateTimeField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.SplitDateTimeWidget\" title=\"django.forms.SplitDateTimeWidget\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SplitDateTimeWidget</span></code></a></li>\n<li>Empty value: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code></li>\n<li>Normalizes to: A Python <code class=\"docutils literal notranslate\"><span class=\"pre\">datetime.datetime</span></code> object.</li>\n<li>Validates that the given value is a <code class=\"docutils literal notranslate\"><span class=\"pre\">datetime.datetime</span></code> or string\nformatted in a particular datetime format.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid_date</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">invalid_time</span></code></li>\n</ul>\n<p>Takes two optional arguments:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.SplitDateTimeField.input_date_formats\">\n<code class=\"sig-name descname\"><span class=\"pre\">input_date_formats</span></code><a class=\"headerlink\" href=\"#django.forms.SplitDateTimeField.input_date_formats\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A list of formats used to attempt to convert a string to a valid\n<code class=\"docutils literal notranslate\"><span class=\"pre\">datetime.date</span></code> object.</p>\n</dd></dl>\n\n<p>If no <code class=\"docutils literal notranslate\"><span class=\"pre\">input_date_formats</span></code> argument is provided, the default input formats\nfor <a class=\"reference internal\" href=\"#django.forms.DateField\" title=\"django.forms.DateField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DateField</span></code></a> are used.</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.SplitDateTimeField.input_time_formats\">\n<code class=\"sig-name descname\"><span class=\"pre\">input_time_formats</span></code><a class=\"headerlink\" href=\"#django.forms.SplitDateTimeField.input_time_formats\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A list of formats used to attempt to convert a string to a valid\n<code class=\"docutils literal notranslate\"><span class=\"pre\">datetime.time</span></code> object.</p>\n</dd></dl>\n\n<p>If no <code class=\"docutils literal notranslate\"><span class=\"pre\">input_time_formats</span></code> argument is provided, the default input formats\nfor <a class=\"reference internal\" href=\"#django.forms.TimeField\" title=\"django.forms.TimeField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TimeField</span></code></a> are used.</p>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"s-fields-which-handle-relationships\">\n<span id=\"s-id2\"></span><span id=\"fields-which-handle-relationships\"></span><span id=\"id2\"></span><h2>Fields which handle relationships<a class=\"headerlink\" href=\"#fields-which-handle-relationships\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Two fields are available for representing relationships between\nmodels: <a class=\"reference internal\" href=\"#django.forms.ModelChoiceField\" title=\"django.forms.ModelChoiceField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelChoiceField</span></code></a> and\n<a class=\"reference internal\" href=\"#django.forms.ModelMultipleChoiceField\" title=\"django.forms.ModelMultipleChoiceField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelMultipleChoiceField</span></code></a>.  Both of these fields require a\nsingle <code class=\"docutils literal notranslate\"><span class=\"pre\">queryset</span></code> parameter that is used to create the choices for\nthe field.  Upon form validation, these fields will place either one\nmodel object (in the case of <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelChoiceField</span></code>) or multiple model\nobjects (in the case of <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelMultipleChoiceField</span></code>) into the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">cleaned_data</span></code> dictionary of the form.</p>\n<p>For more complex uses, you can specify <code class=\"docutils literal notranslate\"><span class=\"pre\">queryset=None</span></code> when declaring the\nform field and then populate the <code class=\"docutils literal notranslate\"><span class=\"pre\">queryset</span></code> in the form\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">__init__()</span></code>\nmethod:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">FooMultipleChoiceForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n    <span class=\"n\">foo_select</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">ModelMultipleChoiceField</span><span class=\"p\">(</span><span class=\"n\">queryset</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"s2\">&quot;foo_select&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">queryset</span> <span class=\"o\">=</span> <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p>Both <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelChoiceField</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelMultipleChoiceField</span></code> have an <code class=\"docutils literal notranslate\"><span class=\"pre\">iterator</span></code>\nattribute which specifies the class used to iterate over the queryset when\ngenerating choices. See <a class=\"reference internal\" href=\"#iterating-relationship-choices\"><span class=\"std std-ref\">Iterating relationship choices</span></a> for details.</p>\n<div class=\"section\" id=\"s-modelchoicefield\">\n<span id=\"modelchoicefield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelChoiceField</span></code><a class=\"headerlink\" href=\"#modelchoicefield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ModelChoiceField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ModelChoiceField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/models/#ModelChoiceField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.ModelChoiceField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.Select\" title=\"django.forms.Select\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Select</span></code></a></li>\n<li>Empty value: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code></li>\n<li>Normalizes to: A model instance.</li>\n<li>Validates that the given id exists in the queryset.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid_choice</span></code></li>\n</ul>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid_choice</span></code> error message may contain <code class=\"docutils literal notranslate\"><span class=\"pre\">%(value)s</span></code>, which will\nbe replaced with the selected choice.</p>\n<p>Allows the selection of a single model object, suitable for representing a\nforeign key. Note that the default widget for <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelChoiceField</span></code> becomes\nimpractical when the number of entries increases. You should avoid using it\nfor more than 100 items.</p>\n<p>A single argument is required:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ModelChoiceField.queryset\">\n<code class=\"sig-name descname\"><span class=\"pre\">queryset</span></code><a class=\"headerlink\" href=\"#django.forms.ModelChoiceField.queryset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A <code class=\"docutils literal notranslate\"><span class=\"pre\">QuerySet</span></code> of model objects from which the choices for the field\nare derived and which is used to validate the user\u2019s selection. It\u2019s\nevaluated when the form is rendered.</p>\n</dd></dl>\n\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelChoiceField</span></code> also takes several optional arguments:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ModelChoiceField.empty_label\">\n<code class=\"sig-name descname\"><span class=\"pre\">empty_label</span></code><a class=\"headerlink\" href=\"#django.forms.ModelChoiceField.empty_label\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>By default the <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;select&gt;</span></code> widget used by <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelChoiceField</span></code> will have an\nempty choice at the top of the list. You can change the text of this\nlabel (which is <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;---------&quot;</span></code> by default) with the <code class=\"docutils literal notranslate\"><span class=\"pre\">empty_label</span></code>\nattribute, or you can disable the empty label entirely by setting\n<code class=\"docutils literal notranslate\"><span class=\"pre\">empty_label</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># A custom empty label</span>\n<span class=\"n\">field1</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">ModelChoiceField</span><span class=\"p\">(</span><span class=\"n\">queryset</span><span class=\"o\">=...</span><span class=\"p\">,</span> <span class=\"n\">empty_label</span><span class=\"o\">=</span><span class=\"s2\">&quot;(Nothing)&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># No empty label</span>\n<span class=\"n\">field2</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">ModelChoiceField</span><span class=\"p\">(</span><span class=\"n\">queryset</span><span class=\"o\">=...</span><span class=\"p\">,</span> <span class=\"n\">empty_label</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Note that no empty choice is created (regardless of the value of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">empty_label</span></code>) if a <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelChoiceField</span></code> is required and has a\ndefault initial value, or a <code class=\"docutils literal notranslate\"><span class=\"pre\">widget</span></code> is set to\n<a class=\"reference internal\" href=\"../widgets/#django.forms.RadioSelect\" title=\"django.forms.RadioSelect\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RadioSelect</span></code></a> and the\n<a class=\"reference internal\" href=\"#django.forms.ModelChoiceField.blank\" title=\"django.forms.ModelChoiceField.blank\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">blank</span></code></a> argument is <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ModelChoiceField.to_field_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">to_field_name</span></code><a class=\"headerlink\" href=\"#django.forms.ModelChoiceField.to_field_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This optional argument is used to specify the field to use as the value\nof the choices in the field\u2019s widget. Be sure it\u2019s a unique field for\nthe model, otherwise the selected value could match more than one\nobject. By default it is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, in which case the primary key\nof each object will be used. For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># No custom to_field_name</span>\n<span class=\"n\">field1</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">ModelChoiceField</span><span class=\"p\">(</span><span class=\"n\">queryset</span><span class=\"o\">=...</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>would yield:</p>\n<div class=\"highlight-html notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">&lt;</span><span class=\"nt\">select</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;id_field1&quot;</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;field1&quot;</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">option</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">&quot;obj1.pk&quot;</span><span class=\"p\">&gt;</span>Object1<span class=\"p\">&lt;/</span><span class=\"nt\">option</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">option</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">&quot;obj2.pk&quot;</span><span class=\"p\">&gt;</span>Object2<span class=\"p\">&lt;/</span><span class=\"nt\">option</span><span class=\"p\">&gt;</span>\n...\n<span class=\"p\">&lt;/</span><span class=\"nt\">select</span><span class=\"p\">&gt;</span>\n</pre></div>\n</div>\n<p>and:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># to_field_name provided</span>\n<span class=\"n\">field2</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">ModelChoiceField</span><span class=\"p\">(</span><span class=\"n\">queryset</span><span class=\"o\">=...</span><span class=\"p\">,</span> <span class=\"n\">to_field_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>would yield:</p>\n<div class=\"highlight-html notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">&lt;</span><span class=\"nt\">select</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;id_field2&quot;</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;field2&quot;</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">option</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">&quot;obj1.name&quot;</span><span class=\"p\">&gt;</span>Object1<span class=\"p\">&lt;/</span><span class=\"nt\">option</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">option</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">&quot;obj2.name&quot;</span><span class=\"p\">&gt;</span>Object2<span class=\"p\">&lt;/</span><span class=\"nt\">option</span><span class=\"p\">&gt;</span>\n...\n<span class=\"p\">&lt;/</span><span class=\"nt\">select</span><span class=\"p\">&gt;</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ModelChoiceField.blank\">\n<code class=\"sig-name descname\"><span class=\"pre\">blank</span></code><a class=\"headerlink\" href=\"#django.forms.ModelChoiceField.blank\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>When using the <a class=\"reference internal\" href=\"../widgets/#django.forms.RadioSelect\" title=\"django.forms.RadioSelect\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RadioSelect</span></code></a> widget, this optional\nboolean argument determines whether an empty choice is created. By\ndefault, <code class=\"docutils literal notranslate\"><span class=\"pre\">blank</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>, in which case no empty choice is\ncreated.</p>\n</dd></dl>\n\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelChoiceField</span></code> also has the attribute:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ModelChoiceField.iterator\">\n<code class=\"sig-name descname\"><span class=\"pre\">iterator</span></code><a class=\"headerlink\" href=\"#django.forms.ModelChoiceField.iterator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The iterator class used to generate field choices from <code class=\"docutils literal notranslate\"><span class=\"pre\">queryset</span></code>. By\ndefault, <a class=\"reference internal\" href=\"#django.forms.ModelChoiceIterator\" title=\"django.forms.ModelChoiceIterator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelChoiceIterator</span></code></a>.</p>\n</dd></dl>\n\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">__str__()</span></code> method of the model will be called to generate string\nrepresentations of the objects for use in the field\u2019s choices. To provide\ncustomized representations, subclass <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelChoiceField</span></code> and override\n<code class=\"docutils literal notranslate\"><span class=\"pre\">label_from_instance</span></code>. This method will receive a model object and should\nreturn a string suitable for representing it. For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.forms</span> <span class=\"kn\">import</span> <span class=\"n\">ModelChoiceField</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModelChoiceField</span><span class=\"p\">(</span><span class=\"n\">ModelChoiceField</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">label_from_instance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;My Object #</span><span class=\"si\">%i</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">id</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-modelmultiplechoicefield\">\n<span id=\"modelmultiplechoicefield\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelMultipleChoiceField</span></code><a class=\"headerlink\" href=\"#modelmultiplechoicefield\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ModelMultipleChoiceField\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ModelMultipleChoiceField</span></code>(<em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/forms/models/#ModelMultipleChoiceField\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.forms.ModelMultipleChoiceField\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><ul class=\"simple\">\n<li>Default widget: <a class=\"reference internal\" href=\"../widgets/#django.forms.SelectMultiple\" title=\"django.forms.SelectMultiple\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SelectMultiple</span></code></a></li>\n<li>Empty value: An empty <code class=\"docutils literal notranslate\"><span class=\"pre\">QuerySet</span></code> (<code class=\"docutils literal notranslate\"><span class=\"pre\">self.queryset.none()</span></code>)</li>\n<li>Normalizes to: A <code class=\"docutils literal notranslate\"><span class=\"pre\">QuerySet</span></code> of model instances.</li>\n<li>Validates that every id in the given list of values exists in the\nqueryset.</li>\n<li>Error message keys: <code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid_list</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid_choice</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">invalid_pk_value</span></code></li>\n</ul>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">invalid_choice</span></code> message may contain <code class=\"docutils literal notranslate\"><span class=\"pre\">%(value)s</span></code> and the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">invalid_pk_value</span></code> message may contain <code class=\"docutils literal notranslate\"><span class=\"pre\">%(pk)s</span></code>, which will be\nsubstituted by the appropriate values.</p>\n<p>Allows the selection of one or more model objects, suitable for\nrepresenting a many-to-many relation. As with <a class=\"reference internal\" href=\"#django.forms.ModelChoiceField\" title=\"django.forms.ModelChoiceField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelChoiceField</span></code></a>,\nyou can use <code class=\"docutils literal notranslate\"><span class=\"pre\">label_from_instance</span></code> to customize the object\nrepresentations.</p>\n<p>A single argument is required:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ModelMultipleChoiceField.queryset\">\n<code class=\"sig-name descname\"><span class=\"pre\">queryset</span></code><a class=\"headerlink\" href=\"#django.forms.ModelMultipleChoiceField.queryset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Same as <a class=\"reference internal\" href=\"#django.forms.ModelChoiceField.queryset\" title=\"django.forms.ModelChoiceField.queryset\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelChoiceField.queryset</span></code></a>.</p>\n</dd></dl>\n\n<p>Takes one optional argument:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ModelMultipleChoiceField.to_field_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">to_field_name</span></code><a class=\"headerlink\" href=\"#django.forms.ModelMultipleChoiceField.to_field_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Same as <a class=\"reference internal\" href=\"#django.forms.ModelChoiceField.to_field_name\" title=\"django.forms.ModelChoiceField.to_field_name\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelChoiceField.to_field_name</span></code></a>.</p>\n</dd></dl>\n\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelMultipleChoiceField</span></code> also has the attribute:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ModelMultipleChoiceField.iterator\">\n<code class=\"sig-name descname\"><span class=\"pre\">iterator</span></code><a class=\"headerlink\" href=\"#django.forms.ModelMultipleChoiceField.iterator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Same as <a class=\"reference internal\" href=\"#django.forms.ModelChoiceField.iterator\" title=\"django.forms.ModelChoiceField.iterator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelChoiceField.iterator</span></code></a>.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-iterating-relationship-choices\">\n<span id=\"s-id3\"></span><span id=\"iterating-relationship-choices\"></span><span id=\"id3\"></span><h3>Iterating relationship choices<a class=\"headerlink\" href=\"#iterating-relationship-choices\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>By default, <a class=\"reference internal\" href=\"#django.forms.ModelChoiceField\" title=\"django.forms.ModelChoiceField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelChoiceField</span></code></a> and <a class=\"reference internal\" href=\"#django.forms.ModelMultipleChoiceField\" title=\"django.forms.ModelMultipleChoiceField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelMultipleChoiceField</span></code></a> use\n<a class=\"reference internal\" href=\"#django.forms.ModelChoiceIterator\" title=\"django.forms.ModelChoiceIterator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelChoiceIterator</span></code></a> to generate their field <code class=\"docutils literal notranslate\"><span class=\"pre\">choices</span></code>.</p>\n<p>When iterated, <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelChoiceIterator</span></code> yields 2-tuple choices containing\n<a class=\"reference internal\" href=\"#django.forms.ModelChoiceIteratorValue\" title=\"django.forms.ModelChoiceIteratorValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelChoiceIteratorValue</span></code></a> instances as the first <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> element in\neach choice. <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelChoiceIteratorValue</span></code> wraps the choice value while\nmaintaining a reference to the source model instance that can be used in custom\nwidget implementations, for example, to add <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/data-*\">data-* attributes</a> to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;option&gt;</span></code> elements.</p>\n<p>For example, consider the following models:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Topping</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n    <span class=\"n\">price</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DecimalField</span><span class=\"p\">(</span><span class=\"n\">decimal_places</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">max_digits</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Pizza</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">topping</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Topping</span><span class=\"p\">,</span> <span class=\"n\">on_delete</span><span class=\"o\">=</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CASCADE</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>You can use a <a class=\"reference internal\" href=\"../widgets/#django.forms.Select\" title=\"django.forms.Select\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Select</span></code></a> widget subclass to include\nthe value of <code class=\"docutils literal notranslate\"><span class=\"pre\">Topping.price</span></code> as the HTML attribute <code class=\"docutils literal notranslate\"><span class=\"pre\">data-price</span></code> for each\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;option&gt;</span></code> element:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ToppingSelect</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">Select</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_option</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"p\">,</span> <span class=\"n\">selected</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">subindex</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">attrs</span><span class=\"o\">=</span><span class=\"kc\">None</span>\n    <span class=\"p\">):</span>\n        <span class=\"n\">option</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">create_option</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"p\">,</span> <span class=\"n\">selected</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">subindex</span><span class=\"p\">,</span> <span class=\"n\">attrs</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">value</span><span class=\"p\">:</span>\n            <span class=\"n\">option</span><span class=\"p\">[</span><span class=\"s2\">&quot;attrs&quot;</span><span class=\"p\">][</span><span class=\"s2\">&quot;data-price&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">price</span>\n        <span class=\"k\">return</span> <span class=\"n\">option</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PizzaForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">ModelForm</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Pizza</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;topping&quot;</span><span class=\"p\">]</span>\n        <span class=\"n\">widgets</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;topping&quot;</span><span class=\"p\">:</span> <span class=\"n\">ToppingSelect</span><span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>This will render the <code class=\"docutils literal notranslate\"><span class=\"pre\">Pizza.topping</span></code> select as:</p>\n<div class=\"highlight-html notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">&lt;</span><span class=\"nt\">select</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;id_topping&quot;</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">&quot;topping&quot;</span> <span class=\"na\">required</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">option</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">&quot;&quot;</span> <span class=\"na\">selected</span><span class=\"p\">&gt;</span>---------<span class=\"p\">&lt;/</span><span class=\"nt\">option</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">option</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">&quot;1&quot;</span> <span class=\"na\">data-price</span><span class=\"o\">=</span><span class=\"s\">&quot;1.50&quot;</span><span class=\"p\">&gt;</span>mushrooms<span class=\"p\">&lt;/</span><span class=\"nt\">option</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">option</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">&quot;2&quot;</span> <span class=\"na\">data-price</span><span class=\"o\">=</span><span class=\"s\">&quot;1.25&quot;</span><span class=\"p\">&gt;</span>onions<span class=\"p\">&lt;/</span><span class=\"nt\">option</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">option</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">&quot;3&quot;</span> <span class=\"na\">data-price</span><span class=\"o\">=</span><span class=\"s\">&quot;1.75&quot;</span><span class=\"p\">&gt;</span>peppers<span class=\"p\">&lt;/</span><span class=\"nt\">option</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">option</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">&quot;4&quot;</span> <span class=\"na\">data-price</span><span class=\"o\">=</span><span class=\"s\">&quot;2.00&quot;</span><span class=\"p\">&gt;</span>pineapple<span class=\"p\">&lt;/</span><span class=\"nt\">option</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">select</span><span class=\"p\">&gt;</span>\n</pre></div>\n</div>\n<p>For more advanced usage you may subclass <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelChoiceIterator</span></code> in order to\ncustomize the yielded 2-tuple choices.</p>\n<div class=\"section\" id=\"s-modelchoiceiterator\">\n<span id=\"modelchoiceiterator\"></span><h4><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelChoiceIterator</span></code><a class=\"headerlink\" href=\"#modelchoiceiterator\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ModelChoiceIterator\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ModelChoiceIterator</span></code>(<em><span class=\"n\"><span class=\"pre\">field</span></span></em>)<a class=\"headerlink\" href=\"#django.forms.ModelChoiceIterator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The default class assigned to the <code class=\"docutils literal notranslate\"><span class=\"pre\">iterator</span></code> attribute of\n<a class=\"reference internal\" href=\"#django.forms.ModelChoiceField\" title=\"django.forms.ModelChoiceField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelChoiceField</span></code></a> and <a class=\"reference internal\" href=\"#django.forms.ModelMultipleChoiceField\" title=\"django.forms.ModelMultipleChoiceField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelMultipleChoiceField</span></code></a>. An\niterable that yields 2-tuple choices from the queryset.</p>\n<p>A single argument is required:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ModelChoiceIterator.field\">\n<code class=\"sig-name descname\"><span class=\"pre\">field</span></code><a class=\"headerlink\" href=\"#django.forms.ModelChoiceIterator.field\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The instance of <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelChoiceField</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelMultipleChoiceField</span></code> to\niterate and yield choices.</p>\n</dd></dl>\n\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelChoiceIterator</span></code> has the following method:</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ModelChoiceIterator.__iter__\">\n<code class=\"sig-name descname\"><span class=\"pre\">__iter__</span></code>()<a class=\"headerlink\" href=\"#django.forms.ModelChoiceIterator.__iter__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Yields 2-tuple choices, in the <code class=\"docutils literal notranslate\"><span class=\"pre\">(value,</span> <span class=\"pre\">label)</span></code> format used by\n<a class=\"reference internal\" href=\"#django.forms.ChoiceField.choices\" title=\"django.forms.ChoiceField.choices\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ChoiceField.choices</span></code></a>. The first <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> element is a\n<a class=\"reference internal\" href=\"#django.forms.ModelChoiceIteratorValue\" title=\"django.forms.ModelChoiceIteratorValue\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelChoiceIteratorValue</span></code></a> instance.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-modelchoiceiteratorvalue\">\n<span id=\"modelchoiceiteratorvalue\"></span><h4><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelChoiceIteratorValue</span></code><a class=\"headerlink\" href=\"#modelchoiceiteratorvalue\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ModelChoiceIteratorValue\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ModelChoiceIteratorValue</span></code>(<em><span class=\"n\"><span class=\"pre\">value</span></span></em>, <em><span class=\"n\"><span class=\"pre\">instance</span></span></em>)<a class=\"headerlink\" href=\"#django.forms.ModelChoiceIteratorValue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Two arguments are required:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ModelChoiceIteratorValue.value\">\n<code class=\"sig-name descname\"><span class=\"pre\">value</span></code><a class=\"headerlink\" href=\"#django.forms.ModelChoiceIteratorValue.value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The value of the choice. This value is used to render the <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code>\nattribute of an HTML <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;option&gt;</span></code> element.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ModelChoiceIteratorValue.instance\">\n<code class=\"sig-name descname\"><span class=\"pre\">instance</span></code><a class=\"headerlink\" href=\"#django.forms.ModelChoiceIteratorValue.instance\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The model instance from the queryset. The instance can be accessed in\ncustom <code class=\"docutils literal notranslate\"><span class=\"pre\">ChoiceWidget.create_option()</span></code> implementations to adjust the\nrendered HTML.</p>\n</dd></dl>\n\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelChoiceIteratorValue</span></code> has the following method:</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.forms.ModelChoiceIteratorValue.__str__\">\n<code class=\"sig-name descname\"><span class=\"pre\">__str__</span></code>()<a class=\"headerlink\" href=\"#django.forms.ModelChoiceIteratorValue.__str__\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Return <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> as a string to be rendered in HTML.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"s-creating-custom-fields\">\n<span id=\"creating-custom-fields\"></span><h2>Creating custom fields<a class=\"headerlink\" href=\"#creating-custom-fields\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>If the built-in <code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> classes don\u2019t meet your needs, you can create custom\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> classes. To do this, create a subclass of <code class=\"docutils literal notranslate\"><span class=\"pre\">django.forms.Field</span></code>. Its\nonly requirements are that it implement a <code class=\"docutils literal notranslate\"><span class=\"pre\">clean()</span></code> method and that its\n<code class=\"docutils literal notranslate\"><span class=\"pre\">__init__()</span></code> method accept the core arguments mentioned above (<code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">label</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">initial</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">widget</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">help_text</span></code>).</p>\n<p>You can also customize how a field will be accessed by overriding\n<a class=\"reference internal\" href=\"../api/#django.forms.Field.get_bound_field\" title=\"django.forms.Field.get_bound_field\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_bound_field()</span></code></a>.</p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["ref/forms/models", "Model Form Functions", "N", "next"], ["ref/forms/api", "The Forms API", "P", "previous"]], "sourcename": "ref/forms/fields.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Form fields</a><ul>\n<li><a class=\"reference internal\" href=\"#core-field-arguments\">Core field arguments</a><ul>\n<li><a class=\"reference internal\" href=\"#required\"><code class=\"docutils literal notranslate\"><span class=\"pre\">required</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#label\"><code class=\"docutils literal notranslate\"><span class=\"pre\">label</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#label-suffix\"><code class=\"docutils literal notranslate\"><span class=\"pre\">label_suffix</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#initial\"><code class=\"docutils literal notranslate\"><span class=\"pre\">initial</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#widget\"><code class=\"docutils literal notranslate\"><span class=\"pre\">widget</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#help-text\"><code class=\"docutils literal notranslate\"><span class=\"pre\">help_text</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#error-messages\"><code class=\"docutils literal notranslate\"><span class=\"pre\">error_messages</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#validators\"><code class=\"docutils literal notranslate\"><span class=\"pre\">validators</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#localize\"><code class=\"docutils literal notranslate\"><span class=\"pre\">localize</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#disabled\"><code class=\"docutils literal notranslate\"><span class=\"pre\">disabled</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#template-name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">template_name</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#checking-if-the-field-data-has-changed\">Checking if the field data has changed</a><ul>\n<li><a class=\"reference internal\" href=\"#has-changed\"><code class=\"docutils literal notranslate\"><span class=\"pre\">has_changed()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#built-in-field-classes\">Built-in <code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> classes</a><ul>\n<li><a class=\"reference internal\" href=\"#booleanfield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">BooleanField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#charfield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">CharField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#choicefield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ChoiceField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#datefield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">DateField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#datetimefield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#decimalfield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">DecimalField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#durationfield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">DurationField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#emailfield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">EmailField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#filefield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">FileField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#filepathfield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">FilePathField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#floatfield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">FloatField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#genericipaddressfield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">GenericIPAddressField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#imagefield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ImageField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#integerfield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">IntegerField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#jsonfield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">JSONField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#multiplechoicefield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MultipleChoiceField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#nullbooleanfield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">NullBooleanField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#regexfield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RegexField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#slugfield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SlugField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#timefield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TimeField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#typedchoicefield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TypedChoiceField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#typedmultiplechoicefield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">TypedMultipleChoiceField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#urlfield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">URLField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#uuidfield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">UUIDField</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#slightly-complex-built-in-field-classes\">Slightly complex built-in <code class=\"docutils literal notranslate\"><span class=\"pre\">Field</span></code> classes</a><ul>\n<li><a class=\"reference internal\" href=\"#combofield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ComboField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#multivaluefield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MultiValueField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#splitdatetimefield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">SplitDateTimeField</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#fields-which-handle-relationships\">Fields which handle relationships</a><ul>\n<li><a class=\"reference internal\" href=\"#modelchoicefield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelChoiceField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#modelmultiplechoicefield\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelMultipleChoiceField</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#iterating-relationship-choices\">Iterating relationship choices</a><ul>\n<li><a class=\"reference internal\" href=\"#modelchoiceiterator\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelChoiceIterator</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#modelchoiceiteratorvalue\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelChoiceIteratorValue</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#creating-custom-fields\">Creating custom fields</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "ref/forms/fields", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
