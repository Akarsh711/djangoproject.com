{"parents": [{"link": "../../", "title": "API Reference"}, {"link": "../", "title": "<code class=\"docutils literal notranslate\"><span class=\"pre\">contrib</span></code> packages"}], "prev": {"link": "../admin/javascript/", "title": "JavaScript customizations in the admin"}, "next": {"link": "../contenttypes/", "title": "The contenttypes framework"}, "title": "<code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.auth</span></code>", "meta": {}, "body": "<div class=\"section\" id=\"s-django-contrib-auth\">\n<span id=\"django-contrib-auth\"></span><h1><code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.auth</span></code><a class=\"headerlink\" href=\"#django-contrib-auth\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This document provides API reference material for the components of Django\u2019s\nauthentication system. For more details on the usage of these components or\nhow to customize authentication and authorization see the <a class=\"reference internal\" href=\"../../../topics/auth/\"><span class=\"doc\">authentication\ntopic guide</span></a>.</p>\n<div class=\"section\" id=\"s-user-model\">\n<span id=\"user-model\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">User</span></code> model<a class=\"headerlink\" href=\"#user-model\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-prename descclassname\"><span class=\"pre\">models.</span></code><code class=\"sig-name descname\"><span class=\"pre\">User</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.User\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<div class=\"section\" id=\"s-fields\">\n<span id=\"fields\"></span><h3>Fields<a class=\"headerlink\" href=\"#fields\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-prename descclassname\"><span class=\"pre\">models.</span></code><code class=\"sig-name descname\"><span class=\"pre\">User</span></code></dt>\n<dd><p><a class=\"reference internal\" href=\"#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">User</span></code></a> objects have the following\nfields:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.username\">\n<code class=\"sig-name descname\"><span class=\"pre\">username</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.User.username\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Required. 150 characters or fewer. Usernames may contain alphanumeric,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">_</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">+</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">.</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">-</span></code> characters.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">max_length</span></code> should be sufficient for many use cases. If you need\na longer length, please use a <a class=\"reference internal\" href=\"../../../topics/auth/customizing/#specifying-custom-user-model\"><span class=\"std std-ref\">custom user model</span></a>. If you use MySQL with the <code class=\"docutils literal notranslate\"><span class=\"pre\">utf8mb4</span></code>\nencoding (recommended for proper Unicode support), specify at most\n<code class=\"docutils literal notranslate\"><span class=\"pre\">max_length=191</span></code> because MySQL can only create unique indexes with\n191 characters in that case by default.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.first_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">first_name</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.User.first_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Optional (<a class=\"reference internal\" href=\"../../models/fields/#django.db.models.Field.blank\" title=\"django.db.models.Field.blank\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">blank=True</span></code></a>). 150\ncharacters or fewer.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.last_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">last_name</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.User.last_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Optional (<a class=\"reference internal\" href=\"../../models/fields/#django.db.models.Field.blank\" title=\"django.db.models.Field.blank\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">blank=True</span></code></a>). 150\ncharacters or fewer.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.email\">\n<code class=\"sig-name descname\"><span class=\"pre\">email</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.User.email\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Optional (<a class=\"reference internal\" href=\"../../models/fields/#django.db.models.Field.blank\" title=\"django.db.models.Field.blank\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">blank=True</span></code></a>). Email\naddress.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.password\">\n<code class=\"sig-name descname\"><span class=\"pre\">password</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.User.password\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Required. A hash of, and metadata about, the password. (Django doesn\u2019t\nstore the raw password.) Raw passwords can be arbitrarily long and can\ncontain any character. See the <a class=\"reference internal\" href=\"../../../topics/auth/passwords/\"><span class=\"doc\">password documentation</span></a>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.groups\">\n<code class=\"sig-name descname\"><span class=\"pre\">groups</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.User.groups\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Many-to-many relationship to <a class=\"reference internal\" href=\"#django.contrib.auth.models.Group\" title=\"django.contrib.auth.models.Group\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Group</span></code></a></p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.user_permissions\">\n<code class=\"sig-name descname\"><span class=\"pre\">user_permissions</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.User.user_permissions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Many-to-many relationship to <a class=\"reference internal\" href=\"#django.contrib.auth.models.Permission\" title=\"django.contrib.auth.models.Permission\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Permission</span></code></a></p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.is_staff\">\n<code class=\"sig-name descname\"><span class=\"pre\">is_staff</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.User.is_staff\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Boolean. Designates whether this user can access the admin site.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.is_active\">\n<code class=\"sig-name descname\"><span class=\"pre\">is_active</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.User.is_active\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Boolean. Designates whether this user account should be considered\nactive. We recommend that you set this flag to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> instead of\ndeleting accounts; that way, if your applications have any foreign keys\nto users, the foreign keys won\u2019t break.</p>\n<p>This doesn\u2019t necessarily control whether or not the user can log in.\nAuthentication backends aren\u2019t required to check for the <code class=\"docutils literal notranslate\"><span class=\"pre\">is_active</span></code>\nflag but the default backend\n(<a class=\"reference internal\" href=\"#django.contrib.auth.backends.ModelBackend\" title=\"django.contrib.auth.backends.ModelBackend\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelBackend</span></code></a>) and the\n<a class=\"reference internal\" href=\"#django.contrib.auth.backends.RemoteUserBackend\" title=\"django.contrib.auth.backends.RemoteUserBackend\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RemoteUserBackend</span></code></a> do. You can\nuse <a class=\"reference internal\" href=\"#django.contrib.auth.backends.AllowAllUsersModelBackend\" title=\"django.contrib.auth.backends.AllowAllUsersModelBackend\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AllowAllUsersModelBackend</span></code></a>\nor <a class=\"reference internal\" href=\"#django.contrib.auth.backends.AllowAllUsersRemoteUserBackend\" title=\"django.contrib.auth.backends.AllowAllUsersRemoteUserBackend\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AllowAllUsersRemoteUserBackend</span></code></a>\nif you want to allow inactive users to login. In this case, you\u2019ll also\nwant to customize the\n<a class=\"reference internal\" href=\"../../../topics/auth/default/#django.contrib.auth.forms.AuthenticationForm\" title=\"django.contrib.auth.forms.AuthenticationForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AuthenticationForm</span></code></a> used by the\n<a class=\"reference internal\" href=\"../../../topics/auth/default/#django.contrib.auth.views.LoginView\" title=\"django.contrib.auth.views.LoginView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LoginView</span></code></a> as it rejects inactive\nusers. Be aware that the permission-checking methods such as\n<a class=\"reference internal\" href=\"#django.contrib.auth.models.User.has_perm\" title=\"django.contrib.auth.models.User.has_perm\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">has_perm()</span></code></a> and the\nauthentication in the Django admin all return <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> for inactive\nusers.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.is_superuser\">\n<code class=\"sig-name descname\"><span class=\"pre\">is_superuser</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.User.is_superuser\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Boolean. Designates that this user has all permissions without\nexplicitly assigning them.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.last_login\">\n<code class=\"sig-name descname\"><span class=\"pre\">last_login</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.User.last_login\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A datetime of the user\u2019s last login.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.date_joined\">\n<code class=\"sig-name descname\"><span class=\"pre\">date_joined</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.User.date_joined\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A datetime designating when the account was created. Is set to the\ncurrent date/time by default when the account is created.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-attributes\">\n<span id=\"attributes\"></span><h3>Attributes<a class=\"headerlink\" href=\"#attributes\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-prename descclassname\"><span class=\"pre\">models.</span></code><code class=\"sig-name descname\"><span class=\"pre\">User</span></code></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.is_authenticated\">\n<code class=\"sig-name descname\"><span class=\"pre\">is_authenticated</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.User.is_authenticated\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Read-only attribute which is always <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> (as opposed to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">AnonymousUser.is_authenticated</span></code> which is always <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>). This is\na way to tell if the user has been authenticated. This does not imply\nany permissions and doesn\u2019t check if the user is active or has a valid\nsession. Even though normally you will check this attribute on\n<code class=\"docutils literal notranslate\"><span class=\"pre\">request.user</span></code> to find out whether it has been populated by the\n<a class=\"reference internal\" href=\"../../middleware/#django.contrib.auth.middleware.AuthenticationMiddleware\" title=\"django.contrib.auth.middleware.AuthenticationMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AuthenticationMiddleware</span></code></a>\n(representing the currently logged-in user), you should know this\nattribute is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> for any <a class=\"reference internal\" href=\"#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">User</span></code></a> instance.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.is_anonymous\">\n<code class=\"sig-name descname\"><span class=\"pre\">is_anonymous</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.User.is_anonymous\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Read-only attribute which is always <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>. This is a way of\ndifferentiating <a class=\"reference internal\" href=\"#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">User</span></code></a> and <a class=\"reference internal\" href=\"#django.contrib.auth.models.AnonymousUser\" title=\"django.contrib.auth.models.AnonymousUser\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AnonymousUser</span></code></a>\nobjects. Generally, you should prefer using\n<a class=\"reference internal\" href=\"#django.contrib.auth.models.User.is_authenticated\" title=\"django.contrib.auth.models.User.is_authenticated\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_authenticated</span></code></a> to this\nattribute.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-methods\">\n<span id=\"methods\"></span><h3>Methods<a class=\"headerlink\" href=\"#methods\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-prename descclassname\"><span class=\"pre\">models.</span></code><code class=\"sig-name descname\"><span class=\"pre\">User</span></code></dt>\n<dd><dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.get_username\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_username</span></code>()<a class=\"headerlink\" href=\"#django.contrib.auth.models.User.get_username\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the username for the user. Since the <code class=\"docutils literal notranslate\"><span class=\"pre\">User</span></code> model can be\nswapped out, you should use this method instead of referencing the\nusername attribute directly.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.get_full_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_full_name</span></code>()<a class=\"headerlink\" href=\"#django.contrib.auth.models.User.get_full_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the <a class=\"reference internal\" href=\"#django.contrib.auth.models.User.first_name\" title=\"django.contrib.auth.models.User.first_name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">first_name</span></code></a> plus\nthe <a class=\"reference internal\" href=\"#django.contrib.auth.models.User.last_name\" title=\"django.contrib.auth.models.User.last_name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">last_name</span></code></a>, with a space in\nbetween.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.get_short_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_short_name</span></code>()<a class=\"headerlink\" href=\"#django.contrib.auth.models.User.get_short_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the <a class=\"reference internal\" href=\"#django.contrib.auth.models.User.first_name\" title=\"django.contrib.auth.models.User.first_name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">first_name</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.set_password\">\n<code class=\"sig-name descname\"><span class=\"pre\">set_password</span></code>(<em><span class=\"n\"><span class=\"pre\">raw_password</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.models.User.set_password\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sets the user\u2019s password to the given raw string, taking care of the\npassword hashing. Doesn\u2019t save the\n<a class=\"reference internal\" href=\"#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">User</span></code></a> object.</p>\n<p>When the <code class=\"docutils literal notranslate\"><span class=\"pre\">raw_password</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, the password will be set to an\nunusable password, as if\n<a class=\"reference internal\" href=\"#django.contrib.auth.models.User.set_unusable_password\" title=\"django.contrib.auth.models.User.set_unusable_password\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">set_unusable_password()</span></code></a>\nwere used.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.check_password\">\n<code class=\"sig-name descname\"><span class=\"pre\">check_password</span></code>(<em><span class=\"n\"><span class=\"pre\">raw_password</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.models.User.check_password\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.acheck_password\">\n<code class=\"sig-name descname\"><span class=\"pre\">acheck_password</span></code>(<em><span class=\"n\"><span class=\"pre\">raw_password</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.models.User.acheck_password\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p><em>Asynchronous version</em>: <code class=\"docutils literal notranslate\"><span class=\"pre\">acheck_password()</span></code></p>\n<p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the given raw string is the correct password for\nthe user. (This takes care of the password hashing in making the\ncomparison.)</p>\n<div class=\"versionchanged\">\n<span class=\"title\">Changed in Django Development version:</span> <p><code class=\"docutils literal notranslate\"><span class=\"pre\">acheck_password()</span></code> method was added.</p>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.set_unusable_password\">\n<code class=\"sig-name descname\"><span class=\"pre\">set_unusable_password</span></code>()<a class=\"headerlink\" href=\"#django.contrib.auth.models.User.set_unusable_password\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Marks the user as having no password set.  This isn\u2019t the same as\nhaving a blank string for a password.\n<a class=\"reference internal\" href=\"#django.contrib.auth.models.User.check_password\" title=\"django.contrib.auth.models.User.check_password\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">check_password()</span></code></a> for this user\nwill never return <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>. Doesn\u2019t save the\n<a class=\"reference internal\" href=\"#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">User</span></code></a> object.</p>\n<p>You may need this if authentication for your application takes place\nagainst an existing external source such as an LDAP directory.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.has_usable_password\">\n<code class=\"sig-name descname\"><span class=\"pre\">has_usable_password</span></code>()<a class=\"headerlink\" href=\"#django.contrib.auth.models.User.has_usable_password\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> if\n<a class=\"reference internal\" href=\"#django.contrib.auth.models.User.set_unusable_password\" title=\"django.contrib.auth.models.User.set_unusable_password\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">set_unusable_password()</span></code></a> has\nbeen called for this user.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.get_user_permissions\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_user_permissions</span></code>(<em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.models.User.get_user_permissions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a set of permission strings that the user has directly.</p>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code> is passed in, only returns the user permissions for this\nspecific object.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.get_group_permissions\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_group_permissions</span></code>(<em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.models.User.get_group_permissions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a set of permission strings that the user has, through their\ngroups.</p>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code> is passed in, only returns the group permissions for\nthis specific object.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.get_all_permissions\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_all_permissions</span></code>(<em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.models.User.get_all_permissions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a set of permission strings that the user has, both through\ngroup and user permissions.</p>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code> is passed in, only returns the permissions for this\nspecific object.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.has_perm\">\n<code class=\"sig-name descname\"><span class=\"pre\">has_perm</span></code>(<em><span class=\"n\"><span class=\"pre\">perm</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.models.User.has_perm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the user has the specified permission, where perm\nis in the format <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;&lt;app</span> <span class=\"pre\">label&gt;.&lt;permission</span> <span class=\"pre\">codename&gt;&quot;</span></code>. (see\ndocumentation on <a class=\"reference internal\" href=\"../../../topics/auth/default/#topic-authorization\"><span class=\"std std-ref\">permissions</span></a>). If the user is\ninactive, this method will always return <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>. For an active\nsuperuser, this method will always return <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code> is passed in, this method won\u2019t check for a permission for\nthe model, but for this specific object.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.has_perms\">\n<code class=\"sig-name descname\"><span class=\"pre\">has_perms</span></code>(<em><span class=\"n\"><span class=\"pre\">perm_list</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.models.User.has_perms\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the user has each of the specified permissions,\nwhere each perm is in the format\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;&lt;app</span> <span class=\"pre\">label&gt;.&lt;permission</span> <span class=\"pre\">codename&gt;&quot;</span></code>. If the user is inactive,\nthis method will always return <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>. For an active superuser, this\nmethod will always return <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code> is passed in, this method won\u2019t check for permissions for\nthe model, but for the specific object.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.has_module_perms\">\n<code class=\"sig-name descname\"><span class=\"pre\">has_module_perms</span></code>(<em><span class=\"n\"><span class=\"pre\">package_name</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.models.User.has_module_perms\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the user has any permissions in the given package\n(the Django app label). If the user is inactive, this method will\nalways return <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>. For an active superuser, this method will\nalways return <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.User.email_user\">\n<code class=\"sig-name descname\"><span class=\"pre\">email_user</span></code>(<em><span class=\"n\"><span class=\"pre\">subject</span></span></em>, <em><span class=\"n\"><span class=\"pre\">message</span></span></em>, <em><span class=\"n\"><span class=\"pre\">from_email</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.models.User.email_user\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends an email to the user. If <code class=\"docutils literal notranslate\"><span class=\"pre\">from_email</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, Django uses\nthe <a class=\"reference internal\" href=\"../../settings/#std-setting-DEFAULT_FROM_EMAIL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEFAULT_FROM_EMAIL</span></code></a>. Any <code class=\"docutils literal notranslate\"><span class=\"pre\">**kwargs</span></code> are passed to the\nunderlying <a class=\"reference internal\" href=\"../../../topics/email/#django.core.mail.send_mail\" title=\"django.core.mail.send_mail\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">send_mail()</span></code></a> call.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-manager-methods\">\n<span id=\"manager-methods\"></span><h3>Manager methods<a class=\"headerlink\" href=\"#manager-methods\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.UserManager\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-prename descclassname\"><span class=\"pre\">models.</span></code><code class=\"sig-name descname\"><span class=\"pre\">UserManager</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.UserManager\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <a class=\"reference internal\" href=\"#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">User</span></code></a> model has a custom manager\nthat has the following helper methods (in addition to the methods provided\nby <a class=\"reference internal\" href=\"../../../topics/auth/customizing/#django.contrib.auth.models.BaseUserManager\" title=\"django.contrib.auth.models.BaseUserManager\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BaseUserManager</span></code></a>):</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.UserManager.create_user\">\n<code class=\"sig-name descname\"><span class=\"pre\">create_user</span></code>(<em><span class=\"n\"><span class=\"pre\">username</span></span></em>, <em><span class=\"n\"><span class=\"pre\">email</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">password</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra_fields</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.models.UserManager.create_user\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Creates, saves and returns a <a class=\"reference internal\" href=\"#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">User</span></code></a>.</p>\n<p>The <a class=\"reference internal\" href=\"#django.contrib.auth.models.User.username\" title=\"django.contrib.auth.models.User.username\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">username</span></code></a> and\n<a class=\"reference internal\" href=\"#django.contrib.auth.models.User.password\" title=\"django.contrib.auth.models.User.password\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">password</span></code></a> are set as given. The\ndomain portion of <a class=\"reference internal\" href=\"#django.contrib.auth.models.User.email\" title=\"django.contrib.auth.models.User.email\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">email</span></code></a> is\nautomatically converted to lowercase, and the returned\n<a class=\"reference internal\" href=\"#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">User</span></code></a> object will have\n<a class=\"reference internal\" href=\"#django.contrib.auth.models.User.is_active\" title=\"django.contrib.auth.models.User.is_active\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_active</span></code></a> set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n<p>If no password is provided,\n<a class=\"reference internal\" href=\"#django.contrib.auth.models.User.set_unusable_password\" title=\"django.contrib.auth.models.User.set_unusable_password\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">set_unusable_password()</span></code></a> will\nbe called.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">extra_fields</span></code> keyword arguments are passed through to the\n<a class=\"reference internal\" href=\"#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">User</span></code></a>\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">__init__</span></code> method to\nallow setting arbitrary fields on a <a class=\"reference internal\" href=\"../../../topics/auth/customizing/#auth-custom-user\"><span class=\"std std-ref\">custom user model</span></a>.</p>\n<p>See <a class=\"reference internal\" href=\"../../../topics/auth/default/#topics-auth-creating-users\"><span class=\"std std-ref\">Creating users</span></a> for example usage.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.UserManager.create_superuser\">\n<code class=\"sig-name descname\"><span class=\"pre\">create_superuser</span></code>(<em><span class=\"n\"><span class=\"pre\">username</span></span></em>, <em><span class=\"n\"><span class=\"pre\">email</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">password</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">extra_fields</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.models.UserManager.create_superuser\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Same as <a class=\"reference internal\" href=\"#django.contrib.auth.models.UserManager.create_user\" title=\"django.contrib.auth.models.UserManager.create_user\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">create_user()</span></code></a>, but sets <a class=\"reference internal\" href=\"#django.contrib.auth.models.User.is_staff\" title=\"django.contrib.auth.models.User.is_staff\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_staff</span></code></a> and\n<a class=\"reference internal\" href=\"#django.contrib.auth.models.User.is_superuser\" title=\"django.contrib.auth.models.User.is_superuser\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_superuser</span></code></a> to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.UserManager.with_perm\">\n<code class=\"sig-name descname\"><span class=\"pre\">with_perm</span></code>(<em><span class=\"n\"><span class=\"pre\">perm</span></span></em>, <em><span class=\"n\"><span class=\"pre\">is_active</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em><span class=\"n\"><span class=\"pre\">include_superusers</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em><span class=\"n\"><span class=\"pre\">backend</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.models.UserManager.with_perm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns users that have the given permission <code class=\"docutils literal notranslate\"><span class=\"pre\">perm</span></code> either in the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;&lt;app</span> <span class=\"pre\">label&gt;.&lt;permission</span> <span class=\"pre\">codename&gt;&quot;</span></code> format or as a\n<a class=\"reference internal\" href=\"#django.contrib.auth.models.Permission\" title=\"django.contrib.auth.models.Permission\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Permission</span></code></a> instance. Returns an\nempty queryset if no users who have the <code class=\"docutils literal notranslate\"><span class=\"pre\">perm</span></code> found.</p>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">is_active</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> (default), returns only active users, or\nif <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>, returns only inactive users. Use <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> to return all\nusers irrespective of active state.</p>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">include_superusers</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> (default), the result will\ninclude superusers.</p>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">backend</span></code> is passed in and it\u2019s defined in\n<a class=\"reference internal\" href=\"../../settings/#std-setting-AUTHENTICATION_BACKENDS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">AUTHENTICATION_BACKENDS</span></code></a>, then this method will use it.\nOtherwise, it will use the <code class=\"docutils literal notranslate\"><span class=\"pre\">backend</span></code> in\n<a class=\"reference internal\" href=\"../../settings/#std-setting-AUTHENTICATION_BACKENDS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">AUTHENTICATION_BACKENDS</span></code></a>, if there is only one, or raise an\nexception.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"s-anonymoususer-object\">\n<span id=\"anonymoususer-object\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">AnonymousUser</span></code> object<a class=\"headerlink\" href=\"#anonymoususer-object\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.AnonymousUser\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-prename descclassname\"><span class=\"pre\">models.</span></code><code class=\"sig-name descname\"><span class=\"pre\">AnonymousUser</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.AnonymousUser\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p><a class=\"reference internal\" href=\"#django.contrib.auth.models.AnonymousUser\" title=\"django.contrib.auth.models.AnonymousUser\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.contrib.auth.models.AnonymousUser</span></code></a> is a class that\nimplements the <a class=\"reference internal\" href=\"#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.contrib.auth.models.User</span></code></a> interface, with\nthese differences:</p>\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"../../../topics/db/models/#automatic-primary-key-fields\"><span class=\"std std-ref\">id</span></a> is always <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</li>\n<li><a class=\"reference internal\" href=\"#django.contrib.auth.models.User.username\" title=\"django.contrib.auth.models.User.username\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">username</span></code></a> is always the empty\nstring.</li>\n<li><a class=\"reference internal\" href=\"#django.contrib.auth.models.User.get_username\" title=\"django.contrib.auth.models.User.get_username\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_username()</span></code></a> always returns\nthe empty string.</li>\n<li><a class=\"reference internal\" href=\"#django.contrib.auth.models.User.is_anonymous\" title=\"django.contrib.auth.models.User.is_anonymous\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_anonymous</span></code></a> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>\ninstead of <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</li>\n<li><a class=\"reference internal\" href=\"#django.contrib.auth.models.User.is_authenticated\" title=\"django.contrib.auth.models.User.is_authenticated\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_authenticated</span></code></a> is\n<code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> instead of <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</li>\n<li><a class=\"reference internal\" href=\"#django.contrib.auth.models.User.is_staff\" title=\"django.contrib.auth.models.User.is_staff\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_staff</span></code></a> and\n<a class=\"reference internal\" href=\"#django.contrib.auth.models.User.is_superuser\" title=\"django.contrib.auth.models.User.is_superuser\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_superuser</span></code></a> are always\n<code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</li>\n<li><a class=\"reference internal\" href=\"#django.contrib.auth.models.User.is_active\" title=\"django.contrib.auth.models.User.is_active\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_active</span></code></a> is always <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</li>\n<li><a class=\"reference internal\" href=\"#django.contrib.auth.models.User.groups\" title=\"django.contrib.auth.models.User.groups\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">groups</span></code></a> and\n<a class=\"reference internal\" href=\"#django.contrib.auth.models.User.user_permissions\" title=\"django.contrib.auth.models.User.user_permissions\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">user_permissions</span></code></a> are always\nempty.</li>\n<li><a class=\"reference internal\" href=\"#django.contrib.auth.models.User.set_password\" title=\"django.contrib.auth.models.User.set_password\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">set_password()</span></code></a>,\n<a class=\"reference internal\" href=\"#django.contrib.auth.models.User.check_password\" title=\"django.contrib.auth.models.User.check_password\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">check_password()</span></code></a>,\n<a class=\"reference internal\" href=\"../../models/instances/#django.db.models.Model.save\" title=\"django.db.models.Model.save\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">save()</span></code></a> and\n<a class=\"reference internal\" href=\"../../models/instances/#django.db.models.Model.delete\" title=\"django.db.models.Model.delete\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">delete()</span></code></a> raise <a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#NotImplementedError\" title=\"(in Python v3.11)\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">NotImplementedError</span></code></a>.</li>\n</ul>\n</dd></dl>\n\n<p>In practice, you probably won\u2019t need to use\n<a class=\"reference internal\" href=\"#django.contrib.auth.models.AnonymousUser\" title=\"django.contrib.auth.models.AnonymousUser\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AnonymousUser</span></code></a> objects on your own, but\nthey\u2019re used by web requests, as explained in the next section.</p>\n</div>\n<div class=\"section\" id=\"s-permission-model\">\n<span id=\"permission-model\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">Permission</span></code> model<a class=\"headerlink\" href=\"#permission-model\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.Permission\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-prename descclassname\"><span class=\"pre\">models.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Permission</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.Permission\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<div class=\"section\" id=\"s-id1\">\n<span id=\"id1\"></span><h3>Fields<a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p><a class=\"reference internal\" href=\"#django.contrib.auth.models.Permission\" title=\"django.contrib.auth.models.Permission\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Permission</span></code></a> objects have the following\nfields:</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-prename descclassname\"><span class=\"pre\">models.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Permission</span></code></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.Permission.name\">\n<code class=\"sig-name descname\"><span class=\"pre\">name</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.Permission.name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Required. 255 characters or fewer. Example: <code class=\"docutils literal notranslate\"><span class=\"pre\">'Can</span> <span class=\"pre\">vote'</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.Permission.content_type\">\n<code class=\"sig-name descname\"><span class=\"pre\">content_type</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.Permission.content_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Required. A reference to the <code class=\"docutils literal notranslate\"><span class=\"pre\">django_content_type</span></code> database table,\nwhich contains a record for each installed model.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.Permission.codename\">\n<code class=\"sig-name descname\"><span class=\"pre\">codename</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.Permission.codename\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Required. 100 characters or fewer. Example: <code class=\"docutils literal notranslate\"><span class=\"pre\">'can_vote'</span></code>.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-id2\">\n<span id=\"id2\"></span><h3>Methods<a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p><a class=\"reference internal\" href=\"#django.contrib.auth.models.Permission\" title=\"django.contrib.auth.models.Permission\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Permission</span></code></a> objects have the standard\ndata-access methods like any other <a class=\"reference internal\" href=\"../../models/instances/\"><span class=\"doc\">Django model</span></a>.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-group-model\">\n<span id=\"group-model\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">Group</span></code> model<a class=\"headerlink\" href=\"#group-model\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.Group\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-prename descclassname\"><span class=\"pre\">models.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Group</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.Group\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<div class=\"section\" id=\"s-id3\">\n<span id=\"id3\"></span><h3>Fields<a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p><a class=\"reference internal\" href=\"#django.contrib.auth.models.Group\" title=\"django.contrib.auth.models.Group\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Group</span></code></a> objects have the following fields:</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-prename descclassname\"><span class=\"pre\">models.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Group</span></code></dt>\n<dd><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.Group.name\">\n<code class=\"sig-name descname\"><span class=\"pre\">name</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.Group.name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Required. 150 characters or fewer. Any characters are permitted.\nExample: <code class=\"docutils literal notranslate\"><span class=\"pre\">'Awesome</span> <span class=\"pre\">Users'</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.models.Group.permissions\">\n<code class=\"sig-name descname\"><span class=\"pre\">permissions</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.models.Group.permissions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Many-to-many field to <a class=\"reference internal\" href=\"#django.contrib.auth.models.Permission\" title=\"django.contrib.auth.models.Permission\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Permission</span></code></a>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">group</span><span class=\"o\">.</span><span class=\"n\">permissions</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">([</span><span class=\"n\">permission_list</span><span class=\"p\">])</span>\n<span class=\"n\">group</span><span class=\"o\">.</span><span class=\"n\">permissions</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">permission</span><span class=\"p\">,</span> <span class=\"n\">permission</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">group</span><span class=\"o\">.</span><span class=\"n\">permissions</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">permission</span><span class=\"p\">,</span> <span class=\"n\">permission</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">group</span><span class=\"o\">.</span><span class=\"n\">permissions</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"s-validators\">\n<span id=\"validators\"></span><h2>Validators<a class=\"headerlink\" href=\"#validators\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.validators.ASCIIUsernameValidator\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-prename descclassname\"><span class=\"pre\">validators.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ASCIIUsernameValidator</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.validators.ASCIIUsernameValidator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A field validator allowing only ASCII letters and numbers, in addition to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">.</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">+</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">-</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">_</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.validators.UnicodeUsernameValidator\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-prename descclassname\"><span class=\"pre\">validators.</span></code><code class=\"sig-name descname\"><span class=\"pre\">UnicodeUsernameValidator</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.validators.UnicodeUsernameValidator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A field validator allowing Unicode characters, in addition to <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">.</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">+</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">-</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">_</span></code>. The default validator for <code class=\"docutils literal notranslate\"><span class=\"pre\">User.username</span></code>.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-module-django.contrib.auth.signals\">\n<span id=\"s-login-and-logout-signals\"></span><span id=\"s-topics-auth-signals\"></span><span id=\"module-django.contrib.auth.signals\"></span><span id=\"login-and-logout-signals\"></span><span id=\"topics-auth-signals\"></span><h2>Login and logout signals<a class=\"headerlink\" href=\"#module-django.contrib.auth.signals\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The auth framework uses the following <a class=\"reference internal\" href=\"../../../topics/signals/\"><span class=\"doc\">signals</span></a> that\ncan be used for notification when a user logs in or out.</p>\n<dl class=\"py data\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.signals.user_logged_in\">\n<code class=\"sig-name descname\"><span class=\"pre\">user_logged_in</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.signals.user_logged_in\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sent when a user logs in successfully.</p>\n<p>Arguments sent with this signal:</p>\n<dl class=\"docutils\">\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">sender</span></code></dt><dd>The class of the user that just logged in.</dd>\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code></dt><dd>The current <a class=\"reference internal\" href=\"../../request-response/#django.http.HttpRequest\" title=\"django.http.HttpRequest\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code></a> instance.</dd>\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">user</span></code></dt><dd>The user instance that just logged in.</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.signals.user_logged_out\">\n<code class=\"sig-name descname\"><span class=\"pre\">user_logged_out</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.signals.user_logged_out\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sent when the logout method is called.</p>\n<dl class=\"docutils\">\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">sender</span></code></dt><dd>As above: the class of the user that just logged out or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>\nif the user was not authenticated.</dd>\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code></dt><dd>The current <a class=\"reference internal\" href=\"../../request-response/#django.http.HttpRequest\" title=\"django.http.HttpRequest\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code></a> instance.</dd>\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">user</span></code></dt><dd>The user instance that just logged out or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> if the\nuser was not authenticated.</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.signals.user_login_failed\">\n<code class=\"sig-name descname\"><span class=\"pre\">user_login_failed</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.signals.user_login_failed\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sent when the user failed to login successfully</p>\n<dl class=\"docutils\">\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">sender</span></code></dt><dd>The name of the module used for authentication.</dd>\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">credentials</span></code></dt><dd>A dictionary of keyword arguments containing the user credentials that were\npassed to <a class=\"reference internal\" href=\"../../../topics/auth/default/#django.contrib.auth.authenticate\" title=\"django.contrib.auth.authenticate\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">authenticate()</span></code></a> or your own custom\nauthentication backend. Credentials matching a set of \u2018sensitive\u2019 patterns,\n(including password) will not be sent in the clear as part of the signal.</dd>\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code></dt><dd>The <a class=\"reference internal\" href=\"../../request-response/#django.http.HttpRequest\" title=\"django.http.HttpRequest\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code></a> object, if one was provided to\n<a class=\"reference internal\" href=\"../../../topics/auth/default/#django.contrib.auth.authenticate\" title=\"django.contrib.auth.authenticate\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">authenticate()</span></code></a>.</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-module-django.contrib.auth.backends\">\n<span id=\"s-authentication-backends\"></span><span id=\"s-authentication-backends-reference\"></span><span id=\"module-django.contrib.auth.backends\"></span><span id=\"authentication-backends\"></span><span id=\"authentication-backends-reference\"></span><h2>Authentication backends<a class=\"headerlink\" href=\"#module-django.contrib.auth.backends\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>This section details the authentication backends that come with Django. For\ninformation on how to use them and how to write your own authentication\nbackends, see the <a class=\"reference internal\" href=\"../../../topics/auth/customizing/#authentication-backends\"><span class=\"std std-ref\">Other authentication sources section</span></a> of the <a class=\"reference internal\" href=\"../../../topics/auth/\"><span class=\"doc\">User authentication guide</span></a>.</p>\n<div class=\"section\" id=\"s-available-authentication-backends\">\n<span id=\"available-authentication-backends\"></span><h3>Available authentication backends<a class=\"headerlink\" href=\"#available-authentication-backends\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The following backends are available in <a class=\"reference internal\" href=\"#module-django.contrib.auth.backends\" title=\"django.contrib.auth.backends: Django's built-in authentication backend classes.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.auth.backends</span></code></a>:</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.BaseBackend\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">BaseBackend</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.backends.BaseBackend\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A base class that provides default implementations for all required\nmethods. By default, it will reject any user and provide no permissions.</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.BaseBackend.get_user_permissions\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_user_permissions</span></code>(<em><span class=\"n\"><span class=\"pre\">user_obj</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.backends.BaseBackend.get_user_permissions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns an empty set.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.BaseBackend.get_group_permissions\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_group_permissions</span></code>(<em><span class=\"n\"><span class=\"pre\">user_obj</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.backends.BaseBackend.get_group_permissions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns an empty set.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.BaseBackend.get_all_permissions\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_all_permissions</span></code>(<em><span class=\"n\"><span class=\"pre\">user_obj</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.backends.BaseBackend.get_all_permissions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Uses <a class=\"reference internal\" href=\"#django.contrib.auth.backends.BaseBackend.get_user_permissions\" title=\"django.contrib.auth.backends.BaseBackend.get_user_permissions\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_user_permissions()</span></code></a> and <a class=\"reference internal\" href=\"#django.contrib.auth.backends.BaseBackend.get_group_permissions\" title=\"django.contrib.auth.backends.BaseBackend.get_group_permissions\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_group_permissions()</span></code></a> to\nget the set of permission strings the <code class=\"docutils literal notranslate\"><span class=\"pre\">user_obj</span></code> has.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.BaseBackend.has_perm\">\n<code class=\"sig-name descname\"><span class=\"pre\">has_perm</span></code>(<em><span class=\"n\"><span class=\"pre\">user_obj</span></span></em>, <em><span class=\"n\"><span class=\"pre\">perm</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.backends.BaseBackend.has_perm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Uses <a class=\"reference internal\" href=\"#django.contrib.auth.backends.BaseBackend.get_all_permissions\" title=\"django.contrib.auth.backends.BaseBackend.get_all_permissions\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_all_permissions()</span></code></a> to check if <code class=\"docutils literal notranslate\"><span class=\"pre\">user_obj</span></code> has the\npermission string <code class=\"docutils literal notranslate\"><span class=\"pre\">perm</span></code>.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.ModelBackend\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ModelBackend</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.backends.ModelBackend\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This is the default authentication backend used by Django.  It\nauthenticates using credentials consisting of a user identifier and\npassword.  For Django\u2019s default user model, the user identifier is the\nusername, for custom user models it is the field specified by\nUSERNAME_FIELD (see <a class=\"reference internal\" href=\"../../../topics/auth/customizing/\"><span class=\"doc\">Customizing Users and authentication</span></a>).</p>\n<p>It also handles the default permissions model as defined for\n<a class=\"reference internal\" href=\"#django.contrib.auth.models.User\" title=\"django.contrib.auth.models.User\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">User</span></code></a> and\n<a class=\"reference internal\" href=\"../../../topics/auth/customizing/#django.contrib.auth.models.PermissionsMixin\" title=\"django.contrib.auth.models.PermissionsMixin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PermissionsMixin</span></code></a>.</p>\n<p><a class=\"reference internal\" href=\"#django.contrib.auth.backends.ModelBackend.has_perm\" title=\"django.contrib.auth.backends.ModelBackend.has_perm\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">has_perm()</span></code></a>, <a class=\"reference internal\" href=\"#django.contrib.auth.backends.ModelBackend.get_all_permissions\" title=\"django.contrib.auth.backends.ModelBackend.get_all_permissions\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_all_permissions()</span></code></a>, <a class=\"reference internal\" href=\"#django.contrib.auth.backends.ModelBackend.get_user_permissions\" title=\"django.contrib.auth.backends.ModelBackend.get_user_permissions\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_user_permissions()</span></code></a>,\nand <a class=\"reference internal\" href=\"#django.contrib.auth.backends.ModelBackend.get_group_permissions\" title=\"django.contrib.auth.backends.ModelBackend.get_group_permissions\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_group_permissions()</span></code></a> allow an object to be passed as a\nparameter for object-specific permissions, but this backend does not\nimplement them other than returning an empty set of permissions if\n<code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span> <span class=\"pre\">is</span> <span class=\"pre\">not</span> <span class=\"pre\">None</span></code>.</p>\n<p><a class=\"reference internal\" href=\"#django.contrib.auth.backends.ModelBackend.with_perm\" title=\"django.contrib.auth.backends.ModelBackend.with_perm\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">with_perm()</span></code></a> also allows an object to be passed as a parameter, but\nunlike others methods it returns an empty queryset if <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span> <span class=\"pre\">is</span> <span class=\"pre\">not</span> <span class=\"pre\">None</span></code>.</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.ModelBackend.authenticate\">\n<code class=\"sig-name descname\"><span class=\"pre\">authenticate</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">username</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">password</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.backends.ModelBackend.authenticate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Tries to authenticate <code class=\"docutils literal notranslate\"><span class=\"pre\">username</span></code> with <code class=\"docutils literal notranslate\"><span class=\"pre\">password</span></code> by calling\n<a class=\"reference internal\" href=\"#django.contrib.auth.models.User.check_password\" title=\"django.contrib.auth.models.User.check_password\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">User.check_password</span></code></a>. If no <code class=\"docutils literal notranslate\"><span class=\"pre\">username</span></code>\nis provided, it tries to fetch a username from <code class=\"docutils literal notranslate\"><span class=\"pre\">kwargs</span></code> using the\nkey <a class=\"reference internal\" href=\"../../../topics/auth/customizing/#django.contrib.auth.models.CustomUser.USERNAME_FIELD\" title=\"django.contrib.auth.models.CustomUser.USERNAME_FIELD\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">CustomUser.USERNAME_FIELD</span></code></a>. Returns an\nauthenticated user or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code> is an <a class=\"reference internal\" href=\"../../request-response/#django.http.HttpRequest\" title=\"django.http.HttpRequest\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code></a> and may be <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>\nif it wasn\u2019t provided to <a class=\"reference internal\" href=\"../../../topics/auth/default/#django.contrib.auth.authenticate\" title=\"django.contrib.auth.authenticate\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">authenticate()</span></code></a>\n(which passes it on to the backend).</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.ModelBackend.get_user_permissions\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_user_permissions</span></code>(<em><span class=\"n\"><span class=\"pre\">user_obj</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.backends.ModelBackend.get_user_permissions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the set of permission strings the <code class=\"docutils literal notranslate\"><span class=\"pre\">user_obj</span></code> has from their\nown user permissions. Returns an empty set if\n<a class=\"reference internal\" href=\"../../../topics/auth/customizing/#django.contrib.auth.models.AbstractBaseUser.is_anonymous\" title=\"django.contrib.auth.models.AbstractBaseUser.is_anonymous\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_anonymous</span></code></a> or\n<a class=\"reference internal\" href=\"../../../topics/auth/customizing/#django.contrib.auth.models.CustomUser.is_active\" title=\"django.contrib.auth.models.CustomUser.is_active\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_active</span></code></a> is <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.ModelBackend.get_group_permissions\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_group_permissions</span></code>(<em><span class=\"n\"><span class=\"pre\">user_obj</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.backends.ModelBackend.get_group_permissions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the set of permission strings the <code class=\"docutils literal notranslate\"><span class=\"pre\">user_obj</span></code> has from the\npermissions of the groups they belong. Returns an empty set if\n<a class=\"reference internal\" href=\"../../../topics/auth/customizing/#django.contrib.auth.models.AbstractBaseUser.is_anonymous\" title=\"django.contrib.auth.models.AbstractBaseUser.is_anonymous\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_anonymous</span></code></a> or\n<a class=\"reference internal\" href=\"../../../topics/auth/customizing/#django.contrib.auth.models.CustomUser.is_active\" title=\"django.contrib.auth.models.CustomUser.is_active\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_active</span></code></a>  is <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.ModelBackend.get_all_permissions\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_all_permissions</span></code>(<em><span class=\"n\"><span class=\"pre\">user_obj</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.backends.ModelBackend.get_all_permissions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the set of permission strings the <code class=\"docutils literal notranslate\"><span class=\"pre\">user_obj</span></code> has, including both\nuser permissions and group permissions. Returns an empty set if\n<a class=\"reference internal\" href=\"../../../topics/auth/customizing/#django.contrib.auth.models.AbstractBaseUser.is_anonymous\" title=\"django.contrib.auth.models.AbstractBaseUser.is_anonymous\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_anonymous</span></code></a> or\n<a class=\"reference internal\" href=\"../../../topics/auth/customizing/#django.contrib.auth.models.CustomUser.is_active\" title=\"django.contrib.auth.models.CustomUser.is_active\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_active</span></code></a> is <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.ModelBackend.has_perm\">\n<code class=\"sig-name descname\"><span class=\"pre\">has_perm</span></code>(<em><span class=\"n\"><span class=\"pre\">user_obj</span></span></em>, <em><span class=\"n\"><span class=\"pre\">perm</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.backends.ModelBackend.has_perm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Uses <a class=\"reference internal\" href=\"#django.contrib.auth.backends.ModelBackend.get_all_permissions\" title=\"django.contrib.auth.backends.ModelBackend.get_all_permissions\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_all_permissions()</span></code></a> to check if <code class=\"docutils literal notranslate\"><span class=\"pre\">user_obj</span></code> has the\npermission string <code class=\"docutils literal notranslate\"><span class=\"pre\">perm</span></code>. Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> if the user is not\n<a class=\"reference internal\" href=\"../../../topics/auth/customizing/#django.contrib.auth.models.CustomUser.is_active\" title=\"django.contrib.auth.models.CustomUser.is_active\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_active</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.ModelBackend.has_module_perms\">\n<code class=\"sig-name descname\"><span class=\"pre\">has_module_perms</span></code>(<em><span class=\"n\"><span class=\"pre\">user_obj</span></span></em>, <em><span class=\"n\"><span class=\"pre\">app_label</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.backends.ModelBackend.has_module_perms\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns whether the <code class=\"docutils literal notranslate\"><span class=\"pre\">user_obj</span></code> has any permissions on the app\n<code class=\"docutils literal notranslate\"><span class=\"pre\">app_label</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.ModelBackend.user_can_authenticate\">\n<code class=\"sig-name descname\"><span class=\"pre\">user_can_authenticate</span></code>()<a class=\"headerlink\" href=\"#django.contrib.auth.backends.ModelBackend.user_can_authenticate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns whether the user is allowed to authenticate. To match the\nbehavior of <a class=\"reference internal\" href=\"../../../topics/auth/default/#django.contrib.auth.forms.AuthenticationForm\" title=\"django.contrib.auth.forms.AuthenticationForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AuthenticationForm</span></code></a>\nwhich <a class=\"reference internal\" href=\"../../../topics/auth/default/#django.contrib.auth.forms.AuthenticationForm.confirm_login_allowed\" title=\"django.contrib.auth.forms.AuthenticationForm.confirm_login_allowed\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">prohibits</span> <span class=\"pre\">inactive</span> <span class=\"pre\">users</span> <span class=\"pre\">from</span> <span class=\"pre\">logging</span> <span class=\"pre\">in</span></code></a>,\nthis method returns <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> for users with <a class=\"reference internal\" href=\"#django.contrib.auth.models.User.is_active\" title=\"django.contrib.auth.models.User.is_active\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_active=False</span></code></a>. Custom user models that\ndon\u2019t have an <a class=\"reference internal\" href=\"../../../topics/auth/customizing/#django.contrib.auth.models.CustomUser.is_active\" title=\"django.contrib.auth.models.CustomUser.is_active\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_active</span></code></a>\nfield are allowed.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.ModelBackend.with_perm\">\n<code class=\"sig-name descname\"><span class=\"pre\">with_perm</span></code>(<em><span class=\"n\"><span class=\"pre\">perm</span></span></em>, <em><span class=\"n\"><span class=\"pre\">is_active</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em><span class=\"n\"><span class=\"pre\">include_superusers</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.backends.ModelBackend.with_perm\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns all active users who have the permission <code class=\"docutils literal notranslate\"><span class=\"pre\">perm</span></code> either in\nthe form of <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;&lt;app</span> <span class=\"pre\">label&gt;.&lt;permission</span> <span class=\"pre\">codename&gt;&quot;</span></code> or a\n<a class=\"reference internal\" href=\"#django.contrib.auth.models.Permission\" title=\"django.contrib.auth.models.Permission\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Permission</span></code></a> instance. Returns an\nempty queryset if no users who have the <code class=\"docutils literal notranslate\"><span class=\"pre\">perm</span></code> found.</p>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">is_active</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> (default), returns only active users, or\nif <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>, returns only inactive users. Use <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> to return all\nusers irrespective of active state.</p>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">include_superusers</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> (default), the result will\ninclude superusers.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.AllowAllUsersModelBackend\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">AllowAllUsersModelBackend</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.backends.AllowAllUsersModelBackend\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Same as <a class=\"reference internal\" href=\"#django.contrib.auth.backends.ModelBackend\" title=\"django.contrib.auth.backends.ModelBackend\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelBackend</span></code></a> except that it doesn\u2019t reject inactive users\nbecause <a class=\"reference internal\" href=\"#django.contrib.auth.backends.ModelBackend.user_can_authenticate\" title=\"django.contrib.auth.backends.ModelBackend.user_can_authenticate\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">user_can_authenticate()</span></code></a> always returns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n<p>When using this backend, you\u2019ll likely want to customize the\n<a class=\"reference internal\" href=\"../../../topics/auth/default/#django.contrib.auth.forms.AuthenticationForm\" title=\"django.contrib.auth.forms.AuthenticationForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AuthenticationForm</span></code></a> used by the\n<a class=\"reference internal\" href=\"../../../topics/auth/default/#django.contrib.auth.views.LoginView\" title=\"django.contrib.auth.views.LoginView\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LoginView</span></code></a> by overriding the\n<a class=\"reference internal\" href=\"../../../topics/auth/default/#django.contrib.auth.forms.AuthenticationForm.confirm_login_allowed\" title=\"django.contrib.auth.forms.AuthenticationForm.confirm_login_allowed\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">confirm_login_allowed()</span></code></a>\nmethod as it rejects inactive users.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.RemoteUserBackend\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">RemoteUserBackend</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.backends.RemoteUserBackend\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use this backend to take advantage of external-to-Django-handled\nauthentication.  It authenticates using usernames passed in\n<a class=\"reference internal\" href=\"../../request-response/#django.http.HttpRequest.META\" title=\"django.http.HttpRequest.META\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">request.META['REMOTE_USER']</span></code></a>.  See\nthe <a class=\"reference internal\" href=\"../../../howto/auth-remote-user/\"><span class=\"doc\">Authenticating against REMOTE_USER</span></a>\ndocumentation.</p>\n<p>If you need more control, you can create your own authentication backend\nthat inherits from this class and override these attributes or methods:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.RemoteUserBackend.create_unknown_user\">\n<code class=\"sig-name descname\"><span class=\"pre\">create_unknown_user</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.backends.RemoteUserBackend.create_unknown_user\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>. Determines whether or not a user object is\ncreated if not already in the database  Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.RemoteUserBackend.authenticate\">\n<code class=\"sig-name descname\"><span class=\"pre\">authenticate</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">remote_user</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.backends.RemoteUserBackend.authenticate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The username passed as <code class=\"docutils literal notranslate\"><span class=\"pre\">remote_user</span></code> is considered trusted. This\nmethod returns the user object with the given username, creating a new\nuser object if <a class=\"reference internal\" href=\"#django.contrib.auth.backends.RemoteUserBackend.create_unknown_user\" title=\"django.contrib.auth.backends.RemoteUserBackend.create_unknown_user\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">create_unknown_user</span></code></a> is\n<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n<p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> if <a class=\"reference internal\" href=\"#django.contrib.auth.backends.RemoteUserBackend.create_unknown_user\" title=\"django.contrib.auth.backends.RemoteUserBackend.create_unknown_user\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">create_unknown_user</span></code></a> is\n<code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> and a <code class=\"docutils literal notranslate\"><span class=\"pre\">User</span></code> object with the given username is not found in\nthe database.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code> is an <a class=\"reference internal\" href=\"../../request-response/#django.http.HttpRequest\" title=\"django.http.HttpRequest\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code></a> and may be <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>\nif it wasn\u2019t provided to <a class=\"reference internal\" href=\"../../../topics/auth/default/#django.contrib.auth.authenticate\" title=\"django.contrib.auth.authenticate\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">authenticate()</span></code></a>\n(which passes it on to the backend).</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.RemoteUserBackend.clean_username\">\n<code class=\"sig-name descname\"><span class=\"pre\">clean_username</span></code>(<em><span class=\"n\"><span class=\"pre\">username</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.backends.RemoteUserBackend.clean_username\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Performs any cleaning on the <code class=\"docutils literal notranslate\"><span class=\"pre\">username</span></code> (e.g. stripping LDAP DN\ninformation) prior to using it to get or create a user object. Returns\nthe cleaned username.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.RemoteUserBackend.configure_user\">\n<code class=\"sig-name descname\"><span class=\"pre\">configure_user</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">user</span></span></em>, <em><span class=\"n\"><span class=\"pre\">created</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.auth.backends.RemoteUserBackend.configure_user\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Configures the user on each authentication attempt. This method is\ncalled immediately after fetching or creating the user being\nauthenticated, and can be used to perform custom setup actions, such as\nsetting the user\u2019s groups based on attributes in an LDAP directory.\nReturns the user object.</p>\n<p>The setup can be performed either once when the user is created\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">created</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>) or on existing users (<code class=\"docutils literal notranslate\"><span class=\"pre\">created</span></code> is\n<code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>) as a way of synchronizing attributes between the remote and\nthe local systems.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code> is an <a class=\"reference internal\" href=\"../../request-response/#django.http.HttpRequest\" title=\"django.http.HttpRequest\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code></a> and may be <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>\nif it wasn\u2019t provided to <a class=\"reference internal\" href=\"../../../topics/auth/default/#django.contrib.auth.authenticate\" title=\"django.contrib.auth.authenticate\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">authenticate()</span></code></a>\n(which passes it on to the backend).</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.RemoteUserBackend.user_can_authenticate\">\n<code class=\"sig-name descname\"><span class=\"pre\">user_can_authenticate</span></code>()<a class=\"headerlink\" href=\"#django.contrib.auth.backends.RemoteUserBackend.user_can_authenticate\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns whether the user is allowed to authenticate. This method\nreturns <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> for users with <a class=\"reference internal\" href=\"#django.contrib.auth.models.User.is_active\" title=\"django.contrib.auth.models.User.is_active\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_active=False</span></code></a>. Custom user models that\ndon\u2019t have an <a class=\"reference internal\" href=\"../../../topics/auth/customizing/#django.contrib.auth.models.CustomUser.is_active\" title=\"django.contrib.auth.models.CustomUser.is_active\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_active</span></code></a>\nfield are allowed.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.backends.AllowAllUsersRemoteUserBackend\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">AllowAllUsersRemoteUserBackend</span></code><a class=\"headerlink\" href=\"#django.contrib.auth.backends.AllowAllUsersRemoteUserBackend\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Same as <a class=\"reference internal\" href=\"#django.contrib.auth.backends.RemoteUserBackend\" title=\"django.contrib.auth.backends.RemoteUserBackend\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RemoteUserBackend</span></code></a> except that it doesn\u2019t reject inactive\nusers because <a class=\"reference internal\" href=\"#django.contrib.auth.backends.RemoteUserBackend.user_can_authenticate\" title=\"django.contrib.auth.backends.RemoteUserBackend.user_can_authenticate\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">user_can_authenticate</span></code></a> always\nreturns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"s-utility-functions\">\n<span id=\"utility-functions\"></span><h2>Utility functions<a class=\"headerlink\" href=\"#utility-functions\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.auth.get_user\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_user</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/auth/#get_user\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.auth.get_user\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the user model instance associated with the given <code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code>\u2019s\nsession.</p>\n<p>It checks if the authentication backend stored in the session is present in\n<a class=\"reference internal\" href=\"../../settings/#std-setting-AUTHENTICATION_BACKENDS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">AUTHENTICATION_BACKENDS</span></code></a>. If so, it uses the backend\u2019s\n<code class=\"docutils literal notranslate\"><span class=\"pre\">get_user()</span></code> method to retrieve the user model instance and then verifies\nthe session by calling the user model\u2019s\n<a class=\"reference internal\" href=\"../../../topics/auth/customizing/#django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash\" title=\"django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_session_auth_hash()</span></code></a>\nmethod. If the verification fails and <a class=\"reference internal\" href=\"../../settings/#std-setting-SECRET_KEY_FALLBACKS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECRET_KEY_FALLBACKS</span></code></a> are\nprovided, it verifies the session against each fallback key using\n<a class=\"reference internal\" href=\"../../../topics/auth/customizing/#django.contrib.auth.models.AbstractBaseUser.get_session_auth_fallback_hash\" title=\"django.contrib.auth.models.AbstractBaseUser.get_session_auth_fallback_hash\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_session_auth_fallback_hash()</span></code></a>.</p>\n<p>Returns an instance of <a class=\"reference internal\" href=\"#django.contrib.auth.models.AnonymousUser\" title=\"django.contrib.auth.models.AnonymousUser\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AnonymousUser</span></code></a>\nif the authentication backend stored in the session is no longer in\n<a class=\"reference internal\" href=\"../../settings/#std-setting-AUTHENTICATION_BACKENDS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">AUTHENTICATION_BACKENDS</span></code></a>, if a user isn\u2019t returned by the\nbackend\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">get_user()</span></code> method, or if the session auth hash doesn\u2019t\nvalidate.</p>\n<div class=\"versionchanged\">\n<span class=\"title\">Changed in Django 4.1.8:</span> <p>Fallback verification with <a class=\"reference internal\" href=\"../../settings/#std-setting-SECRET_KEY_FALLBACKS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">SECRET_KEY_FALLBACKS</span></code></a> was added.</p>\n</div>\n</dd></dl>\n\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["ref/contrib/contenttypes", "The contenttypes framework", "N", "next"], ["ref/contrib/admin/javascript", "JavaScript customizations in the admin", "P", "previous"]], "sourcename": "ref/contrib/auth.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\"><code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.auth</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#user-model\"><code class=\"docutils literal notranslate\"><span class=\"pre\">User</span></code> model</a><ul>\n<li><a class=\"reference internal\" href=\"#fields\">Fields</a></li>\n<li><a class=\"reference internal\" href=\"#attributes\">Attributes</a></li>\n<li><a class=\"reference internal\" href=\"#methods\">Methods</a></li>\n<li><a class=\"reference internal\" href=\"#manager-methods\">Manager methods</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#anonymoususer-object\"><code class=\"docutils literal notranslate\"><span class=\"pre\">AnonymousUser</span></code> object</a></li>\n<li><a class=\"reference internal\" href=\"#permission-model\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Permission</span></code> model</a><ul>\n<li><a class=\"reference internal\" href=\"#id1\">Fields</a></li>\n<li><a class=\"reference internal\" href=\"#id2\">Methods</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#group-model\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Group</span></code> model</a><ul>\n<li><a class=\"reference internal\" href=\"#id3\">Fields</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#validators\">Validators</a></li>\n<li><a class=\"reference internal\" href=\"#module-django.contrib.auth.signals\">Login and logout signals</a></li>\n<li><a class=\"reference internal\" href=\"#module-django.contrib.auth.backends\">Authentication backends</a><ul>\n<li><a class=\"reference internal\" href=\"#available-authentication-backends\">Available authentication backends</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#utility-functions\">Utility functions</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "ref/contrib/auth", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
