{"parents": [{"link": "../../", "title": "API Reference"}, {"link": "../", "title": "<code class=\"docutils literal notranslate\"><span class=\"pre\">contrib</span></code> packages"}], "prev": {"link": "../", "title": "<code class=\"docutils literal notranslate\"><span class=\"pre\">contrib</span></code> packages"}, "next": {"link": "actions/", "title": "Admin actions"}, "title": "The Django admin site", "meta": {}, "body": "<div class=\"section\" id=\"s-module-django.contrib.admin\">\n<span id=\"s-the-django-admin-site\"></span><span id=\"module-django.contrib.admin\"></span><span id=\"the-django-admin-site\"></span><h1>The Django admin site<a class=\"headerlink\" href=\"#module-django.contrib.admin\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>One of the most powerful parts of Django is the automatic admin interface. It\nreads metadata from your models to provide a quick, model-centric interface\nwhere trusted users can manage content on your site. The admin\u2019s recommended\nuse is limited to an organization\u2019s internal management tool. It\u2019s not intended\nfor building your entire front end around.</p>\n<p>The admin has many hooks for customization, but beware of trying to use those\nhooks exclusively. If you need to provide a more process-centric interface\nthat abstracts away the implementation details of database tables and fields,\nthen it\u2019s probably time to write your own views.</p>\n<p>In this document we discuss how to activate, use, and customize Django\u2019s admin\ninterface.</p>\n<div class=\"section\" id=\"s-overview\">\n<span id=\"overview\"></span><h2>Overview<a class=\"headerlink\" href=\"#overview\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The admin is enabled in the default project template used by\n<a class=\"reference internal\" href=\"../../django-admin/#django-admin-startproject\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">startproject</span></code></a>.</p>\n<p>If you\u2019re not using the default project template, here are the requirements:</p>\n<ol class=\"arabic simple\">\n<li>Add <code class=\"docutils literal notranslate\"><span class=\"pre\">'django.contrib.admin'</span></code> and its dependencies -\n<a class=\"reference internal\" href=\"../../../topics/auth/#module-django.contrib.auth\" title=\"django.contrib.auth: Django's authentication framework.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.auth</span></code></a>, <a class=\"reference internal\" href=\"../contenttypes/#module-django.contrib.contenttypes\" title=\"django.contrib.contenttypes: Provides generic interface to installed models.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.contenttypes</span></code></a>,\n<a class=\"reference internal\" href=\"../messages/#module-django.contrib.messages\" title=\"django.contrib.messages: Provides cookie- and session-based temporary message storage.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.messages</span></code></a>, and <a class=\"reference internal\" href=\"../../../topics/http/sessions/#module-django.contrib.sessions\" title=\"django.contrib.sessions: Provides session management for Django projects.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.sessions</span></code></a> - to your\n<a class=\"reference internal\" href=\"../../settings/#std-setting-INSTALLED_APPS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">INSTALLED_APPS</span></code></a> setting.</li>\n<li>Configure a <a class=\"reference internal\" href=\"../../../topics/templates/#django.template.backends.django.DjangoTemplates\" title=\"django.template.backends.django.DjangoTemplates\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DjangoTemplates</span></code></a>\nbackend in your <a class=\"reference internal\" href=\"../../settings/#std-setting-TEMPLATES\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">TEMPLATES</span></code></a> setting with\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.template.context_processors.request</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.auth.context_processors.auth</span></code>, and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.messages.context_processors.messages</span></code> in\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">'context_processors'</span></code> option of <a class=\"reference internal\" href=\"../../settings/#std-setting-TEMPLATES-OPTIONS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">OPTIONS</span></code></a>.</li>\n<li>If you\u2019ve customized the <a class=\"reference internal\" href=\"../../settings/#std-setting-MIDDLEWARE\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">MIDDLEWARE</span></code></a> setting,\n<a class=\"reference internal\" href=\"../../middleware/#django.contrib.auth.middleware.AuthenticationMiddleware\" title=\"django.contrib.auth.middleware.AuthenticationMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.contrib.auth.middleware.AuthenticationMiddleware</span></code></a> and\n<a class=\"reference internal\" href=\"../../middleware/#django.contrib.messages.middleware.MessageMiddleware\" title=\"django.contrib.messages.middleware.MessageMiddleware\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.contrib.messages.middleware.MessageMiddleware</span></code></a> must be\nincluded.</li>\n<li><a class=\"reference internal\" href=\"#hooking-adminsite-to-urlconf\"><span class=\"std std-ref\">Hook the admin\u2019s URLs into your URLconf</span></a>.</li>\n</ol>\n<p>After you\u2019ve taken these steps, you\u2019ll be able to use the admin site by\nvisiting the URL you hooked it into (<code class=\"docutils literal notranslate\"><span class=\"pre\">/admin/</span></code>, by default).</p>\n<p>If you need to create a user to login with, use the <a class=\"reference internal\" href=\"../../django-admin/#django-admin-createsuperuser\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">createsuperuser</span></code></a>\ncommand. By default, logging in to the admin requires that the user has the\n<a class=\"reference internal\" href=\"../auth/#django.contrib.auth.models.User.is_staff\" title=\"django.contrib.auth.models.User.is_staff\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">is_staff</span></code></a> attribute set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n<p>Finally, determine which of your application\u2019s models should be editable in the\nadmin interface. For each of those models, register them with the admin as\ndescribed in <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin\" title=\"django.contrib.admin.ModelAdmin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code></a>.</p>\n<div class=\"section\" id=\"s-other-topics\">\n<span id=\"other-topics\"></span><h3>Other topics<a class=\"headerlink\" href=\"#other-topics\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<div class=\"toctree-wrapper compound\">\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"actions/\">Admin actions</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"filters/\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> List Filters</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"admindocs/\">The Django admin documentation generator</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"javascript/\">JavaScript customizations in the admin</a></li>\n</ul>\n</div>\n<div class=\"admonition seealso\">\n<p class=\"first admonition-title\">See also</p>\n<p>For information about serving the static files (images, JavaScript, and\nCSS) associated with the admin in production, see <a class=\"reference internal\" href=\"../../../howto/deployment/wsgi/modwsgi/#serving-files\"><span class=\"std std-ref\">Serving files</span></a>.</p>\n<p class=\"last\">Having problems?  Try <a class=\"reference internal\" href=\"../../../faq/admin/\"><span class=\"doc\">FAQ: The admin</span></a>.</p>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"s-modeladmin-objects\">\n<span id=\"modeladmin-objects\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> objects<a class=\"headerlink\" href=\"#modeladmin-objects\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ModelAdmin</span></code><a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> class is the representation of a model in the admin\ninterface. Usually, these are stored in a file named <code class=\"docutils literal notranslate\"><span class=\"pre\">admin.py</span></code> in your\napplication. Let\u2019s take a look at an example of the <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">myapp.models</span> <span class=\"kn\">import</span> <span class=\"n\">Author</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AuthorAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">Author</span><span class=\"p\">,</span> <span class=\"n\">AuthorAdmin</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"admonition-do-you-need-a-modeladmin-object-at-all admonition\">\n<p class=\"first admonition-title\">Do you need a <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> object at all?</p>\n<p>In the preceding example, the <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> class doesn\u2019t define any\ncustom values (yet). As a result, the default admin interface will be\nprovided. If you are happy with the default admin interface, you don\u2019t\nneed to define a <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> object at all \u2013 you can register the\nmodel class without providing a <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> description. The\npreceding example could be simplified to:</p>\n<div class=\"last highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">myapp.models</span> <span class=\"kn\">import</span> <span class=\"n\">Author</span>\n\n<span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">Author</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</dd></dl>\n\n<div class=\"section\" id=\"s-the-register-decorator\">\n<span id=\"the-register-decorator\"></span><h3>The <code class=\"docutils literal notranslate\"><span class=\"pre\">register</span></code> decorator<a class=\"headerlink\" href=\"#the-register-decorator\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.register\">\n<code class=\"sig-name descname\"><span class=\"pre\">register</span></code>(<em><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">models</span></span></em>, <em><span class=\"n\"><span class=\"pre\">site</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">django.contrib.admin.sites.site</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/decorators/#register\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.register\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>There is also a decorator for registering your <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> classes:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">Author</span>\n\n\n<span class=\"nd\">@admin</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">Author</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">AuthorAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<p>It\u2019s given one or more model classes to register with the <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code>.\nIf you\u2019re using a custom <a class=\"reference internal\" href=\"#django.contrib.admin.AdminSite\" title=\"django.contrib.admin.AdminSite\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code></a>, pass it using the <code class=\"docutils literal notranslate\"><span class=\"pre\">site</span></code> keyword\nargument:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">Author</span><span class=\"p\">,</span> <span class=\"n\">Editor</span><span class=\"p\">,</span> <span class=\"n\">Reader</span>\n<span class=\"kn\">from</span> <span class=\"nn\">myproject.admin_site</span> <span class=\"kn\">import</span> <span class=\"n\">custom_admin_site</span>\n\n\n<span class=\"nd\">@admin</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">Author</span><span class=\"p\">,</span> <span class=\"n\">Reader</span><span class=\"p\">,</span> <span class=\"n\">Editor</span><span class=\"p\">,</span> <span class=\"n\">site</span><span class=\"o\">=</span><span class=\"n\">custom_admin_site</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<p>You can\u2019t use this decorator if you have to reference your model admin\nclass in its <code class=\"docutils literal notranslate\"><span class=\"pre\">__init__()</span></code> method, e.g.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">super(PersonAdmin,</span> <span class=\"pre\">self).__init__(*args,</span> <span class=\"pre\">**kwargs)</span></code>. You can use\n<code class=\"docutils literal notranslate\"><span class=\"pre\">super().__init__(*args,</span> <span class=\"pre\">**kwargs)</span></code>.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-discovery-of-admin-files\">\n<span id=\"discovery-of-admin-files\"></span><h3>Discovery of admin files<a class=\"headerlink\" href=\"#discovery-of-admin-files\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>When you put <code class=\"docutils literal notranslate\"><span class=\"pre\">'django.contrib.admin'</span></code> in your <a class=\"reference internal\" href=\"../../settings/#std-setting-INSTALLED_APPS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">INSTALLED_APPS</span></code></a>\nsetting, Django automatically looks for an <code class=\"docutils literal notranslate\"><span class=\"pre\">admin</span></code> module in each\napplication and imports it.</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.apps.AdminConfig\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-prename descclassname\"><span class=\"pre\">apps.</span></code><code class=\"sig-name descname\"><span class=\"pre\">AdminConfig</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.apps.AdminConfig\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This is the default <a class=\"reference internal\" href=\"../../applications/#django.apps.AppConfig\" title=\"django.apps.AppConfig\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AppConfig</span></code></a> class for the admin.\nIt calls <a class=\"reference internal\" href=\"#django.contrib.admin.autodiscover\" title=\"django.contrib.admin.autodiscover\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">autodiscover()</span></code></a> when Django starts.</p>\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.apps.SimpleAdminConfig\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-prename descclassname\"><span class=\"pre\">apps.</span></code><code class=\"sig-name descname\"><span class=\"pre\">SimpleAdminConfig</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.apps.SimpleAdminConfig\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This class works like <a class=\"reference internal\" href=\"#django.contrib.admin.apps.AdminConfig\" title=\"django.contrib.admin.apps.AdminConfig\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AdminConfig</span></code></a>,\nexcept it doesn\u2019t call <a class=\"reference internal\" href=\"#django.contrib.admin.autodiscover\" title=\"django.contrib.admin.autodiscover\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">autodiscover()</span></code></a>.</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.apps.SimpleAdminConfig.default_site\">\n<code class=\"sig-name descname\"><span class=\"pre\">default_site</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.apps.SimpleAdminConfig.default_site\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A dotted import path to the default admin site\u2019s class or to a callable\nthat returns a site instance. Defaults to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'django.contrib.admin.sites.AdminSite'</span></code>. See\n<a class=\"reference internal\" href=\"#overriding-default-admin-site\"><span class=\"std std-ref\">Overriding the default admin site</span></a> for usage.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.autodiscover\">\n<code class=\"sig-name descname\"><span class=\"pre\">autodiscover</span></code>()<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/#autodiscover\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.autodiscover\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This function attempts to import an <code class=\"docutils literal notranslate\"><span class=\"pre\">admin</span></code> module in each installed\napplication. Such modules are expected to register models with the admin.</p>\n<p>Typically you won\u2019t need to call this function directly as\n<a class=\"reference internal\" href=\"#django.contrib.admin.apps.AdminConfig\" title=\"django.contrib.admin.apps.AdminConfig\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AdminConfig</span></code></a> calls it when Django starts.</p>\n</dd></dl>\n\n<p>If you are using a custom <code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code>, it is common to import all of the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> subclasses into your code and register them to the custom\n<code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code>. In that case, in order to disable auto-discovery, you should\nput <code class=\"docutils literal notranslate\"><span class=\"pre\">'django.contrib.admin.apps.SimpleAdminConfig'</span></code> instead of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'django.contrib.admin'</span></code> in your <a class=\"reference internal\" href=\"../../settings/#std-setting-INSTALLED_APPS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">INSTALLED_APPS</span></code></a> setting.</p>\n</div>\n<div class=\"section\" id=\"s-modeladmin-options\">\n<span id=\"modeladmin-options\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> options<a class=\"headerlink\" href=\"#modeladmin-options\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> is very flexible. It has several options for dealing with\ncustomizing the interface. All options are defined on the <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code>\nsubclass:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AuthorAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">date_hierarchy</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;pub_date&quot;</span>\n</pre></div>\n</div>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.actions\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">actions</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.actions\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A list of actions to make available on the change list page. See\n<a class=\"reference internal\" href=\"actions/\"><span class=\"doc\">Admin actions</span></a> for details.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.actions_on_top\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">actions_on_top</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.actions_on_top\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.actions_on_bottom\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">actions_on_bottom</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.actions_on_bottom\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Controls where on the page the actions bar appears. By default, the admin\nchangelist displays actions at the top of the page (<code class=\"docutils literal notranslate\"><span class=\"pre\">actions_on_top</span> <span class=\"pre\">=</span> <span class=\"pre\">True;</span>\n<span class=\"pre\">actions_on_bottom</span> <span class=\"pre\">=</span> <span class=\"pre\">False</span></code>).</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.actions_selection_counter\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">actions_selection_counter</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.actions_selection_counter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Controls whether a selection counter is displayed next to the action dropdown.\nBy default, the admin changelist will display it\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">actions_selection_counter</span> <span class=\"pre\">=</span> <span class=\"pre\">True</span></code>).</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.date_hierarchy\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">date_hierarchy</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.date_hierarchy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set <code class=\"docutils literal notranslate\"><span class=\"pre\">date_hierarchy</span></code> to the name of a <code class=\"docutils literal notranslate\"><span class=\"pre\">DateField</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code>\nin your model, and the change list page will include a date-based drilldown\nnavigation by that field.</p>\n<p>Example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">date_hierarchy</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;pub_date&quot;</span>\n</pre></div>\n</div>\n<p>You can also specify a field on a related model using the <code class=\"docutils literal notranslate\"><span class=\"pre\">__</span></code> lookup,\nfor example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">date_hierarchy</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;author__pub_date&quot;</span>\n</pre></div>\n</div>\n<p>This will intelligently populate itself based on available data,\ne.g. if all the dates are in one month, it\u2019ll show the day-level\ndrill-down only.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\"><code class=\"docutils literal notranslate\"><span class=\"pre\">date_hierarchy</span></code> uses <a class=\"reference internal\" href=\"../../models/querysets/#django.db.models.query.QuerySet.datetimes\" title=\"django.db.models.query.QuerySet.datetimes\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">QuerySet.datetimes()</span></code></a> internally. Please refer\nto its documentation for some caveats when time zone support is\nenabled (<a class=\"reference internal\" href=\"../../settings/#std-setting-USE_TZ\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">USE_TZ</span> <span class=\"pre\">=</span> <span class=\"pre\">True</span></code></a>).</p>\n</div>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.empty_value_display\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">empty_value_display</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.empty_value_display\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This attribute overrides the default display value for record\u2019s fields that\nare empty (<code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, empty string, etc.). The default value is <code class=\"docutils literal notranslate\"><span class=\"pre\">-</span></code> (a\ndash). For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AuthorAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">empty_value_display</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;-empty-&quot;</span>\n</pre></div>\n</div>\n<p>You can also override <code class=\"docutils literal notranslate\"><span class=\"pre\">empty_value_display</span></code> for all admin pages with\n<a class=\"reference internal\" href=\"#django.contrib.admin.AdminSite.empty_value_display\" title=\"django.contrib.admin.AdminSite.empty_value_display\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">AdminSite.empty_value_display</span></code></a>, or for specific fields like this:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AuthorAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;title&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;view_birth_date&quot;</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@admin</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">empty_value</span><span class=\"o\">=</span><span class=\"s2\">&quot;???&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">view_birth_date</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">birth_date</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.exclude\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">exclude</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.exclude\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This attribute, if given, should be a list of field names to exclude from\nthe form.</p>\n<p>For example, let\u2019s consider the following model:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Author</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"n\">birth_date</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateField</span><span class=\"p\">(</span><span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>If you want a form for the <code class=\"docutils literal notranslate\"><span class=\"pre\">Author</span></code> model that includes only the <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code>\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">title</span></code> fields, you would specify <code class=\"docutils literal notranslate\"><span class=\"pre\">fields</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">exclude</span></code> like\nthis:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AuthorAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;title&quot;</span><span class=\"p\">]</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AuthorAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">exclude</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;birth_date&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>Since the Author model only has three fields, <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">title</span></code>, and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">birth_date</span></code>, the forms resulting from the above declarations will\ncontain exactly the same fields.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.fields\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">fields</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.fields\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use the <code class=\"docutils literal notranslate\"><span class=\"pre\">fields</span></code> option to make simple layout changes in the forms on\nthe \u201cadd\u201d and \u201cchange\u201d pages such as showing only a subset of available\nfields, modifying their order, or grouping them into rows. For example, you\ncould define a simpler version of the admin form for the\n<a class=\"reference internal\" href=\"../flatpages/#django.contrib.flatpages.models.FlatPage\" title=\"django.contrib.flatpages.models.FlatPage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.contrib.flatpages.models.FlatPage</span></code></a> model as follows:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">FlatPageAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;url&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;title&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;content&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>In the above example, only the fields <code class=\"docutils literal notranslate\"><span class=\"pre\">url</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">title</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">content</span></code>\nwill be displayed, sequentially, in the form. <code class=\"docutils literal notranslate\"><span class=\"pre\">fields</span></code> can contain\nvalues defined in <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.readonly_fields\" title=\"django.contrib.admin.ModelAdmin.readonly_fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.readonly_fields</span></code></a> to be displayed as\nread-only.</p>\n<p>For more complex layout needs, see the <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.fieldsets\" title=\"django.contrib.admin.ModelAdmin.fieldsets\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">fieldsets</span></code></a> option.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">fields</span></code> option accepts the same types of values as\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.list_display\" title=\"django.contrib.admin.ModelAdmin.list_display\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">list_display</span></code></a>, except that callables aren\u2019t accepted.\nNames of model and model admin methods will only be used if they\u2019re listed\nin <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.readonly_fields\" title=\"django.contrib.admin.ModelAdmin.readonly_fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">readonly_fields</span></code></a>.</p>\n<p>To display multiple fields on the same line, wrap those fields in their own\ntuple. In this example, the <code class=\"docutils literal notranslate\"><span class=\"pre\">url</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">title</span></code> fields will display on the\nsame line and the <code class=\"docutils literal notranslate\"><span class=\"pre\">content</span></code> field will be displayed below them on its\nown line:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">FlatPageAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"s2\">&quot;url&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;title&quot;</span><span class=\"p\">),</span> <span class=\"s2\">&quot;content&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<div class=\"admonition-possible-confusion-with-the-modeladmin-fieldsets-option admonition\">\n<p class=\"first admonition-title\">Possible confusion with the <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin.fieldsets</span></code> option</p>\n<p class=\"last\">This <code class=\"docutils literal notranslate\"><span class=\"pre\">fields</span></code> option should not be confused with the <code class=\"docutils literal notranslate\"><span class=\"pre\">fields</span></code>\ndictionary key that is within the <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.fieldsets\" title=\"django.contrib.admin.ModelAdmin.fieldsets\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">fieldsets</span></code></a> option,\nas described in the next section.</p>\n</div>\n<p>If neither <code class=\"docutils literal notranslate\"><span class=\"pre\">fields</span></code> nor <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.fieldsets\" title=\"django.contrib.admin.ModelAdmin.fieldsets\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">fieldsets</span></code></a> options are present,\nDjango will default to displaying each field that isn\u2019t an <code class=\"docutils literal notranslate\"><span class=\"pre\">AutoField</span></code> and\nhas <code class=\"docutils literal notranslate\"><span class=\"pre\">editable=True</span></code>, in a single fieldset, in the same order as the fields\nare defined in the model.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.fieldsets\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">fieldsets</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.fieldsets\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set <code class=\"docutils literal notranslate\"><span class=\"pre\">fieldsets</span></code> to control the layout of admin \u201cadd\u201d and \u201cchange\u201d pages.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">fieldsets</span></code> is a list of two-tuples, in which each two-tuple represents a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;fieldset&gt;</span></code> on the admin form page. (A <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;fieldset&gt;</span></code> is a \u201csection\u201d of\nthe form.)</p>\n<p>The two-tuples are in the format <code class=\"docutils literal notranslate\"><span class=\"pre\">(name,</span> <span class=\"pre\">field_options)</span></code>, where <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code>\nis a string representing the title of the fieldset and <code class=\"docutils literal notranslate\"><span class=\"pre\">field_options</span></code> is\na dictionary of information about the fieldset, including a list of fields\nto be displayed in it.</p>\n<p>A full example, taken from the\n<a class=\"reference internal\" href=\"../flatpages/#django.contrib.flatpages.models.FlatPage\" title=\"django.contrib.flatpages.models.FlatPage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.contrib.flatpages.models.FlatPage</span></code></a> model:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">FlatPageAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">fieldsets</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span>\n            <span class=\"kc\">None</span><span class=\"p\">,</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;fields&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;url&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;title&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;content&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;sites&quot;</span><span class=\"p\">],</span>\n            <span class=\"p\">},</span>\n        <span class=\"p\">),</span>\n        <span class=\"p\">(</span>\n            <span class=\"s2\">&quot;Advanced options&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;classes&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;collapse&quot;</span><span class=\"p\">],</span>\n                <span class=\"s2\">&quot;fields&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;registration_required&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;template_name&quot;</span><span class=\"p\">],</span>\n            <span class=\"p\">},</span>\n        <span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>This results in an admin page that looks like:</p>\n<img alt=\"../../../_images/fieldsets.png\" src=\"../../../_images/fieldsets.png\" />\n<p>If neither <code class=\"docutils literal notranslate\"><span class=\"pre\">fieldsets</span></code> nor <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.fields\" title=\"django.contrib.admin.ModelAdmin.fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">fields</span></code></a> options are present,\nDjango will default to displaying each field that isn\u2019t an <code class=\"docutils literal notranslate\"><span class=\"pre\">AutoField</span></code> and\nhas <code class=\"docutils literal notranslate\"><span class=\"pre\">editable=True</span></code>, in a single fieldset, in the same order as the fields\nare defined in the model.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">field_options</span></code> dictionary can have the following keys:</p>\n<ul>\n<li><dl class=\"first docutils\">\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">fields</span></code></dt><dd><p>A list or tuple of field names to display in this fieldset. This key is\nrequired.</p>\n<p>Example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;fields&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;first_name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;last_name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;address&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;city&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;state&quot;</span><span class=\"p\">],</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>As with the <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.fields\" title=\"django.contrib.admin.ModelAdmin.fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">fields</span></code></a> option, to display multiple\nfields on the same line, wrap those fields in their own tuple. In this\nexample, the <code class=\"docutils literal notranslate\"><span class=\"pre\">first_name</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">last_name</span></code> fields will display on\nthe same line:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;fields&quot;</span><span class=\"p\">:</span> <span class=\"p\">[(</span><span class=\"s2\">&quot;first_name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;last_name&quot;</span><span class=\"p\">),</span> <span class=\"s2\">&quot;address&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;city&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;state&quot;</span><span class=\"p\">],</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">fields</span></code> can contain values defined in\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.readonly_fields\" title=\"django.contrib.admin.ModelAdmin.readonly_fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">readonly_fields</span></code></a> to be displayed as read-only.</p>\n<p>If you add the name of a callable to <code class=\"docutils literal notranslate\"><span class=\"pre\">fields</span></code>, the same rule applies\nas with the <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.fields\" title=\"django.contrib.admin.ModelAdmin.fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">fields</span></code></a> option: the callable must be\nlisted in <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.readonly_fields\" title=\"django.contrib.admin.ModelAdmin.readonly_fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">readonly_fields</span></code></a>.</p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"first docutils\">\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">classes</span></code></dt><dd><p>A list or tuple containing extra CSS classes to apply to the fieldset.</p>\n<p>Example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"s2\">&quot;classes&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;wide&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;extrapretty&quot;</span><span class=\"p\">],</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>Two useful classes defined by the default admin site stylesheet are\n<code class=\"docutils literal notranslate\"><span class=\"pre\">collapse</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">wide</span></code>. Fieldsets with the <code class=\"docutils literal notranslate\"><span class=\"pre\">collapse</span></code> style\nwill be initially collapsed in the admin and replaced with a small\n\u201cclick to expand\u201d link. Fieldsets with the <code class=\"docutils literal notranslate\"><span class=\"pre\">wide</span></code> style will be\ngiven extra horizontal space.</p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"first docutils\">\n<dt><code class=\"docutils literal notranslate\"><span class=\"pre\">description</span></code></dt><dd><p>A string of optional extra text to be displayed at the top of each\nfieldset, under the heading of the fieldset. This string is not\nrendered for <a class=\"reference internal\" href=\"#django.contrib.admin.TabularInline\" title=\"django.contrib.admin.TabularInline\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TabularInline</span></code></a> due to its\nlayout.</p>\n<p>Note that this value is <em>not</em> HTML-escaped when it\u2019s displayed in\nthe admin interface. This lets you include HTML if you so desire.\nAlternatively you can use plain text and\n<a class=\"reference internal\" href=\"../../utils/#django.utils.html.escape\" title=\"django.utils.html.escape\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.utils.html.escape()</span></code></a> to escape any HTML special\ncharacters.</p>\n</dd>\n</dl>\n</li>\n</ul>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.filter_horizontal\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">filter_horizontal</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.filter_horizontal\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>By default, a <a class=\"reference internal\" href=\"../../models/fields/#django.db.models.ManyToManyField\" title=\"django.db.models.ManyToManyField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ManyToManyField</span></code></a> is displayed in\nthe admin site with a <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;select</span> <span class=\"pre\">multiple&gt;</span></code>. However, multiple-select boxes\ncan be difficult to use when selecting many items. Adding a\n<a class=\"reference internal\" href=\"../../models/fields/#django.db.models.ManyToManyField\" title=\"django.db.models.ManyToManyField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ManyToManyField</span></code></a> to this list will instead use\na nifty unobtrusive JavaScript \u201cfilter\u201d interface that allows searching\nwithin the options. The unselected and selected options appear in two boxes\nside by side. See <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.filter_vertical\" title=\"django.contrib.admin.ModelAdmin.filter_vertical\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">filter_vertical</span></code></a> to use a vertical\ninterface.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.filter_vertical\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">filter_vertical</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.filter_vertical\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Same as <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.filter_horizontal\" title=\"django.contrib.admin.ModelAdmin.filter_horizontal\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">filter_horizontal</span></code></a>, but uses a vertical display\nof the filter interface with the box of unselected options appearing above\nthe box of selected options.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.form\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">form</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.form\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>By default a <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelForm</span></code> is dynamically created for your model. It is\nused to create the form presented on both the add/change pages. You can\neasily provide your own <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelForm</span></code> to override any default form behavior\non the add/change pages. Alternatively, you can customize the default\nform rather than specifying an entirely new one by using the\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.get_form\" title=\"django.contrib.admin.ModelAdmin.get_form\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">ModelAdmin.get_form()</span></code></a> method.</p>\n<p>For an example see the section <a class=\"reference internal\" href=\"#admin-custom-validation\"><span class=\"std std-ref\">Adding custom validation to the admin</span></a>.</p>\n<div class=\"admonition-omit-the-meta-model-attribute admonition\">\n<p class=\"first admonition-title\">Omit the <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta.model</span></code> attribute</p>\n<p>If you define the <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta.model</span></code> attribute on a\n<a class=\"reference internal\" href=\"../../../topics/forms/modelforms/#django.forms.ModelForm\" title=\"django.forms.ModelForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelForm</span></code></a>, you must also define the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Meta.fields</span></code> attribute (or the <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta.exclude</span></code> attribute). However,\nsince the admin has its own way of defining fields, the <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta.fields</span></code>\nattribute will be ignored.</p>\n<p class=\"last\">If the <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelForm</span></code> is only going to be used for the admin, the easiest\nsolution is to omit the <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta.model</span></code> attribute, since <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code>\nwill provide the correct model to use. Alternatively, you can set\n<code class=\"docutils literal notranslate\"><span class=\"pre\">fields</span> <span class=\"pre\">=</span> <span class=\"pre\">[]</span></code> in the <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta</span></code> class to satisfy the validation on the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ModelForm</span></code>.</p>\n</div>\n<div class=\"admonition-modeladmin-exclude-takes-precedence admonition\">\n<p class=\"first admonition-title\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin.exclude</span></code> takes precedence</p>\n<p>If your <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelForm</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> both define an <code class=\"docutils literal notranslate\"><span class=\"pre\">exclude</span></code>\noption then <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> takes precedence:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">myapp.models</span> <span class=\"kn\">import</span> <span class=\"n\">Person</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PersonForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">ModelForm</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Person</span>\n        <span class=\"n\">exclude</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">]</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">exclude</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;age&quot;</span><span class=\"p\">]</span>\n    <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">PersonForm</span>\n</pre></div>\n</div>\n<p class=\"last\">In the above example, the \u201cage\u201d field will be excluded but the \u201cname\u201d\nfield will be included in the generated form.</p>\n</div>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.formfield_overrides\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">formfield_overrides</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.formfield_overrides\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This provides a quick-and-dirty way to override some of the\n<a class=\"reference internal\" href=\"../../forms/fields/#django.forms.Field\" title=\"django.forms.Field\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Field</span></code></a> options for use in the admin.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">formfield_overrides</span></code> is a dictionary mapping a field class to a dict of\narguments to pass to the field at construction time.</p>\n<p>Since that\u2019s a bit abstract, let\u2019s look at a concrete example. The most\ncommon use of <code class=\"docutils literal notranslate\"><span class=\"pre\">formfield_overrides</span></code> is to add a custom widget for a\ncertain type of field. So, imagine we\u2019ve written a <code class=\"docutils literal notranslate\"><span class=\"pre\">RichTextEditorWidget</span></code>\nthat we\u2019d like to use for large text fields instead of the default\n<code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;textarea&gt;</span></code>. Here\u2019s how we\u2019d do that:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n<span class=\"c1\"># Import our custom widget and our model from where they&#39;re defined</span>\n<span class=\"kn\">from</span> <span class=\"nn\">myapp.models</span> <span class=\"kn\">import</span> <span class=\"n\">MyModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">myapp.widgets</span> <span class=\"kn\">import</span> <span class=\"n\">RichTextEditorWidget</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModelAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">formfield_overrides</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;widget&quot;</span><span class=\"p\">:</span> <span class=\"n\">RichTextEditorWidget</span><span class=\"p\">},</span>\n    <span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>Note that the key in the dictionary is the actual field class, <em>not</em> a\nstring. The value is another dictionary; these arguments will be passed to\nthe form field\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">__init__()</span></code> method. See <a class=\"reference internal\" href=\"../../forms/api/\"><span class=\"doc\">The Forms API</span></a> for\ndetails.</p>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p>If you want to use a custom widget with a relation field (i.e.\n<a class=\"reference internal\" href=\"../../models/fields/#django.db.models.ForeignKey\" title=\"django.db.models.ForeignKey\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ForeignKey</span></code></a> or\n<a class=\"reference internal\" href=\"../../models/fields/#django.db.models.ManyToManyField\" title=\"django.db.models.ManyToManyField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ManyToManyField</span></code></a>), make sure you haven\u2019t\nincluded that field\u2019s name in <code class=\"docutils literal notranslate\"><span class=\"pre\">raw_id_fields</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">radio_fields</span></code>, or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">autocomplete_fields</span></code>.</p>\n<p class=\"last\"><code class=\"docutils literal notranslate\"><span class=\"pre\">formfield_overrides</span></code> won\u2019t let you change the widget on relation\nfields that have <code class=\"docutils literal notranslate\"><span class=\"pre\">raw_id_fields</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">radio_fields</span></code>, or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">autocomplete_fields</span></code> set. That\u2019s because <code class=\"docutils literal notranslate\"><span class=\"pre\">raw_id_fields</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">radio_fields</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">autocomplete_fields</span></code> imply custom widgets of\ntheir own.</p>\n</div>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.inlines\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">inlines</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.inlines\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>See <a class=\"reference internal\" href=\"#django.contrib.admin.InlineModelAdmin\" title=\"django.contrib.admin.InlineModelAdmin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin</span></code></a> objects below as well as\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.get_formsets_with_inlines\" title=\"django.contrib.admin.ModelAdmin.get_formsets_with_inlines\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">ModelAdmin.get_formsets_with_inlines()</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.list_display\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">list_display</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.list_display\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set <code class=\"docutils literal notranslate\"><span class=\"pre\">list_display</span></code> to control which fields are displayed on the change\nlist page of the admin.</p>\n<p>Example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;first_name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;last_name&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>If you don\u2019t set <code class=\"docutils literal notranslate\"><span class=\"pre\">list_display</span></code>, the admin site will display a single\ncolumn that displays the <code class=\"docutils literal notranslate\"><span class=\"pre\">__str__()</span></code> representation of each object.</p>\n<p>There are four types of values that can be used in <code class=\"docutils literal notranslate\"><span class=\"pre\">list_display</span></code>. All\nbut the simplest may use the  <a class=\"reference internal\" href=\"#django.contrib.admin.display\" title=\"django.contrib.admin.display\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">display()</span></code></a>\ndecorator, which is used to customize how the field is presented:</p>\n<ul>\n<li><p class=\"first\">The name of a model field. For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;first_name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;last_name&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">A callable that accepts one argument, the model instance. For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@admin</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;Name&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">upper_case_name</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">first_name</span><span class=\"si\">}</span><span class=\"s2\"> </span><span class=\"si\">{</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">last_name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">upper_case_name</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">A string representing a <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> method that accepts one argument,\nthe model instance. For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;upper_case_name&quot;</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@admin</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;Name&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">upper_case_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">first_name</span><span class=\"si\">}</span><span class=\"s2\"> </span><span class=\"si\">{</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">last_name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">A string representing a model attribute or method (without any required\narguments). For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n    <span class=\"n\">birthday</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateField</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@admin</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;Birth decade&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">decade_born_in</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">decade</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">birthday</span><span class=\"o\">.</span><span class=\"n\">year</span> <span class=\"o\">//</span> <span class=\"mi\">10</span> <span class=\"o\">*</span> <span class=\"mi\">10</span>\n        <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">decade</span><span class=\"si\">}</span><span class=\"s2\">\u2019s&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;decade_born_in&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</li>\n</ul>\n<p>A few special cases to note about <code class=\"docutils literal notranslate\"><span class=\"pre\">list_display</span></code>:</p>\n<ul>\n<li><p class=\"first\">If the field is a <code class=\"docutils literal notranslate\"><span class=\"pre\">ForeignKey</span></code>, Django will display the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">__str__()</span></code> of the related object.</p>\n</li>\n<li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ManyToManyField</span></code> fields aren\u2019t supported, because that would\nentail executing a separate SQL statement for each row in the table.\nIf you want to do this nonetheless, give your model a custom method,\nand add that method\u2019s name to <code class=\"docutils literal notranslate\"><span class=\"pre\">list_display</span></code>. (See below for more\non custom methods in <code class=\"docutils literal notranslate\"><span class=\"pre\">list_display</span></code>.)</p>\n</li>\n<li><p class=\"first\">If the field is a <code class=\"docutils literal notranslate\"><span class=\"pre\">BooleanField</span></code>, Django will display a pretty \u201cyes\u201d,\n\u201cno\u201d, or \u201cunknown\u201d icon instead of <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>, or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p>\n</li>\n<li><p class=\"first\">If the string given is a method of the model, <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> or a\ncallable, Django will HTML-escape the output by default. To escape\nuser input and allow your own unescaped tags, use\n<a class=\"reference internal\" href=\"../../utils/#django.utils.html.format_html\" title=\"django.utils.html.format_html\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">format_html()</span></code></a>.</p>\n<p>Here\u2019s a full example model:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.html</span> <span class=\"kn\">import</span> <span class=\"n\">format_html</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">first_name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n    <span class=\"n\">last_name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n    <span class=\"n\">color_code</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@admin</span><span class=\"o\">.</span><span class=\"n\">display</span>\n    <span class=\"k\">def</span> <span class=\"nf\">colored_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">format_html</span><span class=\"p\">(</span>\n            <span class=\"s1\">&#39;&lt;span style=&quot;color: #</span><span class=\"si\">{}</span><span class=\"s1\">;&quot;&gt;</span><span class=\"si\">{}</span><span class=\"s1\"> </span><span class=\"si\">{}</span><span class=\"s1\">&lt;/span&gt;&#39;</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color_code</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">first_name</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">last_name</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;first_name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;last_name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;colored_name&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">As some examples have already demonstrated, when using a callable, a\nmodel method, or a <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> method, you can customize the column\u2019s\ntitle by wrapping the callable with the\n<a class=\"reference internal\" href=\"#django.contrib.admin.display\" title=\"django.contrib.admin.display\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">display()</span></code></a> decorator and passing the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">description</span></code> argument.</p>\n</li>\n<li><p class=\"first\">If the value of a field is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, an empty string, or an iterable\nwithout elements, Django will display <code class=\"docutils literal notranslate\"><span class=\"pre\">-</span></code> (a dash). You can override\nthis with <a class=\"reference internal\" href=\"#django.contrib.admin.AdminSite.empty_value_display\" title=\"django.contrib.admin.AdminSite.empty_value_display\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">AdminSite.empty_value_display</span></code></a>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n\n<span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">empty_value_display</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;(None)&quot;</span>\n</pre></div>\n</div>\n<p>You can also use <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.empty_value_display\" title=\"django.contrib.admin.ModelAdmin.empty_value_display\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.empty_value_display</span></code></a>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">empty_value_display</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;unknown&quot;</span>\n</pre></div>\n</div>\n<p>Or on a field level:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;birth_date_view&quot;</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@admin</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">empty_value</span><span class=\"o\">=</span><span class=\"s2\">&quot;unknown&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">birth_date_view</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">birth_date</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">If the string given is a method of the model, <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> or a\ncallable that returns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>, or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, Django will\ndisplay a pretty \u201cyes\u201d, \u201cno\u201d, or \u201cunknown\u201d icon if you wrap the method\nwith the <a class=\"reference internal\" href=\"#django.contrib.admin.display\" title=\"django.contrib.admin.display\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">display()</span></code></a> decorator passing the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">boolean</span></code> argument with the value set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">first_name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n    <span class=\"n\">birthday</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateField</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@admin</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">boolean</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">born_in_fifties</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"mi\">1950</span> <span class=\"o\">&lt;=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">birthday</span><span class=\"o\">.</span><span class=\"n\">year</span> <span class=\"o\">&lt;</span> <span class=\"mi\">1960</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;born_in_fifties&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">__str__()</span></code> method is just as valid in <code class=\"docutils literal notranslate\"><span class=\"pre\">list_display</span></code> as any\nother model method, so it\u2019s perfectly OK to do this:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;__str__&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;some_other_field&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">Usually, elements of <code class=\"docutils literal notranslate\"><span class=\"pre\">list_display</span></code> that aren\u2019t actual database\nfields can\u2019t be used in sorting (because Django does all the sorting\nat the database level).</p>\n<p>However, if an element of <code class=\"docutils literal notranslate\"><span class=\"pre\">list_display</span></code> represents a certain database\nfield, you can indicate this fact by using the\n<a class=\"reference internal\" href=\"#django.contrib.admin.display\" title=\"django.contrib.admin.display\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">display()</span></code></a> decorator on the method, passing\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">ordering</span></code> argument:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.html</span> <span class=\"kn\">import</span> <span class=\"n\">format_html</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">first_name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n    <span class=\"n\">color_code</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@admin</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">ordering</span><span class=\"o\">=</span><span class=\"s2\">&quot;first_name&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">colored_first_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">format_html</span><span class=\"p\">(</span>\n            <span class=\"s1\">&#39;&lt;span style=&quot;color: #</span><span class=\"si\">{}</span><span class=\"s1\">;&quot;&gt;</span><span class=\"si\">{}</span><span class=\"s1\">&lt;/span&gt;&#39;</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">color_code</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">first_name</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;first_name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;colored_first_name&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>The above will tell Django to order by the <code class=\"docutils literal notranslate\"><span class=\"pre\">first_name</span></code> field when\ntrying to sort by <code class=\"docutils literal notranslate\"><span class=\"pre\">colored_first_name</span></code> in the admin.</p>\n<p>To indicate descending order with the <code class=\"docutils literal notranslate\"><span class=\"pre\">ordering</span></code> argument you can use a\nhyphen prefix on the field name. Using the above example, this would look\nlike:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@admin</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">ordering</span><span class=\"o\">=</span><span class=\"s2\">&quot;-first_name&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">colored_first_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">ordering</span></code> argument supports query lookups to sort by values on\nrelated models. This example includes an \u201cauthor first name\u201d column in\nthe list display and allows sorting it by first name:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Blog</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">255</span><span class=\"p\">)</span>\n    <span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">,</span> <span class=\"n\">on_delete</span><span class=\"o\">=</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CASCADE</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">BlogAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;title&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;author&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;author_first_name&quot;</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@admin</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">ordering</span><span class=\"o\">=</span><span class=\"s2\">&quot;author__first_name&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">author_first_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">author</span><span class=\"o\">.</span><span class=\"n\">first_name</span>\n</pre></div>\n</div>\n<p><a class=\"reference internal\" href=\"../../models/expressions/\"><span class=\"doc\">Query expressions</span></a> may be used with the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ordering</span></code> argument:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">Value</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Concat</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">first_name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n    <span class=\"n\">last_name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@admin</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">ordering</span><span class=\"o\">=</span><span class=\"n\">Concat</span><span class=\"p\">(</span><span class=\"s2\">&quot;first_name&quot;</span><span class=\"p\">,</span> <span class=\"n\">Value</span><span class=\"p\">(</span><span class=\"s2\">&quot; &quot;</span><span class=\"p\">),</span> <span class=\"s2\">&quot;last_name&quot;</span><span class=\"p\">))</span>\n    <span class=\"k\">def</span> <span class=\"nf\">full_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">first_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; &quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">last_name</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">Elements of <code class=\"docutils literal notranslate\"><span class=\"pre\">list_display</span></code> can also be properties</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">first_name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n    <span class=\"n\">last_name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"nd\">@admin</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"p\">(</span>\n        <span class=\"n\">ordering</span><span class=\"o\">=</span><span class=\"s2\">&quot;last_name&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;Full name of the person&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">full_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">first_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; &quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">last_name</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;full_name&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>Note that <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;property</span></code> must be above <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;display</span></code>. If you\u2019re using the\nold way \u2013 setting the display-related attributes directly rather than\nusing the <a class=\"reference internal\" href=\"#django.contrib.admin.display\" title=\"django.contrib.admin.display\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">display()</span></code></a> decorator \u2013  be aware\nthat the <code class=\"docutils literal notranslate\"><span class=\"pre\">property()</span></code> function and <strong>not</strong> the <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;property</span></code> decorator\nmust be used:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">my_property</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">first_name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot; &quot;</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">last_name</span>\n\n\n<span class=\"n\">my_property</span><span class=\"o\">.</span><span class=\"n\">short_description</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Full name of the person&quot;</span>\n<span class=\"n\">my_property</span><span class=\"o\">.</span><span class=\"n\">admin_order_field</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;last_name&quot;</span>\n\n<span class=\"n\">full_name</span> <span class=\"o\">=</span> <span class=\"nb\">property</span><span class=\"p\">(</span><span class=\"n\">my_property</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">The field names in <code class=\"docutils literal notranslate\"><span class=\"pre\">list_display</span></code> will also appear as CSS classes in\nthe HTML output, in the form of <code class=\"docutils literal notranslate\"><span class=\"pre\">column-&lt;field_name&gt;</span></code> on each <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;th&gt;</span></code>\nelement. This can be used to set column widths in a CSS file for example.</p>\n</li>\n<li><p class=\"first\">Django will try to interpret every element of <code class=\"docutils literal notranslate\"><span class=\"pre\">list_display</span></code> in this\norder:</p>\n<ul class=\"simple\">\n<li>A field of the model.</li>\n<li>A callable.</li>\n<li>A string representing a <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> attribute.</li>\n<li>A string representing a model attribute.</li>\n</ul>\n<p>For example if you have <code class=\"docutils literal notranslate\"><span class=\"pre\">first_name</span></code> as a model field and\nas a <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> attribute, the model field will be used.</p>\n</li>\n</ul>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.list_display_links\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">list_display_links</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.list_display_links\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Use <code class=\"docutils literal notranslate\"><span class=\"pre\">list_display_links</span></code> to control if and which fields in\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.list_display\" title=\"django.contrib.admin.ModelAdmin.list_display\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">list_display</span></code></a> should be linked to the \u201cchange\u201d page for an object.</p>\n<p>By default, the change list page will link the first column \u2013 the first\nfield specified in <code class=\"docutils literal notranslate\"><span class=\"pre\">list_display</span></code> \u2013 to the change page for each item.\nBut <code class=\"docutils literal notranslate\"><span class=\"pre\">list_display_links</span></code> lets you change this:</p>\n<ul>\n<li><p class=\"first\">Set it to <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> to get no links at all.</p>\n</li>\n<li><p class=\"first\">Set it to a list or tuple of fields (in the same format as\n<code class=\"docutils literal notranslate\"><span class=\"pre\">list_display</span></code>) whose columns you want converted to links.</p>\n<p>You can specify one or many fields. As long as the fields appear in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">list_display</span></code>, Django doesn\u2019t care how many (or how few) fields are\nlinked. The only requirement is that if you want to use\n<code class=\"docutils literal notranslate\"><span class=\"pre\">list_display_links</span></code> in this fashion, you must define <code class=\"docutils literal notranslate\"><span class=\"pre\">list_display</span></code>.</p>\n</li>\n</ul>\n<p>In this example, the <code class=\"docutils literal notranslate\"><span class=\"pre\">first_name</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">last_name</span></code> fields will be\nlinked on the change list page:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;first_name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;last_name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;birthday&quot;</span><span class=\"p\">]</span>\n    <span class=\"n\">list_display_links</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;first_name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;last_name&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>In this example, the change list page grid will have no links:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">AuditEntryAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;timestamp&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;message&quot;</span><span class=\"p\">]</span>\n    <span class=\"n\">list_display_links</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<span class=\"target\" id=\"admin-list-editable\"></span><dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.list_editable\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">list_editable</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.list_editable\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set <code class=\"docutils literal notranslate\"><span class=\"pre\">list_editable</span></code> to a list of field names on the model which will\nallow editing on the change list page. That is, fields listed in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">list_editable</span></code> will be displayed as form widgets on the change list\npage, allowing users to edit and save multiple rows at once.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">list_editable</span></code> interacts with a couple of other options in\nparticular ways; you should note the following rules:</p>\n<ul class=\"simple\">\n<li>Any field in <code class=\"docutils literal notranslate\"><span class=\"pre\">list_editable</span></code> must also be in <code class=\"docutils literal notranslate\"><span class=\"pre\">list_display</span></code>.\nYou can\u2019t edit a field that\u2019s not displayed!</li>\n<li>The same field can\u2019t be listed in both <code class=\"docutils literal notranslate\"><span class=\"pre\">list_editable</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">list_display_links</span></code> \u2013 a field can\u2019t be both a form and\na link.</li>\n</ul>\n<p class=\"last\">You\u2019ll get a validation error if either of these rules are broken.</p>\n</div>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.list_filter\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">list_filter</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.list_filter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set <code class=\"docutils literal notranslate\"><span class=\"pre\">list_filter</span></code> to activate filters in the right sidebar of the change\nlist page of the admin.</p>\n<p>At it\u2019s simplest <code class=\"docutils literal notranslate\"><span class=\"pre\">list_filter</span></code> takes a list or tuple of field names to\nactivate filtering upon, but several more advanced options as available.\nSee <a class=\"reference internal\" href=\"filters/#modeladmin-list-filters\"><span class=\"std std-ref\">ModelAdmin List Filters</span></a> for the details.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.list_max_show_all\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">list_max_show_all</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.list_max_show_all\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set <code class=\"docutils literal notranslate\"><span class=\"pre\">list_max_show_all</span></code> to control how many items can appear on a \u201cShow\nall\u201d admin change list page. The admin will display a \u201cShow all\u201d link on the\nchange list only if the total result count is less than or equal to this\nsetting. By default, this is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">200</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.list_per_page\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">list_per_page</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.list_per_page\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set <code class=\"docutils literal notranslate\"><span class=\"pre\">list_per_page</span></code> to control how many items appear on each paginated\nadmin change list page. By default, this is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">100</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.list_select_related\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">list_select_related</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.list_select_related\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set <code class=\"docutils literal notranslate\"><span class=\"pre\">list_select_related</span></code> to tell Django to use\n<a class=\"reference internal\" href=\"../../models/querysets/#django.db.models.query.QuerySet.select_related\" title=\"django.db.models.query.QuerySet.select_related\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">select_related()</span></code></a> in retrieving\nthe list of objects on the admin change list page. This can save you a\nbunch of database queries.</p>\n<p>The value should be either a boolean, a list or a tuple. Default is\n<code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n<p>When value is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">select_related()</span></code> will always be called. When\nvalue is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>, Django will look at <code class=\"docutils literal notranslate\"><span class=\"pre\">list_display</span></code> and call\n<code class=\"docutils literal notranslate\"><span class=\"pre\">select_related()</span></code> if any <code class=\"docutils literal notranslate\"><span class=\"pre\">ForeignKey</span></code> is present.</p>\n<p>If you need more fine-grained control, use a tuple (or list) as value for\n<code class=\"docutils literal notranslate\"><span class=\"pre\">list_select_related</span></code>. Empty tuple will prevent Django from calling\n<code class=\"docutils literal notranslate\"><span class=\"pre\">select_related</span></code> at all. Any other tuple will be passed directly to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">select_related</span></code> as parameters. For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">ArticleAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_select_related</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;author&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;category&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>will call <code class=\"docutils literal notranslate\"><span class=\"pre\">select_related('author',</span> <span class=\"pre\">'category')</span></code>.</p>\n<p>If you need to specify a dynamic value based on the request, you can\nimplement a <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.get_list_select_related\" title=\"django.contrib.admin.ModelAdmin.get_list_select_related\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_list_select_related()</span></code></a> method.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> ignores this attribute when\n<a class=\"reference internal\" href=\"../../models/querysets/#django.db.models.query.QuerySet.select_related\" title=\"django.db.models.query.QuerySet.select_related\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">select_related()</span></code></a> was already\ncalled on the changelist\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">QuerySet</span></code>.</p>\n</div>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.ordering\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ordering</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.ordering\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set <code class=\"docutils literal notranslate\"><span class=\"pre\">ordering</span></code> to specify how lists of objects should be ordered in the\nDjango admin views. This should be a list or tuple in the same format as a\nmodel\u2019s <a class=\"reference internal\" href=\"../../models/options/#django.db.models.Options.ordering\" title=\"django.db.models.Options.ordering\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ordering</span></code></a> parameter.</p>\n<p>If this isn\u2019t provided, the Django admin will use the model\u2019s default\nordering.</p>\n<p>If you need to specify a dynamic order (for example depending on user or\nlanguage) you can implement a <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.get_ordering\" title=\"django.contrib.admin.ModelAdmin.get_ordering\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_ordering()</span></code></a> method.</p>\n<div class=\"admonition-performance-considerations-with-ordering-and-sorting admonition\">\n<p class=\"first admonition-title\">Performance considerations with ordering and sorting</p>\n<p>To ensure a deterministic ordering of results, the changelist adds\n<code class=\"docutils literal notranslate\"><span class=\"pre\">pk</span></code> to the ordering if it can\u2019t find a single or unique together set\nof fields that provide total ordering.</p>\n<p class=\"last\">For example, if the default ordering is by a non-unique <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> field,\nthen the changelist is sorted by <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">pk</span></code>. This could\nperform poorly if you have a lot of rows and don\u2019t have an index on\n<code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">pk</span></code>.</p>\n</div>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.paginator\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">paginator</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.paginator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The paginator class to be used for pagination. By default,\n<a class=\"reference internal\" href=\"../../paginator/#django.core.paginator.Paginator\" title=\"django.core.paginator.Paginator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.core.paginator.Paginator</span></code></a> is used. If the custom paginator\nclass doesn\u2019t have the same constructor interface as\n<a class=\"reference internal\" href=\"../../paginator/#django.core.paginator.Paginator\" title=\"django.core.paginator.Paginator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.core.paginator.Paginator</span></code></a>, you will also need to\nprovide an implementation for <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.get_paginator\" title=\"django.contrib.admin.ModelAdmin.get_paginator\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">ModelAdmin.get_paginator()</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.prepopulated_fields\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">prepopulated_fields</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.prepopulated_fields\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set <code class=\"docutils literal notranslate\"><span class=\"pre\">prepopulated_fields</span></code> to a dictionary mapping field names to the\nfields it should prepopulate from:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">ArticleAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">prepopulated_fields</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;slug&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;title&quot;</span><span class=\"p\">]}</span>\n</pre></div>\n</div>\n<p>When set, the given fields will use a bit of JavaScript to populate from\nthe fields assigned. The main use for this functionality is to\nautomatically generate the value for <code class=\"docutils literal notranslate\"><span class=\"pre\">SlugField</span></code> fields from one or more\nother fields. The generated value is produced by concatenating the values\nof the source fields, and then by transforming that result into a valid\nslug (e.g. substituting dashes for spaces and lowercasing ASCII letters).</p>\n<p>Prepopulated fields aren\u2019t modified by JavaScript after a value has been\nsaved. It\u2019s usually undesired that slugs change (which would cause an\nobject\u2019s URL to change if the slug is used in it).</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">prepopulated_fields</span></code> doesn\u2019t accept <code class=\"docutils literal notranslate\"><span class=\"pre\">DateTimeField</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">ForeignKey</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">OneToOneField</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">ManyToManyField</span></code> fields.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.preserve_filters\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">preserve_filters</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.preserve_filters\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>By default, applied filters are preserved on the list view after creating,\nediting, or deleting an object. You can have filters cleared by setting\nthis attribute to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.show_facets\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">show_facets</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.show_facets\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"versionadded\">\n<span class=\"title\">New in Django Development version.</span> </div>\n<p>Controls whether facet counts are displayed for filters in the admin\nchangelist. Defaults to <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.ShowFacets.ALLOW\" title=\"django.contrib.admin.ModelAdmin.ShowFacets.ALLOW\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ShowFacets.ALLOW</span></code></a>.</p>\n<p>When displayed, facet counts update in line with currently applied filters.</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.ShowFacets\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ShowFacets</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.ShowFacets\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"versionadded\">\n<span class=\"title\">New in Django Development version.</span> </div>\n<p>Enum of allowed values for <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.show_facets\" title=\"django.contrib.admin.ModelAdmin.show_facets\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.show_facets</span></code></a>.</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.ShowFacets.ALWAYS\">\n<code class=\"sig-name descname\"><span class=\"pre\">ALWAYS</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.ShowFacets.ALWAYS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Always show facet counts.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.ShowFacets.ALLOW\">\n<code class=\"sig-name descname\"><span class=\"pre\">ALLOW</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.ShowFacets.ALLOW\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Show facet counts when the <code class=\"docutils literal notranslate\"><span class=\"pre\">_facets</span></code> query string parameter is\nprovided.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.ShowFacets.NEVER\">\n<code class=\"sig-name descname\"><span class=\"pre\">NEVER</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.ShowFacets.NEVER\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Never show facet counts.</p>\n</dd></dl>\n\n</dd></dl>\n\n<p>Set <code class=\"docutils literal notranslate\"><span class=\"pre\">show_facets</span></code> to the desired <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.ShowFacets\" title=\"django.contrib.admin.ModelAdmin.ShowFacets\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ShowFacets</span></code></a> value. For example,\nto always show facet counts without needing to provide the query\nparameter:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModelAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n    <span class=\"c1\"># Have facets always shown for this model admin.</span>\n    <span class=\"n\">show_facets</span> <span class=\"o\">=</span> <span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ShowFacets</span><span class=\"o\">.</span><span class=\"n\">ALWAYS</span>\n</pre></div>\n</div>\n<div class=\"admonition-performance-considerations-with-facets admonition\">\n<p class=\"first admonition-title\">Performance considerations with facets</p>\n<p class=\"last\">Enabling facet filters will increase the number of queries on the admin\nchangelist page in line with the number of filters. These queries may\ncause performance problems, especially for large datasets. In these\ncases it may be appropriate to set <code class=\"docutils literal notranslate\"><span class=\"pre\">show_facets</span></code> to\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.ShowFacets.NEVER\" title=\"django.contrib.admin.ModelAdmin.ShowFacets.NEVER\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ShowFacets.NEVER</span></code></a> to disable faceting entirely.</p>\n</div>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.radio_fields\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">radio_fields</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.radio_fields\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>By default, Django\u2019s admin uses a select-box interface (&lt;select&gt;) for\nfields that are <code class=\"docutils literal notranslate\"><span class=\"pre\">ForeignKey</span></code> or have <code class=\"docutils literal notranslate\"><span class=\"pre\">choices</span></code> set. If a field is\npresent in <code class=\"docutils literal notranslate\"><span class=\"pre\">radio_fields</span></code>, Django will use a radio-button interface\ninstead. Assuming <code class=\"docutils literal notranslate\"><span class=\"pre\">group</span></code> is a <code class=\"docutils literal notranslate\"><span class=\"pre\">ForeignKey</span></code> on the <code class=\"docutils literal notranslate\"><span class=\"pre\">Person</span></code> model:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">radio_fields</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;group&quot;</span><span class=\"p\">:</span> <span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">VERTICAL</span><span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>You have the choice of using <code class=\"docutils literal notranslate\"><span class=\"pre\">HORIZONTAL</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">VERTICAL</span></code> from the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.admin</span></code> module.</p>\n<p>Don\u2019t include a field in <code class=\"docutils literal notranslate\"><span class=\"pre\">radio_fields</span></code> unless it\u2019s a <code class=\"docutils literal notranslate\"><span class=\"pre\">ForeignKey</span></code> or has\n<code class=\"docutils literal notranslate\"><span class=\"pre\">choices</span></code> set.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.autocomplete_fields\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">autocomplete_fields</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.autocomplete_fields\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p><code class=\"docutils literal notranslate\"><span class=\"pre\">autocomplete_fields</span></code> is a list of <code class=\"docutils literal notranslate\"><span class=\"pre\">ForeignKey</span></code> and/or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ManyToManyField</span></code> fields you would like to change to <a class=\"reference external\" href=\"https://select2.org/\">Select2</a> autocomplete inputs.</p>\n<p>By default, the admin uses a select-box interface (<code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;select&gt;</span></code>) for\nthose fields. Sometimes you don\u2019t want to incur the overhead of selecting\nall the related instances to display in the dropdown.</p>\n<p>The Select2 input looks similar to the default input but comes with a\nsearch feature that loads the options asynchronously. This is faster and\nmore user-friendly if the related model has many instances.</p>\n<p>You must define <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.search_fields\" title=\"django.contrib.admin.ModelAdmin.search_fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">search_fields</span></code></a> on the related object\u2019s\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> because the autocomplete search uses it.</p>\n<p>To avoid unauthorized data disclosure, users must have the <code class=\"docutils literal notranslate\"><span class=\"pre\">view</span></code> or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">change</span></code> permission to the related object in order to use autocomplete.</p>\n<p>Ordering and pagination of the results are controlled by the related\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code>\u2019s <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.get_ordering\" title=\"django.contrib.admin.ModelAdmin.get_ordering\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_ordering()</span></code></a> and\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.get_paginator\" title=\"django.contrib.admin.ModelAdmin.get_paginator\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_paginator()</span></code></a> methods.</p>\n<p>In the following example, <code class=\"docutils literal notranslate\"><span class=\"pre\">ChoiceAdmin</span></code> has an autocomplete field for the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ForeignKey</span></code> to the <code class=\"docutils literal notranslate\"><span class=\"pre\">Question</span></code>. The results are filtered by the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">question_text</span></code> field and ordered by the <code class=\"docutils literal notranslate\"><span class=\"pre\">date_created</span></code> field:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">QuestionAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">ordering</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;date_created&quot;</span><span class=\"p\">]</span>\n    <span class=\"n\">search_fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;question_text&quot;</span><span class=\"p\">]</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ChoiceAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">autocomplete_fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;question&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<div class=\"admonition-performance-considerations-for-large-datasets admonition\">\n<p class=\"first admonition-title\">Performance considerations for large datasets</p>\n<p>Ordering using <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.ordering\" title=\"django.contrib.admin.ModelAdmin.ordering\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.ordering</span></code></a> may cause performance\nproblems as sorting on a large queryset will be slow.</p>\n<p>Also, if your search fields include fields that aren\u2019t indexed by the\ndatabase, you might encounter poor performance on extremely large\ntables.</p>\n<p>For those cases, it\u2019s a good idea to write your own\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.get_search_results\" title=\"django.contrib.admin.ModelAdmin.get_search_results\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">ModelAdmin.get_search_results()</span></code></a> implementation using a\nfull-text indexed search.</p>\n<p class=\"last\">You may also want to change the <code class=\"docutils literal notranslate\"><span class=\"pre\">Paginator</span></code> on very large tables\nas the default paginator always performs a <code class=\"docutils literal notranslate\"><span class=\"pre\">count()</span></code> query.\nFor example, you could override the default implementation of the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Paginator.count</span></code> property.</p>\n</div>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.raw_id_fields\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">raw_id_fields</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.raw_id_fields\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>By default, Django\u2019s admin uses a select-box interface (&lt;select&gt;) for\nfields that are <code class=\"docutils literal notranslate\"><span class=\"pre\">ForeignKey</span></code>. Sometimes you don\u2019t want to incur the\noverhead of having to select all the related instances to display in the\ndrop-down.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">raw_id_fields</span></code> is a list of fields you would like to change\ninto an <code class=\"docutils literal notranslate\"><span class=\"pre\">Input</span></code> widget for either a <code class=\"docutils literal notranslate\"><span class=\"pre\">ForeignKey</span></code> or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ManyToManyField</span></code>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">ArticleAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">raw_id_fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;newspaper&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">raw_id_fields</span></code> <code class=\"docutils literal notranslate\"><span class=\"pre\">Input</span></code> widget should contain a primary key if the\nfield is a <code class=\"docutils literal notranslate\"><span class=\"pre\">ForeignKey</span></code> or a comma separated list of values if the field\nis a <code class=\"docutils literal notranslate\"><span class=\"pre\">ManyToManyField</span></code>.  The <code class=\"docutils literal notranslate\"><span class=\"pre\">raw_id_fields</span></code> widget shows a magnifying\nglass button next to the field which allows users to search for and select\na value:</p>\n<img alt=\"../../../_images/raw_id_fields.png\" src=\"../../../_images/raw_id_fields.png\" />\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.readonly_fields\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">readonly_fields</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.readonly_fields\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>By default the admin shows all fields as editable. Any fields in this\noption (which should be a <code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">tuple</span></code>) will display its data\nas-is and non-editable; they are also excluded from the\n<a class=\"reference internal\" href=\"../../../topics/forms/modelforms/#django.forms.ModelForm\" title=\"django.forms.ModelForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelForm</span></code></a> used for creating and editing. Note that\nwhen specifying <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.fields\" title=\"django.contrib.admin.ModelAdmin.fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.fields</span></code></a> or <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.fieldsets\" title=\"django.contrib.admin.ModelAdmin.fieldsets\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.fieldsets</span></code></a>\nthe read-only fields must be present to be shown (they are ignored\notherwise).</p>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">readonly_fields</span></code> is used without defining explicit ordering through\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.fields\" title=\"django.contrib.admin.ModelAdmin.fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.fields</span></code></a> or <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.fieldsets\" title=\"django.contrib.admin.ModelAdmin.fieldsets\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.fieldsets</span></code></a> they will be\nadded last after all editable fields.</p>\n<p>A read-only field can not only display data from a model\u2019s field, it can\nalso display the output of a model\u2019s method or a method of the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> class itself. This is very similar to the way\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.list_display\" title=\"django.contrib.admin.ModelAdmin.list_display\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.list_display</span></code></a> behaves. This provides a way to use the\nadmin interface to provide feedback on the status of the objects being\nedited, for example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.html</span> <span class=\"kn\">import</span> <span class=\"n\">format_html_join</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.safestring</span> <span class=\"kn\">import</span> <span class=\"n\">mark_safe</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">readonly_fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;address_report&quot;</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># description functions like a model field&#39;s verbose_name</span>\n    <span class=\"nd\">@admin</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;Address&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">address_report</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"p\">):</span>\n        <span class=\"c1\"># assuming get_full_address() returns a list of strings</span>\n        <span class=\"c1\"># for each line of the address and you want to separate each</span>\n        <span class=\"c1\"># line by a linebreak</span>\n        <span class=\"k\">return</span> <span class=\"n\">format_html_join</span><span class=\"p\">(</span>\n            <span class=\"n\">mark_safe</span><span class=\"p\">(</span><span class=\"s2\">&quot;&lt;br&gt;&quot;</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">((</span><span class=\"n\">line</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">get_full_address</span><span class=\"p\">()),</span>\n        <span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">mark_safe</span><span class=\"p\">(</span><span class=\"s2\">&quot;&lt;span class=&#39;errors&#39;&gt;I can&#39;t determine this address.&lt;/span&gt;&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.save_as\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">save_as</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.save_as\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set <code class=\"docutils literal notranslate\"><span class=\"pre\">save_as</span></code> to enable a \u201csave as new\u201d feature on admin change forms.</p>\n<p>Normally, objects have three save options: \u201cSave\u201d, \u201cSave and continue\nediting\u201d, and \u201cSave and add another\u201d. If <code class=\"docutils literal notranslate\"><span class=\"pre\">save_as</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, \u201cSave\nand add another\u201d will be replaced by a \u201cSave as new\u201d button that creates a\nnew object (with a new ID) rather than updating the existing object.</p>\n<p>By default, <code class=\"docutils literal notranslate\"><span class=\"pre\">save_as</span></code> is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.save_as_continue\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">save_as_continue</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.save_as_continue\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>When <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.save_as\" title=\"django.contrib.admin.ModelAdmin.save_as\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">save_as=True</span></code></a>, the default redirect after saving the\nnew object is to the change view for that object. If you set\n<code class=\"docutils literal notranslate\"><span class=\"pre\">save_as_continue=False</span></code>, the redirect will be to the changelist view.</p>\n<p>By default, <code class=\"docutils literal notranslate\"><span class=\"pre\">save_as_continue</span></code> is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.save_on_top\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">save_on_top</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.save_on_top\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set <code class=\"docutils literal notranslate\"><span class=\"pre\">save_on_top</span></code> to add save buttons across the top of your admin change\nforms.</p>\n<p>Normally, the save buttons appear only at the bottom of the forms. If you\nset <code class=\"docutils literal notranslate\"><span class=\"pre\">save_on_top</span></code>, the buttons will appear both on the top and the\nbottom.</p>\n<p>By default, <code class=\"docutils literal notranslate\"><span class=\"pre\">save_on_top</span></code> is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.search_fields\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">search_fields</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.search_fields\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set <code class=\"docutils literal notranslate\"><span class=\"pre\">search_fields</span></code> to enable a search box on the admin change list page.\nThis should be set to a list of field names that will be searched whenever\nsomebody submits a search query in that text box.</p>\n<p>These fields should be some kind of text field, such as <code class=\"docutils literal notranslate\"><span class=\"pre\">CharField</span></code> or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">TextField</span></code>. You can also perform a related lookup on a <code class=\"docutils literal notranslate\"><span class=\"pre\">ForeignKey</span></code> or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ManyToManyField</span></code> with the lookup API \u201cfollow\u201d notation:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">search_fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;foreign_key__related_fieldname&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>For example, if you have a blog entry with an author, the following\ndefinition would enable searching blog entries by the email address of the\nauthor:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">search_fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;user__email&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>When somebody does a search in the admin search box, Django splits the\nsearch query into words and returns all objects that contain each of the\nwords, case-insensitive (using the <a class=\"reference internal\" href=\"../../models/querysets/#std-fieldlookup-icontains\"><code class=\"xref std std-lookup docutils literal notranslate\"><span class=\"pre\">icontains</span></code></a> lookup), where each\nword must be in at least one of <code class=\"docutils literal notranslate\"><span class=\"pre\">search_fields</span></code>. For example, if\n<code class=\"docutils literal notranslate\"><span class=\"pre\">search_fields</span></code> is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">['first_name',</span> <span class=\"pre\">'last_name']</span></code> and a user\nsearches for <code class=\"docutils literal notranslate\"><span class=\"pre\">john</span> <span class=\"pre\">lennon</span></code>, Django will do the equivalent of this SQL\n<code class=\"docutils literal notranslate\"><span class=\"pre\">WHERE</span></code> clause:</p>\n<div class=\"highlight-sql notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">WHERE</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">first_name</span><span class=\"w\"> </span><span class=\"k\">ILIKE</span><span class=\"w\"> </span><span class=\"s1\">&#39;%john%&#39;</span><span class=\"w\"> </span><span class=\"k\">OR</span><span class=\"w\"> </span><span class=\"n\">last_name</span><span class=\"w\"> </span><span class=\"k\">ILIKE</span><span class=\"w\"> </span><span class=\"s1\">&#39;%john%&#39;</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"k\">AND</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">first_name</span><span class=\"w\"> </span><span class=\"k\">ILIKE</span><span class=\"w\"> </span><span class=\"s1\">&#39;%lennon%&#39;</span><span class=\"w\"> </span><span class=\"k\">OR</span><span class=\"w\"> </span><span class=\"n\">last_name</span><span class=\"w\"> </span><span class=\"k\">ILIKE</span><span class=\"w\"> </span><span class=\"s1\">&#39;%lennon%&#39;</span><span class=\"p\">)</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<p>The search query can contain quoted phrases with spaces. For example, if a\nuser searches for <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;john</span> <span class=\"pre\">winston&quot;</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">'john</span> <span class=\"pre\">winston'</span></code>, Django will do\nthe equivalent of this SQL <code class=\"docutils literal notranslate\"><span class=\"pre\">WHERE</span></code> clause:</p>\n<div class=\"highlight-sql notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">WHERE</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">first_name</span><span class=\"w\"> </span><span class=\"k\">ILIKE</span><span class=\"w\"> </span><span class=\"s1\">&#39;%john winston%&#39;</span><span class=\"w\"> </span><span class=\"k\">OR</span><span class=\"w\"> </span><span class=\"n\">last_name</span><span class=\"w\"> </span><span class=\"k\">ILIKE</span><span class=\"w\"> </span><span class=\"s1\">&#39;%john winston%&#39;</span><span class=\"p\">)</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<p>If you don\u2019t want to use <code class=\"docutils literal notranslate\"><span class=\"pre\">icontains</span></code> as the lookup, you can use any\nlookup by appending it the field. For example, you could use <a class=\"reference internal\" href=\"../../models/querysets/#std-fieldlookup-exact\"><code class=\"xref std std-lookup docutils literal notranslate\"><span class=\"pre\">exact</span></code></a>\nby setting <code class=\"docutils literal notranslate\"><span class=\"pre\">search_fields</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">['first_name__exact']</span></code>.</p>\n<p>Some (older) shortcuts for specifying a field lookup are also available.\nYou can prefix a field in <code class=\"docutils literal notranslate\"><span class=\"pre\">search_fields</span></code> with the following characters\nand it\u2019s equivalent to adding <code class=\"docutils literal notranslate\"><span class=\"pre\">__&lt;lookup&gt;</span></code> to the field:</p>\n<table class=\"docutils\">\n<colgroup>\n<col width=\"23%\" />\n<col width=\"77%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">Prefix</th>\n<th class=\"head\">Lookup</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td>^</td>\n<td><a class=\"reference internal\" href=\"../../models/querysets/#std-fieldlookup-startswith\"><code class=\"xref std std-lookup docutils literal notranslate\"><span class=\"pre\">startswith</span></code></a></td>\n</tr>\n<tr class=\"row-odd\"><td>=</td>\n<td><a class=\"reference internal\" href=\"../../models/querysets/#std-fieldlookup-iexact\"><code class=\"xref std std-lookup docutils literal notranslate\"><span class=\"pre\">iexact</span></code></a></td>\n</tr>\n<tr class=\"row-even\"><td>&#64;</td>\n<td><a class=\"reference internal\" href=\"../postgres/search/#std-fieldlookup-search\"><code class=\"xref std std-lookup docutils literal notranslate\"><span class=\"pre\">search</span></code></a></td>\n</tr>\n<tr class=\"row-odd\"><td>None</td>\n<td><a class=\"reference internal\" href=\"../../models/querysets/#std-fieldlookup-icontains\"><code class=\"xref std std-lookup docutils literal notranslate\"><span class=\"pre\">icontains</span></code></a></td>\n</tr>\n</tbody>\n</table>\n<p>If you need to customize search you can use\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.get_search_results\" title=\"django.contrib.admin.ModelAdmin.get_search_results\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">ModelAdmin.get_search_results()</span></code></a> to provide additional or alternate\nsearch behavior.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.search_help_text\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">search_help_text</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.search_help_text\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set <code class=\"docutils literal notranslate\"><span class=\"pre\">search_help_text</span></code> to specify a descriptive text for the search box\nwhich will be displayed below it.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.show_full_result_count\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">show_full_result_count</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.show_full_result_count\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set <code class=\"docutils literal notranslate\"><span class=\"pre\">show_full_result_count</span></code> to control whether the full count of objects\nshould be displayed on a filtered admin page (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">99</span> <span class=\"pre\">results</span> <span class=\"pre\">(103</span> <span class=\"pre\">total)</span></code>).\nIf this option is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>, a text like <code class=\"docutils literal notranslate\"><span class=\"pre\">99</span> <span class=\"pre\">results</span> <span class=\"pre\">(Show</span> <span class=\"pre\">all)</span></code>\nis displayed instead.</p>\n<p>The default of <code class=\"docutils literal notranslate\"><span class=\"pre\">show_full_result_count=True</span></code> generates a query to perform\na full count on the table which can be expensive if the table contains a\nlarge number of rows.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.sortable_by\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">sortable_by</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.sortable_by\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>By default, the change list page allows sorting by all model fields (and\ncallables that use the <code class=\"docutils literal notranslate\"><span class=\"pre\">ordering</span></code> argument to the\n<a class=\"reference internal\" href=\"#django.contrib.admin.display\" title=\"django.contrib.admin.display\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">display()</span></code></a> decorator or have the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">admin_order_field</span></code> attribute) specified in <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.list_display\" title=\"django.contrib.admin.ModelAdmin.list_display\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">list_display</span></code></a>.</p>\n<p>If you want to disable sorting for some columns, set <code class=\"docutils literal notranslate\"><span class=\"pre\">sortable_by</span></code> to\na collection (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">tuple</span></code>, or <code class=\"docutils literal notranslate\"><span class=\"pre\">set</span></code>) of the subset of\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.list_display\" title=\"django.contrib.admin.ModelAdmin.list_display\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">list_display</span></code></a> that you want to be sortable. An empty collection\ndisables sorting for all columns.</p>\n<p>If you need to specify this list dynamically, implement a\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.get_sortable_by\" title=\"django.contrib.admin.ModelAdmin.get_sortable_by\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_sortable_by()</span></code></a> method instead.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.view_on_site\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">view_on_site</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.view_on_site\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Set <code class=\"docutils literal notranslate\"><span class=\"pre\">view_on_site</span></code> to control whether or not to display the \u201cView on site\u201d link.\nThis link should bring you to a URL where you can display the saved object.</p>\n<p>This value can be either a boolean flag or a callable. If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> (the\ndefault), the object\u2019s <a class=\"reference internal\" href=\"../../models/instances/#django.db.models.Model.get_absolute_url\" title=\"django.db.models.Model.get_absolute_url\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_absolute_url()</span></code></a>\nmethod will be used to generate the url.</p>\n<p>If your model has a <a class=\"reference internal\" href=\"../../models/instances/#django.db.models.Model.get_absolute_url\" title=\"django.db.models.Model.get_absolute_url\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_absolute_url()</span></code></a> method\nbut you don\u2019t want the \u201cView on site\u201d button to appear, you only need to set\n<code class=\"docutils literal notranslate\"><span class=\"pre\">view_on_site</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">view_on_site</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n</pre></div>\n</div>\n<p>In case it is a callable, it accepts the model instance as a parameter.\nFor example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">reverse</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">view_on_site</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n        <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s2\">&quot;person-detail&quot;</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;slug&quot;</span><span class=\"p\">:</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">slug</span><span class=\"p\">})</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;https://example.com&quot;</span> <span class=\"o\">+</span> <span class=\"n\">url</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<div class=\"section\" id=\"s-custom-template-options\">\n<span id=\"custom-template-options\"></span><h4>Custom template options<a class=\"headerlink\" href=\"#custom-template-options\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>The <a class=\"reference internal\" href=\"#admin-overriding-templates\"><span class=\"std std-ref\">Overriding admin templates</span></a> section describes how to override or extend\nthe default admin templates.  Use the following options to override the default\ntemplates used by the <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin\" title=\"django.contrib.admin.ModelAdmin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code></a> views:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.add_form_template\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">add_form_template</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.add_form_template\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to a custom template, used by <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.add_view\" title=\"django.contrib.admin.ModelAdmin.add_view\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">add_view()</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.change_form_template\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">change_form_template</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.change_form_template\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to a custom template, used by <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.change_view\" title=\"django.contrib.admin.ModelAdmin.change_view\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">change_view()</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.change_list_template\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">change_list_template</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.change_list_template\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to a custom template, used by <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.changelist_view\" title=\"django.contrib.admin.ModelAdmin.changelist_view\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">changelist_view()</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.delete_confirmation_template\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">delete_confirmation_template</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.delete_confirmation_template\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to a custom template, used by <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.delete_view\" title=\"django.contrib.admin.ModelAdmin.delete_view\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">delete_view()</span></code></a> for displaying a\nconfirmation page when deleting one or more objects.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.delete_selected_confirmation_template\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">delete_selected_confirmation_template</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.delete_selected_confirmation_template\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to a custom template, used by the <code class=\"docutils literal notranslate\"><span class=\"pre\">delete_selected</span></code> action method\nfor displaying a confirmation page when deleting one or more objects. See\nthe <a class=\"reference internal\" href=\"actions/\"><span class=\"doc\">actions documentation</span></a>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.object_history_template\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">object_history_template</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.object_history_template\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to a custom template, used by <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.history_view\" title=\"django.contrib.admin.ModelAdmin.history_view\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">history_view()</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.popup_response_template\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">popup_response_template</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.popup_response_template\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to a custom template, used by <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.response_add\" title=\"django.contrib.admin.ModelAdmin.response_add\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">response_add()</span></code></a>,\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.response_change\" title=\"django.contrib.admin.ModelAdmin.response_change\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">response_change()</span></code></a>, and <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.response_delete\" title=\"django.contrib.admin.ModelAdmin.response_delete\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">response_delete()</span></code></a>.</p>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"s-modeladmin-methods\">\n<span id=\"s-model-admin-methods\"></span><span id=\"modeladmin-methods\"></span><span id=\"model-admin-methods\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> methods<a class=\"headerlink\" href=\"#modeladmin-methods\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p class=\"last\">When overriding <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.save_model\" title=\"django.contrib.admin.ModelAdmin.save_model\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">ModelAdmin.save_model()</span></code></a> and\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.delete_model\" title=\"django.contrib.admin.ModelAdmin.delete_model\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">ModelAdmin.delete_model()</span></code></a>, your code must save/delete the\nobject. They aren\u2019t meant for veto purposes, rather they allow you to\nperform extra operations.</p>\n</div>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.save_model\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">save_model</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span></em>, <em><span class=\"n\"><span class=\"pre\">form</span></span></em>, <em><span class=\"n\"><span class=\"pre\">change</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.save_model\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.save_model\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">save_model</span></code> method is given the <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code>, a model instance,\na <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelForm</span></code> instance, and a boolean value based on whether it is adding\nor changing the object. Overriding this method allows doing pre- or\npost-save operations. Call <code class=\"docutils literal notranslate\"><span class=\"pre\">super().save_model()</span></code> to save the object\nusing <a class=\"reference internal\" href=\"../../models/instances/#django.db.models.Model.save\" title=\"django.db.models.Model.save\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">Model.save()</span></code></a>.</p>\n<p>For example to attach <code class=\"docutils literal notranslate\"><span class=\"pre\">request.user</span></code> to the object prior to saving:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ArticleAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">save_model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">form</span><span class=\"p\">,</span> <span class=\"n\">change</span><span class=\"p\">):</span>\n        <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">save_model</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">form</span><span class=\"p\">,</span> <span class=\"n\">change</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.delete_model\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">delete_model</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.delete_model\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.delete_model\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">delete_model</span></code> method is given the <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> and a model\ninstance. Overriding this method allows doing pre- or post-delete\noperations. Call <code class=\"docutils literal notranslate\"><span class=\"pre\">super().delete_model()</span></code> to delete the object using\n<a class=\"reference internal\" href=\"../../models/instances/#django.db.models.Model.delete\" title=\"django.db.models.Model.delete\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">Model.delete()</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.delete_queryset\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">delete_queryset</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">queryset</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.delete_queryset\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.delete_queryset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">delete_queryset()</span></code> method is given the <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> and a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">QuerySet</span></code> of objects to be deleted. Override this method to customize\nthe deletion process for the \u201cdelete selected objects\u201d <a class=\"reference internal\" href=\"actions/\"><span class=\"doc\">action</span></a>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.save_formset\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">save_formset</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">form</span></span></em>, <em><span class=\"n\"><span class=\"pre\">formset</span></span></em>, <em><span class=\"n\"><span class=\"pre\">change</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.save_formset\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.save_formset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">save_formset</span></code> method is given the <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code>, the parent\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ModelForm</span></code> instance and a boolean value based on whether it is adding or\nchanging the parent object.</p>\n<p>For example, to attach <code class=\"docutils literal notranslate\"><span class=\"pre\">request.user</span></code> to each changed formset\nmodel instance:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">ArticleAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">save_formset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">form</span><span class=\"p\">,</span> <span class=\"n\">formset</span><span class=\"p\">,</span> <span class=\"n\">change</span><span class=\"p\">):</span>\n        <span class=\"n\">instances</span> <span class=\"o\">=</span> <span class=\"n\">formset</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">commit</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">obj</span> <span class=\"ow\">in</span> <span class=\"n\">formset</span><span class=\"o\">.</span><span class=\"n\">deleted_objects</span><span class=\"p\">:</span>\n            <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">instance</span> <span class=\"ow\">in</span> <span class=\"n\">instances</span><span class=\"p\">:</span>\n            <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span>\n            <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n        <span class=\"n\">formset</span><span class=\"o\">.</span><span class=\"n\">save_m2m</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>See also <a class=\"reference internal\" href=\"../../../topics/forms/modelforms/#saving-objects-in-the-formset\"><span class=\"std std-ref\">Saving objects in the formset</span></a>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_ordering\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_ordering</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_ordering\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">get_ordering</span></code> method takes a <code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code> as parameter and\nis expected to return a <code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">tuple</span></code> for ordering similar\nto the <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.ordering\" title=\"django.contrib.admin.ModelAdmin.ordering\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ordering</span></code></a> attribute. For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_ordering</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">is_superuser</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;rank&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_search_results\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_search_results</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">queryset</span></span></em>, <em><span class=\"n\"><span class=\"pre\">search_term</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.get_search_results\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_search_results\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">get_search_results</span></code> method modifies the list of objects displayed\ninto those that match the provided search term. It accepts the request, a\nqueryset that applies the current filters, and the user-provided search term.\nIt returns a tuple containing a queryset modified to implement the search, and\na boolean indicating if the results may contain duplicates.</p>\n<p>The default implementation searches the fields named in <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.search_fields\" title=\"django.contrib.admin.ModelAdmin.search_fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.search_fields</span></code></a>.</p>\n<p>This method may be overridden with your own custom search method. For\nexample, you might wish to search by an integer field, or use an external\ntool such as <a class=\"reference external\" href=\"https://solr.apache.org\">Solr</a> or <a class=\"reference external\" href=\"https://haystacksearch.org\">Haystack</a>. You must establish if the queryset\nchanges implemented by your search method may introduce duplicates into the\nresults, and return <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> in the second element of the return value.</p>\n<p>For example, to search by <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">age</span></code>, you could use:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;age&quot;</span><span class=\"p\">]</span>\n    <span class=\"n\">search_fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_search_results</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">queryset</span><span class=\"p\">,</span> <span class=\"n\">search_term</span><span class=\"p\">):</span>\n        <span class=\"n\">queryset</span><span class=\"p\">,</span> <span class=\"n\">may_have_duplicates</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_search_results</span><span class=\"p\">(</span>\n            <span class=\"n\">request</span><span class=\"p\">,</span>\n            <span class=\"n\">queryset</span><span class=\"p\">,</span>\n            <span class=\"n\">search_term</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">search_term_as_int</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">search_term</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">queryset</span> <span class=\"o\">|=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"n\">search_term_as_int</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">queryset</span><span class=\"p\">,</span> <span class=\"n\">may_have_duplicates</span>\n</pre></div>\n</div>\n<p>This implementation is more efficient than <code class=\"docutils literal notranslate\"><span class=\"pre\">search_fields</span> <span class=\"pre\">=</span>\n<span class=\"pre\">('name',</span> <span class=\"pre\">'=age')</span></code> which results in a string comparison for the numeric\nfield, for example <code class=\"docutils literal notranslate\"><span class=\"pre\">...</span> <span class=\"pre\">OR</span> <span class=\"pre\">UPPER(&quot;polls_choice&quot;.&quot;votes&quot;::text)</span> <span class=\"pre\">=</span> <span class=\"pre\">UPPER('4')</span></code>\non PostgreSQL.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.save_related\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">save_related</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">form</span></span></em>, <em><span class=\"n\"><span class=\"pre\">formsets</span></span></em>, <em><span class=\"n\"><span class=\"pre\">change</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.save_related\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.save_related\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">save_related</span></code> method is given the <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code>, the parent\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ModelForm</span></code> instance, the list of inline formsets and a boolean value\nbased on whether the parent is being added or changed. Here you can do any\npre- or post-save operations for objects related to the parent. Note\nthat at this point the parent object and its form have already been saved.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_autocomplete_fields\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_autocomplete_fields</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_autocomplete_fields\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">get_autocomplete_fields()</span></code> method is given the <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> and is\nexpected to return a <code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">tuple</span></code> of field names that will be\ndisplayed with an autocomplete widget as described above in the\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.autocomplete_fields\" title=\"django.contrib.admin.ModelAdmin.autocomplete_fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.autocomplete_fields</span></code></a> section.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_readonly_fields\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_readonly_fields</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_readonly_fields\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">get_readonly_fields</span></code> method is given the <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> and the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code> being edited (or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> on an add form) and is expected to return\na <code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">tuple</span></code> of field names that will be displayed as read-only,\nas described above in the <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.readonly_fields\" title=\"django.contrib.admin.ModelAdmin.readonly_fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.readonly_fields</span></code></a> section.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_prepopulated_fields\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_prepopulated_fields</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_prepopulated_fields\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">get_prepopulated_fields</span></code> method is given the <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> and the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code> being edited (or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> on an add form) and is expected to return\na <code class=\"docutils literal notranslate\"><span class=\"pre\">dictionary</span></code>, as described above in the <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.prepopulated_fields\" title=\"django.contrib.admin.ModelAdmin.prepopulated_fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.prepopulated_fields</span></code></a>\nsection.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_list_display\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_list_display</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.get_list_display\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_list_display\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">get_list_display</span></code> method is given the <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> and is\nexpected to return a <code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">tuple</span></code> of field names that will be\ndisplayed on the changelist view as described above in the\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.list_display\" title=\"django.contrib.admin.ModelAdmin.list_display\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.list_display</span></code></a> section.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_list_display_links\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_list_display_links</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">list_display</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.get_list_display_links\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_list_display_links\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">get_list_display_links</span></code> method is given the <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> and\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">tuple</span></code> returned by <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.get_list_display\" title=\"django.contrib.admin.ModelAdmin.get_list_display\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">ModelAdmin.get_list_display()</span></code></a>.\nIt is expected to return either <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> or a <code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">tuple</span></code> of field\nnames on the changelist that will be linked to the change view, as described\nin the <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.list_display_links\" title=\"django.contrib.admin.ModelAdmin.list_display_links\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.list_display_links</span></code></a> section.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_exclude\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_exclude</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_exclude\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">get_exclude</span></code> method is given the <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> and the <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code>\nbeing edited (or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> on an add form) and is expected to return a list\nof fields, as described in <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.exclude\" title=\"django.contrib.admin.ModelAdmin.exclude\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.exclude</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_fields\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_fields</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_fields\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">get_fields</span></code> method is given the <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> and the <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code>\nbeing edited (or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> on an add form) and is expected to return a list\nof fields, as described above in the <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.fields\" title=\"django.contrib.admin.ModelAdmin.fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.fields</span></code></a> section.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_fieldsets\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_fieldsets</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_fieldsets\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">get_fieldsets</span></code> method is given the <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> and the <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code>\nbeing edited (or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> on an add form) and is expected to return a list\nof two-tuples, in which each two-tuple represents a <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;fieldset&gt;</span></code> on the\nadmin form page, as described above in the <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.fieldsets\" title=\"django.contrib.admin.ModelAdmin.fieldsets\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.fieldsets</span></code></a> section.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_list_filter\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_list_filter</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.get_list_filter\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_list_filter\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">get_list_filter</span></code> method is given the <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> and is expected\nto return the same kind of sequence type as for the\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.list_filter\" title=\"django.contrib.admin.ModelAdmin.list_filter\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">list_filter</span></code></a> attribute.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_list_select_related\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_list_select_related</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.get_list_select_related\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_list_select_related\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">get_list_select_related</span></code> method is given the <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> and\nshould return a boolean or list as <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.list_select_related\" title=\"django.contrib.admin.ModelAdmin.list_select_related\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.list_select_related</span></code></a>\ndoes.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_search_fields\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_search_fields</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.get_search_fields\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_search_fields\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">get_search_fields</span></code> method is given the <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> and is expected\nto return the same kind of sequence type as for the\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.search_fields\" title=\"django.contrib.admin.ModelAdmin.search_fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">search_fields</span></code></a> attribute.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_sortable_by\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_sortable_by</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_sortable_by\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">get_sortable_by()</span></code> method is passed the <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> and is\nexpected to return a collection (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">tuple</span></code>, or <code class=\"docutils literal notranslate\"><span class=\"pre\">set</span></code>) of\nfield names that will be sortable in the change list page.</p>\n<p>Its default implementation returns <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.sortable_by\" title=\"django.contrib.admin.ModelAdmin.sortable_by\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">sortable_by</span></code></a> if it\u2019s set,\notherwise it defers to <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.get_list_display\" title=\"django.contrib.admin.ModelAdmin.get_list_display\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_list_display()</span></code></a>.</p>\n<p>For example, to prevent one or more columns from being sortable:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_sortable_by</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"o\">*</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_list_display</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)}</span> <span class=\"o\">-</span> <span class=\"p\">{</span><span class=\"s2\">&quot;rank&quot;</span><span class=\"p\">}</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_inline_instances\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_inline_instances</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.get_inline_instances\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_inline_instances\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">get_inline_instances</span></code> method is given the <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> and the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code> being edited (or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> on an add form) and is expected to return\na <code class=\"docutils literal notranslate\"><span class=\"pre\">list</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">tuple</span></code> of <a class=\"reference internal\" href=\"#django.contrib.admin.InlineModelAdmin\" title=\"django.contrib.admin.InlineModelAdmin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin</span></code></a>\nobjects, as described below in the <a class=\"reference internal\" href=\"#django.contrib.admin.InlineModelAdmin\" title=\"django.contrib.admin.InlineModelAdmin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin</span></code></a>\nsection. For example, the following would return inlines without the default\nfiltering based on add, change, delete, and view permissions:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">MyModelAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">inlines</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">MyInline</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_inline_instances</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">inline</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">admin_site</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">inline</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">inlines</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>If you override this method, make sure that the returned inlines are\ninstances of the classes defined in <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.inlines\" title=\"django.contrib.admin.ModelAdmin.inlines\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">inlines</span></code></a> or you might encounter\na \u201cBad Request\u201d error when adding related objects.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_inlines\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_inlines</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_inlines\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">get_inlines</span></code> method is given the <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> and the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code> being edited (or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> on an add form) and is expected to return\nan iterable of inlines. You can override this method to dynamically add\ninlines based on the request or model instance instead of specifying them\nin <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.inlines\" title=\"django.contrib.admin.ModelAdmin.inlines\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.inlines</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_urls\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_urls</span></code>()<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.get_urls\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_urls\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">get_urls</span></code> method on a <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> returns the URLs to be used for\nthat ModelAdmin in the same way as a URLconf.  Therefore you can extend\nthem as documented in <a class=\"reference internal\" href=\"../../../topics/http/urls/\"><span class=\"doc\">URL dispatcher</span></a>, using the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite.admin_view()</span></code> wrapper on your views:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.template.response</span> <span class=\"kn\">import</span> <span class=\"n\">TemplateResponse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModelAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_urls</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">urls</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_urls</span><span class=\"p\">()</span>\n        <span class=\"n\">my_urls</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_view/&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">admin_site</span><span class=\"o\">.</span><span class=\"n\">admin_view</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">my_view</span><span class=\"p\">))]</span>\n        <span class=\"k\">return</span> <span class=\"n\">my_urls</span> <span class=\"o\">+</span> <span class=\"n\">urls</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">my_view</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"c1\"># ...</span>\n        <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n            <span class=\"c1\"># Include common variables for rendering the admin template.</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">admin_site</span><span class=\"o\">.</span><span class=\"n\">each_context</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">),</span>\n            <span class=\"c1\"># Anything else you want in the context...</span>\n            <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">value</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">TemplateResponse</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s2\">&quot;sometemplate.html&quot;</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>If you want to use the admin layout, extend from <code class=\"docutils literal notranslate\"><span class=\"pre\">admin/base_site.html</span></code>:</p>\n<div class=\"highlight-html+django notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cp\">{%</span> <span class=\"k\">extends</span> <span class=\"s2\">&quot;admin/base_site.html&quot;</span> <span class=\"cp\">%}</span>\n<span class=\"cp\">{%</span> <span class=\"k\">block</span> <span class=\"nv\">content</span> <span class=\"cp\">%}</span>\n...\n<span class=\"cp\">{%</span> <span class=\"k\">endblock</span> <span class=\"cp\">%}</span>\n</pre></div>\n</div>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p>Notice how the <code class=\"docutils literal notranslate\"><span class=\"pre\">self.my_view</span></code> function is wrapped in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">self.admin_site.admin_view</span></code>. This is important, since it ensures two\nthings:</p>\n<ol class=\"last arabic simple\">\n<li>Permission checks are run, ensuring only active staff users can\naccess the view.</li>\n<li>The <a class=\"reference internal\" href=\"../../../topics/http/decorators/#django.views.decorators.cache.never_cache\" title=\"django.views.decorators.cache.never_cache\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.views.decorators.cache.never_cache()</span></code></a> decorator is\napplied to prevent caching, ensuring the returned information is\nup-to-date.</li>\n</ol>\n</div>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p>Notice that the custom patterns are included <em>before</em> the regular admin\nURLs: the admin URL patterns are very permissive and will match nearly\nanything, so you\u2019ll usually want to prepend your custom URLs to the\nbuilt-in ones.</p>\n<p class=\"last\">In this example, <code class=\"docutils literal notranslate\"><span class=\"pre\">my_view</span></code> will be accessed at\n<code class=\"docutils literal notranslate\"><span class=\"pre\">/admin/myapp/mymodel/my_view/</span></code> (assuming the admin URLs are included\nat <code class=\"docutils literal notranslate\"><span class=\"pre\">/admin/</span></code>.)</p>\n</div>\n<p>If the page is cacheable, but you still want the permission check to be\nperformed, you can pass a <code class=\"docutils literal notranslate\"><span class=\"pre\">cacheable=True</span></code> argument to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite.admin_view()</span></code>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_view/&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">admin_site</span><span class=\"o\">.</span><span class=\"n\">admin_view</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">my_view</span><span class=\"p\">,</span> <span class=\"n\">cacheable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> views have <code class=\"docutils literal notranslate\"><span class=\"pre\">model_admin</span></code> attributes. Other\n<code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code> views have <code class=\"docutils literal notranslate\"><span class=\"pre\">admin_site</span></code> attributes.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_form\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_form</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.get_form\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_form\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a <a class=\"reference internal\" href=\"../../../topics/forms/modelforms/#django.forms.ModelForm\" title=\"django.forms.ModelForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelForm</span></code></a> class for use in the admin add\nand change views, see <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.add_view\" title=\"django.contrib.admin.ModelAdmin.add_view\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">add_view()</span></code></a> and <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.change_view\" title=\"django.contrib.admin.ModelAdmin.change_view\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">change_view()</span></code></a>.</p>\n<p>The base implementation uses <a class=\"reference internal\" href=\"../../forms/models/#django.forms.models.modelform_factory\" title=\"django.forms.models.modelform_factory\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">modelform_factory()</span></code></a>\nto subclass <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.form\" title=\"django.contrib.admin.ModelAdmin.form\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">form</span></code></a>, modified by attributes such as <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.fields\" title=\"django.contrib.admin.ModelAdmin.fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">fields</span></code></a>\nand <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.exclude\" title=\"django.contrib.admin.ModelAdmin.exclude\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">exclude</span></code></a>. So, for example, if you wanted to offer additional\nfields to superusers, you could swap in a different base form like so:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">MyModelAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_form</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">is_superuser</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;form&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">MySuperuserForm</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_form</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>You may also return a custom <a class=\"reference internal\" href=\"../../../topics/forms/modelforms/#django.forms.ModelForm\" title=\"django.forms.ModelForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelForm</span></code></a> class\ndirectly.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_formsets_with_inlines\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_formsets_with_inlines</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.get_formsets_with_inlines\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_formsets_with_inlines\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Yields (<code class=\"docutils literal notranslate\"><span class=\"pre\">FormSet</span></code>, <a class=\"reference internal\" href=\"#django.contrib.admin.InlineModelAdmin\" title=\"django.contrib.admin.InlineModelAdmin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin</span></code></a>) pairs for use in admin add\nand change views.</p>\n<p>For example if you wanted to display a particular inline only in the change\nview, you could override <code class=\"docutils literal notranslate\"><span class=\"pre\">get_formsets_with_inlines</span></code> as follows:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">MyModelAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">inlines</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">MyInline</span><span class=\"p\">,</span> <span class=\"n\">SomeOtherInline</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_formsets_with_inlines</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">inline</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_inline_instances</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n            <span class=\"c1\"># hide MyInline in the add view</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">inline</span><span class=\"p\">,</span> <span class=\"n\">MyInline</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">obj</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"k\">yield</span> <span class=\"n\">inline</span><span class=\"o\">.</span><span class=\"n\">get_formset</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">),</span> <span class=\"n\">inline</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.formfield_for_foreignkey\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">formfield_for_foreignkey</span></code>(<em><span class=\"n\"><span class=\"pre\">db_field</span></span></em>, <em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.formfield_for_foreignkey\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">formfield_for_foreignkey</span></code> method on a <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> allows you to\noverride the default formfield for a foreign keys field. For example, to\nreturn a subset of objects for this foreign key field based on the user:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">MyModelAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">formfield_for_foreignkey</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">db_field</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">db_field</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;car&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;queryset&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Car</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">owner</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">formfield_for_foreignkey</span><span class=\"p\">(</span><span class=\"n\">db_field</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>This uses the <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> instance to filter the <code class=\"docutils literal notranslate\"><span class=\"pre\">Car</span></code> foreign key\nfield to only display the cars owned by the <code class=\"docutils literal notranslate\"><span class=\"pre\">User</span></code> instance.</p>\n<p>For more complex filters, you can use <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelForm.__init__()</span></code> method to\nfilter based on an <code class=\"docutils literal notranslate\"><span class=\"pre\">instance</span></code> of your model (see\n<a class=\"reference internal\" href=\"../../forms/fields/#fields-which-handle-relationships\"><span class=\"std std-ref\">Fields which handle relationships</span></a>). For example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">CountryAdminForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">ModelForm</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"s2\">&quot;capital&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">queryset</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">cities</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">CountryAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">CountryAdminForm</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.formfield_for_manytomany\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">formfield_for_manytomany</span></code>(<em><span class=\"n\"><span class=\"pre\">db_field</span></span></em>, <em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.formfield_for_manytomany\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Like the <code class=\"docutils literal notranslate\"><span class=\"pre\">formfield_for_foreignkey</span></code> method, the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">formfield_for_manytomany</span></code> method can be overridden to change the\ndefault formfield for a many to many field. For example, if an owner can\nown multiple cars and cars can belong to multiple owners \u2013 a many to\nmany relationship \u2013 you could filter the <code class=\"docutils literal notranslate\"><span class=\"pre\">Car</span></code> foreign key field to\nonly display the cars owned by the <code class=\"docutils literal notranslate\"><span class=\"pre\">User</span></code>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">MyModelAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">formfield_for_manytomany</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">db_field</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">db_field</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;cars&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;queryset&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Car</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">owner</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">formfield_for_manytomany</span><span class=\"p\">(</span><span class=\"n\">db_field</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.formfield_for_choice_field\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">formfield_for_choice_field</span></code>(<em><span class=\"n\"><span class=\"pre\">db_field</span></span></em>, <em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.formfield_for_choice_field\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Like the <code class=\"docutils literal notranslate\"><span class=\"pre\">formfield_for_foreignkey</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">formfield_for_manytomany</span></code>\nmethods, the <code class=\"docutils literal notranslate\"><span class=\"pre\">formfield_for_choice_field</span></code> method can be overridden to\nchange the default formfield for a field that has declared choices. For\nexample, if the choices available to a superuser should be different than\nthose available to regular staff, you could proceed as follows:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">MyModelAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">formfield_for_choice_field</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">db_field</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">db_field</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;status&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;choices&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"p\">(</span><span class=\"s2\">&quot;accepted&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Accepted&quot;</span><span class=\"p\">),</span>\n                <span class=\"p\">(</span><span class=\"s2\">&quot;denied&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Denied&quot;</span><span class=\"p\">),</span>\n            <span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">is_superuser</span><span class=\"p\">:</span>\n                <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;choices&quot;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"s2\">&quot;ready&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Ready for deployment&quot;</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">formfield_for_choice_field</span><span class=\"p\">(</span><span class=\"n\">db_field</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<div class=\"admonition-choices-limitations admonition\">\n<p class=\"first admonition-title\"><code class=\"docutils literal notranslate\"><span class=\"pre\">choices</span></code> limitations</p>\n<p class=\"last\">Any <code class=\"docutils literal notranslate\"><span class=\"pre\">choices</span></code> attribute set on the formfield will be limited to the\nform field only. If the corresponding field on the model has choices\nset, the choices provided to the form must be a valid subset of those\nchoices, otherwise the form submission will fail with\na <a class=\"reference internal\" href=\"../../exceptions/#django.core.exceptions.ValidationError\" title=\"django.core.exceptions.ValidationError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code></a> when the model itself\nis validated before saving.</p>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_changelist\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_changelist</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.get_changelist\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_changelist\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the <code class=\"docutils literal notranslate\"><span class=\"pre\">Changelist</span></code> class to be used for listing. By default,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.admin.views.main.ChangeList</span></code> is used. By inheriting this\nclass you can change the behavior of the listing.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_changelist_form\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_changelist_form</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.get_changelist_form\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_changelist_form\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a <a class=\"reference internal\" href=\"../../../topics/forms/modelforms/#django.forms.ModelForm\" title=\"django.forms.ModelForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelForm</span></code></a> class for use in the <code class=\"docutils literal notranslate\"><span class=\"pre\">Formset</span></code>\non the changelist page. To use a custom form, for example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">ModelForm</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModelAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_changelist_form</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">MyForm</span>\n</pre></div>\n</div>\n<div class=\"admonition-omit-the-meta-model-attribute admonition\">\n<p class=\"first admonition-title\">Omit the <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta.model</span></code> attribute</p>\n<p class=\"last\">If you define the <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta.model</span></code> attribute on a\n<a class=\"reference internal\" href=\"../../../topics/forms/modelforms/#django.forms.ModelForm\" title=\"django.forms.ModelForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelForm</span></code></a>, you must also define the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Meta.fields</span></code> attribute (or the <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta.exclude</span></code> attribute). However,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> ignores this value, overriding it with the\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.list_editable\" title=\"django.contrib.admin.ModelAdmin.list_editable\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.list_editable</span></code></a> attribute. The easiest solution is to\nomit the <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta.model</span></code> attribute, since <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> will provide the\ncorrect model to use.</p>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_changelist_formset\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_changelist_formset</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.get_changelist_formset\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_changelist_formset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a <a class=\"reference internal\" href=\"../../../topics/forms/modelforms/#model-formsets\"><span class=\"std std-ref\">ModelFormSet</span></a> class for use on the\nchangelist page if <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.list_editable\" title=\"django.contrib.admin.ModelAdmin.list_editable\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">list_editable</span></code></a> is used. To use a\ncustom formset, for example:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.forms</span> <span class=\"kn\">import</span> <span class=\"n\">BaseModelFormSet</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyAdminFormSet</span><span class=\"p\">(</span><span class=\"n\">BaseModelFormSet</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModelAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_changelist_formset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;formset&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">MyAdminFormSet</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_changelist_formset</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.lookup_allowed\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">lookup_allowed</span></code>(<em><span class=\"n\"><span class=\"pre\">lookup</span></span></em>, <em><span class=\"n\"><span class=\"pre\">value</span></span></em>, <em><span class=\"n\"><span class=\"pre\">request</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.lookup_allowed\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The objects in the changelist page can be filtered with lookups from the\nURL\u2019s query string. This is how <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.list_filter\" title=\"django.contrib.admin.ModelAdmin.list_filter\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">list_filter</span></code></a> works, for example. The\nlookups are similar to what\u2019s used in <a class=\"reference internal\" href=\"../../models/querysets/#django.db.models.query.QuerySet.filter\" title=\"django.db.models.query.QuerySet.filter\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">QuerySet.filter()</span></code></a> (e.g.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">user__email=user&#64;example.com</span></code>). Since the lookups in the query string\ncan be manipulated by the user, they must be sanitized to prevent\nunauthorized data exposure.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">lookup_allowed()</span></code> method is given a lookup path from the query string\n(e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">'user__email'</span></code>), the corresponding value\n(e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">'user&#64;example.com'</span></code>), and the request, and returns a boolean\nindicating whether filtering the changelist\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">QuerySet</span></code> using the\nparameters is permitted. If <code class=\"docutils literal notranslate\"><span class=\"pre\">lookup_allowed()</span></code> returns <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DisallowedModelAdminLookup</span></code>\n(subclass of <a class=\"reference internal\" href=\"../../exceptions/#django.core.exceptions.SuspiciousOperation\" title=\"django.core.exceptions.SuspiciousOperation\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">SuspiciousOperation</span></code></a>) is raised.</p>\n<p>By default, <code class=\"docutils literal notranslate\"><span class=\"pre\">lookup_allowed()</span></code> allows access to a model\u2019s local fields,\nfield paths used in <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.list_filter\" title=\"django.contrib.admin.ModelAdmin.list_filter\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">list_filter</span></code></a> (but not paths from\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.get_list_filter\" title=\"django.contrib.admin.ModelAdmin.get_list_filter\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_list_filter()</span></code></a>), and lookups required for\n<a class=\"reference internal\" href=\"../../models/fields/#django.db.models.ForeignKey.limit_choices_to\" title=\"django.db.models.ForeignKey.limit_choices_to\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">limit_choices_to</span></code></a> to function\ncorrectly in <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.raw_id_fields\" title=\"django.contrib.admin.ModelAdmin.raw_id_fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">raw_id_fields</span></code></a>.</p>\n<p>Override this method to customize the lookups permitted for your\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin\" title=\"django.contrib.admin.ModelAdmin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code></a> subclass.</p>\n<div class=\"versionchanged\">\n<span class=\"title\">Changed in Django Development version:</span> <p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code> argument was added.</p>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.has_view_permission\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">has_view_permission</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.has_view_permission\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Should return <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if viewing <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code> is permitted, <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> otherwise.\nIf obj is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, should return <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> to indicate whether\nviewing of objects of this type is permitted in general (e.g., <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>\nwill be interpreted as meaning that the current user is not permitted to\nview any object of this type).</p>\n<p>The default implementation returns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the user has either the\n\u201cchange\u201d or \u201cview\u201d permission.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.has_add_permission\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">has_add_permission</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.has_add_permission\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Should return <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if adding an object is permitted, <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>\notherwise.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.has_change_permission\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">has_change_permission</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.has_change_permission\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Should return <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if editing <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code> is permitted, <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>\notherwise. If <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, should return <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> to\nindicate whether editing of objects of this type is permitted in general\n(e.g., <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> will be interpreted as meaning that the current user is\nnot permitted to edit any object of this type).</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.has_delete_permission\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">has_delete_permission</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.has_delete_permission\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Should return <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if deleting <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code> is permitted, <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>\notherwise. If <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, should return <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> to\nindicate whether deleting objects of this type is permitted in general\n(e.g., <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> will be interpreted as meaning that the current user is\nnot permitted to delete any object of this type).</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.has_module_permission\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">has_module_permission</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.has_module_permission\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Should return <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if displaying the module on the admin index page and\naccessing the module\u2019s index page is permitted, <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> otherwise.\nUses <a class=\"reference internal\" href=\"../auth/#django.contrib.auth.models.User.has_module_perms\" title=\"django.contrib.auth.models.User.has_module_perms\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">User.has_module_perms()</span></code></a> by default. Overriding\nit does not restrict access to the view, add, change, or delete views,\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.has_view_permission\" title=\"django.contrib.admin.ModelAdmin.has_view_permission\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">has_view_permission()</span></code></a>,\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.has_add_permission\" title=\"django.contrib.admin.ModelAdmin.has_add_permission\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">has_add_permission()</span></code></a>,\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.has_change_permission\" title=\"django.contrib.admin.ModelAdmin.has_change_permission\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">has_change_permission()</span></code></a>, and\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.has_delete_permission\" title=\"django.contrib.admin.ModelAdmin.has_delete_permission\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">has_delete_permission()</span></code></a> should be used for that.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_queryset\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_queryset</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_queryset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">get_queryset</span></code> method on a <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> returns a\n<a class=\"reference internal\" href=\"../../models/querysets/#django.db.models.query.QuerySet\" title=\"django.db.models.query.QuerySet\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">QuerySet</span></code></a> of all model instances that\ncan be edited by the admin site. One use case for overriding this method\nis to show objects owned by the logged-in user:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">MyModelAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_queryset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"n\">qs</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_queryset</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">is_superuser</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">qs</span>\n        <span class=\"k\">return</span> <span class=\"n\">qs</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">author</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.message_user\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">message_user</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">message</span></span></em>, <em><span class=\"n\"><span class=\"pre\">level</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">messages.INFO</span></span></em>, <em><span class=\"n\"><span class=\"pre\">extra_tags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em><span class=\"n\"><span class=\"pre\">fail_silently</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.message_user\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.message_user\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Sends a message to the user using the <a class=\"reference internal\" href=\"../messages/#module-django.contrib.messages\" title=\"django.contrib.messages: Provides cookie- and session-based temporary message storage.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.messages</span></code></a>\nbackend.  See the <a class=\"reference internal\" href=\"actions/#custom-admin-action\"><span class=\"std std-ref\">custom ModelAdmin example</span></a>.</p>\n<p>Keyword arguments allow you to change the message level, add extra CSS\ntags, or fail silently if the <code class=\"docutils literal notranslate\"><span class=\"pre\">contrib.messages</span></code> framework is not\ninstalled. These keyword arguments match those for\n<a class=\"reference internal\" href=\"../messages/#django.contrib.messages.add_message\" title=\"django.contrib.messages.add_message\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">django.contrib.messages.add_message()</span></code></a>, see that function\u2019s\ndocumentation for more details. One difference is that the level may be\npassed as a string label in addition to integer/constant.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_paginator\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_paginator</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">queryset</span></span></em>, <em><span class=\"n\"><span class=\"pre\">per_page</span></span></em>, <em><span class=\"n\"><span class=\"pre\">orphans</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em><span class=\"n\"><span class=\"pre\">allow_empty_first_page</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.get_paginator\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_paginator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns an instance of the paginator to use for this view. By default,\ninstantiates an instance of <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.paginator\" title=\"django.contrib.admin.ModelAdmin.paginator\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">paginator</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.response_add\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">response_add</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span></em>, <em><span class=\"n\"><span class=\"pre\">post_url_continue</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.response_add\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.response_add\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Determines the <a class=\"reference internal\" href=\"../../request-response/#django.http.HttpResponse\" title=\"django.http.HttpResponse\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpResponse</span></code></a> for the\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.add_view\" title=\"django.contrib.admin.ModelAdmin.add_view\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">add_view()</span></code></a> stage.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">response_add</span></code> is called after the admin form is submitted and\njust after the object and all the related instances have\nbeen created and saved. You can override it to change the default behavior\nafter the object has been created.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.response_change\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">response_change</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.response_change\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.response_change\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Determines the <a class=\"reference internal\" href=\"../../request-response/#django.http.HttpResponse\" title=\"django.http.HttpResponse\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpResponse</span></code></a> for the\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.change_view\" title=\"django.contrib.admin.ModelAdmin.change_view\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">change_view()</span></code></a> stage.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">response_change</span></code> is called after the admin form is submitted and\njust after the object and all the related instances have\nbeen saved. You can override it to change the default\nbehavior after the object has been changed.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.response_delete\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">response_delete</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj_display</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj_id</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.response_delete\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.response_delete\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Determines the <a class=\"reference internal\" href=\"../../request-response/#django.http.HttpResponse\" title=\"django.http.HttpResponse\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpResponse</span></code></a> for the\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.delete_view\" title=\"django.contrib.admin.ModelAdmin.delete_view\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">delete_view()</span></code></a> stage.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">response_delete</span></code> is called after the object has been\ndeleted. You can override it to change the default\nbehavior after the object has been deleted.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">obj_display</span></code> is a string with the name of the deleted\nobject.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">obj_id</span></code> is the serialized identifier used to retrieve the object to be\ndeleted.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_formset_kwargs\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_formset_kwargs</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span></em>, <em><span class=\"n\"><span class=\"pre\">inline</span></span></em>, <em><span class=\"n\"><span class=\"pre\">prefix</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.get_formset_kwargs\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_formset_kwargs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A hook for customizing the keyword arguments passed to the constructor of a\nformset. For example, to pass <code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code> to formset forms:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">MyModelAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_formset_kwargs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">inline</span><span class=\"p\">,</span> <span class=\"n\">prefix</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"o\">**</span><span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_formset_kwargs</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">inline</span><span class=\"p\">,</span> <span class=\"n\">prefix</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;form_kwargs&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;request&quot;</span><span class=\"p\">:</span> <span class=\"n\">request</span><span class=\"p\">},</span>\n        <span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>You can also use it to set <code class=\"docutils literal notranslate\"><span class=\"pre\">initial</span></code> for formset forms.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_changeform_initial_data\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_changeform_initial_data</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.get_changeform_initial_data\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_changeform_initial_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A hook for the initial data on admin change forms. By default, fields are\ngiven initial values from <code class=\"docutils literal notranslate\"><span class=\"pre\">GET</span></code> parameters. For instance,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">?name=initial_value</span></code> will set the <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> field\u2019s initial value to be\n<code class=\"docutils literal notranslate\"><span class=\"pre\">initial_value</span></code>.</p>\n<p>This method should return a dictionary in the form\n<code class=\"docutils literal notranslate\"><span class=\"pre\">{'fieldname':</span> <span class=\"pre\">'fieldval'}</span></code>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">get_changeform_initial_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;custom_initial_value&quot;</span><span class=\"p\">}</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.get_deleted_objects\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_deleted_objects</span></code>(<em><span class=\"n\"><span class=\"pre\">objs</span></span></em>, <em><span class=\"n\"><span class=\"pre\">request</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.get_deleted_objects\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.get_deleted_objects\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A hook for customizing the deletion process of the <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.delete_view\" title=\"django.contrib.admin.ModelAdmin.delete_view\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">delete_view()</span></code></a> and\nthe \u201cdelete selected\u201d <a class=\"reference internal\" href=\"actions/\"><span class=\"doc\">action</span></a>.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">objs</span></code> argument is a homogeneous iterable of objects (a <code class=\"docutils literal notranslate\"><span class=\"pre\">QuerySet</span></code>\nor a list of model instances) to be deleted, and <code class=\"docutils literal notranslate\"><span class=\"pre\">request</span></code> is the\n<a class=\"reference internal\" href=\"../../request-response/#django.http.HttpRequest\" title=\"django.http.HttpRequest\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code></a>.</p>\n<p>This method must return a 4-tuple of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">(deleted_objects,</span> <span class=\"pre\">model_count,</span> <span class=\"pre\">perms_needed,</span> <span class=\"pre\">protected)</span></code>.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">deleted_objects</span></code> is a list of strings representing all the objects that\nwill be deleted. If there are any related objects to be deleted, the list\nis nested and includes those related objects. The list is formatted in the\ntemplate using the <a class=\"reference internal\" href=\"../../templates/builtins/#std-templatefilter-unordered_list\"><code class=\"xref std std-tfilter docutils literal notranslate\"><span class=\"pre\">unordered_list</span></code></a> filter.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">model_count</span></code> is a dictionary mapping each model\u2019s\n<a class=\"reference internal\" href=\"../../models/options/#django.db.models.Options.verbose_name_plural\" title=\"django.db.models.Options.verbose_name_plural\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">verbose_name_plural</span></code></a> to the number of\nobjects that will be deleted.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">perms_needed</span></code> is a set of <a class=\"reference internal\" href=\"../../models/options/#django.db.models.Options.verbose_name\" title=\"django.db.models.Options.verbose_name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">verbose_name</span></code></a>s\nof the models that the user doesn\u2019t have permission to delete.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">protected</span></code> is a list of strings representing of all the protected\nrelated objects that can\u2019t be deleted. The list is displayed in the\ntemplate.</p>\n</dd></dl>\n\n<div class=\"section\" id=\"s-other-methods\">\n<span id=\"other-methods\"></span><h4>Other methods<a class=\"headerlink\" href=\"#other-methods\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.add_view\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">add_view</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">form_url</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em><span class=\"n\"><span class=\"pre\">extra_context</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.add_view\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.add_view\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Django view for the model instance addition page. See note below.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.change_view\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">change_view</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">object_id</span></span></em>, <em><span class=\"n\"><span class=\"pre\">form_url</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">''</span></span></em>, <em><span class=\"n\"><span class=\"pre\">extra_context</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.change_view\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.change_view\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Django view for the model instance editing page. See note below.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.changelist_view\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">changelist_view</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">extra_context</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.changelist_view\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.changelist_view\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Django view for the model instances change list/actions page. See note\nbelow.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.delete_view\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">delete_view</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">object_id</span></span></em>, <em><span class=\"n\"><span class=\"pre\">extra_context</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.delete_view\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.delete_view\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Django view for the model instance(s) deletion confirmation page. See note\nbelow.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.ModelAdmin.history_view\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">ModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">history_view</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">object_id</span></span></em>, <em><span class=\"n\"><span class=\"pre\">extra_context</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#ModelAdmin.history_view\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.ModelAdmin.history_view\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Django view for the page that shows the modification history for a given\nmodel instance.</p>\n</dd></dl>\n\n<p>Unlike the hook-type <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> methods detailed in the previous section,\nthese five methods are in reality designed to be invoked as Django views from\nthe admin application URL dispatching handler to render the pages that deal\nwith model instances CRUD operations. As a result, completely overriding these\nmethods will significantly change the behavior of the admin application.</p>\n<p>One common reason for overriding these methods is to augment the context data\nthat is provided to the template that renders the view. In the following\nexample, the change view is overridden so that the rendered template is\nprovided some extra mapping data that would not otherwise be available:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">MyModelAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"c1\"># A template for a very customized change view:</span>\n    <span class=\"n\">change_form_template</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;admin/myapp/extras/openstreetmap_change_form.html&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_osm_info</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># ...</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">change_view</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">object_id</span><span class=\"p\">,</span> <span class=\"n\">form_url</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">extra_context</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"n\">extra_context</span> <span class=\"o\">=</span> <span class=\"n\">extra_context</span> <span class=\"ow\">or</span> <span class=\"p\">{}</span>\n        <span class=\"n\">extra_context</span><span class=\"p\">[</span><span class=\"s2\">&quot;osm_data&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_osm_info</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">change_view</span><span class=\"p\">(</span>\n            <span class=\"n\">request</span><span class=\"p\">,</span>\n            <span class=\"n\">object_id</span><span class=\"p\">,</span>\n            <span class=\"n\">form_url</span><span class=\"p\">,</span>\n            <span class=\"n\">extra_context</span><span class=\"o\">=</span><span class=\"n\">extra_context</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>These views return <a class=\"reference internal\" href=\"../../template-response/#django.template.response.TemplateResponse\" title=\"django.template.response.TemplateResponse\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TemplateResponse</span></code></a>\ninstances which allow you to easily customize the response data before\nrendering. For more details, see the <a class=\"reference internal\" href=\"../../template-response/\"><span class=\"doc\">TemplateResponse documentation</span></a>.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-modeladmin-asset-definitions\">\n<span id=\"s-id1\"></span><span id=\"modeladmin-asset-definitions\"></span><span id=\"id1\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> asset definitions<a class=\"headerlink\" href=\"#modeladmin-asset-definitions\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>There are times where you would like add a bit of CSS and/or JavaScript to\nthe add/change views. This can be accomplished by using a <code class=\"docutils literal notranslate\"><span class=\"pre\">Media</span></code> inner class\non your <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">ArticleAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Media</span><span class=\"p\">:</span>\n        <span class=\"n\">css</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;all&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;my_styles.css&quot;</span><span class=\"p\">],</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">js</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;my_code.js&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>The <a class=\"reference internal\" href=\"../staticfiles/\"><span class=\"doc\">staticfiles app</span></a> prepends\n<a class=\"reference internal\" href=\"../../settings/#std-setting-STATIC_URL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">STATIC_URL</span></code></a> (or <a class=\"reference internal\" href=\"../../settings/#std-setting-MEDIA_URL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">MEDIA_URL</span></code></a> if <a class=\"reference internal\" href=\"../../settings/#std-setting-STATIC_URL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">STATIC_URL</span></code></a> is\n<code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>) to any asset paths. The same rules apply as <a class=\"reference internal\" href=\"../../../topics/forms/media/#form-asset-paths\"><span class=\"std std-ref\">regular asset\ndefinitions on forms</span></a>.</p>\n<div class=\"section\" id=\"s-jquery\">\n<span id=\"s-contrib-admin-jquery\"></span><span id=\"jquery\"></span><span id=\"contrib-admin-jquery\"></span><h4>jQuery<a class=\"headerlink\" href=\"#jquery\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>Django admin JavaScript makes use of the <a class=\"reference external\" href=\"https://jquery.com\">jQuery</a> library.</p>\n<p>To avoid conflicts with user-supplied scripts or libraries, Django\u2019s jQuery\n(version 3.6.4) is namespaced as <code class=\"docutils literal notranslate\"><span class=\"pre\">django.jQuery</span></code>. If you want to use jQuery\nin your own admin JavaScript without including a second copy, you can use the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.jQuery</span></code> object on changelist and add/edit views. Also, your own admin\nforms or widgets depending on <code class=\"docutils literal notranslate\"><span class=\"pre\">django.jQuery</span></code> must specify\n<code class=\"docutils literal notranslate\"><span class=\"pre\">js=['admin/js/jquery.init.js',</span> <span class=\"pre\">\u2026]</span></code> when <a class=\"reference internal\" href=\"../../../topics/forms/media/#assets-as-a-static-definition\"><span class=\"std std-ref\">declaring form media assets</span></a>.</p>\n<div class=\"versionchanged\">\n<span class=\"title\">Changed in Django 4.2:</span> <p>jQuery was upgraded from 3.6.0 to 3.6.4.</p>\n</div>\n<p>The <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin\" title=\"django.contrib.admin.ModelAdmin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code></a> class requires jQuery by default, so there is no need\nto add jQuery to your <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code>\u2019s list of media resources unless you have\na specific need. For example, if you require the jQuery library to be in the\nglobal namespace (for example when using third-party jQuery plugins) or if you\nneed a newer version of jQuery, you will have to include your own copy.</p>\n<p>Django provides both uncompressed and \u2018minified\u2019 versions of jQuery, as\n<code class=\"docutils literal notranslate\"><span class=\"pre\">jquery.js</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">jquery.min.js</span></code> respectively.</p>\n<p><a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin\" title=\"django.contrib.admin.ModelAdmin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code></a> and <a class=\"reference internal\" href=\"#django.contrib.admin.InlineModelAdmin\" title=\"django.contrib.admin.InlineModelAdmin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin</span></code></a> have a <code class=\"docutils literal notranslate\"><span class=\"pre\">media</span></code> property\nthat returns a list of <code class=\"docutils literal notranslate\"><span class=\"pre\">Media</span></code> objects which store paths to the JavaScript\nfiles for the forms and/or formsets. If <a class=\"reference internal\" href=\"../../settings/#std-setting-DEBUG\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEBUG</span></code></a> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> it will\nreturn the uncompressed versions of the various JavaScript files, including\n<code class=\"docutils literal notranslate\"><span class=\"pre\">jquery.js</span></code>; if not, it will return the \u2018minified\u2019 versions.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-adding-custom-validation-to-the-admin\">\n<span id=\"s-admin-custom-validation\"></span><span id=\"adding-custom-validation-to-the-admin\"></span><span id=\"admin-custom-validation\"></span><h3>Adding custom validation to the admin<a class=\"headerlink\" href=\"#adding-custom-validation-to-the-admin\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>You can also add custom validation of data in the admin. The automatic admin\ninterface reuses <a class=\"reference internal\" href=\"../../forms/api/#module-django.forms\" title=\"django.forms\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.forms</span></code></a>, and the <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> class gives you\nthe ability to define your own form:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">ArticleAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">MyArticleAdminForm</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">MyArticleAdminForm</span></code> can be defined anywhere as long as you import where\nneeded. Now within your form you can add your own custom validation for\nany field:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">MyArticleAdminForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">ModelForm</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">clean_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># do something that validates your data</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">cleaned_data</span><span class=\"p\">[</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>It is important you use a <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelForm</span></code> here otherwise things can break. See\nthe <a class=\"reference internal\" href=\"../../forms/\"><span class=\"doc\">forms</span></a> documentation on <a class=\"reference internal\" href=\"../../forms/validation/\"><span class=\"doc\">custom validation</span></a> and, more specifically, the\n<a class=\"reference internal\" href=\"../../../topics/forms/modelforms/#overriding-modelform-clean-method\"><span class=\"std std-ref\">model form validation notes</span></a> for more\ninformation.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-inlinemodeladmin-objects\">\n<span id=\"s-admin-inlines\"></span><span id=\"inlinemodeladmin-objects\"></span><span id=\"admin-inlines\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin</span></code> objects<a class=\"headerlink\" href=\"#inlinemodeladmin-objects\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">InlineModelAdmin</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.TabularInline\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">TabularInline</span></code><a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#TabularInline\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.TabularInline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.StackedInline\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">StackedInline</span></code><a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/options/#StackedInline\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.StackedInline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The admin interface has the ability to edit models on the same page as a\nparent model. These are called inlines. Suppose you have these two models:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Author</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Book</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Author</span><span class=\"p\">,</span> <span class=\"n\">on_delete</span><span class=\"o\">=</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CASCADE</span><span class=\"p\">)</span>\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>You can edit the books authored by an author on the author page. You add\ninlines to a model by specifying them in a <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin.inlines</span></code>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">BookInline</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">TabularInline</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Book</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AuthorAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">inlines</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">BookInline</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>Django provides two subclasses of <code class=\"docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin</span></code> and they are:</p>\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"#django.contrib.admin.TabularInline\" title=\"django.contrib.admin.TabularInline\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">TabularInline</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.contrib.admin.StackedInline\" title=\"django.contrib.admin.StackedInline\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">StackedInline</span></code></a></li>\n</ul>\n<p>The difference between these two is merely the template used to render\nthem.</p>\n</dd></dl>\n\n<div class=\"section\" id=\"s-inlinemodeladmin-options\">\n<span id=\"inlinemodeladmin-options\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin</span></code> options<a class=\"headerlink\" href=\"#inlinemodeladmin-options\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin</span></code> shares many of the same features as <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code>, and\nadds some of its own (the shared features are actually defined in the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">BaseModelAdmin</span></code> superclass). The shared features are:</p>\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"#django.contrib.admin.InlineModelAdmin.form\" title=\"django.contrib.admin.InlineModelAdmin.form\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">form</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.fieldsets\" title=\"django.contrib.admin.ModelAdmin.fieldsets\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">fieldsets</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.fields\" title=\"django.contrib.admin.ModelAdmin.fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">fields</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.formfield_overrides\" title=\"django.contrib.admin.ModelAdmin.formfield_overrides\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">formfield_overrides</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.exclude\" title=\"django.contrib.admin.ModelAdmin.exclude\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">exclude</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.filter_horizontal\" title=\"django.contrib.admin.ModelAdmin.filter_horizontal\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">filter_horizontal</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.filter_vertical\" title=\"django.contrib.admin.ModelAdmin.filter_vertical\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">filter_vertical</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.ordering\" title=\"django.contrib.admin.ModelAdmin.ordering\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ordering</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.prepopulated_fields\" title=\"django.contrib.admin.ModelAdmin.prepopulated_fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">prepopulated_fields</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.get_fieldsets\" title=\"django.contrib.admin.ModelAdmin.get_fieldsets\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_fieldsets()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.get_queryset\" title=\"django.contrib.admin.ModelAdmin.get_queryset\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_queryset()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.radio_fields\" title=\"django.contrib.admin.ModelAdmin.radio_fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">radio_fields</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.readonly_fields\" title=\"django.contrib.admin.ModelAdmin.readonly_fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">readonly_fields</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.contrib.admin.InlineModelAdmin.raw_id_fields\" title=\"django.contrib.admin.InlineModelAdmin.raw_id_fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">raw_id_fields</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.formfield_for_choice_field\" title=\"django.contrib.admin.ModelAdmin.formfield_for_choice_field\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">formfield_for_choice_field()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.formfield_for_foreignkey\" title=\"django.contrib.admin.ModelAdmin.formfield_for_foreignkey\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">formfield_for_foreignkey()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.formfield_for_manytomany\" title=\"django.contrib.admin.ModelAdmin.formfield_for_manytomany\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">formfield_for_manytomany()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.has_module_permission\" title=\"django.contrib.admin.ModelAdmin.has_module_permission\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">has_module_permission()</span></code></a></li>\n</ul>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin</span></code> class adds or customizes:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin.model\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">InlineModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">model</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin.model\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The model which the inline is using. This is required.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin.fk_name\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">InlineModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">fk_name</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin.fk_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The name of the foreign key on the model. In most cases this will be dealt\nwith automatically, but <code class=\"docutils literal notranslate\"><span class=\"pre\">fk_name</span></code> must be specified explicitly if there\nare more than one foreign key to the same parent model.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin.formset\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">InlineModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">formset</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin.formset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This defaults to <a class=\"reference internal\" href=\"../../../topics/forms/modelforms/#django.forms.models.BaseInlineFormSet\" title=\"django.forms.models.BaseInlineFormSet\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BaseInlineFormSet</span></code></a>. Using\nyour own formset can give you many possibilities of customization. Inlines\nare built around <a class=\"reference internal\" href=\"../../../topics/forms/modelforms/#model-formsets\"><span class=\"std std-ref\">model formsets</span></a>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin.form\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">InlineModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">form</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin.form\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The value for <code class=\"docutils literal notranslate\"><span class=\"pre\">form</span></code> defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelForm</span></code>. This is what is passed\nthrough to <a class=\"reference internal\" href=\"../../forms/models/#django.forms.models.inlineformset_factory\" title=\"django.forms.models.inlineformset_factory\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">inlineformset_factory()</span></code></a> when\ncreating the formset for this inline.</p>\n</dd></dl>\n\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p class=\"last\">When writing custom validation for <code class=\"docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin</span></code> forms, be cautious\nof writing validation that relies on features of the parent model. If the\nparent model fails to validate, it may be left in an inconsistent state as\ndescribed in the warning in <a class=\"reference internal\" href=\"../../../topics/forms/modelforms/#validation-on-modelform\"><span class=\"std std-ref\">Validation on a ModelForm</span></a>.</p>\n</div>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin.classes\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">InlineModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">classes</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin.classes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A list or tuple containing extra CSS classes to apply to the fieldset that\nis rendered for the inlines. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>. As with classes\nconfigured in <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.fieldsets\" title=\"django.contrib.admin.ModelAdmin.fieldsets\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">fieldsets</span></code></a>, inlines with a <code class=\"docutils literal notranslate\"><span class=\"pre\">collapse</span></code>\nclass will be initially collapsed and their header will have a small \u201cshow\u201d\nlink.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin.extra\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">InlineModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">extra</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin.extra\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This controls the number of extra forms the formset will display in\naddition to the initial forms. Defaults to 3. See the\n<a class=\"reference internal\" href=\"../../../topics/forms/formsets/\"><span class=\"doc\">formsets documentation</span></a> for more\ninformation.</p>\n<p>For users with JavaScript-enabled browsers, an \u201cAdd another\u201d link is\nprovided to enable any number of additional inlines to be added in addition\nto those provided as a result of the <code class=\"docutils literal notranslate\"><span class=\"pre\">extra</span></code> argument.</p>\n<p>The dynamic link will not appear if the number of currently displayed forms\nexceeds <code class=\"docutils literal notranslate\"><span class=\"pre\">max_num</span></code>, or if the user does not have JavaScript enabled.</p>\n<p><a class=\"reference internal\" href=\"#django.contrib.admin.InlineModelAdmin.get_extra\" title=\"django.contrib.admin.InlineModelAdmin.get_extra\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin.get_extra()</span></code></a> also allows you to customize the number\nof extra forms.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin.max_num\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">InlineModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">max_num</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin.max_num\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This controls the maximum number of forms to show in the inline. This\ndoesn\u2019t directly correlate to the number of objects, but can if the value\nis small enough. See <a class=\"reference internal\" href=\"../../../topics/forms/modelforms/#model-formsets-max-num\"><span class=\"std std-ref\">Limiting the number of editable objects</span></a> for more information.</p>\n<p><a class=\"reference internal\" href=\"#django.contrib.admin.InlineModelAdmin.get_max_num\" title=\"django.contrib.admin.InlineModelAdmin.get_max_num\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin.get_max_num()</span></code></a> also allows you to customize the\nmaximum number of extra forms.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin.min_num\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">InlineModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">min_num</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin.min_num\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This controls the minimum number of forms to show in the inline.\nSee <a class=\"reference internal\" href=\"../../forms/models/#django.forms.models.modelformset_factory\" title=\"django.forms.models.modelformset_factory\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">modelformset_factory()</span></code></a> for more information.</p>\n<p><a class=\"reference internal\" href=\"#django.contrib.admin.InlineModelAdmin.get_min_num\" title=\"django.contrib.admin.InlineModelAdmin.get_min_num\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin.get_min_num()</span></code></a> also allows you to customize the\nminimum number of displayed forms.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin.raw_id_fields\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">InlineModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">raw_id_fields</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin.raw_id_fields\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>By default, Django\u2019s admin uses a select-box interface (&lt;select&gt;) for\nfields that are <code class=\"docutils literal notranslate\"><span class=\"pre\">ForeignKey</span></code>. Sometimes you don\u2019t want to incur the\noverhead of having to select all the related instances to display in the\ndrop-down.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">raw_id_fields</span></code> is a list of fields you would like to change into an\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Input</span></code> widget for either a <code class=\"docutils literal notranslate\"><span class=\"pre\">ForeignKey</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">ManyToManyField</span></code>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">BookInline</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">TabularInline</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Book</span>\n    <span class=\"n\">raw_id_fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;pages&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin.template\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">InlineModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">template</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin.template\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The template used to render the inline on the page.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin.verbose_name\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">InlineModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">verbose_name</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin.verbose_name\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An override to the <a class=\"reference internal\" href=\"../../models/options/#django.db.models.Options.verbose_name\" title=\"django.db.models.Options.verbose_name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">verbose_name</span></code></a> from the\nmodel\u2019s inner <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta</span></code> class.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin.verbose_name_plural\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">InlineModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">verbose_name_plural</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin.verbose_name_plural\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An override to the <a class=\"reference internal\" href=\"../../models/options/#django.db.models.Options.verbose_name_plural\" title=\"django.db.models.Options.verbose_name_plural\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">verbose_name_plural</span></code></a>\nfrom the model\u2019s inner <code class=\"docutils literal notranslate\"><span class=\"pre\">Meta</span></code> class. If this isn\u2019t given and the\n<a class=\"reference internal\" href=\"#django.contrib.admin.InlineModelAdmin.verbose_name\" title=\"django.contrib.admin.InlineModelAdmin.verbose_name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin.verbose_name</span></code></a> is defined, Django will use\n<a class=\"reference internal\" href=\"#django.contrib.admin.InlineModelAdmin.verbose_name\" title=\"django.contrib.admin.InlineModelAdmin.verbose_name\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin.verbose_name</span></code></a> + <code class=\"docutils literal notranslate\"><span class=\"pre\">'s'</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin.can_delete\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">InlineModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">can_delete</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin.can_delete\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specifies whether or not inline objects can be deleted in the inline.\nDefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin.show_change_link\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">InlineModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">show_change_link</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin.show_change_link\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Specifies whether or not inline objects that can be changed in the\nadmin have a link to the change form. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin.get_formset\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">InlineModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_formset</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin.get_formset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a <a class=\"reference internal\" href=\"../../../topics/forms/modelforms/#django.forms.models.BaseInlineFormSet\" title=\"django.forms.models.BaseInlineFormSet\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BaseInlineFormSet</span></code></a> class for use in\nadmin add/change views. <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code> is the parent object being edited or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> when adding a new parent. See the example for\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.get_formsets_with_inlines\" title=\"django.contrib.admin.ModelAdmin.get_formsets_with_inlines\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelAdmin.get_formsets_with_inlines</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin.get_extra\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">InlineModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_extra</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin.get_extra\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the number of extra inline forms to use. By default, returns the\n<a class=\"reference internal\" href=\"#django.contrib.admin.InlineModelAdmin.extra\" title=\"django.contrib.admin.InlineModelAdmin.extra\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin.extra</span></code></a> attribute.</p>\n<p>Override this method to programmatically determine the number of extra\ninline forms. For example, this may be based on the model instance\n(passed as the keyword argument <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code>):</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">BinaryTreeAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">TabularInline</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">BinaryTree</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_extra</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">extra</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n        <span class=\"k\">if</span> <span class=\"n\">obj</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">extra</span> <span class=\"o\">-</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">binarytree_set</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">extra</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin.get_max_num\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">InlineModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_max_num</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin.get_max_num\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the maximum number of extra inline forms to use. By default,\nreturns the <a class=\"reference internal\" href=\"#django.contrib.admin.InlineModelAdmin.max_num\" title=\"django.contrib.admin.InlineModelAdmin.max_num\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin.max_num</span></code></a> attribute.</p>\n<p>Override this method to programmatically determine the maximum number of\ninline forms. For example, this may be based on the model instance\n(passed as the keyword argument <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code>):</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">BinaryTreeAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">TabularInline</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">BinaryTree</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_max_num</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">max_num</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n        <span class=\"k\">if</span> <span class=\"n\">obj</span> <span class=\"ow\">and</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">max_num</span> <span class=\"o\">-</span> <span class=\"mi\">5</span>\n        <span class=\"k\">return</span> <span class=\"n\">max_num</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin.get_min_num\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">InlineModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_min_num</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin.get_min_num\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns the minimum number of inline forms to use. By default,\nreturns the <a class=\"reference internal\" href=\"#django.contrib.admin.InlineModelAdmin.min_num\" title=\"django.contrib.admin.InlineModelAdmin.min_num\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin.min_num</span></code></a> attribute.</p>\n<p>Override this method to programmatically determine the minimum number of\ninline forms. For example, this may be based on the model instance\n(passed as the keyword argument <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code>).</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin.has_add_permission\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">InlineModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">has_add_permission</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin.has_add_permission\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Should return <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if adding an inline object is permitted, <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>\notherwise. <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code> is the parent object being edited or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> when\nadding a new parent.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin.has_change_permission\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">InlineModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">has_change_permission</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin.has_change_permission\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Should return <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if editing an inline object is permitted, <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>\notherwise. <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code> is the parent object being edited.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.InlineModelAdmin.has_delete_permission\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">InlineModelAdmin.</span></code><code class=\"sig-name descname\"><span class=\"pre\">has_delete_permission</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">obj</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.admin.InlineModelAdmin.has_delete_permission\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Should return <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if deleting an inline object is permitted, <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>\notherwise. <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code> is the parent object being edited.</p>\n</dd></dl>\n\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">obj</span></code> argument passed to <code class=\"docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin</span></code> methods is the parent\nobject being edited or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> when adding a new parent.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-working-with-a-model-with-two-or-more-foreign-keys-to-the-same-parent-model\">\n<span id=\"working-with-a-model-with-two-or-more-foreign-keys-to-the-same-parent-model\"></span><h3>Working with a model with two or more foreign keys to the same parent model<a class=\"headerlink\" href=\"#working-with-a-model-with-two-or-more-foreign-keys-to-the-same-parent-model\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>It is sometimes possible to have more than one foreign key to the same model.\nTake this model for instance:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Friendship</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">to_person</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span>\n        <span class=\"n\">Person</span><span class=\"p\">,</span> <span class=\"n\">on_delete</span><span class=\"o\">=</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CASCADE</span><span class=\"p\">,</span> <span class=\"n\">related_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;friends&quot;</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">from_person</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span>\n        <span class=\"n\">Person</span><span class=\"p\">,</span> <span class=\"n\">on_delete</span><span class=\"o\">=</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CASCADE</span><span class=\"p\">,</span> <span class=\"n\">related_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;from_friends&quot;</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>If you wanted to display an inline on the <code class=\"docutils literal notranslate\"><span class=\"pre\">Person</span></code> admin add/change pages\nyou need to explicitly define the foreign key since it is unable to do so\nautomatically:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">myapp.models</span> <span class=\"kn\">import</span> <span class=\"n\">Friendship</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">FriendshipInline</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">TabularInline</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Friendship</span>\n    <span class=\"n\">fk_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;to_person&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">inlines</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">FriendshipInline</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-working-with-many-to-many-models\">\n<span id=\"working-with-many-to-many-models\"></span><h3>Working with many-to-many models<a class=\"headerlink\" href=\"#working-with-many-to-many-models\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>By default, admin widgets for many-to-many relations will be displayed\non whichever model contains the actual reference to the\n<a class=\"reference internal\" href=\"../../models/fields/#django.db.models.ManyToManyField\" title=\"django.db.models.ManyToManyField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ManyToManyField</span></code></a>. Depending on your <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code>\ndefinition, each many-to-many field in your model will be represented by a\nstandard HTML <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;select</span> <span class=\"pre\">multiple&gt;</span></code>, a horizontal or vertical filter, or a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">raw_id_fields</span></code> widget. However, it is also possible to replace these\nwidgets with inlines.</p>\n<p>Suppose we have the following models:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">128</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Group</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">128</span><span class=\"p\">)</span>\n    <span class=\"n\">members</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ManyToManyField</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">,</span> <span class=\"n\">related_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;groups&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>If you want to display many-to-many relations using an inline, you can do\nso by defining an <code class=\"docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin</span></code> object for the relationship:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MembershipInline</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">TabularInline</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Group</span><span class=\"o\">.</span><span class=\"n\">members</span><span class=\"o\">.</span><span class=\"n\">through</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">inlines</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">MembershipInline</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">GroupAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">inlines</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">MembershipInline</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">exclude</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;members&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>There are two features worth noting in this example.</p>\n<p>Firstly - the <code class=\"docutils literal notranslate\"><span class=\"pre\">MembershipInline</span></code> class references <code class=\"docutils literal notranslate\"><span class=\"pre\">Group.members.through</span></code>.\nThe <code class=\"docutils literal notranslate\"><span class=\"pre\">through</span></code> attribute is a reference to the model that manages the\nmany-to-many relation. This model is automatically created by Django when you\ndefine a many-to-many field.</p>\n<p>Secondly, the <code class=\"docutils literal notranslate\"><span class=\"pre\">GroupAdmin</span></code> must manually exclude the <code class=\"docutils literal notranslate\"><span class=\"pre\">members</span></code> field.\nDjango displays an admin widget for a many-to-many field on the model that\ndefines the relation (in this case, <code class=\"docutils literal notranslate\"><span class=\"pre\">Group</span></code>). If you want to use an inline\nmodel to represent the many-to-many relationship, you must tell Django\u2019s admin\nto <em>not</em> display this widget - otherwise you will end up with two widgets on\nyour admin page for managing the relation.</p>\n<p>Note that when using this technique the\n<a class=\"reference internal\" href=\"../../signals/#django.db.models.signals.m2m_changed\" title=\"django.db.models.signals.m2m_changed\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">m2m_changed</span></code></a> signals aren\u2019t triggered. This\nis because as far as the admin is concerned, <code class=\"docutils literal notranslate\"><span class=\"pre\">through</span></code> is just a model with\ntwo foreign key fields rather than a many-to-many relation.</p>\n<p>In all other respects, the <code class=\"docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin</span></code> is exactly the same as any\nother. You can customize the appearance using any of the normal\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> properties.</p>\n</div>\n<div class=\"section\" id=\"s-working-with-many-to-many-intermediary-models\">\n<span id=\"working-with-many-to-many-intermediary-models\"></span><h3>Working with many-to-many intermediary models<a class=\"headerlink\" href=\"#working-with-many-to-many-intermediary-models\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>When you specify an intermediary model using the <code class=\"docutils literal notranslate\"><span class=\"pre\">through</span></code> argument to a\n<a class=\"reference internal\" href=\"../../models/fields/#django.db.models.ManyToManyField\" title=\"django.db.models.ManyToManyField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ManyToManyField</span></code></a>, the admin will not display a\nwidget by default. This is because each instance of that intermediary model\nrequires more information than could be displayed in a single widget, and the\nlayout required for multiple widgets will vary depending on the intermediate\nmodel.</p>\n<p>However, we still want to be able to edit that information inline. Fortunately,\nwe can do this with inline admin models. Suppose we have the following models:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">128</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Group</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">128</span><span class=\"p\">)</span>\n    <span class=\"n\">members</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ManyToManyField</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">,</span> <span class=\"n\">through</span><span class=\"o\">=</span><span class=\"s2\">&quot;Membership&quot;</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Membership</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">person</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">,</span> <span class=\"n\">on_delete</span><span class=\"o\">=</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CASCADE</span><span class=\"p\">)</span>\n    <span class=\"n\">group</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Group</span><span class=\"p\">,</span> <span class=\"n\">on_delete</span><span class=\"o\">=</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CASCADE</span><span class=\"p\">)</span>\n    <span class=\"n\">date_joined</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateField</span><span class=\"p\">()</span>\n    <span class=\"n\">invite_reason</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The first step in displaying this intermediate model in the admin is to\ndefine an inline class for the <code class=\"docutils literal notranslate\"><span class=\"pre\">Membership</span></code> model:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">MembershipInline</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">TabularInline</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Membership</span>\n    <span class=\"n\">extra</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n</pre></div>\n</div>\n<p>This example uses the default <code class=\"docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin</span></code> values for the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Membership</span></code> model, and limits the extra add forms to one. This could be\ncustomized using any of the options available to <code class=\"docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin</span></code> classes.</p>\n<p>Now create admin views for the <code class=\"docutils literal notranslate\"><span class=\"pre\">Person</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">Group</span></code> models:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">PersonAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">inlines</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">MembershipInline</span><span class=\"p\">]</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">GroupAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">inlines</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">MembershipInline</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>Finally, register your <code class=\"docutils literal notranslate\"><span class=\"pre\">Person</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">Group</span></code> models with the admin site:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">,</span> <span class=\"n\">PersonAdmin</span><span class=\"p\">)</span>\n<span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">Group</span><span class=\"p\">,</span> <span class=\"n\">GroupAdmin</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Now your admin site is set up to edit <code class=\"docutils literal notranslate\"><span class=\"pre\">Membership</span></code> objects inline from\neither the <code class=\"docutils literal notranslate\"><span class=\"pre\">Person</span></code> or the <code class=\"docutils literal notranslate\"><span class=\"pre\">Group</span></code> detail pages.</p>\n</div>\n<div class=\"section\" id=\"s-using-generic-relations-as-an-inline\">\n<span id=\"s-id3\"></span><span id=\"using-generic-relations-as-an-inline\"></span><span id=\"id3\"></span><h3>Using generic relations as an inline<a class=\"headerlink\" href=\"#using-generic-relations-as-an-inline\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>It is possible to use an inline with generically related objects. Let\u2019s say\nyou have the following models:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.contenttypes.fields</span> <span class=\"kn\">import</span> <span class=\"n\">GenericForeignKey</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Image</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ImageField</span><span class=\"p\">(</span><span class=\"n\">upload_to</span><span class=\"o\">=</span><span class=\"s2\">&quot;images&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">content_type</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">ContentType</span><span class=\"p\">,</span> <span class=\"n\">on_delete</span><span class=\"o\">=</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CASCADE</span><span class=\"p\">)</span>\n    <span class=\"n\">object_id</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">PositiveIntegerField</span><span class=\"p\">()</span>\n    <span class=\"n\">content_object</span> <span class=\"o\">=</span> <span class=\"n\">GenericForeignKey</span><span class=\"p\">(</span><span class=\"s2\">&quot;content_type&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;object_id&quot;</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Product</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>If you want to allow editing and creating an <code class=\"docutils literal notranslate\"><span class=\"pre\">Image</span></code> instance on the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Product</span></code>, add/change views you can use\n<a class=\"reference internal\" href=\"../contenttypes/#django.contrib.contenttypes.admin.GenericTabularInline\" title=\"django.contrib.contenttypes.admin.GenericTabularInline\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GenericTabularInline</span></code></a>\nor <a class=\"reference internal\" href=\"../contenttypes/#django.contrib.contenttypes.admin.GenericStackedInline\" title=\"django.contrib.contenttypes.admin.GenericStackedInline\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GenericStackedInline</span></code></a> (both\nsubclasses of <a class=\"reference internal\" href=\"../contenttypes/#django.contrib.contenttypes.admin.GenericInlineModelAdmin\" title=\"django.contrib.contenttypes.admin.GenericInlineModelAdmin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GenericInlineModelAdmin</span></code></a>)\nprovided by <a class=\"reference internal\" href=\"../contenttypes/#module-django.contrib.contenttypes.admin\" title=\"django.contrib.contenttypes.admin\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">admin</span></code></a>. They implement tabular\nand stacked visual layouts for the forms representing the inline objects,\nrespectively, just like their non-generic counterparts. They behave just like\nany other inline. In your <code class=\"docutils literal notranslate\"><span class=\"pre\">admin.py</span></code> for this example app:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.contrib.contenttypes.admin</span> <span class=\"kn\">import</span> <span class=\"n\">GenericTabularInline</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">myapp.models</span> <span class=\"kn\">import</span> <span class=\"n\">Image</span><span class=\"p\">,</span> <span class=\"n\">Product</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ImageInline</span><span class=\"p\">(</span><span class=\"n\">GenericTabularInline</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Image</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ProductAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">inlines</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">ImageInline</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n\n<span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">Product</span><span class=\"p\">,</span> <span class=\"n\">ProductAdmin</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>See the <a class=\"reference internal\" href=\"../contenttypes/\"><span class=\"doc\">contenttypes documentation</span></a> for more\nspecific information.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-overriding-admin-templates\">\n<span id=\"s-admin-overriding-templates\"></span><span id=\"overriding-admin-templates\"></span><span id=\"admin-overriding-templates\"></span><h2>Overriding admin templates<a class=\"headerlink\" href=\"#overriding-admin-templates\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>You can override many of the templates which the admin module uses to generate\nthe various pages of an admin site. You can even override a few of these\ntemplates for a specific app, or a specific model.</p>\n<div class=\"section\" id=\"s-set-up-your-projects-admin-template-directories\">\n<span id=\"set-up-your-projects-admin-template-directories\"></span><h3>Set up your projects admin template directories<a class=\"headerlink\" href=\"#set-up-your-projects-admin-template-directories\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The admin template files are located in the\n<a class=\"reference external\" href=\"https://github.com/django/django/blob/main/django/contrib/admin/templates/admin\">django/contrib/admin/templates/admin</a> directory.</p>\n<p>In order to override one or more of them, first create an <code class=\"docutils literal notranslate\"><span class=\"pre\">admin</span></code> directory\nin your project\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">templates</span></code> directory. This can be any of the directories\nyou specified in the <a class=\"reference internal\" href=\"../../settings/#std-setting-TEMPLATES-DIRS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DIRS</span></code></a> option of the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">DjangoTemplates</span></code> backend in the <a class=\"reference internal\" href=\"../../settings/#std-setting-TEMPLATES\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">TEMPLATES</span></code></a> setting. If you have\ncustomized the <code class=\"docutils literal notranslate\"><span class=\"pre\">'loaders'</span></code> option, be sure\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'django.template.loaders.filesystem.Loader'</span></code> appears before\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'django.template.loaders.app_directories.Loader'</span></code> so that your custom\ntemplates will be found by the template loading system before those that are\nincluded with <a class=\"reference internal\" href=\"#module-django.contrib.admin\" title=\"django.contrib.admin: Django's admin site.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.admin</span></code></a>.</p>\n<p>Within this <code class=\"docutils literal notranslate\"><span class=\"pre\">admin</span></code> directory, create sub-directories named after your app.\nWithin these app subdirectories create sub-directories named after your models.\nNote, that the admin app will lowercase the model name when looking for the\ndirectory, so make sure you name the directory in all lowercase if you are\ngoing to run your app on a case-sensitive filesystem.</p>\n<p>To override an admin template for a specific app, copy and edit the template\nfrom the <a class=\"reference external\" href=\"https://github.com/django/django/blob/main/django/contrib/admin/templates/admin\">django/contrib/admin/templates/admin</a> directory, and save it to one\nof the directories you just created.</p>\n<p>For example, if we wanted to add a tool to the change list view for all the\nmodels in an app named <code class=\"docutils literal notranslate\"><span class=\"pre\">my_app</span></code>, we would copy\n<code class=\"docutils literal notranslate\"><span class=\"pre\">contrib/admin/templates/admin/change_list.html</span></code> to the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">templates/admin/my_app/</span></code> directory of our project, and make any necessary\nchanges.</p>\n<p>If we wanted to add a tool to the change list view for only a specific model\nnamed \u2018Page\u2019, we would copy that same file to the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">templates/admin/my_app/page</span></code> directory of our project.</p>\n</div>\n<div class=\"section\" id=\"s-overriding-vs-replacing-an-admin-template\">\n<span id=\"overriding-vs-replacing-an-admin-template\"></span><h3>Overriding vs. replacing an admin template<a class=\"headerlink\" href=\"#overriding-vs-replacing-an-admin-template\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Because of the modular design of the admin templates, it is usually neither\nnecessary nor advisable to replace an entire template. It is almost always\nbetter to override only the section of the template which you need to change.</p>\n<p>To continue the example above, we want to add a new link next to the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">History</span></code> tool for the <code class=\"docutils literal notranslate\"><span class=\"pre\">Page</span></code> model. After looking at <code class=\"docutils literal notranslate\"><span class=\"pre\">change_form.html</span></code>\nwe determine that we only need to override the <code class=\"docutils literal notranslate\"><span class=\"pre\">object-tools-items</span></code> block.\nTherefore here is our new <code class=\"docutils literal notranslate\"><span class=\"pre\">change_form.html</span></code> :</p>\n<div class=\"highlight-html+django notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cp\">{%</span> <span class=\"k\">extends</span> <span class=\"s2\">&quot;admin/change_form.html&quot;</span> <span class=\"cp\">%}</span>\n<span class=\"cp\">{%</span> <span class=\"k\">load</span> <span class=\"nv\">i18n</span> <span class=\"nv\">admin_urls</span> <span class=\"cp\">%}</span>\n<span class=\"cp\">{%</span> <span class=\"k\">block</span> <span class=\"nv\">object-tools-items</span> <span class=\"cp\">%}</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">&quot;</span><span class=\"cp\">{%</span> <span class=\"k\">url</span> <span class=\"nv\">opts</span><span class=\"o\">|</span><span class=\"nf\">admin_urlname</span><span class=\"s1\">:&#39;history&#39;</span> <span class=\"nv\">original.pk</span><span class=\"o\">|</span><span class=\"nf\">admin_urlquote</span> <span class=\"cp\">%}</span><span class=\"s\">&quot;</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;historylink&quot;</span><span class=\"p\">&gt;</span><span class=\"cp\">{%</span> <span class=\"k\">translate</span> <span class=\"s2\">&quot;History&quot;</span> <span class=\"cp\">%}</span><span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">&quot;mylink/&quot;</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;historylink&quot;</span><span class=\"p\">&gt;</span>My Link<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n    <span class=\"cp\">{%</span> <span class=\"k\">if</span> <span class=\"nv\">has_absolute_url</span> <span class=\"cp\">%}</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">&quot;</span><span class=\"cp\">{%</span> <span class=\"k\">url</span> <span class=\"s1\">&#39;admin:view_on_site&#39;</span> <span class=\"nv\">content_type_id</span> <span class=\"nv\">original.pk</span> <span class=\"cp\">%}</span><span class=\"s\">&quot;</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;viewsitelink&quot;</span><span class=\"p\">&gt;</span><span class=\"cp\">{%</span> <span class=\"k\">translate</span> <span class=\"s2\">&quot;View on site&quot;</span> <span class=\"cp\">%}</span><span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n    <span class=\"cp\">{%</span> <span class=\"k\">endif</span> <span class=\"cp\">%}</span>\n<span class=\"cp\">{%</span> <span class=\"k\">endblock</span> <span class=\"cp\">%}</span>\n</pre></div>\n</div>\n<p>And that\u2019s it! If we placed this file in the <code class=\"docutils literal notranslate\"><span class=\"pre\">templates/admin/my_app</span></code>\ndirectory, our link would appear on the change form for all models within\nmy_app.</p>\n</div>\n<div class=\"section\" id=\"s-templates-which-may-be-overridden-per-app-or-model\">\n<span id=\"s-admin-templates-overridden-per-app-or-model\"></span><span id=\"templates-which-may-be-overridden-per-app-or-model\"></span><span id=\"admin-templates-overridden-per-app-or-model\"></span><h3>Templates which may be overridden per app or model<a class=\"headerlink\" href=\"#templates-which-may-be-overridden-per-app-or-model\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Not every template in <code class=\"docutils literal notranslate\"><span class=\"pre\">contrib/admin/templates/admin</span></code> may be overridden per\napp or per model. The following can:</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">actions.html</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">app_index.html</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">change_form.html</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">change_form_object_tools.html</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">change_list.html</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">change_list_object_tools.html</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">change_list_results.html</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">date_hierarchy.html</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">delete_confirmation.html</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">object_history.html</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">pagination.html</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">popup_response.html</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">prepopulated_fields_js.html</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">search_form.html</span></code></li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">submit_line.html</span></code></li>\n</ul>\n<p>For those templates that cannot be overridden in this way, you may still\noverride them for your entire project by placing the new version in your\n<code class=\"docutils literal notranslate\"><span class=\"pre\">templates/admin</span></code> directory. This is particularly useful to create custom 404\nand 500 pages.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Some of the admin templates, such as <code class=\"docutils literal notranslate\"><span class=\"pre\">change_list_results.html</span></code> are used\nto render custom inclusion tags. These may be overridden, but in such cases\nyou are probably better off creating your own version of the tag in\nquestion and giving it a different name. That way you can use it\nselectively.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-root-and-login-templates\">\n<span id=\"root-and-login-templates\"></span><h3>Root and login templates<a class=\"headerlink\" href=\"#root-and-login-templates\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>If you wish to change the index, login or logout templates, you are better off\ncreating your own <code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code> instance (see below), and changing the\n<a class=\"reference internal\" href=\"#django.contrib.admin.AdminSite.index_template\" title=\"django.contrib.admin.AdminSite.index_template\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">AdminSite.index_template</span></code></a> , <a class=\"reference internal\" href=\"#django.contrib.admin.AdminSite.login_template\" title=\"django.contrib.admin.AdminSite.login_template\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">AdminSite.login_template</span></code></a> or\n<a class=\"reference internal\" href=\"#django.contrib.admin.AdminSite.logout_template\" title=\"django.contrib.admin.AdminSite.logout_template\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">AdminSite.logout_template</span></code></a> properties.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-theming-support\">\n<span id=\"s-admin-theming\"></span><span id=\"theming-support\"></span><span id=\"admin-theming\"></span><h2>Theming support<a class=\"headerlink\" href=\"#theming-support\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The admin uses CSS variables to define colors and fonts. This allows changing\nthemes without having to override many individual CSS rules. For example, if\nyou preferred purple instead of blue you could add a <code class=\"docutils literal notranslate\"><span class=\"pre\">admin/base.html</span></code>\ntemplate override to your project:</p>\n<div class=\"highlight-html+django notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cp\">{%</span> <span class=\"k\">extends</span> <span class=\"s1\">&#39;admin/base.html&#39;</span> <span class=\"cp\">%}</span>\n\n<span class=\"cp\">{%</span> <span class=\"k\">block</span> <span class=\"nv\">extrastyle</span> <span class=\"cp\">%}{{</span> <span class=\"nb\">block</span><span class=\"nv\">.super</span> <span class=\"cp\">}}</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">style</span><span class=\"p\">&gt;</span><span class=\"w\"></span>\n<span class=\"p\">:</span><span class=\"nd\">root</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nv\">--primary</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">#9774d5</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nv\">--secondary</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">#785cab</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nv\">--link-fg</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">#7c449b</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nv\">--link-selected-fg</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">#8f5bb2</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">style</span><span class=\"p\">&gt;</span>\n<span class=\"cp\">{%</span> <span class=\"k\">endblock</span> <span class=\"cp\">%}</span>\n</pre></div>\n</div>\n<p>The list of CSS variables are defined at\n<a class=\"reference external\" href=\"https://github.com/django/django/blob/main/django/contrib/admin/static/admin/css/base.css\">django/contrib/admin/static/admin/css/base.css</a>.</p>\n<p>Dark mode variables, respecting the <a class=\"reference external\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/&#64;media/prefers-color-scheme\">prefers-color-scheme</a> media query, are\ndefined at <a class=\"reference external\" href=\"https://github.com/django/django/blob/main/django/contrib/admin/static/admin/css/dark_mode.css\">django/contrib/admin/static/admin/css/dark_mode.css</a>. This is\nlinked to the document in <code class=\"docutils literal notranslate\"><span class=\"pre\">{%</span> <span class=\"pre\">block</span> <span class=\"pre\">dark-mode-vars</span> <span class=\"pre\">%}</span></code>.</p>\n</div>\n<div class=\"section\" id=\"s-adminsite-objects\">\n<span id=\"adminsite-objects\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code> objects<a class=\"headerlink\" href=\"#adminsite-objects\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.AdminSite\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">AdminSite</span></code>(<em><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'admin'</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/sites/#AdminSite\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.AdminSite\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A Django administrative site is represented by an instance of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.admin.sites.AdminSite</span></code>; by default, an instance of\nthis class is created as <code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.admin.site</span></code> and you can\nregister your models and <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> instances with it.</p>\n<p>If you want to customize the default admin site, you can <a class=\"reference internal\" href=\"#overriding-default-admin-site\"><span class=\"std std-ref\">override it</span></a>.</p>\n<p>When constructing an instance of an <code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code>, you can provide\na unique instance name using the <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> argument to the constructor. This\ninstance name is used to identify the instance, especially when\n<a class=\"reference internal\" href=\"#admin-reverse-urls\"><span class=\"std std-ref\">reversing admin URLs</span></a>. If no instance name is\nprovided, a default instance name of <code class=\"docutils literal notranslate\"><span class=\"pre\">admin</span></code> will be used.\nSee <a class=\"reference internal\" href=\"#customizing-adminsite\"><span class=\"std std-ref\">Customizing the AdminSite class</span></a> for an example of customizing the\n<a class=\"reference internal\" href=\"#django.contrib.admin.AdminSite\" title=\"django.contrib.admin.AdminSite\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code></a> class.</p>\n</dd></dl>\n\n<dl class=\"py data\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.django.contrib.admin.sites.all_sites\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">django.contrib.admin.sites.</span></code><code class=\"sig-name descname\"><span class=\"pre\">all_sites</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.django.contrib.admin.sites.all_sites\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A <a class=\"reference external\" href=\"https://docs.python.org/3/library/weakref.html#weakref.WeakSet\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">WeakSet</span></code></a> contains all admin site instances.</p>\n</dd></dl>\n\n<div class=\"section\" id=\"s-adminsite-attributes\">\n<span id=\"adminsite-attributes\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code> attributes<a class=\"headerlink\" href=\"#adminsite-attributes\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Templates can override or extend base admin templates as described in\n<a class=\"reference internal\" href=\"#admin-overriding-templates\"><span class=\"std std-ref\">Overriding admin templates</span></a>.</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.AdminSite.site_header\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">AdminSite.</span></code><code class=\"sig-name descname\"><span class=\"pre\">site_header</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.AdminSite.site_header\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The text to put at the top of each admin page, as a <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;div&gt;</span></code> (a string).\nBy default, this is \u201cDjango administration\u201d.</p>\n<div class=\"versionchanged\">\n<span class=\"title\">Changed in Django Development version:</span> <p>In older versions, <code class=\"docutils literal notranslate\"><span class=\"pre\">site_header</span></code> was using an <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;h1&gt;</span></code> tag.</p>\n</div>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.AdminSite.site_title\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">AdminSite.</span></code><code class=\"sig-name descname\"><span class=\"pre\">site_title</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.AdminSite.site_title\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The text to put at the end of each admin page\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;title&gt;</span></code> (a string). By\ndefault, this is \u201cDjango site admin\u201d.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.AdminSite.site_url\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">AdminSite.</span></code><code class=\"sig-name descname\"><span class=\"pre\">site_url</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.AdminSite.site_url\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The URL for the \u201cView site\u201d link at the top of each admin page. By default,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">site_url</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">/</span></code>. Set it to <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> to remove the link.</p>\n<p>For sites running on a subpath, the <a class=\"reference internal\" href=\"#django.contrib.admin.AdminSite.each_context\" title=\"django.contrib.admin.AdminSite.each_context\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">each_context()</span></code></a> method checks if\nthe current request has <code class=\"docutils literal notranslate\"><span class=\"pre\">request.META['SCRIPT_NAME']</span></code> set and uses that\nvalue if <code class=\"docutils literal notranslate\"><span class=\"pre\">site_url</span></code> isn\u2019t set to something other than <code class=\"docutils literal notranslate\"><span class=\"pre\">/</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.AdminSite.index_title\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">AdminSite.</span></code><code class=\"sig-name descname\"><span class=\"pre\">index_title</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.AdminSite.index_title\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The text to put at the top of the admin index page (a string). By default,\nthis is \u201cSite administration\u201d.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.AdminSite.index_template\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">AdminSite.</span></code><code class=\"sig-name descname\"><span class=\"pre\">index_template</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.AdminSite.index_template\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to a custom template that will be used by the admin site main index\nview.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.AdminSite.app_index_template\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">AdminSite.</span></code><code class=\"sig-name descname\"><span class=\"pre\">app_index_template</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.AdminSite.app_index_template\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to a custom template that will be used by the admin site app index view.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.AdminSite.empty_value_display\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">AdminSite.</span></code><code class=\"sig-name descname\"><span class=\"pre\">empty_value_display</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.AdminSite.empty_value_display\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The string to use for displaying empty values in the admin site\u2019s change\nlist. Defaults to a dash. The value can also be overridden on a per\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> basis and on a custom field within a <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> by\nsetting an <code class=\"docutils literal notranslate\"><span class=\"pre\">empty_value_display</span></code> attribute on the field. See\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.empty_value_display\" title=\"django.contrib.admin.ModelAdmin.empty_value_display\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">ModelAdmin.empty_value_display</span></code></a> for examples.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.AdminSite.enable_nav_sidebar\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">AdminSite.</span></code><code class=\"sig-name descname\"><span class=\"pre\">enable_nav_sidebar</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.AdminSite.enable_nav_sidebar\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A boolean value that determines whether to show the navigation sidebar\non larger screens. By default, it is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.AdminSite.final_catch_all_view\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">AdminSite.</span></code><code class=\"sig-name descname\"><span class=\"pre\">final_catch_all_view</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.AdminSite.final_catch_all_view\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A boolean value that determines whether to add a final catch-all view to\nthe admin that redirects unauthenticated users to the login page. By\ndefault, it is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p class=\"last\">Setting this to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> is not recommended as the view protects\nagainst a potential model enumeration privacy issue.</p>\n</div>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.AdminSite.login_template\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">AdminSite.</span></code><code class=\"sig-name descname\"><span class=\"pre\">login_template</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.AdminSite.login_template\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to a custom template that will be used by the admin site login view.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.AdminSite.login_form\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">AdminSite.</span></code><code class=\"sig-name descname\"><span class=\"pre\">login_form</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.AdminSite.login_form\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Subclass of <a class=\"reference internal\" href=\"../../../topics/auth/default/#django.contrib.auth.forms.AuthenticationForm\" title=\"django.contrib.auth.forms.AuthenticationForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AuthenticationForm</span></code></a> that\nwill be used by the admin site login view.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.AdminSite.logout_template\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">AdminSite.</span></code><code class=\"sig-name descname\"><span class=\"pre\">logout_template</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.AdminSite.logout_template\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to a custom template that will be used by the admin site logout view.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.AdminSite.password_change_template\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">AdminSite.</span></code><code class=\"sig-name descname\"><span class=\"pre\">password_change_template</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.AdminSite.password_change_template\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to a custom template that will be used by the admin site password\nchange view.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.AdminSite.password_change_done_template\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">AdminSite.</span></code><code class=\"sig-name descname\"><span class=\"pre\">password_change_done_template</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.AdminSite.password_change_done_template\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Path to a custom template that will be used by the admin site password\nchange done view.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-adminsite-methods\">\n<span id=\"adminsite-methods\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code> methods<a class=\"headerlink\" href=\"#adminsite-methods\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.AdminSite.each_context\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">AdminSite.</span></code><code class=\"sig-name descname\"><span class=\"pre\">each_context</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/sites/#AdminSite.each_context\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.AdminSite.each_context\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a dictionary of variables to put in the template context for\nevery page in the admin site.</p>\n<p>Includes the following variables and values by default:</p>\n<ul>\n<li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">site_header</span></code>: <a class=\"reference internal\" href=\"#django.contrib.admin.AdminSite.site_header\" title=\"django.contrib.admin.AdminSite.site_header\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">AdminSite.site_header</span></code></a></p>\n</li>\n<li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">site_title</span></code>: <a class=\"reference internal\" href=\"#django.contrib.admin.AdminSite.site_title\" title=\"django.contrib.admin.AdminSite.site_title\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">AdminSite.site_title</span></code></a></p>\n</li>\n<li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">site_url</span></code>: <a class=\"reference internal\" href=\"#django.contrib.admin.AdminSite.site_url\" title=\"django.contrib.admin.AdminSite.site_url\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">AdminSite.site_url</span></code></a></p>\n</li>\n<li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">has_permission</span></code>: <a class=\"reference internal\" href=\"#django.contrib.admin.AdminSite.has_permission\" title=\"django.contrib.admin.AdminSite.has_permission\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">AdminSite.has_permission()</span></code></a></p>\n</li>\n<li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">available_apps</span></code>: a list of applications from the <a class=\"reference internal\" href=\"../../applications/\"><span class=\"doc\">application registry</span></a> available for the current user. Each entry in the\nlist is a dict representing an application with the following keys:</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">app_label</span></code>: the application label</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">app_url</span></code>: the URL of the application index in the admin</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">has_module_perms</span></code>: a boolean indicating if displaying and accessing of\nthe module\u2019s index page is permitted for the current user</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">models</span></code>: a list of the models available in the application</li>\n</ul>\n<p>Each model is a dict with the following keys:</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">model</span></code>: the model class</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">object_name</span></code>: class name of the model</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code>: plural name of the model</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">perms</span></code>: a <code class=\"docutils literal notranslate\"><span class=\"pre\">dict</span></code> tracking <code class=\"docutils literal notranslate\"><span class=\"pre\">add</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">change</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">delete</span></code>, and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">view</span></code> permissions</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">admin_url</span></code>: admin changelist URL for the model</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">add_url</span></code>: admin URL to add a new model instance</li>\n</ul>\n</li>\n<li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">is_popup</span></code>: whether the current page is displayed in a popup window</p>\n</li>\n<li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">is_nav_sidebar_enabled</span></code>: <a class=\"reference internal\" href=\"#django.contrib.admin.AdminSite.enable_nav_sidebar\" title=\"django.contrib.admin.AdminSite.enable_nav_sidebar\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">AdminSite.enable_nav_sidebar</span></code></a></p>\n</li>\n<li><p class=\"first\"><code class=\"docutils literal notranslate\"><span class=\"pre\">log_entries</span></code>: <a class=\"reference internal\" href=\"#django.contrib.admin.AdminSite.get_log_entries\" title=\"django.contrib.admin.AdminSite.get_log_entries\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">AdminSite.get_log_entries()</span></code></a></p>\n</li>\n</ul>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.AdminSite.get_app_list\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">AdminSite.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_app_list</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>, <em><span class=\"n\"><span class=\"pre\">app_label</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/sites/#AdminSite.get_app_list\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.AdminSite.get_app_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a list of applications from the <a class=\"reference internal\" href=\"../../applications/\"><span class=\"doc\">application registry</span></a> available for the current user. You can optionally\npass an <code class=\"docutils literal notranslate\"><span class=\"pre\">app_label</span></code> argument to get details for a single app. Each entry\nin the list is a dictionary representing an application with the following\nkeys:</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">app_label</span></code>: the application label</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">app_url</span></code>: the URL of the application index in the admin</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">has_module_perms</span></code>: a boolean indicating if displaying and accessing of\nthe module\u2019s index page is permitted for the current user</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">models</span></code>: a list of the models available in the application</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code>: name of the application</li>\n</ul>\n<p>Each model is a dictionary with the following keys:</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">model</span></code>: the model class</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">object_name</span></code>: class name of the model</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code>: plural name of the model</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">perms</span></code>: a <code class=\"docutils literal notranslate\"><span class=\"pre\">dict</span></code> tracking <code class=\"docutils literal notranslate\"><span class=\"pre\">add</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">change</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">delete</span></code>, and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">view</span></code> permissions</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">admin_url</span></code>: admin changelist URL for the model</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">add_url</span></code>: admin URL to add a new model instance</li>\n</ul>\n<p>Lists of applications and models are sorted alphabetically by their names.\nYou can override this method to change the default order on the admin index\npage.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.AdminSite.has_permission\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">AdminSite.</span></code><code class=\"sig-name descname\"><span class=\"pre\">has_permission</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/sites/#AdminSite.has_permission\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.AdminSite.has_permission\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the user for the given <code class=\"docutils literal notranslate\"><span class=\"pre\">HttpRequest</span></code> has permission\nto view at least one page in the admin site. Defaults to requiring both\n<a class=\"reference internal\" href=\"../auth/#django.contrib.auth.models.User.is_active\" title=\"django.contrib.auth.models.User.is_active\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">User.is_active</span></code></a> and\n<a class=\"reference internal\" href=\"../auth/#django.contrib.auth.models.User.is_staff\" title=\"django.contrib.auth.models.User.is_staff\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">User.is_staff</span></code></a> to be\n<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.AdminSite.register\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">AdminSite.</span></code><code class=\"sig-name descname\"><span class=\"pre\">register</span></code>(<em><span class=\"n\"><span class=\"pre\">model_or_iterable</span></span></em>, <em><span class=\"n\"><span class=\"pre\">admin_class</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">options</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/sites/#AdminSite.register\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.AdminSite.register\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Registers the given model class (or iterable of classes) with the given\n<code class=\"docutils literal notranslate\"><span class=\"pre\">admin_class</span></code>. <code class=\"docutils literal notranslate\"><span class=\"pre\">admin_class</span></code> defaults to\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin\" title=\"django.contrib.admin.ModelAdmin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code></a> (the default admin options). If\nkeyword arguments are given \u2013 e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">list_display</span></code> \u2013 they\u2019ll be applied\nas options to the admin class.</p>\n<p>Raises <a class=\"reference internal\" href=\"../../exceptions/#django.core.exceptions.ImproperlyConfigured\" title=\"django.core.exceptions.ImproperlyConfigured\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ImproperlyConfigured</span></code></a> if a model is\nabstract. and <code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.admin.sites.AlreadyRegistered</span></code> if a model\nis already registered.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.AdminSite.unregister\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">AdminSite.</span></code><code class=\"sig-name descname\"><span class=\"pre\">unregister</span></code>(<em><span class=\"n\"><span class=\"pre\">model_or_iterable</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/sites/#AdminSite.unregister\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.AdminSite.unregister\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Unregisters the given model class (or iterable of classes).</p>\n<p>Raises <code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.admin.sites.NotRegistered</span></code> if a model isn\u2019t\nalready registered.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.AdminSite.get_log_entries\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">AdminSite.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_log_entries</span></code>(<em><span class=\"n\"><span class=\"pre\">request</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/sites/#AdminSite.get_log_entries\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.AdminSite.get_log_entries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><div class=\"versionadded\">\n<span class=\"title\">New in Django Development version.</span> </div>\n<p>Returns a queryset for the related\n<a class=\"reference internal\" href=\"#django.contrib.admin.models.LogEntry\" title=\"django.contrib.admin.models.LogEntry\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LogEntry</span></code></a> instances, shown on the site\nindex page. This method can be overridden to filter the log entries by\nother criteria.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-hooking-adminsite-instances-into-your-urlconf\">\n<span id=\"s-hooking-adminsite-to-urlconf\"></span><span id=\"hooking-adminsite-instances-into-your-urlconf\"></span><span id=\"hooking-adminsite-to-urlconf\"></span><h3>Hooking <code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code> instances into your URLconf<a class=\"headerlink\" href=\"#hooking-adminsite-instances-into-your-urlconf\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The last step in setting up the Django admin is to hook your <code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code>\ninstance into your URLconf. Do this by pointing a given URL at the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite.urls</span></code> method. It is not necessary to use\n<a class=\"reference internal\" href=\"../../urls/#django.urls.include\" title=\"django.urls.include\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">include()</span></code></a>.</p>\n<p>In this example, we register the default <code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code> instance\n<code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.admin.site</span></code> at the URL <code class=\"docutils literal notranslate\"><span class=\"pre\">/admin/</span></code></p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># urls.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;admin/&quot;</span><span class=\"p\">,</span> <span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">urls</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-customizing-the-adminsite-class\">\n<span id=\"s-customizing-adminsite\"></span><span id=\"customizing-the-adminsite-class\"></span><span id=\"customizing-adminsite\"></span><h3>Customizing the <a class=\"reference internal\" href=\"#django.contrib.admin.AdminSite\" title=\"django.contrib.admin.AdminSite\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code></a> class<a class=\"headerlink\" href=\"#customizing-the-adminsite-class\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>If you\u2019d like to set up your own admin site with custom behavior, you\u2019re free\nto subclass <code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code> and override or add anything you like. Then, create\nan instance of your <code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code> subclass (the same way you\u2019d instantiate any\nother Python class) and register your models and <code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> subclasses with\nit instead of with the default site. Finally, update <code class=\"file docutils literal notranslate\"><span class=\"pre\">myproject/urls.py</span></code>\nto reference your <a class=\"reference internal\" href=\"#django.contrib.admin.AdminSite\" title=\"django.contrib.admin.AdminSite\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code></a> subclass.</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id4\">\n<div class=\"code-block-caption\"><span class=\"caption-text\"><code class=\"docutils literal notranslate\"><span class=\"pre\">myapp/admin.py</span></code></span><a class=\"headerlink\" href=\"#id4\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">MyModel</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyAdminSite</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">AdminSite</span><span class=\"p\">):</span>\n    <span class=\"n\">site_header</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Monty Python administration&quot;</span>\n\n\n<span class=\"n\">admin_site</span> <span class=\"o\">=</span> <span class=\"n\">MyAdminSite</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;myadmin&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">admin_site</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">MyModel</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"literal-block-wrapper docutils container\" id=\"id5\">\n<div class=\"code-block-caption\"><span class=\"caption-text\"><code class=\"docutils literal notranslate\"><span class=\"pre\">myproject/urls.py</span></code></span><a class=\"headerlink\" href=\"#id5\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">myapp.admin</span> <span class=\"kn\">import</span> <span class=\"n\">admin_site</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;myadmin/&quot;</span><span class=\"p\">,</span> <span class=\"n\">admin_site</span><span class=\"o\">.</span><span class=\"n\">urls</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n</pre></div>\n</div>\n</div>\n<p>Note that you may not want autodiscovery of <code class=\"docutils literal notranslate\"><span class=\"pre\">admin</span></code> modules when using your\nown <code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code> instance since you will likely be importing all the per-app\n<code class=\"docutils literal notranslate\"><span class=\"pre\">admin</span></code> modules in your <code class=\"docutils literal notranslate\"><span class=\"pre\">myproject.admin</span></code> module. This means you need to\nput <code class=\"docutils literal notranslate\"><span class=\"pre\">'django.contrib.admin.apps.SimpleAdminConfig'</span></code> instead of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'django.contrib.admin'</span></code> in your <a class=\"reference internal\" href=\"../../settings/#std-setting-INSTALLED_APPS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">INSTALLED_APPS</span></code></a> setting.</p>\n</div>\n<div class=\"section\" id=\"s-overriding-the-default-admin-site\">\n<span id=\"s-overriding-default-admin-site\"></span><span id=\"overriding-the-default-admin-site\"></span><span id=\"overriding-default-admin-site\"></span><h3>Overriding the default admin site<a class=\"headerlink\" href=\"#overriding-the-default-admin-site\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>You can override the default <code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.admin.site</span></code> by setting the\n<a class=\"reference internal\" href=\"#django.contrib.admin.apps.SimpleAdminConfig.default_site\" title=\"django.contrib.admin.apps.SimpleAdminConfig.default_site\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">default_site</span></code></a> attribute of a custom <code class=\"docutils literal notranslate\"><span class=\"pre\">AppConfig</span></code>\nto the dotted import path of either a <code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code> subclass or a callable that\nreturns a site instance.</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id6\">\n<div class=\"code-block-caption\"><span class=\"caption-text\"><code class=\"docutils literal notranslate\"><span class=\"pre\">myproject/admin.py</span></code></span><a class=\"headerlink\" href=\"#id6\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyAdminSite</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">AdminSite</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n</div>\n<div class=\"literal-block-wrapper docutils container\" id=\"id7\">\n<div class=\"code-block-caption\"><span class=\"caption-text\"><code class=\"docutils literal notranslate\"><span class=\"pre\">myproject/apps.py</span></code></span><a class=\"headerlink\" href=\"#id7\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.admin.apps</span> <span class=\"kn\">import</span> <span class=\"n\">AdminConfig</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyAdminConfig</span><span class=\"p\">(</span><span class=\"n\">AdminConfig</span><span class=\"p\">):</span>\n    <span class=\"n\">default_site</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;myproject.admin.MyAdminSite&quot;</span>\n</pre></div>\n</div>\n</div>\n<div class=\"literal-block-wrapper docutils container\" id=\"id8\">\n<div class=\"code-block-caption\"><span class=\"caption-text\"><code class=\"docutils literal notranslate\"><span class=\"pre\">myproject/settings.py</span></code></span><a class=\"headerlink\" href=\"#id8\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"s2\">&quot;myproject.apps.MyAdminConfig&quot;</span><span class=\"p\">,</span>  <span class=\"c1\"># replaces &#39;django.contrib.admin&#39;</span>\n    <span class=\"c1\"># ...</span>\n<span class=\"p\">]</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"s-multiple-admin-sites-in-the-same-urlconf\">\n<span id=\"s-multiple-admin-sites\"></span><span id=\"multiple-admin-sites-in-the-same-urlconf\"></span><span id=\"multiple-admin-sites\"></span><h3>Multiple admin sites in the same URLconf<a class=\"headerlink\" href=\"#multiple-admin-sites-in-the-same-urlconf\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>You can create multiple instances of the admin site on the same Django-powered\nwebsite. Create multiple instances of <code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code> and place each one at a\ndifferent URL.</p>\n<p>In this example, the URLs <code class=\"docutils literal notranslate\"><span class=\"pre\">/basic-admin/</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">/advanced-admin/</span></code> feature\nseparate versions of the admin site \u2013 using the <code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code> instances\n<code class=\"docutils literal notranslate\"><span class=\"pre\">myproject.admin.basic_site</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">myproject.admin.advanced_site</span></code>,\nrespectively:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># urls.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">myproject.admin</span> <span class=\"kn\">import</span> <span class=\"n\">advanced_site</span><span class=\"p\">,</span> <span class=\"n\">basic_site</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;basic-admin/&quot;</span><span class=\"p\">,</span> <span class=\"n\">basic_site</span><span class=\"o\">.</span><span class=\"n\">urls</span><span class=\"p\">),</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;advanced-admin/&quot;</span><span class=\"p\">,</span> <span class=\"n\">advanced_site</span><span class=\"o\">.</span><span class=\"n\">urls</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code> instances take a single argument to their constructor, their\nname, which can be anything you like. This argument becomes the prefix to the\nURL names for the purposes of <a class=\"reference internal\" href=\"#admin-reverse-urls\"><span class=\"std std-ref\">reversing them</span></a>. This\nis only necessary if you are using more than one <code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code>.</p>\n</div>\n<div class=\"section\" id=\"s-adding-views-to-admin-sites\">\n<span id=\"adding-views-to-admin-sites\"></span><h3>Adding views to admin sites<a class=\"headerlink\" href=\"#adding-views-to-admin-sites\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Just like <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin\" title=\"django.contrib.admin.ModelAdmin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code></a>, <a class=\"reference internal\" href=\"#django.contrib.admin.AdminSite\" title=\"django.contrib.admin.AdminSite\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code></a> provides a\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.get_urls\" title=\"django.contrib.admin.ModelAdmin.get_urls\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_urls()</span></code></a> method\nthat can be overridden to define additional views for the site. To add\na new view to your admin site, extend the base\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.get_urls\" title=\"django.contrib.admin.ModelAdmin.get_urls\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_urls()</span></code></a> method to include\na pattern for your new view.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Any view you render that uses the admin templates, or extends the base\nadmin template, should set <code class=\"docutils literal notranslate\"><span class=\"pre\">request.current_app</span></code> before rendering the\ntemplate. It should be set to either <code class=\"docutils literal notranslate\"><span class=\"pre\">self.name</span></code> if your view is on an\n<code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">self.admin_site.name</span></code> if your view is on a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code>.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-adding-a-password-reset-feature\">\n<span id=\"s-auth-password-reset\"></span><span id=\"adding-a-password-reset-feature\"></span><span id=\"auth-password-reset\"></span><h3>Adding a password reset feature<a class=\"headerlink\" href=\"#adding-a-password-reset-feature\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>You can add a password reset feature to the admin site by adding a few lines to\nyour URLconf. Specifically, add these four patterns:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth</span> <span class=\"kn\">import</span> <span class=\"n\">views</span> <span class=\"k\">as</span> <span class=\"n\">auth_views</span>\n\n<span class=\"n\">path</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;admin/password_reset/&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">auth_views</span><span class=\"o\">.</span><span class=\"n\">PasswordResetView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;admin_password_reset&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">),</span>\n<span class=\"n\">path</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;admin/password_reset/done/&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">auth_views</span><span class=\"o\">.</span><span class=\"n\">PasswordResetDoneView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;password_reset_done&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">),</span>\n<span class=\"n\">path</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;reset/&lt;uidb64&gt;/&lt;token&gt;/&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">auth_views</span><span class=\"o\">.</span><span class=\"n\">PasswordResetConfirmView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;password_reset_confirm&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">),</span>\n<span class=\"n\">path</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;reset/done/&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">auth_views</span><span class=\"o\">.</span><span class=\"n\">PasswordResetCompleteView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(),</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;password_reset_complete&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">),</span>\n</pre></div>\n</div>\n<p>(This assumes you\u2019ve added the admin at <code class=\"docutils literal notranslate\"><span class=\"pre\">admin/</span></code> and requires that you put\nthe URLs starting with <code class=\"docutils literal notranslate\"><span class=\"pre\">^admin/</span></code> before the line that includes the admin app\nitself).</p>\n<p>The presence of the <code class=\"docutils literal notranslate\"><span class=\"pre\">admin_password_reset</span></code> named URL will cause a \u201cforgotten\nyour password?\u201d link to appear on the default admin log-in page under the\npassword box.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-logentry-objects\">\n<span id=\"logentry-objects\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">LogEntry</span></code> objects<a class=\"headerlink\" href=\"#logentry-objects\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.models.LogEntry\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-prename descclassname\"><span class=\"pre\">models.</span></code><code class=\"sig-name descname\"><span class=\"pre\">LogEntry</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.models.LogEntry\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">LogEntry</span></code> class tracks additions, changes, and deletions of objects\ndone through the admin interface.</p>\n</dd></dl>\n\n<div class=\"section\" id=\"s-logentry-attributes\">\n<span id=\"logentry-attributes\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">LogEntry</span></code> attributes<a class=\"headerlink\" href=\"#logentry-attributes\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.models.LogEntry.action_time\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">LogEntry.</span></code><code class=\"sig-name descname\"><span class=\"pre\">action_time</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.models.LogEntry.action_time\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The date and time of the action.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.models.LogEntry.user\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">LogEntry.</span></code><code class=\"sig-name descname\"><span class=\"pre\">user</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.models.LogEntry.user\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The user (an <a class=\"reference internal\" href=\"../../settings/#std-setting-AUTH_USER_MODEL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">AUTH_USER_MODEL</span></code></a> instance) who performed the\naction.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.models.LogEntry.content_type\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">LogEntry.</span></code><code class=\"sig-name descname\"><span class=\"pre\">content_type</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.models.LogEntry.content_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <a class=\"reference internal\" href=\"../contenttypes/#django.contrib.contenttypes.models.ContentType\" title=\"django.contrib.contenttypes.models.ContentType\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ContentType</span></code></a> of the\nmodified object.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.models.LogEntry.object_id\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">LogEntry.</span></code><code class=\"sig-name descname\"><span class=\"pre\">object_id</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.models.LogEntry.object_id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The textual representation of the modified object\u2019s primary key.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.models.LogEntry.object_repr\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">LogEntry.</span></code><code class=\"sig-name descname\"><span class=\"pre\">object_repr</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.models.LogEntry.object_repr\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The object`s <code class=\"docutils literal notranslate\"><span class=\"pre\">repr()</span></code> after the modification.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.models.LogEntry.action_flag\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">LogEntry.</span></code><code class=\"sig-name descname\"><span class=\"pre\">action_flag</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.models.LogEntry.action_flag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The type of action logged: <code class=\"docutils literal notranslate\"><span class=\"pre\">ADDITION</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">CHANGE</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">DELETION</span></code>.</p>\n<p>For example, to get a list of all additions done through the admin:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.admin.models</span> <span class=\"kn\">import</span> <span class=\"n\">ADDITION</span><span class=\"p\">,</span> <span class=\"n\">LogEntry</span>\n\n<span class=\"n\">LogEntry</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">action_flag</span><span class=\"o\">=</span><span class=\"n\">ADDITION</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.models.LogEntry.change_message\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">LogEntry.</span></code><code class=\"sig-name descname\"><span class=\"pre\">change_message</span></code><a class=\"headerlink\" href=\"#django.contrib.admin.models.LogEntry.change_message\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The detailed description of the modification. In the case of an edit, for\nexample, the message contains a list of the edited fields. The Django admin\nsite formats this content as a JSON structure, so that\n<a class=\"reference internal\" href=\"#django.contrib.admin.models.LogEntry.get_change_message\" title=\"django.contrib.admin.models.LogEntry.get_change_message\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_change_message()</span></code></a> can recompose a message translated in the current\nuser language. Custom code might set this as a plain string though. You are\nadvised to use the <a class=\"reference internal\" href=\"#django.contrib.admin.models.LogEntry.get_change_message\" title=\"django.contrib.admin.models.LogEntry.get_change_message\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_change_message()</span></code></a> method to retrieve this value\ninstead of accessing it directly.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-logentry-methods\">\n<span id=\"logentry-methods\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">LogEntry</span></code> methods<a class=\"headerlink\" href=\"#logentry-methods\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.models.LogEntry.get_edited_object\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">LogEntry.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_edited_object</span></code>()<a class=\"headerlink\" href=\"#django.contrib.admin.models.LogEntry.get_edited_object\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A shortcut that returns the referenced object.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.models.LogEntry.get_change_message\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">LogEntry.</span></code><code class=\"sig-name descname\"><span class=\"pre\">get_change_message</span></code>()<a class=\"headerlink\" href=\"#django.contrib.admin.models.LogEntry.get_change_message\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Formats and translates <a class=\"reference internal\" href=\"#django.contrib.admin.models.LogEntry.change_message\" title=\"django.contrib.admin.models.LogEntry.change_message\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">change_message</span></code></a> into the current user\nlanguage. Messages created before Django 1.10 will always be displayed in\nthe language in which they were logged.</p>\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"s-reversing-admin-urls\">\n<span id=\"s-admin-reverse-urls\"></span><span id=\"reversing-admin-urls\"></span><span id=\"admin-reverse-urls\"></span><h2>Reversing admin URLs<a class=\"headerlink\" href=\"#reversing-admin-urls\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>When an <a class=\"reference internal\" href=\"#django.contrib.admin.AdminSite\" title=\"django.contrib.admin.AdminSite\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code></a> is deployed, the views provided by that site are\naccessible using Django\u2019s <a class=\"reference internal\" href=\"../../../topics/http/urls/#naming-url-patterns\"><span class=\"std std-ref\">URL reversing system</span></a>.</p>\n<p>The <a class=\"reference internal\" href=\"#django.contrib.admin.AdminSite\" title=\"django.contrib.admin.AdminSite\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code></a> provides the following named URL patterns:</p>\n<table class=\"docutils\">\n<colgroup>\n<col width=\"30%\" />\n<col width=\"29%\" />\n<col width=\"41%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">Page</th>\n<th class=\"head\">URL name</th>\n<th class=\"head\">Parameters</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td>Index</td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">index</span></code></td>\n<td>&#160;</td>\n</tr>\n<tr class=\"row-odd\"><td>Login</td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">login</span></code></td>\n<td>&#160;</td>\n</tr>\n<tr class=\"row-even\"><td>Logout</td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">logout</span></code></td>\n<td>&#160;</td>\n</tr>\n<tr class=\"row-odd\"><td>Password change</td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">password_change</span></code></td>\n<td>&#160;</td>\n</tr>\n<tr class=\"row-even\"><td>Password change done</td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">password_change_done</span></code></td>\n<td>&#160;</td>\n</tr>\n<tr class=\"row-odd\"><td>i18n JavaScript</td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">jsi18n</span></code></td>\n<td>&#160;</td>\n</tr>\n<tr class=\"row-even\"><td>Application index page</td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">app_list</span></code></td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">app_label</span></code></td>\n</tr>\n<tr class=\"row-odd\"><td>Redirect to object\u2019s page</td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">view_on_site</span></code></td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">content_type_id</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">object_id</span></code></td>\n</tr>\n</tbody>\n</table>\n<p>Each <a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin\" title=\"django.contrib.admin.ModelAdmin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code></a> instance provides an additional set of named URLs:</p>\n<table class=\"docutils\">\n<colgroup>\n<col width=\"27%\" />\n<col width=\"57%\" />\n<col width=\"16%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">Page</th>\n<th class=\"head\">URL name</th>\n<th class=\"head\">Parameters</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td>Changelist</td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">{{</span> <span class=\"pre\">app_label</span> <span class=\"pre\">}}_{{</span> <span class=\"pre\">model_name</span> <span class=\"pre\">}}_changelist</span></code></td>\n<td>&#160;</td>\n</tr>\n<tr class=\"row-odd\"><td>Add</td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">{{</span> <span class=\"pre\">app_label</span> <span class=\"pre\">}}_{{</span> <span class=\"pre\">model_name</span> <span class=\"pre\">}}_add</span></code></td>\n<td>&#160;</td>\n</tr>\n<tr class=\"row-even\"><td>History</td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">{{</span> <span class=\"pre\">app_label</span> <span class=\"pre\">}}_{{</span> <span class=\"pre\">model_name</span> <span class=\"pre\">}}_history</span></code></td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">object_id</span></code></td>\n</tr>\n<tr class=\"row-odd\"><td>Delete</td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">{{</span> <span class=\"pre\">app_label</span> <span class=\"pre\">}}_{{</span> <span class=\"pre\">model_name</span> <span class=\"pre\">}}_delete</span></code></td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">object_id</span></code></td>\n</tr>\n<tr class=\"row-even\"><td>Change</td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">{{</span> <span class=\"pre\">app_label</span> <span class=\"pre\">}}_{{</span> <span class=\"pre\">model_name</span> <span class=\"pre\">}}_change</span></code></td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">object_id</span></code></td>\n</tr>\n</tbody>\n</table>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">UserAdmin</span></code> provides a named URL:</p>\n<table class=\"docutils\">\n<colgroup>\n<col width=\"27%\" />\n<col width=\"57%\" />\n<col width=\"16%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">Page</th>\n<th class=\"head\">URL name</th>\n<th class=\"head\">Parameters</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td>Password change</td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">auth_user_password_change</span></code></td>\n<td><code class=\"docutils literal notranslate\"><span class=\"pre\">user_id</span></code></td>\n</tr>\n</tbody>\n</table>\n<p>These named URLs are registered with the application namespace <code class=\"docutils literal notranslate\"><span class=\"pre\">admin</span></code>, and\nwith an instance namespace corresponding to the name of the Site instance.</p>\n<p>So - if you wanted to get a reference to the Change view for a particular\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Choice</span></code> object (from the polls application) in the default admin, you would\ncall:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">reverse</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Choice</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">change_url</span> <span class=\"o\">=</span> <span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s2\">&quot;admin:polls_choice_change&quot;</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,))</span>\n</pre></div>\n</div>\n<p>This will find the first registered instance of the admin application\n(whatever the instance name), and resolve to the view for changing\n<code class=\"docutils literal notranslate\"><span class=\"pre\">poll.Choice</span></code> instances in that instance.</p>\n<p>If you want to find a URL in a specific admin instance, provide the name of\nthat instance as a <code class=\"docutils literal notranslate\"><span class=\"pre\">current_app</span></code> hint to the reverse call. For example,\nif you specifically wanted the admin view from the admin instance named\n<code class=\"docutils literal notranslate\"><span class=\"pre\">custom</span></code>, you would need to call:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">change_url</span> <span class=\"o\">=</span> <span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s2\">&quot;admin:polls_choice_change&quot;</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,),</span> <span class=\"n\">current_app</span><span class=\"o\">=</span><span class=\"s2\">&quot;custom&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>For more details, see the documentation on <a class=\"reference internal\" href=\"../../../topics/http/urls/#topics-http-reversing-url-namespaces\"><span class=\"std std-ref\">reversing namespaced URLs</span></a>.</p>\n<p>To allow easier reversing of the admin urls in templates, Django provides an\n<code class=\"docutils literal notranslate\"><span class=\"pre\">admin_urlname</span></code> filter which takes an action as argument:</p>\n<div class=\"highlight-html+django notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cp\">{%</span> <span class=\"k\">load</span> <span class=\"nv\">admin_urls</span> <span class=\"cp\">%}</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">&quot;</span><span class=\"cp\">{%</span> <span class=\"k\">url</span> <span class=\"nv\">opts</span><span class=\"o\">|</span><span class=\"nf\">admin_urlname</span><span class=\"s1\">:&#39;add&#39;</span> <span class=\"cp\">%}</span><span class=\"s\">&quot;</span><span class=\"p\">&gt;</span>Add user<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">&quot;</span><span class=\"cp\">{%</span> <span class=\"k\">url</span> <span class=\"nv\">opts</span><span class=\"o\">|</span><span class=\"nf\">admin_urlname</span><span class=\"s1\">:&#39;delete&#39;</span> <span class=\"nv\">user.pk</span> <span class=\"cp\">%}</span><span class=\"s\">&quot;</span><span class=\"p\">&gt;</span>Delete this user<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n</pre></div>\n</div>\n<p>The action in the examples above match the last part of the URL names for\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin\" title=\"django.contrib.admin.ModelAdmin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code></a> instances described above. The <code class=\"docutils literal notranslate\"><span class=\"pre\">opts</span></code> variable can be any\nobject which has an <code class=\"docutils literal notranslate\"><span class=\"pre\">app_label</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">model_name</span></code> attributes and is usually\nsupplied by the admin views for the current model.</p>\n</div>\n<div class=\"section\" id=\"s-the-display-decorator\">\n<span id=\"the-display-decorator\"></span><h2>The <code class=\"docutils literal notranslate\"><span class=\"pre\">display</span></code> decorator<a class=\"headerlink\" href=\"#the-display-decorator\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.display\">\n<code class=\"sig-name descname\"><span class=\"pre\">display</span></code>(<em><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em><span class=\"n\"><span class=\"pre\">boolean</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">ordering</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">empty_value</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/decorators/#display\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.display\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This decorator can be used for setting specific attributes on custom\ndisplay functions that can be used with\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.list_display\" title=\"django.contrib.admin.ModelAdmin.list_display\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">list_display</span></code></a> or\n<a class=\"reference internal\" href=\"#django.contrib.admin.ModelAdmin.readonly_fields\" title=\"django.contrib.admin.ModelAdmin.readonly_fields\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">readonly_fields</span></code></a>:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@admin</span><span class=\"o\">.</span><span class=\"n\">display</span><span class=\"p\">(</span>\n    <span class=\"n\">boolean</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">ordering</span><span class=\"o\">=</span><span class=\"s2\">&quot;-publish_date&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;Is Published?&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">is_published</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">publish_date</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span>\n</pre></div>\n</div>\n<p>This is equivalent to setting some attributes (with the original, longer\nnames) on the function directly:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">is_published</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">publish_date</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span>\n\n\n<span class=\"n\">is_published</span><span class=\"o\">.</span><span class=\"n\">boolean</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"n\">is_published</span><span class=\"o\">.</span><span class=\"n\">admin_order_field</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;-publish_date&quot;</span>\n<span class=\"n\">is_published</span><span class=\"o\">.</span><span class=\"n\">short_description</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Is Published?&quot;</span>\n</pre></div>\n</div>\n<p>Also note that the <code class=\"docutils literal notranslate\"><span class=\"pre\">empty_value</span></code> decorator parameter maps to the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">empty_value_display</span></code> attribute assigned directly to the function. It\ncannot be used in conjunction with <code class=\"docutils literal notranslate\"><span class=\"pre\">boolean</span></code> \u2013 they are mutually\nexclusive.</p>\n<p>Use of this decorator is not compulsory to make a display function, but it\ncan be useful to use it without arguments as a marker in your source to\nidentify the purpose of the function:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@admin</span><span class=\"o\">.</span><span class=\"n\">display</span>\n<span class=\"k\">def</span> <span class=\"nf\">published_year</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">publish_date</span><span class=\"o\">.</span><span class=\"n\">year</span>\n</pre></div>\n</div>\n<p>In this case it will add no attributes to the function.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-the-staff-member-required-decorator\">\n<span id=\"the-staff-member-required-decorator\"></span><h2>The <code class=\"docutils literal notranslate\"><span class=\"pre\">staff_member_required</span></code> decorator<a class=\"headerlink\" href=\"#the-staff-member-required-decorator\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.admin.views.decorators.staff_member_required\">\n<code class=\"sig-name descname\"><span class=\"pre\">staff_member_required</span></code>(<em><span class=\"n\"><span class=\"pre\">redirect_field_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'next'</span></span></em>, <em><span class=\"n\"><span class=\"pre\">login_url</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'admin:login'</span></span></em>)<a class=\"reference internal\" href=\"../../../_modules/django/contrib/admin/views/decorators/#staff_member_required\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.contrib.admin.views.decorators.staff_member_required\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This decorator is used on the admin views that require authorization. A\nview decorated with this function will have the following behavior:</p>\n<ul class=\"simple\">\n<li>If the user is logged in, is a staff member (<code class=\"docutils literal notranslate\"><span class=\"pre\">User.is_staff=True</span></code>), and\nis active (<code class=\"docutils literal notranslate\"><span class=\"pre\">User.is_active=True</span></code>), execute the view normally.</li>\n<li>Otherwise, the request will be redirected to the URL specified by the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">login_url</span></code> parameter, with the originally requested path in a query\nstring variable specified by <code class=\"docutils literal notranslate\"><span class=\"pre\">redirect_field_name</span></code>. For example:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">/admin/login/?next=/admin/polls/question/3/</span></code>.</li>\n</ul>\n<p>Example usage:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.admin.views.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">staff_member_required</span>\n\n\n<span class=\"nd\">@staff_member_required</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["ref/contrib/admin/actions", "Admin actions", "N", "next"], ["ref/contrib/index", "<code class=\"docutils literal notranslate\"><span class=\"pre\">contrib</span></code> packages", "P", "previous"]], "sourcename": "ref/contrib/admin/index.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">The Django admin site</a><ul>\n<li><a class=\"reference internal\" href=\"#overview\">Overview</a><ul>\n<li><a class=\"reference internal\" href=\"#other-topics\">Other topics</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#modeladmin-objects\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> objects</a><ul>\n<li><a class=\"reference internal\" href=\"#the-register-decorator\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">register</span></code> decorator</a></li>\n<li><a class=\"reference internal\" href=\"#discovery-of-admin-files\">Discovery of admin files</a></li>\n<li><a class=\"reference internal\" href=\"#modeladmin-options\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> options</a><ul>\n<li><a class=\"reference internal\" href=\"#custom-template-options\">Custom template options</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#modeladmin-methods\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> methods</a><ul>\n<li><a class=\"reference internal\" href=\"#other-methods\">Other methods</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#modeladmin-asset-definitions\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code> asset definitions</a><ul>\n<li><a class=\"reference internal\" href=\"#jquery\">jQuery</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#adding-custom-validation-to-the-admin\">Adding custom validation to the admin</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#inlinemodeladmin-objects\"><code class=\"docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin</span></code> objects</a><ul>\n<li><a class=\"reference internal\" href=\"#inlinemodeladmin-options\"><code class=\"docutils literal notranslate\"><span class=\"pre\">InlineModelAdmin</span></code> options</a></li>\n<li><a class=\"reference internal\" href=\"#working-with-a-model-with-two-or-more-foreign-keys-to-the-same-parent-model\">Working with a model with two or more foreign keys to the same parent model</a></li>\n<li><a class=\"reference internal\" href=\"#working-with-many-to-many-models\">Working with many-to-many models</a></li>\n<li><a class=\"reference internal\" href=\"#working-with-many-to-many-intermediary-models\">Working with many-to-many intermediary models</a></li>\n<li><a class=\"reference internal\" href=\"#using-generic-relations-as-an-inline\">Using generic relations as an inline</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#overriding-admin-templates\">Overriding admin templates</a><ul>\n<li><a class=\"reference internal\" href=\"#set-up-your-projects-admin-template-directories\">Set up your projects admin template directories</a></li>\n<li><a class=\"reference internal\" href=\"#overriding-vs-replacing-an-admin-template\">Overriding vs. replacing an admin template</a></li>\n<li><a class=\"reference internal\" href=\"#templates-which-may-be-overridden-per-app-or-model\">Templates which may be overridden per app or model</a></li>\n<li><a class=\"reference internal\" href=\"#root-and-login-templates\">Root and login templates</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#theming-support\">Theming support</a></li>\n<li><a class=\"reference internal\" href=\"#adminsite-objects\"><code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code> objects</a><ul>\n<li><a class=\"reference internal\" href=\"#adminsite-attributes\"><code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code> attributes</a></li>\n<li><a class=\"reference internal\" href=\"#adminsite-methods\"><code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code> methods</a></li>\n<li><a class=\"reference internal\" href=\"#hooking-adminsite-instances-into-your-urlconf\">Hooking <code class=\"docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code> instances into your URLconf</a></li>\n<li><a class=\"reference internal\" href=\"#customizing-the-adminsite-class\">Customizing the <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">AdminSite</span></code> class</a></li>\n<li><a class=\"reference internal\" href=\"#overriding-the-default-admin-site\">Overriding the default admin site</a></li>\n<li><a class=\"reference internal\" href=\"#multiple-admin-sites-in-the-same-urlconf\">Multiple admin sites in the same URLconf</a></li>\n<li><a class=\"reference internal\" href=\"#adding-views-to-admin-sites\">Adding views to admin sites</a></li>\n<li><a class=\"reference internal\" href=\"#adding-a-password-reset-feature\">Adding a password reset feature</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#logentry-objects\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LogEntry</span></code> objects</a><ul>\n<li><a class=\"reference internal\" href=\"#logentry-attributes\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LogEntry</span></code> attributes</a></li>\n<li><a class=\"reference internal\" href=\"#logentry-methods\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LogEntry</span></code> methods</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#reversing-admin-urls\">Reversing admin URLs</a></li>\n<li><a class=\"reference internal\" href=\"#the-display-decorator\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">display</span></code> decorator</a></li>\n<li><a class=\"reference internal\" href=\"#the-staff-member-required-decorator\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">staff_member_required</span></code> decorator</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "ref/contrib/admin/index", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
