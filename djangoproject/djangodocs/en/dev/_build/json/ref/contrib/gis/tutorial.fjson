{"parents": [{"link": "../../../", "title": "API Reference"}, {"link": "../../", "title": "<code class=\"docutils literal notranslate\"><span class=\"pre\">contrib</span></code> packages"}, {"link": "../", "title": "GeoDjango"}], "prev": {"link": "../", "title": "GeoDjango"}, "next": {"link": "../install/", "title": "GeoDjango Installation"}, "title": "GeoDjango Tutorial", "meta": {}, "body": "<div class=\"section\" id=\"s-geodjango-tutorial\">\n<span id=\"geodjango-tutorial\"></span><h1>GeoDjango Tutorial<a class=\"headerlink\" href=\"#geodjango-tutorial\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"s-introduction\">\n<span id=\"introduction\"></span><h2>Introduction<a class=\"headerlink\" href=\"#introduction\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>GeoDjango is an included contrib module for Django that turns it into a\nworld-class geographic web framework. GeoDjango strives to make it as simple\nas possible to create geographic web applications, like location-based services.\nIts features include:</p>\n<ul class=\"simple\">\n<li>Django model fields for <a class=\"reference external\" href=\"https://www.ogc.org/\">OGC</a> geometries and raster data.</li>\n<li>Extensions to Django\u2019s ORM for querying and manipulating spatial data.</li>\n<li>Loosely-coupled, high-level Python interfaces for GIS geometry and raster\noperations and data manipulation in different formats.</li>\n<li>Editing geometry fields from the admin.</li>\n</ul>\n<p>This tutorial assumes familiarity with Django; thus, if you\u2019re brand new to\nDjango, please read through the <a class=\"reference internal\" href=\"../../../../intro/tutorial01/\"><span class=\"doc\">regular tutorial</span></a> to\nfamiliarize yourself with Django first.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">GeoDjango has additional requirements beyond what Django requires \u2013\nplease consult the <a class=\"reference internal\" href=\"../install/\"><span class=\"doc\">installation documentation</span></a>\nfor more details.</p>\n</div>\n<p>This tutorial will guide you through the creation of a geographic web\napplication for viewing the <a class=\"reference external\" href=\"https://thematicmapping.org/downloads/world_borders.php\">world borders</a>. <a class=\"footnote-reference\" href=\"#id11\" id=\"id1\">[1]</a> Some of the code\nused in this tutorial is taken from and/or inspired by the <a class=\"reference external\" href=\"https://code.google.com/archive/p/geodjango-basic-apps\">GeoDjango\nbasic apps</a> project. <a class=\"footnote-reference\" href=\"#id12\" id=\"id2\">[2]</a></p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Proceed through the tutorial sections sequentially for step-by-step\ninstructions.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-setting-up\">\n<span id=\"setting-up\"></span><h2>Setting Up<a class=\"headerlink\" href=\"#setting-up\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-create-a-spatial-database\">\n<span id=\"create-a-spatial-database\"></span><h3>Create a Spatial Database<a class=\"headerlink\" href=\"#create-a-spatial-database\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Typically no special setup is required, so you can create a database as you\nwould for any other project. We provide some tips for selected databases:</p>\n<ul class=\"simple\">\n<li><a class=\"reference internal\" href=\"../install/postgis/\"><span class=\"doc\">Installing PostGIS</span></a></li>\n<li><a class=\"reference internal\" href=\"../install/spatialite/\"><span class=\"doc\">Installing SpatiaLite</span></a></li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-create-a-new-project\">\n<span id=\"create-a-new-project\"></span><h3>Create a New Project<a class=\"headerlink\" href=\"#create-a-new-project\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Use the standard <code class=\"docutils literal notranslate\"><span class=\"pre\">django-admin</span></code> script to create a project called\n<code class=\"docutils literal notranslate\"><span class=\"pre\">geodjango</span></code>:</p>\n<div class=\"console-block\" id=\"console-block-0\">\n<input class=\"c-tab-unix\" id=\"c-tab-0-unix\" type=\"radio\" name=\"console-0\" checked>\n<label for=\"c-tab-0-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-0-win\" type=\"radio\" name=\"console-0\">\n<label for=\"c-tab-0-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-0-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>django-admin startproject geodjango\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-0-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> django-admin startproject geodjango\n</pre></div>\n</section>\n</div>\n<p>This will initialize a new project. Now, create a <code class=\"docutils literal notranslate\"><span class=\"pre\">world</span></code> Django application\nwithin the <code class=\"docutils literal notranslate\"><span class=\"pre\">geodjango</span></code> project:</p>\n<div class=\"console-block\" id=\"console-block-1\">\n<input class=\"c-tab-unix\" id=\"c-tab-1-unix\" type=\"radio\" name=\"console-1\" checked>\n<label for=\"c-tab-1-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-1-win\" type=\"radio\" name=\"console-1\">\n<label for=\"c-tab-1-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-1-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span><span class=\"nb\">cd</span> geodjango\n<span class=\"gp\">$ </span>python manage.py startapp world\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-1-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> <span class=\"k\">cd</span> geodjango\n<span class=\"gp\">...\\&gt;</span> py manage.py startapp world\n</pre></div>\n</section>\n</div>\n</div>\n<div class=\"section\" id=\"s-configure-settings-py\">\n<span id=\"configure-settings-py\"></span><h3>Configure <code class=\"docutils literal notranslate\"><span class=\"pre\">settings.py</span></code><a class=\"headerlink\" href=\"#configure-settings-py\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">geodjango</span></code> project settings are stored in the <code class=\"docutils literal notranslate\"><span class=\"pre\">geodjango/settings.py</span></code>\nfile. Edit the database connection settings to match your setup:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">DATABASES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;default&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;ENGINE&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;django.contrib.gis.db.backends.postgis&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;NAME&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;geodjango&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;USER&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;geo&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n<p>In addition, modify the <a class=\"reference internal\" href=\"../../../settings/#std-setting-INSTALLED_APPS\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">INSTALLED_APPS</span></code></a> setting to include\n<a class=\"reference internal\" href=\"../../admin/#module-django.contrib.admin\" title=\"django.contrib.admin: Django's admin site.\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.admin</span></code></a>, <a class=\"reference internal\" href=\"../#module-django.contrib.gis\" title=\"django.contrib.gis: Geographic Information System (GIS) extensions for Django\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.contrib.gis</span></code></a>,\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">world</span></code> (your newly created application):</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">&quot;django.contrib.admin&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;django.contrib.auth&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;django.contrib.contenttypes&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;django.contrib.sessions&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;django.contrib.messages&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;django.contrib.staticfiles&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;django.contrib.gis&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;world&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"s-geographic-data\">\n<span id=\"geographic-data\"></span><h2>Geographic Data<a class=\"headerlink\" href=\"#geographic-data\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-worldborders\">\n<span id=\"s-id3\"></span><span id=\"worldborders\"></span><span id=\"id3\"></span><h3>World Borders<a class=\"headerlink\" href=\"#worldborders\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The world borders data is available in this <a class=\"reference external\" href=\"https://thematicmapping.org/downloads/TM_WORLD_BORDERS-0.3.zip\">zip file</a>.  Create a <code class=\"docutils literal notranslate\"><span class=\"pre\">data</span></code>\ndirectory in the <code class=\"docutils literal notranslate\"><span class=\"pre\">world</span></code> application, download the world borders data, and\nunzip. On GNU/Linux platforms, use the following commands:</p>\n<div class=\"console-block\" id=\"console-block-2\">\n<input class=\"c-tab-unix\" id=\"c-tab-2-unix\" type=\"radio\" name=\"console-2\" checked>\n<label for=\"c-tab-2-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-2-win\" type=\"radio\" name=\"console-2\">\n<label for=\"c-tab-2-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-2-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>mkdir world/data\n<span class=\"gp\">$ </span><span class=\"nb\">cd</span> world/data\n<span class=\"gp\">$ </span>wget https://thematicmapping.org/downloads/TM_WORLD_BORDERS-0.3.zip\n<span class=\"gp\">$ </span>unzip TM_WORLD_BORDERS-0.3.zip\n<span class=\"gp\">$ </span><span class=\"nb\">cd</span> ../..\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-2-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> <span class=\"k\">mkdir</span> world\\data\n<span class=\"gp\">...\\&gt;</span> <span class=\"k\">cd</span> world\\data\n<span class=\"gp\">...\\&gt;</span> wget https://thematicmapping.org/downloads/TM_WORLD_BORDERS-0.3.zip\n<span class=\"gp\">...\\&gt;</span> unzip TM_WORLD_BORDERS-0.3.zip\n<span class=\"gp\">...\\&gt;</span> <span class=\"k\">cd</span> ..\\..\n</pre></div>\n</section>\n</div>\n<p>The world borders ZIP file contains a set of data files collectively known as\nan <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Shapefile\">ESRI Shapefile</a>, one of the most popular geospatial data formats.  When\nunzipped, the world borders dataset includes files with the following\nextensions:</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">.shp</span></code>: Holds the vector data for the world borders geometries.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">.shx</span></code>: Spatial index file for geometries stored in the <code class=\"docutils literal notranslate\"><span class=\"pre\">.shp</span></code>.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">.dbf</span></code>: Database file for holding non-geometric attribute data\n(e.g., integer and character fields).</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">.prj</span></code>: Contains the spatial reference information for the geographic\ndata stored in the shapefile.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-use-ogrinfo-to-examine-spatial-data\">\n<span id=\"use-ogrinfo-to-examine-spatial-data\"></span><h3>Use <code class=\"docutils literal notranslate\"><span class=\"pre\">ogrinfo</span></code> to examine spatial data<a class=\"headerlink\" href=\"#use-ogrinfo-to-examine-spatial-data\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The GDAL <code class=\"docutils literal notranslate\"><span class=\"pre\">ogrinfo</span></code> utility allows examining the metadata of shapefiles or\nother vector data sources:</p>\n<div class=\"console-block\" id=\"console-block-3\">\n<input class=\"c-tab-unix\" id=\"c-tab-3-unix\" type=\"radio\" name=\"console-3\" checked>\n<label for=\"c-tab-3-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-3-win\" type=\"radio\" name=\"console-3\">\n<label for=\"c-tab-3-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-3-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>ogrinfo world/data/TM_WORLD_BORDERS-0.3.shp\n<span class=\"go\">INFO: Open of `world/data/TM_WORLD_BORDERS-0.3.shp&#39;</span>\n<span class=\"go\">      using driver `ESRI Shapefile&#39; successful.</span>\n<span class=\"go\">1: TM_WORLD_BORDERS-0.3 (Polygon)</span>\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-3-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> ogrinfo world\\data\\TM_WORLD_BORDERS-0.3.shp\n<span class=\"go\">INFO: Open of `world/data/TM_WORLD_BORDERS-0.3.shp&#39;</span>\n<span class=\"go\">      using driver `ESRI Shapefile&#39; successful.</span>\n<span class=\"go\">1: TM_WORLD_BORDERS-0.3 (Polygon)</span>\n</pre></div>\n</section>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">ogrinfo</span></code> tells us that the shapefile has one layer, and that this\nlayer contains polygon data.  To find out more, we\u2019ll specify the layer name\nand use the <code class=\"docutils literal notranslate\"><span class=\"pre\">-so</span></code> option to get only the important summary information:</p>\n<div class=\"console-block\" id=\"console-block-4\">\n<input class=\"c-tab-unix\" id=\"c-tab-4-unix\" type=\"radio\" name=\"console-4\" checked>\n<label for=\"c-tab-4-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-4-win\" type=\"radio\" name=\"console-4\">\n<label for=\"c-tab-4-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-4-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>ogrinfo -so world/data/TM_WORLD_BORDERS-0.3.shp TM_WORLD_BORDERS-0.3\n<span class=\"go\">INFO: Open of `world/data/TM_WORLD_BORDERS-0.3.shp&#39;</span>\n<span class=\"go\">      using driver `ESRI Shapefile&#39; successful.</span>\n\n<span class=\"go\">Layer name: TM_WORLD_BORDERS-0.3</span>\n<span class=\"go\">Geometry: Polygon</span>\n<span class=\"go\">Feature Count: 246</span>\n<span class=\"go\">Extent: (-180.000000, -90.000000) - (180.000000, 83.623596)</span>\n<span class=\"go\">Layer SRS WKT:</span>\n<span class=\"go\">GEOGCS[&quot;GCS_WGS_1984&quot;,</span>\n<span class=\"go\">    DATUM[&quot;WGS_1984&quot;,</span>\n<span class=\"go\">        SPHEROID[&quot;WGS_1984&quot;,6378137.0,298.257223563]],</span>\n<span class=\"go\">    PRIMEM[&quot;Greenwich&quot;,0.0],</span>\n<span class=\"go\">    UNIT[&quot;Degree&quot;,0.0174532925199433]]</span>\n<span class=\"go\">FIPS: String (2.0)</span>\n<span class=\"go\">ISO2: String (2.0)</span>\n<span class=\"go\">ISO3: String (3.0)</span>\n<span class=\"go\">UN: Integer (3.0)</span>\n<span class=\"go\">NAME: String (50.0)</span>\n<span class=\"go\">AREA: Integer (7.0)</span>\n<span class=\"go\">POP2005: Integer (10.0)</span>\n<span class=\"go\">REGION: Integer (3.0)</span>\n<span class=\"go\">SUBREGION: Integer (3.0)</span>\n<span class=\"go\">LON: Real (8.3)</span>\n<span class=\"go\">LAT: Real (7.3)</span>\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-4-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> ogrinfo -so world\\data\\TM_WORLD_BORDERS-0.3.shp TM_WORLD_BORDERS-0.3\n<span class=\"go\">INFO: Open of `world/data/TM_WORLD_BORDERS-0.3.shp&#39;</span>\n<span class=\"go\">      using driver `ESRI Shapefile&#39; successful.</span>\n\n<span class=\"go\">Layer name: TM_WORLD_BORDERS-0.3</span>\n<span class=\"go\">Geometry: Polygon</span>\n<span class=\"go\">Feature Count: 246</span>\n<span class=\"go\">Extent: (-180.000000, -90.000000) - (180.000000, 83.623596)</span>\n<span class=\"go\">Layer SRS WKT:</span>\n<span class=\"go\">GEOGCS[&quot;GCS_WGS_1984&quot;,</span>\n<span class=\"go\">    DATUM[&quot;WGS_1984&quot;,</span>\n<span class=\"go\">        SPHEROID[&quot;WGS_1984&quot;,6378137.0,298.257223563]],</span>\n<span class=\"go\">    PRIMEM[&quot;Greenwich&quot;,0.0],</span>\n<span class=\"go\">    UNIT[&quot;Degree&quot;,0.0174532925199433]]</span>\n<span class=\"go\">FIPS: String (2.0)</span>\n<span class=\"go\">ISO2: String (2.0)</span>\n<span class=\"go\">ISO3: String (3.0)</span>\n<span class=\"go\">UN: Integer (3.0)</span>\n<span class=\"go\">NAME: String (50.0)</span>\n<span class=\"go\">AREA: Integer (7.0)</span>\n<span class=\"go\">POP2005: Integer (10.0)</span>\n<span class=\"go\">REGION: Integer (3.0)</span>\n<span class=\"go\">SUBREGION: Integer (3.0)</span>\n<span class=\"go\">LON: Real (8.3)</span>\n<span class=\"go\">LAT: Real (7.3)</span>\n</pre></div>\n</section>\n</div>\n<p>This detailed summary information tells us the number of features in the layer\n(246), the geographic bounds of the data, the spatial reference system\n(\u201cSRS WKT\u201d), as well as type information for each attribute field. For example,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">FIPS:</span> <span class=\"pre\">String</span> <span class=\"pre\">(2.0)</span></code> indicates that the <code class=\"docutils literal notranslate\"><span class=\"pre\">FIPS</span></code> character field has\na maximum length of 2.  Similarly, <code class=\"docutils literal notranslate\"><span class=\"pre\">LON:</span> <span class=\"pre\">Real</span> <span class=\"pre\">(8.3)</span></code> is a floating-point\nfield that holds a maximum of 8 digits up to three decimal places.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-geographic-models\">\n<span id=\"geographic-models\"></span><h2>Geographic Models<a class=\"headerlink\" href=\"#geographic-models\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-defining-a-geographic-model\">\n<span id=\"defining-a-geographic-model\"></span><h3>Defining a Geographic Model<a class=\"headerlink\" href=\"#defining-a-geographic-model\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Now that you\u2019ve examined your dataset using <code class=\"docutils literal notranslate\"><span class=\"pre\">ogrinfo</span></code>, create a GeoDjango\nmodel to represent this data:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.gis.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">WorldBorder</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Regular Django fields corresponding to the attributes in the</span>\n    <span class=\"c1\"># world borders shapefile.</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n    <span class=\"n\">area</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">()</span>\n    <span class=\"n\">pop2005</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">(</span><span class=\"s2\">&quot;Population 2005&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">fips</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"s2\">&quot;FIPS Code&quot;</span><span class=\"p\">,</span> <span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">iso2</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"s2\">&quot;2 Digit ISO&quot;</span><span class=\"p\">,</span> <span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">iso3</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"s2\">&quot;3 Digit ISO&quot;</span><span class=\"p\">,</span> <span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"n\">un</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">(</span><span class=\"s2\">&quot;United Nations Code&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">region</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">(</span><span class=\"s2\">&quot;Region Code&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">subregion</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">(</span><span class=\"s2\">&quot;Sub-Region Code&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">lon</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">FloatField</span><span class=\"p\">()</span>\n    <span class=\"n\">lat</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">FloatField</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># GeoDjango-specific: a geometry field (MultiPolygonField)</span>\n    <span class=\"n\">mpoly</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">MultiPolygonField</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Returns the string representation of the model.</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n</pre></div>\n</div>\n<p>Note that the <code class=\"docutils literal notranslate\"><span class=\"pre\">models</span></code> module is imported from <code class=\"docutils literal notranslate\"><span class=\"pre\">django.contrib.gis.db</span></code>.</p>\n<p>The default spatial reference system for geometry fields is WGS84 (meaning\nthe <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/SRID\">SRID</a> is 4326) \u2013 in other words, the field coordinates are in\nlongitude, latitude pairs in units of degrees.  To use a different\ncoordinate system, set the SRID of the geometry field with the <code class=\"docutils literal notranslate\"><span class=\"pre\">srid</span></code>\nargument. Use an integer representing the coordinate system\u2019s EPSG code.</p>\n</div>\n<div class=\"section\" id=\"s-run-migrate\">\n<span id=\"run-migrate\"></span><h3>Run <code class=\"docutils literal notranslate\"><span class=\"pre\">migrate</span></code><a class=\"headerlink\" href=\"#run-migrate\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>After defining your model, you need to sync it with the database. First,\ncreate a database migration:</p>\n<div class=\"console-block\" id=\"console-block-5\">\n<input class=\"c-tab-unix\" id=\"c-tab-5-unix\" type=\"radio\" name=\"console-5\" checked>\n<label for=\"c-tab-5-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-5-win\" type=\"radio\" name=\"console-5\">\n<label for=\"c-tab-5-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-5-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>python manage.py makemigrations\n<span class=\"go\">Migrations for &#39;world&#39;:</span>\n<span class=\"go\">  world/migrations/0001_initial.py:</span>\n<span class=\"go\">    - Create model WorldBorder</span>\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-5-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py manage.py makemigrations\n<span class=\"go\">Migrations for &#39;world&#39;:</span>\n<span class=\"go\">  world/migrations/0001_initial.py:</span>\n<span class=\"go\">    - Create model WorldBorder</span>\n</pre></div>\n</section>\n</div>\n<p>Let\u2019s look at the SQL that will generate the table for the <code class=\"docutils literal notranslate\"><span class=\"pre\">WorldBorder</span></code>\nmodel:</p>\n<div class=\"console-block\" id=\"console-block-6\">\n<input class=\"c-tab-unix\" id=\"c-tab-6-unix\" type=\"radio\" name=\"console-6\" checked>\n<label for=\"c-tab-6-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-6-win\" type=\"radio\" name=\"console-6\">\n<label for=\"c-tab-6-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-6-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>python manage.py sqlmigrate world <span class=\"m\">0001</span>\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-6-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py manage.py sqlmigrate world 0001\n</pre></div>\n</section>\n</div>\n<p>This command should produce the following output:</p>\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"go\">BEGIN;</span>\n<span class=\"go\">--</span>\n<span class=\"go\">-- Create model WorldBorder</span>\n<span class=\"go\">--</span>\n<span class=\"go\">CREATE TABLE &quot;world_worldborder&quot; (</span>\n<span class=\"go\">    &quot;id&quot; bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,</span>\n<span class=\"go\">    &quot;name&quot; varchar(50) NOT NULL,</span>\n<span class=\"go\">    &quot;area&quot; integer NOT NULL,</span>\n<span class=\"go\">    &quot;pop2005&quot; integer NOT NULL,</span>\n<span class=\"go\">    &quot;fips&quot; varchar(2) NOT NULL,</span>\n<span class=\"go\">    &quot;iso2&quot; varchar(2) NOT NULL,</span>\n<span class=\"go\">    &quot;iso3&quot; varchar(3) NOT NULL,</span>\n<span class=\"go\">    &quot;un&quot; integer NOT NULL,</span>\n<span class=\"go\">    &quot;region&quot; integer NOT NULL,</span>\n<span class=\"go\">    &quot;subregion&quot; integer NOT NULL,</span>\n<span class=\"go\">    &quot;lon&quot; double precision NOT NULL,</span>\n<span class=\"go\">    &quot;lat&quot; double precision NOT NULL</span>\n<span class=\"go\">    &quot;mpoly&quot; geometry(MULTIPOLYGON,4326) NOT NULL</span>\n<span class=\"go\">)</span>\n<span class=\"go\">;</span>\n<span class=\"go\">CREATE INDEX &quot;world_worldborder_mpoly_id&quot; ON &quot;world_worldborder&quot; USING GIST (&quot;mpoly&quot;);</span>\n<span class=\"go\">COMMIT;</span>\n</pre></div>\n</div>\n<p>If this looks correct, run <a class=\"reference internal\" href=\"../../../django-admin/#django-admin-migrate\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">migrate</span></code></a> to create this table in the\ndatabase:</p>\n<div class=\"console-block\" id=\"console-block-8\">\n<input class=\"c-tab-unix\" id=\"c-tab-8-unix\" type=\"radio\" name=\"console-8\" checked>\n<label for=\"c-tab-8-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-8-win\" type=\"radio\" name=\"console-8\">\n<label for=\"c-tab-8-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-8-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>python manage.py migrate\n<span class=\"go\">Operations to perform:</span>\n<span class=\"go\">  Apply all migrations: admin, auth, contenttypes, sessions, world</span>\n<span class=\"go\">Running migrations:</span>\n<span class=\"go\">  ...</span>\n<span class=\"go\">  Applying world.0001_initial... OK</span>\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-8-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py manage.py migrate\n<span class=\"go\">Operations to perform:</span>\n<span class=\"go\">  Apply all migrations: admin, auth, contenttypes, sessions, world</span>\n<span class=\"go\">Running migrations:</span>\n<span class=\"go\">  ...</span>\n<span class=\"go\">  Applying world.0001_initial... OK</span>\n</pre></div>\n</section>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"s-importing-spatial-data\">\n<span id=\"importing-spatial-data\"></span><h2>Importing Spatial Data<a class=\"headerlink\" href=\"#importing-spatial-data\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>This section will show you how to import the world borders shapefile into the\ndatabase via GeoDjango models using the <a class=\"reference internal\" href=\"../layermapping/\"><span class=\"doc\">LayerMapping data import utility</span></a>.</p>\n<p>There are many different ways to import data into a spatial database \u2013\nbesides the tools included within GeoDjango, you may also use the following:</p>\n<ul class=\"simple\">\n<li><a class=\"reference external\" href=\"https://gdal.org/programs/ogr2ogr.html\">ogr2ogr</a>: A command-line utility included with GDAL that\ncan import many vector data formats into PostGIS, MySQL, and Oracle databases.</li>\n<li><a class=\"reference external\" href=\"https://postgis.net/docs/using_postgis_dbmanagement.html#shp2pgsql_usage\">shp2pgsql</a>: This utility included with PostGIS imports ESRI shapefiles into\nPostGIS.</li>\n</ul>\n<div class=\"section\" id=\"s-gdal-interface\">\n<span id=\"s-gdalinterface\"></span><span id=\"gdal-interface\"></span><span id=\"gdalinterface\"></span><h3>GDAL Interface<a class=\"headerlink\" href=\"#gdal-interface\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Earlier, you used <code class=\"docutils literal notranslate\"><span class=\"pre\">ogrinfo</span></code> to examine the contents of the world borders\nshapefile.  GeoDjango also includes a Pythonic interface to GDAL\u2019s powerful OGR\nlibrary that can work with all the vector data sources that OGR supports.</p>\n<p>First, invoke the Django shell:</p>\n<div class=\"console-block\" id=\"console-block-9\">\n<input class=\"c-tab-unix\" id=\"c-tab-9-unix\" type=\"radio\" name=\"console-9\" checked>\n<label for=\"c-tab-9-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-9-win\" type=\"radio\" name=\"console-9\">\n<label for=\"c-tab-9-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-9-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>python manage.py shell\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-9-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py manage.py shell\n</pre></div>\n</section>\n</div>\n<p>If you downloaded the <a class=\"reference internal\" href=\"#worldborders\"><span class=\"std std-ref\">World Borders</span></a> data earlier in the tutorial, then\nyou can determine its path using Python\u2019s <a class=\"reference external\" href=\"https://docs.python.org/3/library/pathlib.html#pathlib.Path\" title=\"(in Python v3.11)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">pathlib.Path</span></code></a>:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">world</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">world_shp</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">world</span><span class=\"o\">.</span><span class=\"vm\">__file__</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">parent</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;data&quot;</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;TM_WORLD_BORDERS-0.3.shp&quot;</span>\n</pre></div>\n</div>\n<p>Now, open the world borders shapefile using GeoDjango\u2019s\n<a class=\"reference internal\" href=\"../gdal/#django.contrib.gis.gdal.DataSource\" title=\"django.contrib.gis.gdal.DataSource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DataSource</span></code></a> interface:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.gis.gdal</span> <span class=\"kn\">import</span> <span class=\"n\">DataSource</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">DataSource</span><span class=\"p\">(</span><span class=\"n\">world_shp</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ds</span><span class=\"p\">)</span>\n<span class=\"go\">/ ... /geodjango/world/data/TM_WORLD_BORDERS-0.3.shp (ESRI Shapefile)</span>\n</pre></div>\n</div>\n<p>Data source objects can have different layers of geospatial features; however,\nshapefiles are only allowed to have one layer:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ds</span><span class=\"p\">))</span>\n<span class=\"go\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lyr</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lyr</span><span class=\"p\">)</span>\n<span class=\"go\">TM_WORLD_BORDERS-0.3</span>\n</pre></div>\n</div>\n<p>You can see the layer\u2019s geometry type and how many features it contains:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">geom_type</span><span class=\"p\">)</span>\n<span class=\"go\">Polygon</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">lyr</span><span class=\"p\">))</span>\n<span class=\"go\">246</span>\n</pre></div>\n</div>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Unfortunately, the shapefile data format does not allow for greater\nspecificity with regards to geometry types.  This shapefile, like\nmany others, actually includes <code class=\"docutils literal notranslate\"><span class=\"pre\">MultiPolygon</span></code> geometries, not Polygons.\nIt\u2019s important to use a more general field type in models: a\nGeoDjango <code class=\"docutils literal notranslate\"><span class=\"pre\">MultiPolygonField</span></code> will accept a <code class=\"docutils literal notranslate\"><span class=\"pre\">Polygon</span></code> geometry, but a\n<code class=\"docutils literal notranslate\"><span class=\"pre\">PolygonField</span></code> will not accept a <code class=\"docutils literal notranslate\"><span class=\"pre\">MultiPolygon</span></code> type geometry.  This\nis why the <code class=\"docutils literal notranslate\"><span class=\"pre\">WorldBorder</span></code> model defined above uses a <code class=\"docutils literal notranslate\"><span class=\"pre\">MultiPolygonField</span></code>.</p>\n</div>\n<p>The <a class=\"reference internal\" href=\"../gdal/#django.contrib.gis.gdal.Layer\" title=\"django.contrib.gis.gdal.Layer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Layer</span></code></a> may also have a spatial reference\nsystem associated with it.  If it does, the <code class=\"docutils literal notranslate\"><span class=\"pre\">srs</span></code> attribute will return a\n<a class=\"reference internal\" href=\"../gdal/#django.contrib.gis.gdal.SpatialReference\" title=\"django.contrib.gis.gdal.SpatialReference\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SpatialReference</span></code></a> object:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">srs</span> <span class=\"o\">=</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">srs</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">srs</span><span class=\"p\">)</span>\n<span class=\"go\">GEOGCS[&quot;WGS 84&quot;,</span>\n<span class=\"go\">DATUM[&quot;WGS_1984&quot;,</span>\n<span class=\"go\">    SPHEROID[&quot;WGS 84&quot;,6378137,298.257223563,</span>\n<span class=\"go\">        AUTHORITY[&quot;EPSG&quot;,&quot;7030&quot;]],</span>\n<span class=\"go\">    AUTHORITY[&quot;EPSG&quot;,&quot;6326&quot;]],</span>\n<span class=\"go\">PRIMEM[&quot;Greenwich&quot;,0,</span>\n<span class=\"go\">    AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],</span>\n<span class=\"go\">UNIT[&quot;degree&quot;,0.0174532925199433,</span>\n<span class=\"go\">    AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],</span>\n<span class=\"go\">AXIS[&quot;Latitude&quot;,NORTH],</span>\n<span class=\"go\">AXIS[&quot;Longitude&quot;,EAST],</span>\n<span class=\"go\">AUTHORITY[&quot;EPSG&quot;,&quot;4326&quot;]]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">srs</span><span class=\"o\">.</span><span class=\"n\">proj</span>  <span class=\"c1\"># PROJ representation</span>\n<span class=\"go\">&#39;+proj=longlat +datum=WGS84 +no_defs&#39;</span>\n</pre></div>\n</div>\n<p>This shapefile is in the popular WGS84 spatial reference\nsystem \u2013 in other words, the data uses longitude, latitude pairs in\nunits of degrees.</p>\n<p>In addition, shapefiles also support attribute fields that may contain\nadditional data.  Here are the fields on the World Borders layer:</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"p\">)</span>\n<span class=\"go\">[&#39;FIPS&#39;, &#39;ISO2&#39;, &#39;ISO3&#39;, &#39;UN&#39;, &#39;NAME&#39;, &#39;AREA&#39;, &#39;POP2005&#39;, &#39;REGION&#39;, &#39;SUBREGION&#39;, &#39;LON&#39;, &#39;LAT&#39;]</span>\n</pre></div>\n</div>\n<p>The following code will let you examine the OGR types (e.g. integer or\nstring) associated with each of the fields:</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">[</span><span class=\"n\">fld</span><span class=\"o\">.</span><span class=\"vm\">__name__</span> <span class=\"k\">for</span> <span class=\"n\">fld</span> <span class=\"ow\">in</span> <span class=\"n\">lyr</span><span class=\"o\">.</span><span class=\"n\">field_types</span><span class=\"p\">]</span>\n<span class=\"go\">[&#39;OFTString&#39;, &#39;OFTString&#39;, &#39;OFTString&#39;, &#39;OFTInteger&#39;, &#39;OFTString&#39;, &#39;OFTInteger&#39;, &#39;OFTInteger64&#39;, &#39;OFTInteger&#39;, &#39;OFTInteger&#39;, &#39;OFTReal&#39;, &#39;OFTReal&#39;]</span>\n</pre></div>\n</div>\n<p>You can iterate over each feature in the layer and extract information from both\nthe feature\u2019s geometry (accessed via the <code class=\"docutils literal notranslate\"><span class=\"pre\">geom</span></code> attribute) as well as the\nfeature\u2019s attribute fields (whose <strong>values</strong> are accessed via <code class=\"docutils literal notranslate\"><span class=\"pre\">get()</span></code>\nmethod):</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">feat</span> <span class=\"ow\">in</span> <span class=\"n\">lyr</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">feat</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;NAME&quot;</span><span class=\"p\">),</span> <span class=\"n\">feat</span><span class=\"o\">.</span><span class=\"n\">geom</span><span class=\"o\">.</span><span class=\"n\">num_points</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">Guernsey 18</span>\n<span class=\"go\">Jersey 26</span>\n<span class=\"go\">South Georgia South Sandwich Islands 338</span>\n<span class=\"go\">Taiwan 363</span>\n</pre></div>\n</div>\n<p><a class=\"reference internal\" href=\"../gdal/#django.contrib.gis.gdal.Layer\" title=\"django.contrib.gis.gdal.Layer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Layer</span></code></a> objects may be sliced:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lyr</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"go\">[&lt;django.contrib.gis.gdal.feature.Feature object at 0x2f47690&gt;, &lt;django.contrib.gis.gdal.feature.Feature object at 0x2f47650&gt;]</span>\n</pre></div>\n</div>\n<p>And individual features may be retrieved by their feature ID:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">feat</span> <span class=\"o\">=</span> <span class=\"n\">lyr</span><span class=\"p\">[</span><span class=\"mi\">234</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">feat</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;NAME&quot;</span><span class=\"p\">))</span>\n<span class=\"go\">San Marino</span>\n</pre></div>\n</div>\n<p>Boundary geometries may be exported as WKT and GeoJSON:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">geom</span> <span class=\"o\">=</span> <span class=\"n\">feat</span><span class=\"o\">.</span><span class=\"n\">geom</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">geom</span><span class=\"o\">.</span><span class=\"n\">wkt</span><span class=\"p\">)</span>\n<span class=\"go\">POLYGON ((12.415798 43.957954,12.450554 ...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">geom</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">)</span>\n<span class=\"go\">{ &quot;type&quot;: &quot;Polygon&quot;, &quot;coordinates&quot;: [ [ [ 12.415798, 43.957954 ], [ 12.450554, 43.979721 ], ...</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-layermapping\">\n<span id=\"layermapping\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">LayerMapping</span></code><a class=\"headerlink\" href=\"#layermapping\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>To import the data, use a <code class=\"docutils literal notranslate\"><span class=\"pre\">LayerMapping</span></code> in a Python script.\nCreate a file called <code class=\"docutils literal notranslate\"><span class=\"pre\">load.py</span></code> inside the <code class=\"docutils literal notranslate\"><span class=\"pre\">world</span></code> application,\nwith the following code:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.contrib.gis.utils</span> <span class=\"kn\">import</span> <span class=\"n\">LayerMapping</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">WorldBorder</span>\n\n<span class=\"n\">world_mapping</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;fips&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;FIPS&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;iso2&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ISO2&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;iso3&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ISO3&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;un&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;UN&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;NAME&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;area&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;AREA&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;pop2005&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;POP2005&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;region&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;REGION&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;subregion&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;SUBREGION&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;lon&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;LON&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;lat&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;LAT&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;mpoly&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;MULTIPOLYGON&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">world_shp</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">parent</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;data&quot;</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;TM_WORLD_BORDERS-0.3.shp&quot;</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"n\">lm</span> <span class=\"o\">=</span> <span class=\"n\">LayerMapping</span><span class=\"p\">(</span><span class=\"n\">WorldBorder</span><span class=\"p\">,</span> <span class=\"n\">world_shp</span><span class=\"p\">,</span> <span class=\"n\">world_mapping</span><span class=\"p\">,</span> <span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">lm</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">strict</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"n\">verbose</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>A few notes about what\u2019s going on:</p>\n<ul class=\"simple\">\n<li>Each key in the <code class=\"docutils literal notranslate\"><span class=\"pre\">world_mapping</span></code> dictionary corresponds to a field in the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">WorldBorder</span></code> model.  The value is the name of the shapefile field\nthat data will be loaded from.</li>\n<li>The key <code class=\"docutils literal notranslate\"><span class=\"pre\">mpoly</span></code> for the geometry field is <code class=\"docutils literal notranslate\"><span class=\"pre\">MULTIPOLYGON</span></code>, the\ngeometry type GeoDjango will import the field as.  Even simple polygons in\nthe shapefile will automatically be converted into collections prior to\ninsertion into the database.</li>\n<li>The path to the shapefile is not absolute \u2013 in other words, if you move the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">world</span></code> application (with <code class=\"docutils literal notranslate\"><span class=\"pre\">data</span></code> subdirectory) to a different location,\nthe script will still work.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">transform</span></code> keyword is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> because the data in the\nshapefile does not need to be converted \u2013 it\u2019s already in WGS84 (SRID=4326).</li>\n</ul>\n<p>Afterward, invoke the Django shell from the <code class=\"docutils literal notranslate\"><span class=\"pre\">geodjango</span></code> project directory:</p>\n<div class=\"console-block\" id=\"console-block-10\">\n<input class=\"c-tab-unix\" id=\"c-tab-10-unix\" type=\"radio\" name=\"console-10\" checked>\n<label for=\"c-tab-10-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-10-win\" type=\"radio\" name=\"console-10\">\n<label for=\"c-tab-10-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-10-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>python manage.py shell\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-10-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py manage.py shell\n</pre></div>\n</section>\n</div>\n<p>Next, import the <code class=\"docutils literal notranslate\"><span class=\"pre\">load</span></code> module, call the <code class=\"docutils literal notranslate\"><span class=\"pre\">run</span></code> routine, and watch\n<code class=\"docutils literal notranslate\"><span class=\"pre\">LayerMapping</span></code> do the work:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">world</span> <span class=\"kn\">import</span> <span class=\"n\">load</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">load</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-try-ogrinspect\">\n<span id=\"s-ogrinspect-intro\"></span><span id=\"try-ogrinspect\"></span><span id=\"ogrinspect-intro\"></span><h3>Try <code class=\"docutils literal notranslate\"><span class=\"pre\">ogrinspect</span></code><a class=\"headerlink\" href=\"#try-ogrinspect\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Now that you\u2019ve seen how to define geographic models and import data with the\n<a class=\"reference internal\" href=\"../layermapping/\"><span class=\"doc\">LayerMapping data import utility</span></a>, it\u2019s possible to further automate this process with\nuse of the <a class=\"reference internal\" href=\"../commands/#django-admin-ogrinspect\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">ogrinspect</span></code></a> management command.  The <a class=\"reference internal\" href=\"../commands/#django-admin-ogrinspect\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">ogrinspect</span></code></a>\ncommand  introspects a GDAL-supported vector data source (e.g., a shapefile)\nand generates a model definition and <code class=\"docutils literal notranslate\"><span class=\"pre\">LayerMapping</span></code> dictionary automatically.</p>\n<p>The general usage of the command goes as follows:</p>\n<div class=\"console-block\" id=\"console-block-11\">\n<input class=\"c-tab-unix\" id=\"c-tab-11-unix\" type=\"radio\" name=\"console-11\" checked>\n<label for=\"c-tab-11-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-11-win\" type=\"radio\" name=\"console-11\">\n<label for=\"c-tab-11-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-11-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>python manage.py ogrinspect <span class=\"o\">[</span>options<span class=\"o\">]</span> &lt;data_source&gt; &lt;model_name&gt; <span class=\"o\">[</span>options<span class=\"o\">]</span>\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-11-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py manage.py ogrinspect [options] <span class=\"p\">&lt;</span>data_source<span class=\"p\">&gt;</span> &lt;model_name<span class=\"p\">&gt;</span> [options]\n</pre></div>\n</section>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">data_source</span></code> is the path to the GDAL-supported data source and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">model_name</span></code> is the name to use for the model.  Command-line options may\nbe used to further define how the model is generated.</p>\n<p>For example, the following command nearly reproduces the <code class=\"docutils literal notranslate\"><span class=\"pre\">WorldBorder</span></code> model\nand mapping dictionary created above, automatically:</p>\n<div class=\"console-block\" id=\"console-block-12\">\n<input class=\"c-tab-unix\" id=\"c-tab-12-unix\" type=\"radio\" name=\"console-12\" checked>\n<label for=\"c-tab-12-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-12-win\" type=\"radio\" name=\"console-12\">\n<label for=\"c-tab-12-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-12-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>python manage.py ogrinspect world/data/TM_WORLD_BORDERS-0.3.shp WorldBorder <span class=\"se\">\\</span>\n    --srid<span class=\"o\">=</span><span class=\"m\">4326</span> --mapping --multi\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-12-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py manage.py ogrinspect world\\data\\TM_WORLD_BORDERS-0.3.shp WorldBorder \\\n    --srid=4326 --mapping --multi\n</pre></div>\n</section>\n</div>\n<p>A few notes about the command-line options given above:</p>\n<ul class=\"simple\">\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">--srid=4326</span></code> option sets the SRID for the geographic field.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">--mapping</span></code> option tells <code class=\"docutils literal notranslate\"><span class=\"pre\">ogrinspect</span></code> to also generate a\nmapping dictionary for use with\n<a class=\"reference internal\" href=\"../layermapping/#django.contrib.gis.utils.LayerMapping\" title=\"django.contrib.gis.utils.LayerMapping\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LayerMapping</span></code></a>.</li>\n<li>The <code class=\"docutils literal notranslate\"><span class=\"pre\">--multi</span></code> option is specified so that the geographic field is a\n<a class=\"reference internal\" href=\"../model-api/#django.contrib.gis.db.models.MultiPolygonField\" title=\"django.contrib.gis.db.models.MultiPolygonField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">MultiPolygonField</span></code></a> instead of just a\n<a class=\"reference internal\" href=\"../model-api/#django.contrib.gis.db.models.PolygonField\" title=\"django.contrib.gis.db.models.PolygonField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PolygonField</span></code></a>.</li>\n</ul>\n<p>The command produces the following output, which may be copied\ndirectly into the <code class=\"docutils literal notranslate\"><span class=\"pre\">models.py</span></code> of a GeoDjango application:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># This is an auto-generated Django model module created by ogrinspect.</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.contrib.gis.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">WorldBorder</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">fips</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">iso2</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">iso3</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"n\">un</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">()</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n    <span class=\"n\">area</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">()</span>\n    <span class=\"n\">pop2005</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">()</span>\n    <span class=\"n\">region</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">()</span>\n    <span class=\"n\">subregion</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">()</span>\n    <span class=\"n\">lon</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">FloatField</span><span class=\"p\">()</span>\n    <span class=\"n\">lat</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">FloatField</span><span class=\"p\">()</span>\n    <span class=\"n\">geom</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">MultiPolygonField</span><span class=\"p\">(</span><span class=\"n\">srid</span><span class=\"o\">=</span><span class=\"mi\">4326</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Auto-generated `LayerMapping` dictionary for WorldBorder model</span>\n<span class=\"n\">worldborders_mapping</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;fips&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;FIPS&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;iso2&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ISO2&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;iso3&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ISO3&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;un&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;UN&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;NAME&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;area&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;AREA&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;pop2005&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;POP2005&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;region&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;REGION&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;subregion&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;SUBREGION&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;lon&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;LON&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;lat&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;LAT&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;geom&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;MULTIPOLYGON&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"s-spatial-queries\">\n<span id=\"spatial-queries\"></span><h2>Spatial Queries<a class=\"headerlink\" href=\"#spatial-queries\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-spatial-lookups\">\n<span id=\"spatial-lookups\"></span><h3>Spatial Lookups<a class=\"headerlink\" href=\"#spatial-lookups\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>GeoDjango adds spatial lookups to the Django ORM.  For example, you\ncan find the country in the <code class=\"docutils literal notranslate\"><span class=\"pre\">WorldBorder</span></code> table that contains\na particular point.  First, fire up the management shell:</p>\n<div class=\"console-block\" id=\"console-block-13\">\n<input class=\"c-tab-unix\" id=\"c-tab-13-unix\" type=\"radio\" name=\"console-13\" checked>\n<label for=\"c-tab-13-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-13-win\" type=\"radio\" name=\"console-13\">\n<label for=\"c-tab-13-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-13-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>python manage.py shell\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-13-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py manage.py shell\n</pre></div>\n</section>\n</div>\n<p>Now, define a point of interest <a class=\"footnote-reference\" href=\"#id13\" id=\"id7\">[3]</a>:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pnt_wkt</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;POINT(-95.3385 29.7245)&quot;</span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">pnt_wkt</span></code> string represents the point at -95.3385 degrees longitude,\n29.7245 degrees latitude.  The geometry is in a format known as\nWell Known Text (WKT), a standard issued by the Open Geospatial\nConsortium (OGC). <a class=\"footnote-reference\" href=\"#id14\" id=\"id8\">[4]</a>  Import the <code class=\"docutils literal notranslate\"><span class=\"pre\">WorldBorder</span></code> model, and perform\na <code class=\"docutils literal notranslate\"><span class=\"pre\">contains</span></code> lookup using the <code class=\"docutils literal notranslate\"><span class=\"pre\">pnt_wkt</span></code> as the parameter:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">world.models</span> <span class=\"kn\">import</span> <span class=\"n\">WorldBorder</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">WorldBorder</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">mpoly__contains</span><span class=\"o\">=</span><span class=\"n\">pnt_wkt</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;QuerySet [&lt;WorldBorder: United States&gt;]&gt;</span>\n</pre></div>\n</div>\n<p>Here, you retrieved a <code class=\"docutils literal notranslate\"><span class=\"pre\">QuerySet</span></code> with only one model: the border of the\nUnited States (exactly what you would expect).</p>\n<p>Similarly, you may also use a <a class=\"reference internal\" href=\"../geos/\"><span class=\"doc\">GEOS geometry object</span></a>.\nHere, you can combine the <code class=\"docutils literal notranslate\"><span class=\"pre\">intersects</span></code> spatial lookup with the <code class=\"docutils literal notranslate\"><span class=\"pre\">get</span></code>\nmethod to retrieve only the <code class=\"docutils literal notranslate\"><span class=\"pre\">WorldBorder</span></code> instance for San Marino instead\nof a queryset:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.gis.geos</span> <span class=\"kn\">import</span> <span class=\"n\">Point</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pnt</span> <span class=\"o\">=</span> <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"mf\">12.4604</span><span class=\"p\">,</span> <span class=\"mf\">43.9420</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">WorldBorder</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">mpoly__intersects</span><span class=\"o\">=</span><span class=\"n\">pnt</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;WorldBorder: San Marino&gt;</span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">contains</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">intersects</span></code> lookups are just a subset of the\navailable queries \u2013 the <a class=\"reference internal\" href=\"../db-api/\"><span class=\"doc\">GeoDjango Database API</span></a> documentation has more.</p>\n</div>\n<div class=\"section\" id=\"s-automatic-spatial-transformations\">\n<span id=\"s-id9\"></span><span id=\"automatic-spatial-transformations\"></span><span id=\"id9\"></span><h3>Automatic Spatial Transformations<a class=\"headerlink\" href=\"#automatic-spatial-transformations\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>When doing spatial queries, GeoDjango automatically transforms\ngeometries if they\u2019re in a different coordinate system.  In the following\nexample, coordinates will be expressed in <a class=\"reference external\" href=\"https://spatialreference.org/ref/epsg/32140/\">EPSG SRID 32140</a>,\na coordinate system specific to south Texas <strong>only</strong> and in units of\n<strong>meters</strong>, not degrees:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.gis.geos</span> <span class=\"kn\">import</span> <span class=\"n\">GEOSGeometry</span><span class=\"p\">,</span> <span class=\"n\">Point</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pnt</span> <span class=\"o\">=</span> <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"mf\">954158.1</span><span class=\"p\">,</span> <span class=\"mf\">4215137.1</span><span class=\"p\">,</span> <span class=\"n\">srid</span><span class=\"o\">=</span><span class=\"mi\">32140</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Note that <code class=\"docutils literal notranslate\"><span class=\"pre\">pnt</span></code> may also be constructed with EWKT, an \u201cextended\u201d form of\nWKT that includes the SRID:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pnt</span> <span class=\"o\">=</span> <span class=\"n\">GEOSGeometry</span><span class=\"p\">(</span><span class=\"s2\">&quot;SRID=32140;POINT(954158.1 4215137.1)&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>GeoDjango\u2019s ORM will automatically wrap geometry values\nin transformation SQL, allowing the developer to work at a higher level\nof abstraction:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qs</span> <span class=\"o\">=</span> <span class=\"n\">WorldBorder</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">mpoly__intersects</span><span class=\"o\">=</span><span class=\"n\">pnt</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">qs</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">)</span>  <span class=\"c1\"># Generating the SQL</span>\n<span class=\"go\">SELECT &quot;world_worldborder&quot;.&quot;id&quot;, &quot;world_worldborder&quot;.&quot;name&quot;, &quot;world_worldborder&quot;.&quot;area&quot;,</span>\n<span class=\"go\">&quot;world_worldborder&quot;.&quot;pop2005&quot;, &quot;world_worldborder&quot;.&quot;fips&quot;, &quot;world_worldborder&quot;.&quot;iso2&quot;,</span>\n<span class=\"go\">&quot;world_worldborder&quot;.&quot;iso3&quot;, &quot;world_worldborder&quot;.&quot;un&quot;, &quot;world_worldborder&quot;.&quot;region&quot;,</span>\n<span class=\"go\">&quot;world_worldborder&quot;.&quot;subregion&quot;, &quot;world_worldborder&quot;.&quot;lon&quot;, &quot;world_worldborder&quot;.&quot;lat&quot;,</span>\n<span class=\"go\">&quot;world_worldborder&quot;.&quot;mpoly&quot; FROM &quot;world_worldborder&quot;</span>\n<span class=\"go\">WHERE ST_Intersects(&quot;world_worldborder&quot;.&quot;mpoly&quot;, ST_Transform(%s, 4326))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">qs</span>  <span class=\"c1\"># printing evaluates the queryset</span>\n<span class=\"go\">&lt;QuerySet [&lt;WorldBorder: United States&gt;]&gt;</span>\n</pre></div>\n</div>\n<div class=\"admonition-raw-queries admonition\" id=\"gis-raw-sql\">\n<p class=\"first admonition-title\">Raw queries</p>\n<p>When using <a class=\"reference internal\" href=\"../../../../topics/db/sql/\"><span class=\"doc\">raw queries</span></a>, you must wrap your geometry\nfields so that the field value can be recognized by GEOS:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"go\">from django.db import connection</span>\n<span class=\"go\"># or if you&#39;re querying a non-default database:</span>\n<span class=\"go\">from django.db import connections</span>\n<span class=\"go\">connection = connections[&#39;your_gis_db_alias&#39;]</span>\n\n<span class=\"go\">City.objects.raw(&#39;SELECT id, name, %s as point from myapp_city&#39; % (connection.ops.select % &#39;point&#39;))</span>\n</pre></div>\n</div>\n<p class=\"last\">You should only use raw queries when you know exactly what you\u2019re doing.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-lazy-geometries\">\n<span id=\"lazy-geometries\"></span><h3>Lazy Geometries<a class=\"headerlink\" href=\"#lazy-geometries\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>GeoDjango loads geometries in a standardized textual representation.  When the\ngeometry field is first accessed, GeoDjango creates a\n<a class=\"reference internal\" href=\"../geos/#django.contrib.gis.geos.GEOSGeometry\" title=\"django.contrib.gis.geos.GEOSGeometry\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GEOSGeometry</span></code></a> object, exposing powerful\nfunctionality, such as serialization properties for popular geospatial\nformats:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sm</span> <span class=\"o\">=</span> <span class=\"n\">WorldBorder</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;San Marino&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">mpoly</span>\n<span class=\"go\">&lt;MultiPolygon object at 0x24c6798&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">mpoly</span><span class=\"o\">.</span><span class=\"n\">wkt</span>  <span class=\"c1\"># WKT</span>\n<span class=\"go\">MULTIPOLYGON (((12.4157980000000006 43.9579540000000009, 12.4505540000000003 43.9797209999999978, ...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">mpoly</span><span class=\"o\">.</span><span class=\"n\">wkb</span>  <span class=\"c1\"># WKB (as Python binary buffer)</span>\n<span class=\"go\">&lt;read-only buffer for 0x1fe2c70, size -1, offset 0 at 0x2564c40&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">mpoly</span><span class=\"o\">.</span><span class=\"n\">geojson</span>  <span class=\"c1\"># GeoJSON</span>\n<span class=\"go\">&#39;{ &quot;type&quot;: &quot;MultiPolygon&quot;, &quot;coordinates&quot;: [ [ [ [ 12.415798, 43.957954 ], [ 12.450554, 43.979721 ], ...</span>\n</pre></div>\n</div>\n<p>This includes access to all of the advanced geometric operations provided by\nthe GEOS library:</p>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pnt</span> <span class=\"o\">=</span> <span class=\"n\">Point</span><span class=\"p\">(</span><span class=\"mf\">12.4604</span><span class=\"p\">,</span> <span class=\"mf\">43.9420</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">mpoly</span><span class=\"o\">.</span><span class=\"n\">contains</span><span class=\"p\">(</span><span class=\"n\">pnt</span><span class=\"p\">)</span>\n<span class=\"go\">True</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pnt</span><span class=\"o\">.</span><span class=\"n\">contains</span><span class=\"p\">(</span><span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">mpoly</span><span class=\"p\">)</span>\n<span class=\"go\">False</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"s-geographic-annotations\">\n<span id=\"geographic-annotations\"></span><h3>Geographic annotations<a class=\"headerlink\" href=\"#geographic-annotations\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>GeoDjango also offers a set of geographic annotations to compute distances and\nseveral other operations (intersection, difference, etc.). See the\n<a class=\"reference internal\" href=\"../functions/\"><span class=\"doc\">Geographic Database Functions</span></a> documentation.</p>\n</div>\n</div>\n<div class=\"section\" id=\"s-putting-your-data-on-the-map\">\n<span id=\"putting-your-data-on-the-map\"></span><h2>Putting your data on the map<a class=\"headerlink\" href=\"#putting-your-data-on-the-map\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-geographic-admin\">\n<span id=\"geographic-admin\"></span><h3>Geographic Admin<a class=\"headerlink\" href=\"#geographic-admin\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p><a class=\"reference internal\" href=\"../../admin/\"><span class=\"doc\">Django\u2019s admin application</span></a> supports editing\ngeometry fields.</p>\n<div class=\"section\" id=\"s-basics\">\n<span id=\"basics\"></span><h4>Basics<a class=\"headerlink\" href=\"#basics\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>The Django admin allows users to create and modify geometries on a JavaScript\nslippy map (powered by <a class=\"reference external\" href=\"https://openlayers.org/\">OpenLayers</a>).</p>\n<p>Let\u2019s dive right in. Create a file called <code class=\"docutils literal notranslate\"><span class=\"pre\">admin.py</span></code> inside the <code class=\"docutils literal notranslate\"><span class=\"pre\">world</span></code>\napplication with the following code:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.gis</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">WorldBorder</span>\n\n<span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">WorldBorder</span><span class=\"p\">,</span> <span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Next, edit your <code class=\"docutils literal notranslate\"><span class=\"pre\">urls.py</span></code> in the <code class=\"docutils literal notranslate\"><span class=\"pre\">geodjango</span></code> application folder as follows:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">include</span><span class=\"p\">,</span> <span class=\"n\">path</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">&quot;admin/&quot;</span><span class=\"p\">,</span> <span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">urls</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n</pre></div>\n</div>\n<p>Create an admin user:</p>\n<div class=\"console-block\" id=\"console-block-14\">\n<input class=\"c-tab-unix\" id=\"c-tab-14-unix\" type=\"radio\" name=\"console-14\" checked>\n<label for=\"c-tab-14-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-14-win\" type=\"radio\" name=\"console-14\">\n<label for=\"c-tab-14-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-14-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>python manage.py createsuperuser\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-14-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py manage.py createsuperuser\n</pre></div>\n</section>\n</div>\n<p>Next, start up the Django development server:</p>\n<div class=\"console-block\" id=\"console-block-15\">\n<input class=\"c-tab-unix\" id=\"c-tab-15-unix\" type=\"radio\" name=\"console-15\" checked>\n<label for=\"c-tab-15-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-15-win\" type=\"radio\" name=\"console-15\">\n<label for=\"c-tab-15-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-15-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>python manage.py runserver\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-15-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> py manage.py runserver\n</pre></div>\n</section>\n</div>\n<p>Finally, browse to <code class=\"docutils literal notranslate\"><span class=\"pre\">http://localhost:8000/admin/</span></code>, and log in with the user\nyou just created. Browse to any of the <code class=\"docutils literal notranslate\"><span class=\"pre\">WorldBorder</span></code> entries \u2013 the borders\nmay be edited by clicking on a polygon and dragging the vertices to the desired\nposition.</p>\n</div>\n<div class=\"section\" id=\"s-gismodeladmin\">\n<span id=\"gismodeladmin\"></span><h4><code class=\"docutils literal notranslate\"><span class=\"pre\">GISModelAdmin</span></code><a class=\"headerlink\" href=\"#gismodeladmin\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>With the <a class=\"reference internal\" href=\"../admin/#django.contrib.gis.admin.GISModelAdmin\" title=\"django.contrib.gis.admin.GISModelAdmin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">GISModelAdmin</span></code></a>, GeoDjango uses an\n<a class=\"reference external\" href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> layer in the admin.\nThis provides more context (including street and thoroughfare details) than\navailable with the <a class=\"reference internal\" href=\"../../admin/#django.contrib.admin.ModelAdmin\" title=\"django.contrib.admin.ModelAdmin\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelAdmin</span></code></a> (which uses the\n<a class=\"reference external\" href=\"http://web.archive.org/web/20201024202709/https://earth-info.nga.mil/publications/vmap0.html\">Vector Map Level 0</a> WMS dataset hosted at <a class=\"reference external\" href=\"https://www.osgeo.org/\">OSGeo</a>).</p>\n<p>The PROJ datum shifting files must be installed (see the <a class=\"reference internal\" href=\"../install/geolibs/#proj4\"><span class=\"std std-ref\">PROJ\ninstallation instructions</span></a> for more details).</p>\n<p>If you meet this requirement, then use the <code class=\"docutils literal notranslate\"><span class=\"pre\">GISModelAdmin</span></code> option class\nin your <code class=\"docutils literal notranslate\"><span class=\"pre\">admin.py</span></code> file:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">WorldBorder</span><span class=\"p\">,</span> <span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">GISModelAdmin</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p class=\"rubric\">Footnotes</p>\n<table class=\"docutils footnote\" frame=\"void\" id=\"id11\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id1\">[1]</a></td><td>Special thanks to Bj\u00f8rn Sandvik of <a class=\"reference external\" href=\"https://thematicmapping.org/\">thematicmapping.org</a> for providing and maintaining this\ndataset.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils footnote\" frame=\"void\" id=\"id12\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id2\">[2]</a></td><td>GeoDjango basic apps was written by Dane Springmeyer, Josh Livni, and\nChristopher Schmidt.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils footnote\" frame=\"void\" id=\"id13\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id7\">[3]</a></td><td>This point is the <a class=\"reference external\" href=\"https://www.law.uh.edu/\">University of Houston Law Center</a>.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils footnote\" frame=\"void\" id=\"id14\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#id8\">[4]</a></td><td>Open Geospatial Consortium, Inc., <a class=\"reference external\" href=\"https://www.ogc.org/standards/sfs\">OpenGIS Simple Feature Specification\nFor SQL</a>.</td></tr>\n</tbody>\n</table>\n</div>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["ref/contrib/gis/install/index", "GeoDjango Installation", "N", "next"], ["ref/contrib/gis/index", "GeoDjango", "P", "previous"]], "sourcename": "ref/contrib/gis/tutorial.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">GeoDjango Tutorial</a><ul>\n<li><a class=\"reference internal\" href=\"#introduction\">Introduction</a></li>\n<li><a class=\"reference internal\" href=\"#setting-up\">Setting Up</a><ul>\n<li><a class=\"reference internal\" href=\"#create-a-spatial-database\">Create a Spatial Database</a></li>\n<li><a class=\"reference internal\" href=\"#create-a-new-project\">Create a New Project</a></li>\n<li><a class=\"reference internal\" href=\"#configure-settings-py\">Configure <code class=\"docutils literal notranslate\"><span class=\"pre\">settings.py</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#geographic-data\">Geographic Data</a><ul>\n<li><a class=\"reference internal\" href=\"#worldborders\">World Borders</a></li>\n<li><a class=\"reference internal\" href=\"#use-ogrinfo-to-examine-spatial-data\">Use <code class=\"docutils literal notranslate\"><span class=\"pre\">ogrinfo</span></code> to examine spatial data</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#geographic-models\">Geographic Models</a><ul>\n<li><a class=\"reference internal\" href=\"#defining-a-geographic-model\">Defining a Geographic Model</a></li>\n<li><a class=\"reference internal\" href=\"#run-migrate\">Run <code class=\"docutils literal notranslate\"><span class=\"pre\">migrate</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#importing-spatial-data\">Importing Spatial Data</a><ul>\n<li><a class=\"reference internal\" href=\"#gdal-interface\">GDAL Interface</a></li>\n<li><a class=\"reference internal\" href=\"#layermapping\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LayerMapping</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#try-ogrinspect\">Try <code class=\"docutils literal notranslate\"><span class=\"pre\">ogrinspect</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#spatial-queries\">Spatial Queries</a><ul>\n<li><a class=\"reference internal\" href=\"#spatial-lookups\">Spatial Lookups</a></li>\n<li><a class=\"reference internal\" href=\"#automatic-spatial-transformations\">Automatic Spatial Transformations</a></li>\n<li><a class=\"reference internal\" href=\"#lazy-geometries\">Lazy Geometries</a></li>\n<li><a class=\"reference internal\" href=\"#geographic-annotations\">Geographic annotations</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#putting-your-data-on-the-map\">Putting your data on the map</a><ul>\n<li><a class=\"reference internal\" href=\"#geographic-admin\">Geographic Admin</a><ul>\n<li><a class=\"reference internal\" href=\"#basics\">Basics</a></li>\n<li><a class=\"reference internal\" href=\"#gismodeladmin\"><code class=\"docutils literal notranslate\"><span class=\"pre\">GISModelAdmin</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "ref/contrib/gis/tutorial", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": true}
