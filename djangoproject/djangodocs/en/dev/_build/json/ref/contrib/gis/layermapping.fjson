{"parents": [{"link": "../../../", "title": "API Reference"}, {"link": "../../", "title": "<code class=\"docutils literal notranslate\"><span class=\"pre\">contrib</span></code> packages"}, {"link": "../", "title": "GeoDjango"}, {"link": "../utils/", "title": "GeoDjango Utilities"}], "prev": {"link": "../utils/", "title": "GeoDjango Utilities"}, "next": {"link": "../ogrinspect/", "title": "OGR Inspection"}, "title": "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayerMapping</span></code> data import utility", "meta": {}, "body": "<div class=\"section\" id=\"s-module-django.contrib.gis.utils.layermapping\">\n<span id=\"s-layermapping-data-import-utility\"></span><span id=\"module-django.contrib.gis.utils.layermapping\"></span><span id=\"layermapping-data-import-utility\"></span><h1><code class=\"docutils literal notranslate\"><span class=\"pre\">LayerMapping</span></code> data import utility<a class=\"headerlink\" href=\"#module-django.contrib.gis.utils.layermapping\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>The <a class=\"reference internal\" href=\"#django.contrib.gis.utils.LayerMapping\" title=\"django.contrib.gis.utils.LayerMapping\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LayerMapping</span></code></a> class provides a way to map the contents of\nvector spatial data files (e.g. shapefiles) into GeoDjango models.</p>\n<p>This utility grew out of the author\u2019s personal needs to eliminate\nthe code repetition that went into pulling geometries and fields out of\na vector layer, converting to another coordinate system (e.g. WGS84), and\nthen inserting into a GeoDjango model.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Use of <a class=\"reference internal\" href=\"#django.contrib.gis.utils.LayerMapping\" title=\"django.contrib.gis.utils.LayerMapping\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LayerMapping</span></code></a> requires GDAL.</p>\n</div>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p class=\"last\">GIS data sources, like shapefiles, may be very large.  If you find\nthat <a class=\"reference internal\" href=\"#django.contrib.gis.utils.LayerMapping\" title=\"django.contrib.gis.utils.LayerMapping\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LayerMapping</span></code></a> is using too much memory, set\n<a class=\"reference internal\" href=\"../../../settings/#std-setting-DEBUG\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEBUG</span></code></a> to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> in your settings.  When <a class=\"reference internal\" href=\"../../../settings/#std-setting-DEBUG\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">DEBUG</span></code></a>\nis set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, Django <a class=\"reference internal\" href=\"../../../../faq/models/#faq-see-raw-sql-queries\"><span class=\"std std-ref\">automatically logs</span></a>\n<em>every</em> SQL query \u2013 and when SQL statements contain geometries, this may\nconsume more memory than is typical.</p>\n</div>\n<div class=\"section\" id=\"s-example\">\n<span id=\"example\"></span><h2>Example<a class=\"headerlink\" href=\"#example\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ol class=\"arabic simple\">\n<li>You need a GDAL-supported data source, like a shapefile (here we\u2019re using\na simple polygon shapefile, <code class=\"docutils literal notranslate\"><span class=\"pre\">test_poly.shp</span></code>, with three features):</li>\n</ol>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.gis.gdal</span> <span class=\"kn\">import</span> <span class=\"n\">DataSource</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">DataSource</span><span class=\"p\">(</span><span class=\"s2\">&quot;test_poly.shp&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">layer</span> <span class=\"o\">=</span> <span class=\"n\">ds</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">layer</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"p\">)</span>  <span class=\"c1\"># Exploring the fields in the layer, we only want the &#39;str&#39; field.</span>\n<span class=\"go\">[&#39;float&#39;, &#39;int&#39;, &#39;str&#39;]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">layer</span><span class=\"p\">))</span>  <span class=\"c1\"># getting the number of features in the layer (should be 3)</span>\n<span class=\"go\">3</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">layer</span><span class=\"o\">.</span><span class=\"n\">geom_type</span><span class=\"p\">)</span>  <span class=\"c1\"># Should be &#39;Polygon&#39;</span>\n<span class=\"go\">Polygon</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">layer</span><span class=\"o\">.</span><span class=\"n\">srs</span><span class=\"p\">)</span>  <span class=\"c1\"># WGS84 in WKT</span>\n<span class=\"go\">GEOGCS[&quot;GCS_WGS_1984&quot;,</span>\n<span class=\"go\">    DATUM[&quot;WGS_1984&quot;,</span>\n<span class=\"go\">        SPHEROID[&quot;WGS_1984&quot;,6378137,298.257223563]],</span>\n<span class=\"go\">    PRIMEM[&quot;Greenwich&quot;,0],</span>\n<span class=\"go\">    UNIT[&quot;Degree&quot;,0.017453292519943295]]</span>\n</pre></div>\n</div>\n<ol class=\"arabic\">\n<li><p class=\"first\">Now we define our corresponding Django model (make sure to use <a class=\"reference internal\" href=\"../../../django-admin/#django-admin-migrate\"><code class=\"xref std std-djadmin docutils literal notranslate\"><span class=\"pre\">migrate</span></code></a>):</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.gis.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">TestGeo</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">)</span>  <span class=\"c1\"># corresponds to the &#39;str&#39; field</span>\n    <span class=\"n\">poly</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">PolygonField</span><span class=\"p\">(</span><span class=\"n\">srid</span><span class=\"o\">=</span><span class=\"mi\">4269</span><span class=\"p\">)</span>  <span class=\"c1\"># we want our model in a different SRID</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;Name: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n</pre></div>\n</div>\n</li>\n<li><p class=\"first\">Use <a class=\"reference internal\" href=\"#django.contrib.gis.utils.LayerMapping\" title=\"django.contrib.gis.utils.LayerMapping\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LayerMapping</span></code></a> to extract all the features and place them in the\ndatabase:</p>\n</li>\n</ol>\n<div class=\"highlight-pycon notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">django.contrib.gis.utils</span> <span class=\"kn\">import</span> <span class=\"n\">LayerMapping</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">geoapp.models</span> <span class=\"kn\">import</span> <span class=\"n\">TestGeo</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">mapping</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;str&quot;</span><span class=\"p\">,</span>  <span class=\"c1\"># The &#39;name&#39; model field maps to the &#39;str&#39; layer field.</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;poly&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;POLYGON&quot;</span><span class=\"p\">,</span>  <span class=\"c1\"># For geometry fields use OGC name.</span>\n<span class=\"gp\">... </span><span class=\"p\">}</span>  <span class=\"c1\"># The mapping is a dictionary</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lm</span> <span class=\"o\">=</span> <span class=\"n\">LayerMapping</span><span class=\"p\">(</span><span class=\"n\">TestGeo</span><span class=\"p\">,</span> <span class=\"s2\">&quot;test_poly.shp&quot;</span><span class=\"p\">,</span> <span class=\"n\">mapping</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">lm</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>  <span class=\"c1\"># Save the layermap, imports the data.</span>\n<span class=\"go\">Saved: Name: 1</span>\n<span class=\"go\">Saved: Name: 2</span>\n<span class=\"go\">Saved: Name: 3</span>\n</pre></div>\n</div>\n<p>Here, <a class=\"reference internal\" href=\"#django.contrib.gis.utils.LayerMapping\" title=\"django.contrib.gis.utils.LayerMapping\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">LayerMapping</span></code></a> transformed the three geometries from the shapefile\nin their original spatial reference system (WGS84) to the spatial reference\nsystem of the GeoDjango model (NAD83).  If no spatial reference system is\ndefined for the layer, use the <code class=\"docutils literal notranslate\"><span class=\"pre\">source_srs</span></code> keyword with a\n<a class=\"reference internal\" href=\"../gdal/#django.contrib.gis.gdal.SpatialReference\" title=\"django.contrib.gis.gdal.SpatialReference\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">SpatialReference</span></code></a> object to specify one.</p>\n</div>\n<div class=\"section\" id=\"s-layermapping-api\">\n<span id=\"layermapping-api\"></span><h2><code class=\"docutils literal notranslate\"><span class=\"pre\">LayerMapping</span></code> API<a class=\"headerlink\" href=\"#layermapping-api\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.gis.utils.LayerMapping\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">LayerMapping</span></code>(<em><span class=\"n\"><span class=\"pre\">model</span></span></em>, <em><span class=\"n\"><span class=\"pre\">data_source</span></span></em>, <em><span class=\"n\"><span class=\"pre\">mapping</span></span></em>, <em><span class=\"n\"><span class=\"pre\">layer</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em><span class=\"n\"><span class=\"pre\">source_srs</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">encoding</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">transaction_mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'commit_on_success'</span></span></em>, <em><span class=\"n\"><span class=\"pre\">transform</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em><span class=\"n\"><span class=\"pre\">unique</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em><span class=\"n\"><span class=\"pre\">using</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'default'</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.gis.utils.LayerMapping\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>The following are the arguments and keywords that may be used during\ninstantiation of <code class=\"docutils literal notranslate\"><span class=\"pre\">LayerMapping</span></code> objects.</p>\n<table class=\"docutils\">\n<colgroup>\n<col width=\"23%\" />\n<col width=\"77%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">Argument</th>\n<th class=\"head\">Description</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">model</span></code></td>\n<td>The geographic model, <em>not</em> an instance.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">data_source</span></code></td>\n<td>The path to the OGR-supported data source file\n(e.g., a shapefile).  Also accepts\n<a class=\"reference internal\" href=\"../gdal/#django.contrib.gis.gdal.DataSource\" title=\"django.contrib.gis.gdal.DataSource\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.contrib.gis.gdal.DataSource</span></code></a> instances.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">mapping</span></code></td>\n<td>A dictionary: keys are strings corresponding to\nthe model field, and values correspond to\nstring field names for the OGR feature, or if the\nmodel field is a geographic then it should\ncorrespond to the OGR geometry type,\ne.g., <code class=\"docutils literal notranslate\"><span class=\"pre\">'POINT'</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">'LINESTRING'</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">'POLYGON'</span></code>.</td>\n</tr>\n</tbody>\n</table>\n<table class=\"docutils\">\n<colgroup>\n<col width=\"28%\" />\n<col width=\"72%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">Keyword Arguments</th>\n<th class=\"head\">&#160;</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">layer</span></code></td>\n<td>The index of the layer to use from the Data Source\n(defaults to 0)</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">source_srs</span></code></td>\n<td>Use this to specify the source SRS manually (for\nexample, some shapefiles don\u2019t come with a <code class=\"docutils literal notranslate\"><span class=\"pre\">'.prj'</span></code>\nfile).  An integer SRID, WKT or PROJ strings, and\n<a class=\"reference internal\" href=\"../gdal/#django.contrib.gis.gdal.SpatialReference\" title=\"django.contrib.gis.gdal.SpatialReference\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">django.contrib.gis.gdal.SpatialReference</span></code></a>\nobjects are accepted.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">encoding</span></code></td>\n<td>Specifies the character set encoding of the strings\nin the OGR data source.  For example, <code class=\"docutils literal notranslate\"><span class=\"pre\">'latin-1'</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'utf-8'</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">'cp437'</span></code> are all valid encoding\nparameters.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">transaction_mode</span></code></td>\n<td>May be <code class=\"docutils literal notranslate\"><span class=\"pre\">'commit_on_success'</span></code> (default) or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'autocommit'</span></code>.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">transform</span></code></td>\n<td>Setting this to False will disable coordinate\ntransformations.  In other words, geometries will\nbe inserted into the database unmodified from their\noriginal state in the data source.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">unique</span></code></td>\n<td>Setting this to the name, or a tuple of names,\nfrom the given  model will create models unique\nonly to the given name(s). Geometries from\neach feature will be added into the collection\nassociated with the unique model.  Forces\nthe transaction mode to be <code class=\"docutils literal notranslate\"><span class=\"pre\">'autocommit'</span></code>.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">using</span></code></td>\n<td>Sets the database to use when importing spatial data.\nDefault is <code class=\"docutils literal notranslate\"><span class=\"pre\">'default'</span></code>.</td>\n</tr>\n</tbody>\n</table>\n<div class=\"section\" id=\"s-save-keyword-arguments\">\n<span id=\"save-keyword-arguments\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">save()</span></code> Keyword Arguments<a class=\"headerlink\" href=\"#save-keyword-arguments\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"django.contrib.gis.utils.LayerMapping.save\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">LayerMapping.</span></code><code class=\"sig-name descname\"><span class=\"pre\">save</span></code>(<em><span class=\"n\"><span class=\"pre\">verbose</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em><span class=\"n\"><span class=\"pre\">fid_range</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em><span class=\"n\"><span class=\"pre\">step</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em><span class=\"n\"><span class=\"pre\">progress</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em><span class=\"n\"><span class=\"pre\">silent</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em><span class=\"n\"><span class=\"pre\">stream</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">sys.stdout</span></span></em>, <em><span class=\"n\"><span class=\"pre\">strict</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>)<a class=\"headerlink\" href=\"#django.contrib.gis.utils.LayerMapping.save\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">save()</span></code> method also accepts keywords.  These keywords are\nused for controlling output logging, error handling, and for importing\nspecific feature ranges.</p>\n<table class=\"docutils\">\n<colgroup>\n<col width=\"36%\" />\n<col width=\"64%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">Save Keyword Arguments</th>\n<th class=\"head\">Description</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">fid_range</span></code></td>\n<td>May be set with a slice or tuple of\n(begin, end) feature ID\u2019s to map from\nthe data source.  In other words, this\nkeyword enables the user to selectively\nimport a subset range of features in the\ngeographic data source.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">progress</span></code></td>\n<td>When this keyword is set, status information\nwill be printed giving the number of features\nprocessed and successfully saved.  By default,\nprogress information will be printed every 1000\nfeatures processed, however, this default may\nbe overridden by setting this keyword with an\ninteger for the desired interval.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">silent</span></code></td>\n<td>By default, non-fatal error notifications are\nprinted to <code class=\"docutils literal notranslate\"><span class=\"pre\">sys.stdout</span></code>, but this keyword may\nbe set to disable these notifications.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">step</span></code></td>\n<td>If set with an integer, transactions will\noccur at every step interval. For example, if\n<code class=\"docutils literal notranslate\"><span class=\"pre\">step=1000</span></code>, a commit would occur after the\n1,000th feature, the 2,000th feature etc.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">stream</span></code></td>\n<td>Status information will be written to this file\nhandle.  Defaults to using <code class=\"docutils literal notranslate\"><span class=\"pre\">sys.stdout</span></code>, but\nany object with a <code class=\"docutils literal notranslate\"><span class=\"pre\">write</span></code> method is supported.</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">strict</span></code></td>\n<td>Execution of the model mapping will cease upon\nthe first error encountered.  The default value\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>)\nbehavior is to attempt to continue.</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"docutils literal notranslate\"><span class=\"pre\">verbose</span></code></td>\n<td>If set, information will be printed\nsubsequent to each model save\nexecuted on the database.</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div class=\"section\" id=\"s-troubleshooting\">\n<span id=\"troubleshooting\"></span><h2>Troubleshooting<a class=\"headerlink\" href=\"#troubleshooting\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"s-running-out-of-memory\">\n<span id=\"running-out-of-memory\"></span><h3>Running out of memory<a class=\"headerlink\" href=\"#running-out-of-memory\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>As noted in the warning at the top of this section, Django stores all SQL\nqueries when <code class=\"docutils literal notranslate\"><span class=\"pre\">DEBUG=True</span></code>.  Set <code class=\"docutils literal notranslate\"><span class=\"pre\">DEBUG=False</span></code> in your settings, and this\nshould stop excessive memory use when running <code class=\"docutils literal notranslate\"><span class=\"pre\">LayerMapping</span></code> scripts.</p>\n</div>\n<div class=\"section\" id=\"s-mysql-max-allowed-packet-error\">\n<span id=\"mysql-max-allowed-packet-error\"></span><h3>MySQL: <code class=\"docutils literal notranslate\"><span class=\"pre\">max_allowed_packet</span></code> error<a class=\"headerlink\" href=\"#mysql-max-allowed-packet-error\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>If you encounter the following error when using <code class=\"docutils literal notranslate\"><span class=\"pre\">LayerMapping</span></code> and MySQL:</p>\n<div class=\"highlight-pytb notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"x\">OperationalError: (1153, &quot;Got a packet bigger than &#39;max_allowed_packet&#39; bytes&quot;)</span>\n</pre></div>\n</div>\n<p>Then the solution is to increase the value of the <code class=\"docutils literal notranslate\"><span class=\"pre\">max_allowed_packet</span></code>\nsetting in your MySQL configuration.  For example, the default value may\nbe something low like one megabyte \u2013 the setting may be modified in MySQL\u2019s\nconfiguration file (<code class=\"docutils literal notranslate\"><span class=\"pre\">my.cnf</span></code>) in the <code class=\"docutils literal notranslate\"><span class=\"pre\">[mysqld]</span></code> section:</p>\n<div class=\"highlight-ini notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"na\">max_allowed_packet</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">10M</span><span class=\"w\"></span>\n</pre></div>\n</div>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["ref/contrib/gis/ogrinspect", "OGR Inspection", "N", "next"], ["ref/contrib/gis/utils", "GeoDjango Utilities", "P", "previous"]], "sourcename": "ref/contrib/gis/layermapping.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LayerMapping</span></code> data import utility</a><ul>\n<li><a class=\"reference internal\" href=\"#example\">Example</a></li>\n<li><a class=\"reference internal\" href=\"#layermapping-api\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LayerMapping</span></code> API</a><ul>\n<li><a class=\"reference internal\" href=\"#save-keyword-arguments\"><code class=\"docutils literal notranslate\"><span class=\"pre\">save()</span></code> Keyword Arguments</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#troubleshooting\">Troubleshooting</a><ul>\n<li><a class=\"reference internal\" href=\"#running-out-of-memory\">Running out of memory</a></li>\n<li><a class=\"reference internal\" href=\"#mysql-max-allowed-packet-error\">MySQL: <code class=\"docutils literal notranslate\"><span class=\"pre\">max_allowed_packet</span></code> error</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "ref/contrib/gis/layermapping", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}