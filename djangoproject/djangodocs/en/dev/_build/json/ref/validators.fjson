{"parents": [{"link": "../", "title": "API Reference"}], "prev": {"link": "../utils/", "title": "Django Utils"}, "next": {"link": "../views/", "title": "Built-in Views"}, "title": "Validators", "meta": {}, "body": "<div class=\"section\" id=\"s-module-django.core.validators\">\n<span id=\"s-validators\"></span><span id=\"module-django.core.validators\"></span><span id=\"validators\"></span><h1>Validators<a class=\"headerlink\" href=\"#module-django.core.validators\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"s-writing-validators\">\n<span id=\"writing-validators\"></span><h2>Writing validators<a class=\"headerlink\" href=\"#writing-validators\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>A validator is a callable that takes a value and raises a\n<a class=\"reference internal\" href=\"../exceptions/#django.core.exceptions.ValidationError\" title=\"django.core.exceptions.ValidationError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code></a> if it doesn\u2019t meet some\ncriteria. Validators can be useful for reusing validation logic between\ndifferent types of fields.</p>\n<p>For example, here\u2019s a validator that only allows even numbers:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.core.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">ValidationError</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.translation</span> <span class=\"kn\">import</span> <span class=\"n\">gettext_lazy</span> <span class=\"k\">as</span> <span class=\"n\">_</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">validate_even</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"n\">ValidationError</span><span class=\"p\">(</span>\n            <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"si\">%(value)s</span><span class=\"s2\"> is not an even number&quot;</span><span class=\"p\">),</span>\n            <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;value&quot;</span><span class=\"p\">:</span> <span class=\"n\">value</span><span class=\"p\">},</span>\n        <span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>You can add this to a model field via the field\u2019s <a class=\"reference internal\" href=\"../models/fields/#django.db.models.Field.validators\" title=\"django.db.models.Field.validators\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">validators</span></code></a>\nargument:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">even_field</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">(</span><span class=\"n\">validators</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">validate_even</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<p>Because values are converted to Python before validators are run, you can even\nuse the same validator with forms:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n    <span class=\"n\">even_field</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">(</span><span class=\"n\">validators</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">validate_even</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n<p>You can also use a class with a <code class=\"docutils literal notranslate\"><span class=\"pre\">__call__()</span></code> method for more complex or\nconfigurable validators. <a class=\"reference internal\" href=\"#django.core.validators.RegexValidator\" title=\"django.core.validators.RegexValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RegexValidator</span></code></a>, for example, uses this\ntechnique. If a class-based validator is used in the\n<a class=\"reference internal\" href=\"../models/fields/#django.db.models.Field.validators\" title=\"django.db.models.Field.validators\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">validators</span></code></a> model field option, you should make\nsure it is <a class=\"reference internal\" href=\"../../topics/migrations/#migration-serializing\"><span class=\"std std-ref\">serializable by the migration framework</span></a> by adding <a class=\"reference internal\" href=\"../../topics/migrations/#custom-deconstruct-method\"><span class=\"std std-ref\">deconstruct()</span></a> and <code class=\"docutils literal notranslate\"><span class=\"pre\">__eq__()</span></code> methods.</p>\n</div>\n<div class=\"section\" id=\"s-how-validators-are-run\">\n<span id=\"how-validators-are-run\"></span><h2>How validators are run<a class=\"headerlink\" href=\"#how-validators-are-run\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>See the <a class=\"reference internal\" href=\"../forms/validation/\"><span class=\"doc\">form validation</span></a> for more information on\nhow validators are run in forms, and <a class=\"reference internal\" href=\"../models/instances/#validating-objects\"><span class=\"std std-ref\">Validating objects</span></a> for how they\u2019re run in models. Note that validators will\nnot be run automatically when you save a model, but if you are using a\n<a class=\"reference internal\" href=\"../../topics/forms/modelforms/#django.forms.ModelForm\" title=\"django.forms.ModelForm\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModelForm</span></code></a>, it will run your validators on any fields\nthat are included in your form. See the\n<a class=\"reference internal\" href=\"../../topics/forms/modelforms/\"><span class=\"doc\">ModelForm documentation</span></a> for information on\nhow model validation interacts with forms.</p>\n</div>\n<div class=\"section\" id=\"s-built-in-validators\">\n<span id=\"built-in-validators\"></span><h2>Built-in validators<a class=\"headerlink\" href=\"#built-in-validators\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The <a class=\"reference internal\" href=\"#module-django.core.validators\" title=\"django.core.validators: Validation utilities and base classes\"><code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">django.core.validators</span></code></a> module contains a collection of callable\nvalidators for use with model and form fields. They\u2019re used internally but\nare available for use with your own fields, too. They can be used in addition\nto, or in lieu of custom <code class=\"docutils literal notranslate\"><span class=\"pre\">field.clean()</span></code> methods.</p>\n<div class=\"section\" id=\"s-regexvalidator\">\n<span id=\"regexvalidator\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">RegexValidator</span></code><a class=\"headerlink\" href=\"#regexvalidator\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.RegexValidator\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">RegexValidator</span></code>(<em><span class=\"n\"><span class=\"pre\">regex</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">message</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">code</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">inverse_match</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">flags</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/core/validators/#RegexValidator\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.core.validators.RegexValidator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>regex</strong> \u2013 If not <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, overrides <a class=\"reference internal\" href=\"#django.core.validators.RegexValidator.regex\" title=\"django.core.validators.RegexValidator.regex\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">regex</span></code></a>. Can be a regular\nexpression string or a pre-compiled regular expression.</li>\n<li><strong>message</strong> \u2013 If not <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, overrides <a class=\"reference internal\" href=\"#django.core.validators.RegexValidator.message\" title=\"django.core.validators.RegexValidator.message\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">message</span></code></a>.</li>\n<li><strong>code</strong> \u2013 If not <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, overrides <a class=\"reference internal\" href=\"#django.core.validators.RegexValidator.code\" title=\"django.core.validators.RegexValidator.code\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">code</span></code></a>.</li>\n<li><strong>inverse_match</strong> \u2013 If not <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, overrides <a class=\"reference internal\" href=\"#django.core.validators.RegexValidator.inverse_match\" title=\"django.core.validators.RegexValidator.inverse_match\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">inverse_match</span></code></a>.</li>\n<li><strong>flags</strong> \u2013 If not <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, overrides <a class=\"reference internal\" href=\"#django.core.validators.RegexValidator.flags\" title=\"django.core.validators.RegexValidator.flags\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">flags</span></code></a>. In that case,\n<a class=\"reference internal\" href=\"#django.core.validators.RegexValidator.regex\" title=\"django.core.validators.RegexValidator.regex\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">regex</span></code></a> must be a regular expression string, or\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#TypeError\" title=\"(in Python v3.11)\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">TypeError</span></code></a> is raised.</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p>A <a class=\"reference internal\" href=\"#django.core.validators.RegexValidator\" title=\"django.core.validators.RegexValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RegexValidator</span></code></a> searches the provided <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> for a given\nregular expression with <a class=\"reference external\" href=\"https://docs.python.org/3/library/re.html#re.search\" title=\"(in Python v3.11)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">re.search()</span></code></a>. By default, raises a\n<a class=\"reference internal\" href=\"../exceptions/#django.core.exceptions.ValidationError\" title=\"django.core.exceptions.ValidationError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code></a> with <a class=\"reference internal\" href=\"#django.core.validators.RegexValidator.message\" title=\"django.core.validators.RegexValidator.message\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">message</span></code></a> and\n<a class=\"reference internal\" href=\"#django.core.validators.RegexValidator.code\" title=\"django.core.validators.RegexValidator.code\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">code</span></code></a> if a match <strong>is not</strong> found. Its behavior can be inverted by\nsetting <a class=\"reference internal\" href=\"#django.core.validators.RegexValidator.inverse_match\" title=\"django.core.validators.RegexValidator.inverse_match\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">inverse_match</span></code></a> to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, in which case the\n<a class=\"reference internal\" href=\"../exceptions/#django.core.exceptions.ValidationError\" title=\"django.core.exceptions.ValidationError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code></a> is raised when a match\n<strong>is</strong> found.</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.RegexValidator.regex\">\n<code class=\"sig-name descname\"><span class=\"pre\">regex</span></code><a class=\"headerlink\" href=\"#django.core.validators.RegexValidator.regex\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The regular expression pattern to search for within the provided\n<code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code>, using <a class=\"reference external\" href=\"https://docs.python.org/3/library/re.html#re.search\" title=\"(in Python v3.11)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">re.search()</span></code></a>. This may be a string or a\npre-compiled regular expression created with <a class=\"reference external\" href=\"https://docs.python.org/3/library/re.html#re.compile\" title=\"(in Python v3.11)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">re.compile()</span></code></a>.\nDefaults to the empty string, which will be found in every possible\n<code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.RegexValidator.message\">\n<code class=\"sig-name descname\"><span class=\"pre\">message</span></code><a class=\"headerlink\" href=\"#django.core.validators.RegexValidator.message\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The error message used by\n<a class=\"reference internal\" href=\"../exceptions/#django.core.exceptions.ValidationError\" title=\"django.core.exceptions.ValidationError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code></a> if validation fails.\nDefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Enter</span> <span class=\"pre\">a</span> <span class=\"pre\">valid</span> <span class=\"pre\">value&quot;</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.RegexValidator.code\">\n<code class=\"sig-name descname\"><span class=\"pre\">code</span></code><a class=\"headerlink\" href=\"#django.core.validators.RegexValidator.code\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The error code used by <a class=\"reference internal\" href=\"../exceptions/#django.core.exceptions.ValidationError\" title=\"django.core.exceptions.ValidationError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code></a>\nif validation fails. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;invalid&quot;</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.RegexValidator.inverse_match\">\n<code class=\"sig-name descname\"><span class=\"pre\">inverse_match</span></code><a class=\"headerlink\" href=\"#django.core.validators.RegexValidator.inverse_match\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The match mode for <a class=\"reference internal\" href=\"#django.core.validators.RegexValidator.regex\" title=\"django.core.validators.RegexValidator.regex\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">regex</span></code></a>. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.RegexValidator.flags\">\n<code class=\"sig-name descname\"><span class=\"pre\">flags</span></code><a class=\"headerlink\" href=\"#django.core.validators.RegexValidator.flags\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <a class=\"reference external\" href=\"https://docs.python.org/3/library/re.html#contents-of-module-re\" title=\"(in Python v3.11)\"><span class=\"xref std std-ref\">regex flags</span></a> used when\ncompiling the regular expression string <a class=\"reference internal\" href=\"#django.core.validators.RegexValidator.regex\" title=\"django.core.validators.RegexValidator.regex\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">regex</span></code></a>. If <a class=\"reference internal\" href=\"#django.core.validators.RegexValidator.regex\" title=\"django.core.validators.RegexValidator.regex\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">regex</span></code></a>\nis a pre-compiled regular expression, and <a class=\"reference internal\" href=\"#django.core.validators.RegexValidator.flags\" title=\"django.core.validators.RegexValidator.flags\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">flags</span></code></a> is overridden,\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#TypeError\" title=\"(in Python v3.11)\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">TypeError</span></code></a> is raised. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span></code>.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-emailvalidator\">\n<span id=\"emailvalidator\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">EmailValidator</span></code><a class=\"headerlink\" href=\"#emailvalidator\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.EmailValidator\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">EmailValidator</span></code>(<em><span class=\"n\"><span class=\"pre\">message</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">code</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">allowlist</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/core/validators/#EmailValidator\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.core.validators.EmailValidator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>message</strong> \u2013 If not <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, overrides <a class=\"reference internal\" href=\"#django.core.validators.EmailValidator.message\" title=\"django.core.validators.EmailValidator.message\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">message</span></code></a>.</li>\n<li><strong>code</strong> \u2013 If not <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, overrides <a class=\"reference internal\" href=\"#django.core.validators.EmailValidator.code\" title=\"django.core.validators.EmailValidator.code\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">code</span></code></a>.</li>\n<li><strong>allowlist</strong> \u2013 If not <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, overrides <a class=\"reference internal\" href=\"#django.core.validators.EmailValidator.allowlist\" title=\"django.core.validators.EmailValidator.allowlist\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">allowlist</span></code></a>.</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.EmailValidator.message\">\n<code class=\"sig-name descname\"><span class=\"pre\">message</span></code><a class=\"headerlink\" href=\"#django.core.validators.EmailValidator.message\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The error message used by\n<a class=\"reference internal\" href=\"../exceptions/#django.core.exceptions.ValidationError\" title=\"django.core.exceptions.ValidationError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code></a> if validation fails.\nDefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Enter</span> <span class=\"pre\">a</span> <span class=\"pre\">valid</span> <span class=\"pre\">email</span> <span class=\"pre\">address&quot;</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.EmailValidator.code\">\n<code class=\"sig-name descname\"><span class=\"pre\">code</span></code><a class=\"headerlink\" href=\"#django.core.validators.EmailValidator.code\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The error code used by <a class=\"reference internal\" href=\"../exceptions/#django.core.exceptions.ValidationError\" title=\"django.core.exceptions.ValidationError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code></a>\nif validation fails. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;invalid&quot;</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.EmailValidator.allowlist\">\n<code class=\"sig-name descname\"><span class=\"pre\">allowlist</span></code><a class=\"headerlink\" href=\"#django.core.validators.EmailValidator.allowlist\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Allowlist of email domains. By default, a regular expression (the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">domain_regex</span></code> attribute) is used to validate whatever appears after\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;</span></code> sign. However, if that string appears in the <code class=\"docutils literal notranslate\"><span class=\"pre\">allowlist</span></code>,\nthis validation is bypassed. If not provided, the default <code class=\"docutils literal notranslate\"><span class=\"pre\">allowlist</span></code>\nis <code class=\"docutils literal notranslate\"><span class=\"pre\">['localhost']</span></code>. Other domains that don\u2019t contain a dot won\u2019t pass\nvalidation, so you\u2019d need to add them to the <code class=\"docutils literal notranslate\"><span class=\"pre\">allowlist</span></code> as\nnecessary.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-urlvalidator\">\n<span id=\"urlvalidator\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">URLValidator</span></code><a class=\"headerlink\" href=\"#urlvalidator\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.URLValidator\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">URLValidator</span></code>(<em><span class=\"n\"><span class=\"pre\">schemes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">regex</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">message</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">code</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/core/validators/#URLValidator\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.core.validators.URLValidator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A <a class=\"reference internal\" href=\"#django.core.validators.RegexValidator\" title=\"django.core.validators.RegexValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RegexValidator</span></code></a> subclass that ensures a value looks like a URL,\nand raises an error code of <code class=\"docutils literal notranslate\"><span class=\"pre\">'invalid'</span></code> if it doesn\u2019t.</p>\n<p>Loopback addresses and reserved IP spaces are considered valid. Literal\nIPv6 addresses (<span class=\"target\" id=\"index-0\"></span><a class=\"rfc reference external\" href=\"https://datatracker.ietf.org/doc/html/rfc3986.html#section-3.2.2\"><strong>RFC 3986#section-3.2.2</strong></a>) and Unicode domains are both\nsupported.</p>\n<p>In addition to the optional arguments of its parent <a class=\"reference internal\" href=\"#django.core.validators.RegexValidator\" title=\"django.core.validators.RegexValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RegexValidator</span></code></a>\nclass, <code class=\"docutils literal notranslate\"><span class=\"pre\">URLValidator</span></code> accepts an extra optional attribute:</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.URLValidator.schemes\">\n<code class=\"sig-name descname\"><span class=\"pre\">schemes</span></code><a class=\"headerlink\" href=\"#django.core.validators.URLValidator.schemes\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>URL/URI scheme list to validate against. If not provided, the default\nlist is <code class=\"docutils literal notranslate\"><span class=\"pre\">['http',</span> <span class=\"pre\">'https',</span> <span class=\"pre\">'ftp',</span> <span class=\"pre\">'ftps']</span></code>. As a reference, the IANA\nwebsite provides a full list of <a class=\"reference external\" href=\"https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml\">valid URI schemes</a>.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-validate-email\">\n<span id=\"validate-email\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">validate_email</span></code><a class=\"headerlink\" href=\"#validate-email\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py data\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.validate_email\">\n<code class=\"sig-name descname\"><span class=\"pre\">validate_email</span></code><a class=\"headerlink\" href=\"#django.core.validators.validate_email\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An <a class=\"reference internal\" href=\"#django.core.validators.EmailValidator\" title=\"django.core.validators.EmailValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">EmailValidator</span></code></a> instance without any customizations.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-validate-slug\">\n<span id=\"validate-slug\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">validate_slug</span></code><a class=\"headerlink\" href=\"#validate-slug\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py data\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.validate_slug\">\n<code class=\"sig-name descname\"><span class=\"pre\">validate_slug</span></code><a class=\"headerlink\" href=\"#django.core.validators.validate_slug\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A <a class=\"reference internal\" href=\"#django.core.validators.RegexValidator\" title=\"django.core.validators.RegexValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RegexValidator</span></code></a> instance that ensures a value consists of only\nletters, numbers, underscores or hyphens.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-validate-unicode-slug\">\n<span id=\"validate-unicode-slug\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">validate_unicode_slug</span></code><a class=\"headerlink\" href=\"#validate-unicode-slug\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py data\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.validate_unicode_slug\">\n<code class=\"sig-name descname\"><span class=\"pre\">validate_unicode_slug</span></code><a class=\"headerlink\" href=\"#django.core.validators.validate_unicode_slug\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A <a class=\"reference internal\" href=\"#django.core.validators.RegexValidator\" title=\"django.core.validators.RegexValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RegexValidator</span></code></a> instance that ensures a value consists of only\nUnicode letters, numbers, underscores, or hyphens.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-validate-ipv4-address\">\n<span id=\"validate-ipv4-address\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">validate_ipv4_address</span></code><a class=\"headerlink\" href=\"#validate-ipv4-address\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py data\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.validate_ipv4_address\">\n<code class=\"sig-name descname\"><span class=\"pre\">validate_ipv4_address</span></code><a class=\"reference internal\" href=\"../../_modules/django/core/validators/#validate_ipv4_address\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.core.validators.validate_ipv4_address\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A <a class=\"reference internal\" href=\"#django.core.validators.RegexValidator\" title=\"django.core.validators.RegexValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RegexValidator</span></code></a> instance that ensures a value looks like an IPv4\naddress.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-validate-ipv6-address\">\n<span id=\"validate-ipv6-address\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">validate_ipv6_address</span></code><a class=\"headerlink\" href=\"#validate-ipv6-address\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py data\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.validate_ipv6_address\">\n<code class=\"sig-name descname\"><span class=\"pre\">validate_ipv6_address</span></code><a class=\"reference internal\" href=\"../../_modules/django/core/validators/#validate_ipv6_address\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.core.validators.validate_ipv6_address\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Uses <code class=\"docutils literal notranslate\"><span class=\"pre\">django.utils.ipv6</span></code> to check the validity of an IPv6 address.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-validate-ipv46-address\">\n<span id=\"validate-ipv46-address\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">validate_ipv46_address</span></code><a class=\"headerlink\" href=\"#validate-ipv46-address\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py data\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.validate_ipv46_address\">\n<code class=\"sig-name descname\"><span class=\"pre\">validate_ipv46_address</span></code><a class=\"reference internal\" href=\"../../_modules/django/core/validators/#validate_ipv46_address\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.core.validators.validate_ipv46_address\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Uses both <code class=\"docutils literal notranslate\"><span class=\"pre\">validate_ipv4_address</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">validate_ipv6_address</span></code> to\nensure a value is either a valid IPv4 or IPv6 address.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-validate-comma-separated-integer-list\">\n<span id=\"validate-comma-separated-integer-list\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">validate_comma_separated_integer_list</span></code><a class=\"headerlink\" href=\"#validate-comma-separated-integer-list\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py data\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.validate_comma_separated_integer_list\">\n<code class=\"sig-name descname\"><span class=\"pre\">validate_comma_separated_integer_list</span></code><a class=\"headerlink\" href=\"#django.core.validators.validate_comma_separated_integer_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>A <a class=\"reference internal\" href=\"#django.core.validators.RegexValidator\" title=\"django.core.validators.RegexValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RegexValidator</span></code></a> instance that ensures a value is a\ncomma-separated list of integers.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-int-list-validator\">\n<span id=\"int-list-validator\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">int_list_validator</span></code><a class=\"headerlink\" href=\"#int-list-validator\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py function\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.int_list_validator\">\n<code class=\"sig-name descname\"><span class=\"pre\">int_list_validator</span></code>(<em><span class=\"n\"><span class=\"pre\">sep</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">','</span></span></em>, <em><span class=\"n\"><span class=\"pre\">message</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">code</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'invalid'</span></span></em>, <em><span class=\"n\"><span class=\"pre\">allow_negative</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/core/validators/#int_list_validator\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.core.validators.int_list_validator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a <a class=\"reference internal\" href=\"#django.core.validators.RegexValidator\" title=\"django.core.validators.RegexValidator\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">RegexValidator</span></code></a> instance that ensures a string consists\nof integers separated by <code class=\"docutils literal notranslate\"><span class=\"pre\">sep</span></code>. It allows negative integers when\n<code class=\"docutils literal notranslate\"><span class=\"pre\">allow_negative</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-maxvaluevalidator\">\n<span id=\"maxvaluevalidator\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">MaxValueValidator</span></code><a class=\"headerlink\" href=\"#maxvaluevalidator\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.MaxValueValidator\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">MaxValueValidator</span></code>(<em><span class=\"n\"><span class=\"pre\">limit_value</span></span></em>, <em><span class=\"n\"><span class=\"pre\">message</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/core/validators/#MaxValueValidator\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.core.validators.MaxValueValidator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Raises a <a class=\"reference internal\" href=\"../exceptions/#django.core.exceptions.ValidationError\" title=\"django.core.exceptions.ValidationError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code></a> with a code of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'max_value'</span></code> if <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> is greater than <code class=\"docutils literal notranslate\"><span class=\"pre\">limit_value</span></code>, which may be\na callable.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-minvaluevalidator\">\n<span id=\"minvaluevalidator\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">MinValueValidator</span></code><a class=\"headerlink\" href=\"#minvaluevalidator\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.MinValueValidator\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">MinValueValidator</span></code>(<em><span class=\"n\"><span class=\"pre\">limit_value</span></span></em>, <em><span class=\"n\"><span class=\"pre\">message</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/core/validators/#MinValueValidator\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.core.validators.MinValueValidator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Raises a <a class=\"reference internal\" href=\"../exceptions/#django.core.exceptions.ValidationError\" title=\"django.core.exceptions.ValidationError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code></a> with a code of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'min_value'</span></code> if <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> is less than <code class=\"docutils literal notranslate\"><span class=\"pre\">limit_value</span></code>, which may be a\ncallable.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-maxlengthvalidator\">\n<span id=\"maxlengthvalidator\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">MaxLengthValidator</span></code><a class=\"headerlink\" href=\"#maxlengthvalidator\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.MaxLengthValidator\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">MaxLengthValidator</span></code>(<em><span class=\"n\"><span class=\"pre\">limit_value</span></span></em>, <em><span class=\"n\"><span class=\"pre\">message</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/core/validators/#MaxLengthValidator\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.core.validators.MaxLengthValidator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Raises a <a class=\"reference internal\" href=\"../exceptions/#django.core.exceptions.ValidationError\" title=\"django.core.exceptions.ValidationError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code></a> with a code of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'max_length'</span></code> if the length of <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> is greater than\n<code class=\"docutils literal notranslate\"><span class=\"pre\">limit_value</span></code>, which may be a callable.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-minlengthvalidator\">\n<span id=\"minlengthvalidator\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">MinLengthValidator</span></code><a class=\"headerlink\" href=\"#minlengthvalidator\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.MinLengthValidator\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">MinLengthValidator</span></code>(<em><span class=\"n\"><span class=\"pre\">limit_value</span></span></em>, <em><span class=\"n\"><span class=\"pre\">message</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/core/validators/#MinLengthValidator\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.core.validators.MinLengthValidator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Raises a <a class=\"reference internal\" href=\"../exceptions/#django.core.exceptions.ValidationError\" title=\"django.core.exceptions.ValidationError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code></a> with a code of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'min_length'</span></code> if the length of <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> is less than <code class=\"docutils literal notranslate\"><span class=\"pre\">limit_value</span></code>,\nwhich may be a callable.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-decimalvalidator\">\n<span id=\"decimalvalidator\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">DecimalValidator</span></code><a class=\"headerlink\" href=\"#decimalvalidator\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.DecimalValidator\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">DecimalValidator</span></code>(<em><span class=\"n\"><span class=\"pre\">max_digits</span></span></em>, <em><span class=\"n\"><span class=\"pre\">decimal_places</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/core/validators/#DecimalValidator\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.core.validators.DecimalValidator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Raises <a class=\"reference internal\" href=\"../exceptions/#django.core.exceptions.ValidationError\" title=\"django.core.exceptions.ValidationError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code></a> with the following\ncodes:</p>\n<ul class=\"simple\">\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">'max_digits'</span></code> if the number of digits is larger than <code class=\"docutils literal notranslate\"><span class=\"pre\">max_digits</span></code>.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">'max_decimal_places'</span></code> if the number of decimals is larger than\n<code class=\"docutils literal notranslate\"><span class=\"pre\">decimal_places</span></code>.</li>\n<li><code class=\"docutils literal notranslate\"><span class=\"pre\">'max_whole_digits'</span></code> if the number of whole digits is larger than\nthe difference between <code class=\"docutils literal notranslate\"><span class=\"pre\">max_digits</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">decimal_places</span></code>.</li>\n</ul>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-fileextensionvalidator\">\n<span id=\"fileextensionvalidator\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">FileExtensionValidator</span></code><a class=\"headerlink\" href=\"#fileextensionvalidator\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.FileExtensionValidator\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">FileExtensionValidator</span></code>(<em><span class=\"n\"><span class=\"pre\">allowed_extensions</span></span></em>, <em><span class=\"n\"><span class=\"pre\">message</span></span></em>, <em><span class=\"n\"><span class=\"pre\">code</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/core/validators/#FileExtensionValidator\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.core.validators.FileExtensionValidator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Raises a <a class=\"reference internal\" href=\"../exceptions/#django.core.exceptions.ValidationError\" title=\"django.core.exceptions.ValidationError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code></a> with a code of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'invalid_extension'</span></code> if the extension of <code class=\"docutils literal notranslate\"><span class=\"pre\">value.name</span></code> (<code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> is\na <a class=\"reference internal\" href=\"../files/file/#django.core.files.File\" title=\"django.core.files.File\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">File</span></code></a>) isn\u2019t found in <code class=\"docutils literal notranslate\"><span class=\"pre\">allowed_extensions</span></code>.\nThe extension is compared case-insensitively with <code class=\"docutils literal notranslate\"><span class=\"pre\">allowed_extensions</span></code>.</p>\n<div class=\"admonition warning\">\n<p class=\"first admonition-title\">Warning</p>\n<p class=\"last\">Don\u2019t rely on validation of the file extension to determine a file\u2019s\ntype. Files can be renamed to have any extension no matter what data\nthey contain.</p>\n</div>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-validate-image-file-extension\">\n<span id=\"validate-image-file-extension\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">validate_image_file_extension</span></code><a class=\"headerlink\" href=\"#validate-image-file-extension\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py data\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.validate_image_file_extension\">\n<code class=\"sig-name descname\"><span class=\"pre\">validate_image_file_extension</span></code><a class=\"reference internal\" href=\"../../_modules/django/core/validators/#validate_image_file_extension\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.core.validators.validate_image_file_extension\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Uses Pillow to ensure that <code class=\"docutils literal notranslate\"><span class=\"pre\">value.name</span></code> (<code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> is a\n<a class=\"reference internal\" href=\"../files/file/#django.core.files.File\" title=\"django.core.files.File\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">File</span></code></a>) has <a class=\"reference external\" href=\"https://pillow.readthedocs.io/en/latest/handbook/image-file-formats.html\">a valid image extension</a>.</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-prohibitnullcharactersvalidator\">\n<span id=\"prohibitnullcharactersvalidator\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">ProhibitNullCharactersValidator</span></code><a class=\"headerlink\" href=\"#prohibitnullcharactersvalidator\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.ProhibitNullCharactersValidator\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">ProhibitNullCharactersValidator</span></code>(<em><span class=\"n\"><span class=\"pre\">message</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em><span class=\"n\"><span class=\"pre\">code</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/core/validators/#ProhibitNullCharactersValidator\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.core.validators.ProhibitNullCharactersValidator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Raises a <a class=\"reference internal\" href=\"../exceptions/#django.core.exceptions.ValidationError\" title=\"django.core.exceptions.ValidationError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code></a> if <code class=\"docutils literal notranslate\"><span class=\"pre\">str(value)</span></code>\ncontains one or more null characters (<code class=\"docutils literal notranslate\"><span class=\"pre\">'\\x00'</span></code>).</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>message</strong> \u2013 If not <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, overrides <a class=\"reference internal\" href=\"#django.core.validators.ProhibitNullCharactersValidator.message\" title=\"django.core.validators.ProhibitNullCharactersValidator.message\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">message</span></code></a>.</li>\n<li><strong>code</strong> \u2013 If not <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, overrides <a class=\"reference internal\" href=\"#django.core.validators.ProhibitNullCharactersValidator.code\" title=\"django.core.validators.ProhibitNullCharactersValidator.code\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">code</span></code></a>.</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.ProhibitNullCharactersValidator.message\">\n<code class=\"sig-name descname\"><span class=\"pre\">message</span></code><a class=\"headerlink\" href=\"#django.core.validators.ProhibitNullCharactersValidator.message\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The error message used by\n<a class=\"reference internal\" href=\"../exceptions/#django.core.exceptions.ValidationError\" title=\"django.core.exceptions.ValidationError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code></a> if validation fails.\nDefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;Null</span> <span class=\"pre\">characters</span> <span class=\"pre\">are</span> <span class=\"pre\">not</span> <span class=\"pre\">allowed.&quot;</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.ProhibitNullCharactersValidator.code\">\n<code class=\"sig-name descname\"><span class=\"pre\">code</span></code><a class=\"headerlink\" href=\"#django.core.validators.ProhibitNullCharactersValidator.code\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The error code used by <a class=\"reference internal\" href=\"../exceptions/#django.core.exceptions.ValidationError\" title=\"django.core.exceptions.ValidationError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code></a>\nif validation fails. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">&quot;null_characters_not_allowed&quot;</span></code>.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"s-stepvaluevalidator\">\n<span id=\"stepvaluevalidator\"></span><h3><code class=\"docutils literal notranslate\"><span class=\"pre\">StepValueValidator</span></code><a class=\"headerlink\" href=\"#stepvaluevalidator\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"django.core.validators.StepValueValidator\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><code class=\"sig-name descname\"><span class=\"pre\">StepValueValidator</span></code>(<em><span class=\"n\"><span class=\"pre\">limit_value</span></span></em>, <em><span class=\"n\"><span class=\"pre\">message</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>)<a class=\"reference internal\" href=\"../../_modules/django/core/validators/#StepValueValidator\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#django.core.validators.StepValueValidator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Raises a <a class=\"reference internal\" href=\"../exceptions/#django.core.exceptions.ValidationError\" title=\"django.core.exceptions.ValidationError\"><code class=\"xref py py-exc docutils literal notranslate\"><span class=\"pre\">ValidationError</span></code></a> with a code of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'step_size'</span></code> if <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code> is not an integral multiple of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">limit_value</span></code>, which can be a float, integer or decimal value or a\ncallable.</p>\n</dd></dl>\n\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["ref/views", "Built-in Views", "N", "next"], ["ref/utils", "Django Utils", "P", "previous"]], "sourcename": "ref/validators.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Validators</a><ul>\n<li><a class=\"reference internal\" href=\"#writing-validators\">Writing validators</a></li>\n<li><a class=\"reference internal\" href=\"#how-validators-are-run\">How validators are run</a></li>\n<li><a class=\"reference internal\" href=\"#built-in-validators\">Built-in validators</a><ul>\n<li><a class=\"reference internal\" href=\"#regexvalidator\"><code class=\"docutils literal notranslate\"><span class=\"pre\">RegexValidator</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#emailvalidator\"><code class=\"docutils literal notranslate\"><span class=\"pre\">EmailValidator</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#urlvalidator\"><code class=\"docutils literal notranslate\"><span class=\"pre\">URLValidator</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#validate-email\"><code class=\"docutils literal notranslate\"><span class=\"pre\">validate_email</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#validate-slug\"><code class=\"docutils literal notranslate\"><span class=\"pre\">validate_slug</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#validate-unicode-slug\"><code class=\"docutils literal notranslate\"><span class=\"pre\">validate_unicode_slug</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#validate-ipv4-address\"><code class=\"docutils literal notranslate\"><span class=\"pre\">validate_ipv4_address</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#validate-ipv6-address\"><code class=\"docutils literal notranslate\"><span class=\"pre\">validate_ipv6_address</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#validate-ipv46-address\"><code class=\"docutils literal notranslate\"><span class=\"pre\">validate_ipv46_address</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#validate-comma-separated-integer-list\"><code class=\"docutils literal notranslate\"><span class=\"pre\">validate_comma_separated_integer_list</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#int-list-validator\"><code class=\"docutils literal notranslate\"><span class=\"pre\">int_list_validator</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#maxvaluevalidator\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MaxValueValidator</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#minvaluevalidator\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MinValueValidator</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#maxlengthvalidator\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MaxLengthValidator</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#minlengthvalidator\"><code class=\"docutils literal notranslate\"><span class=\"pre\">MinLengthValidator</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#decimalvalidator\"><code class=\"docutils literal notranslate\"><span class=\"pre\">DecimalValidator</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#fileextensionvalidator\"><code class=\"docutils literal notranslate\"><span class=\"pre\">FileExtensionValidator</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#validate-image-file-extension\"><code class=\"docutils literal notranslate\"><span class=\"pre\">validate_image_file_extension</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#prohibitnullcharactersvalidator\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ProhibitNullCharactersValidator</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#stepvaluevalidator\"><code class=\"docutils literal notranslate\"><span class=\"pre\">StepValueValidator</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "ref/validators", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}