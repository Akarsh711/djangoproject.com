{"parents": [{"link": "../../../../", "title": "Module code"}, {"link": "../../../", "title": "django"}], "title": "django.views.decorators.cache", "body": "<h1>Source code for django.views.decorators.cache</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"kn\">import</span> <span class=\"n\">wraps</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">asgiref.sync</span> <span class=\"kn\">import</span> <span class=\"n\">iscoroutinefunction</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.middleware.cache</span> <span class=\"kn\">import</span> <span class=\"n\">CacheMiddleware</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.cache</span> <span class=\"kn\">import</span> <span class=\"n\">add_never_cache_headers</span><span class=\"p\">,</span> <span class=\"n\">patch_cache_control</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">decorator_from_middleware_with_args</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">cache_page</span><span class=\"p\">(</span><span class=\"n\">timeout</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"p\">,</span> <span class=\"n\">cache</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">key_prefix</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Decorator for views that tries getting the page from the cache and</span>\n<span class=\"sd\">    populates the cache if the page isn&#39;t in the cache yet.</span>\n\n<span class=\"sd\">    The cache is keyed by the URL and some data from the headers.</span>\n<span class=\"sd\">    Additionally there is the key prefix that is used to distinguish different</span>\n<span class=\"sd\">    cache areas in a multi-site setup. You could use the</span>\n<span class=\"sd\">    get_current_site().domain, for example, as that is unique across a Django</span>\n<span class=\"sd\">    project.</span>\n\n<span class=\"sd\">    Additionally, all headers from the response&#39;s Vary header will be taken</span>\n<span class=\"sd\">    into account on caching -- just like the middleware does.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">return</span> <span class=\"n\">decorator_from_middleware_with_args</span><span class=\"p\">(</span><span class=\"n\">CacheMiddleware</span><span class=\"p\">)(</span>\n        <span class=\"n\">page_timeout</span><span class=\"o\">=</span><span class=\"n\">timeout</span><span class=\"p\">,</span>\n        <span class=\"n\">cache_alias</span><span class=\"o\">=</span><span class=\"n\">cache</span><span class=\"p\">,</span>\n        <span class=\"n\">key_prefix</span><span class=\"o\">=</span><span class=\"n\">key_prefix</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_check_request</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">decorator_name</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Ensure argument looks like a request.</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s2\">&quot;META&quot;</span><span class=\"p\">):</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">decorator_name</span><span class=\"si\">}</span><span class=\"s2\"> didn&#39;t receive an HttpRequest. If you are &quot;</span>\n            <span class=\"s2\">&quot;decorating a classmethod, be sure to use @method_decorator.&quot;</span>\n        <span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"cache_control\"><a class=\"viewcode-back\" href=\"../../../../../topics/http/decorators/#django.views.decorators.cache.cache_control\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">cache_control</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_cache_controller</span><span class=\"p\">(</span><span class=\"n\">viewfunc</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">iscoroutinefunction</span><span class=\"p\">(</span><span class=\"n\">viewfunc</span><span class=\"p\">):</span>\n\n            <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">_view_wrapper</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kw</span><span class=\"p\">):</span>\n                <span class=\"n\">_check_request</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s2\">&quot;cache_control&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">viewfunc</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kw</span><span class=\"p\">)</span>\n                <span class=\"n\">patch_cache_control</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"n\">response</span>\n\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n\n            <span class=\"k\">def</span> <span class=\"nf\">_view_wrapper</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kw</span><span class=\"p\">):</span>\n                <span class=\"n\">_check_request</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s2\">&quot;cache_control&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">viewfunc</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kw</span><span class=\"p\">)</span>\n                <span class=\"n\">patch_cache_control</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"n\">response</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">wraps</span><span class=\"p\">(</span><span class=\"n\">viewfunc</span><span class=\"p\">)(</span><span class=\"n\">_view_wrapper</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">_cache_controller</span></div>\n\n\n<div class=\"viewcode-block\" id=\"never_cache\"><a class=\"viewcode-back\" href=\"../../../../../topics/http/decorators/#django.views.decorators.cache.never_cache\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">never_cache</span><span class=\"p\">(</span><span class=\"n\">view_func</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Decorator that adds headers to a response so that it will never be cached.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">iscoroutinefunction</span><span class=\"p\">(</span><span class=\"n\">view_func</span><span class=\"p\">):</span>\n\n        <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">_view_wrapper</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n            <span class=\"n\">_check_request</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s2\">&quot;never_cache&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">view_func</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n            <span class=\"n\">add_never_cache_headers</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">response</span>\n\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">_view_wrapper</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n            <span class=\"n\">_check_request</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s2\">&quot;never_cache&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">view_func</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n            <span class=\"n\">add_never_cache_headers</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">response</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">wraps</span><span class=\"p\">(</span><span class=\"n\">view_func</span><span class=\"p\">)(</span><span class=\"n\">_view_wrapper</span><span class=\"p\">)</span></div>\n</pre></div>", "current_page_name": "_modules/django/views/decorators/cache", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
