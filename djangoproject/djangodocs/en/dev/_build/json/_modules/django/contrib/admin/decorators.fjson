{"parents": [{"link": "../../../../", "title": "Module code"}, {"link": "../../../", "title": "django"}, {"link": "../", "title": "django.contrib.admin"}], "title": "django.contrib.admin.decorators", "body": "<h1>Source code for django.contrib.admin.decorators</h1><div class=\"highlight\"><pre>\n<div class=\"viewcode-block\" id=\"action\"><a class=\"viewcode-back\" href=\"../../../../../ref/contrib/admin/actions/#django.contrib.admin.action\">[docs]</a><span></span><span class=\"k\">def</span> <span class=\"nf\">action</span><span class=\"p\">(</span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"p\">,</span> <span class=\"n\">permissions</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Conveniently add attributes to an action function::</span>\n\n<span class=\"sd\">        @admin.action(</span>\n<span class=\"sd\">            permissions=[&#39;publish&#39;],</span>\n<span class=\"sd\">            description=&#39;Mark selected stories as published&#39;,</span>\n<span class=\"sd\">        )</span>\n<span class=\"sd\">        def make_published(self, request, queryset):</span>\n<span class=\"sd\">            queryset.update(status=&#39;p&#39;)</span>\n\n<span class=\"sd\">    This is equivalent to setting some attributes (with the original, longer</span>\n<span class=\"sd\">    names) on the function directly::</span>\n\n<span class=\"sd\">        def make_published(self, request, queryset):</span>\n<span class=\"sd\">            queryset.update(status=&#39;p&#39;)</span>\n<span class=\"sd\">        make_published.allowed_permissions = [&#39;publish&#39;]</span>\n<span class=\"sd\">        make_published.short_description = &#39;Mark selected stories as published&#39;</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">decorator</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">permissions</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">allowed_permissions</span> <span class=\"o\">=</span> <span class=\"n\">permissions</span>\n        <span class=\"k\">if</span> <span class=\"n\">description</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">short_description</span> <span class=\"o\">=</span> <span class=\"n\">description</span>\n        <span class=\"k\">return</span> <span class=\"n\">func</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">function</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">decorator</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">decorator</span><span class=\"p\">(</span><span class=\"n\">function</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"display\"><a class=\"viewcode-back\" href=\"../../../../../ref/contrib/admin/#django.contrib.admin.display\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">display</span><span class=\"p\">(</span>\n    <span class=\"n\">function</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"p\">,</span> <span class=\"n\">boolean</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">ordering</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">empty_value</span><span class=\"o\">=</span><span class=\"kc\">None</span>\n<span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Conveniently add attributes to a display function::</span>\n\n<span class=\"sd\">        @admin.display(</span>\n<span class=\"sd\">            boolean=True,</span>\n<span class=\"sd\">            ordering=&#39;-publish_date&#39;,</span>\n<span class=\"sd\">            description=&#39;Is Published?&#39;,</span>\n<span class=\"sd\">        )</span>\n<span class=\"sd\">        def is_published(self, obj):</span>\n<span class=\"sd\">            return obj.publish_date is not None</span>\n\n<span class=\"sd\">    This is equivalent to setting some attributes (with the original, longer</span>\n<span class=\"sd\">    names) on the function directly::</span>\n\n<span class=\"sd\">        def is_published(self, obj):</span>\n<span class=\"sd\">            return obj.publish_date is not None</span>\n<span class=\"sd\">        is_published.boolean = True</span>\n<span class=\"sd\">        is_published.admin_order_field = &#39;-publish_date&#39;</span>\n<span class=\"sd\">        is_published.short_description = &#39;Is Published?&#39;</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">decorator</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">boolean</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"n\">empty_value</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;The boolean and empty_value arguments to the @display &quot;</span>\n                <span class=\"s2\">&quot;decorator are mutually exclusive.&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">boolean</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">boolean</span> <span class=\"o\">=</span> <span class=\"n\">boolean</span>\n        <span class=\"k\">if</span> <span class=\"n\">ordering</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">admin_order_field</span> <span class=\"o\">=</span> <span class=\"n\">ordering</span>\n        <span class=\"k\">if</span> <span class=\"n\">description</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">short_description</span> <span class=\"o\">=</span> <span class=\"n\">description</span>\n        <span class=\"k\">if</span> <span class=\"n\">empty_value</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">empty_value_display</span> <span class=\"o\">=</span> <span class=\"n\">empty_value</span>\n        <span class=\"k\">return</span> <span class=\"n\">func</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">function</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">decorator</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">decorator</span><span class=\"p\">(</span><span class=\"n\">function</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"register\"><a class=\"viewcode-back\" href=\"../../../../../ref/contrib/admin/#django.contrib.admin.register\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">register</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">models</span><span class=\"p\">,</span> <span class=\"n\">site</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Register the given model(s) classes and wrapped ModelAdmin class with</span>\n<span class=\"sd\">    admin site:</span>\n\n<span class=\"sd\">    @register(Author)</span>\n<span class=\"sd\">    class AuthorAdmin(admin.ModelAdmin):</span>\n<span class=\"sd\">        pass</span>\n\n<span class=\"sd\">    The `site` kwarg is an admin site to use instead of the default admin site.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">django.contrib.admin</span> <span class=\"kn\">import</span> <span class=\"n\">ModelAdmin</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">django.contrib.admin.sites</span> <span class=\"kn\">import</span> <span class=\"n\">AdminSite</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">django.contrib.admin.sites</span> <span class=\"kn\">import</span> <span class=\"n\">site</span> <span class=\"k\">as</span> <span class=\"n\">default_site</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_model_admin_wrapper</span><span class=\"p\">(</span><span class=\"n\">admin_class</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">models</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;At least one model must be passed to register.&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">admin_site</span> <span class=\"o\">=</span> <span class=\"n\">site</span> <span class=\"ow\">or</span> <span class=\"n\">default_site</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">admin_site</span><span class=\"p\">,</span> <span class=\"n\">AdminSite</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;site must subclass AdminSite&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">issubclass</span><span class=\"p\">(</span><span class=\"n\">admin_class</span><span class=\"p\">,</span> <span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Wrapped class must subclass ModelAdmin.&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">admin_site</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">,</span> <span class=\"n\">admin_class</span><span class=\"o\">=</span><span class=\"n\">admin_class</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">admin_class</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">_model_admin_wrapper</span></div>\n</pre></div>", "current_page_name": "_modules/django/contrib/admin/decorators", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}