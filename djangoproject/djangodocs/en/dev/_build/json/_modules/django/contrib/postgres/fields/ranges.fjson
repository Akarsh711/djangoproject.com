{"parents": [{"link": "../../../../../", "title": "Module code"}, {"link": "../../../../", "title": "django"}], "title": "django.contrib.postgres.fields.ranges", "body": "<h1>Source code for django.contrib.postgres.fields.ranges</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.contrib.postgres</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span><span class=\"p\">,</span> <span class=\"n\">lookups</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.backends.postgresql.psycopg_any</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">DateRange</span><span class=\"p\">,</span>\n    <span class=\"n\">DateTimeTZRange</span><span class=\"p\">,</span>\n    <span class=\"n\">NumericRange</span><span class=\"p\">,</span>\n    <span class=\"n\">Range</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Cast</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.lookups</span> <span class=\"kn\">import</span> <span class=\"n\">PostgresOperatorLookup</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.utils</span> <span class=\"kn\">import</span> <span class=\"n\">AttributeSetter</span>\n\n<span class=\"n\">__all__</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">&quot;RangeField&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;IntegerRangeField&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;BigIntegerRangeField&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;DecimalRangeField&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;DateTimeRangeField&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;DateRangeField&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;RangeBoundary&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;RangeOperators&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n\n\n<div class=\"viewcode-block\" id=\"RangeBoundary\"><a class=\"viewcode-back\" href=\"../../../../../../ref/contrib/postgres/fields/#django.contrib.postgres.fields.RangeBoundary\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">RangeBoundary</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Expression</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;A class that represents range boundaries.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">inclusive_lower</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">inclusive_upper</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lower</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;[&quot;</span> <span class=\"k\">if</span> <span class=\"n\">inclusive_lower</span> <span class=\"k\">else</span> <span class=\"s2\">&quot;(&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">upper</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;]&quot;</span> <span class=\"k\">if</span> <span class=\"n\">inclusive_upper</span> <span class=\"k\">else</span> <span class=\"s2\">&quot;)&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_sql</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;&#39;</span><span class=\"si\">%s%s</span><span class=\"s2\">&#39;&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">),</span> <span class=\"p\">[]</span></div>\n\n\n<div class=\"viewcode-block\" id=\"RangeOperators\"><a class=\"viewcode-back\" href=\"../../../../../../ref/contrib/postgres/fields/#django.contrib.postgres.fields.RangeOperators\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">RangeOperators</span><span class=\"p\">:</span>\n    <span class=\"c1\"># https://www.postgresql.org/docs/current/functions-range.html#RANGE-OPERATORS-TABLE</span>\n    <span class=\"n\">EQUAL</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;=&quot;</span>\n    <span class=\"n\">NOT_EQUAL</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&lt;&gt;&quot;</span>\n    <span class=\"n\">CONTAINS</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;@&gt;&quot;</span>\n    <span class=\"n\">CONTAINED_BY</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&lt;@&quot;</span>\n    <span class=\"n\">OVERLAPS</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&amp;&amp;&quot;</span>\n    <span class=\"n\">FULLY_LT</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&lt;&lt;&quot;</span>\n    <span class=\"n\">FULLY_GT</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&gt;&gt;&quot;</span>\n    <span class=\"n\">NOT_LT</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&amp;&gt;&quot;</span>\n    <span class=\"n\">NOT_GT</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&amp;&lt;&quot;</span>\n    <span class=\"n\">ADJACENT_TO</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;-|-&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"RangeField\"><a class=\"viewcode-back\" href=\"../../../../../../ref/contrib/postgres/fields/#django.contrib.postgres.fields.RangeField\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">RangeField</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Field</span><span class=\"p\">):</span>\n    <span class=\"n\">empty_strings_allowed</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;default_bounds&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Cannot use &#39;default_bounds&#39; with </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"si\">}</span><span class=\"s2\">.&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"c1\"># Initializing base_field here ensures that its model matches the model</span>\n        <span class=\"c1\"># for self.</span>\n        <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">&quot;base_field&quot;</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base_field</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base_field</span><span class=\"p\">()</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"s2\">&quot;model&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span> <span class=\"ne\">KeyError</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">AttributeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;&#39;</span><span class=\"si\">%s</span><span class=\"s2\">&#39; object has no attribute &#39;model&#39;&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"nd\">@model</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"k\">def</span> <span class=\"nf\">model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"s2\">&quot;model&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">model</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base_field</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">model</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_choices_is_value</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">))</span> <span class=\"ow\">or</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">_choices_is_value</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_placeholder</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">::</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">db_type</span><span class=\"p\">(</span><span class=\"n\">connection</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_prep_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">Range</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">value</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">)):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range_type</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">value</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"n\">value</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">to_python</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"c1\"># Assume we&#39;re deserializing</span>\n            <span class=\"n\">vals</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">end</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s2\">&quot;lower&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;upper&quot;</span><span class=\"p\">):</span>\n                <span class=\"k\">if</span> <span class=\"n\">end</span> <span class=\"ow\">in</span> <span class=\"n\">vals</span><span class=\"p\">:</span>\n                    <span class=\"n\">vals</span><span class=\"p\">[</span><span class=\"n\">end</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base_field</span><span class=\"o\">.</span><span class=\"n\">to_python</span><span class=\"p\">(</span><span class=\"n\">vals</span><span class=\"p\">[</span><span class=\"n\">end</span><span class=\"p\">])</span>\n            <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range_type</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">vals</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">)):</span>\n            <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range_type</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">value</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"n\">value</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">set_attributes_from_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">set_attributes_from_name</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base_field</span><span class=\"o\">.</span><span class=\"n\">set_attributes_from_name</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">value_to_string</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">value_from_object</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">isempty</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">({</span><span class=\"s2\">&quot;empty&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">})</span>\n        <span class=\"n\">base_field</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base_field</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;bounds&quot;</span><span class=\"p\">:</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">_bounds</span><span class=\"p\">}</span>\n        <span class=\"k\">for</span> <span class=\"n\">end</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s2\">&quot;lower&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;upper&quot;</span><span class=\"p\">):</span>\n            <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">end</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">val</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">end</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">AttributeSetter</span><span class=\"p\">(</span><span class=\"n\">base_field</span><span class=\"o\">.</span><span class=\"n\">attname</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">)</span>\n                <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">end</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">base_field</span><span class=\"o\">.</span><span class=\"n\">value_to_string</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">formfield</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">setdefault</span><span class=\"p\">(</span><span class=\"s2\">&quot;form_class&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">form_field</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">formfield</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span></div>\n\n\n<span class=\"n\">CANONICAL_RANGE_BOUNDS</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;[)&quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ContinuousRangeField</span><span class=\"p\">(</span><span class=\"n\">RangeField</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Continuous range field. It allows specifying default bounds for list and</span>\n<span class=\"sd\">    tuple inputs.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">default_bounds</span><span class=\"o\">=</span><span class=\"n\">CANONICAL_RANGE_BOUNDS</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">default_bounds</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s2\">&quot;[)&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;(]&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;()&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;[]&quot;</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;default_bounds must be one of &#39;[)&#39;, &#39;(]&#39;, &#39;()&#39;, or &#39;[]&#39;.&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">default_bounds</span> <span class=\"o\">=</span> <span class=\"n\">default_bounds</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_prep_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">)):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range_type</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">value</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">default_bounds</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_prep_value</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">formfield</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">setdefault</span><span class=\"p\">(</span><span class=\"s2\">&quot;default_bounds&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">default_bounds</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">formfield</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">deconstruct</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">deconstruct</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">default_bounds</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">default_bounds</span> <span class=\"o\">!=</span> <span class=\"n\">CANONICAL_RANGE_BOUNDS</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;default_bounds&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">default_bounds</span>\n        <span class=\"k\">return</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span>\n\n\n<div class=\"viewcode-block\" id=\"IntegerRangeField\"><a class=\"viewcode-back\" href=\"../../../../../../ref/contrib/postgres/fields/#django.contrib.postgres.fields.IntegerRangeField\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">IntegerRangeField</span><span class=\"p\">(</span><span class=\"n\">RangeField</span><span class=\"p\">):</span>\n    <span class=\"n\">base_field</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span>\n    <span class=\"n\">range_type</span> <span class=\"o\">=</span> <span class=\"n\">NumericRange</span>\n    <span class=\"n\">form_field</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">IntegerRangeField</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">db_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;int4range&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"BigIntegerRangeField\"><a class=\"viewcode-back\" href=\"../../../../../../ref/contrib/postgres/fields/#django.contrib.postgres.fields.BigIntegerRangeField\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">BigIntegerRangeField</span><span class=\"p\">(</span><span class=\"n\">RangeField</span><span class=\"p\">):</span>\n    <span class=\"n\">base_field</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BigIntegerField</span>\n    <span class=\"n\">range_type</span> <span class=\"o\">=</span> <span class=\"n\">NumericRange</span>\n    <span class=\"n\">form_field</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">IntegerRangeField</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">db_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;int8range&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"DecimalRangeField\"><a class=\"viewcode-back\" href=\"../../../../../../ref/contrib/postgres/fields/#django.contrib.postgres.fields.DecimalRangeField\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">DecimalRangeField</span><span class=\"p\">(</span><span class=\"n\">ContinuousRangeField</span><span class=\"p\">):</span>\n    <span class=\"n\">base_field</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DecimalField</span>\n    <span class=\"n\">range_type</span> <span class=\"o\">=</span> <span class=\"n\">NumericRange</span>\n    <span class=\"n\">form_field</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">DecimalRangeField</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">db_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;numrange&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"DateTimeRangeField\"><a class=\"viewcode-back\" href=\"../../../../../../ref/contrib/postgres/fields/#django.contrib.postgres.fields.DateTimeRangeField\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">DateTimeRangeField</span><span class=\"p\">(</span><span class=\"n\">ContinuousRangeField</span><span class=\"p\">):</span>\n    <span class=\"n\">base_field</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateTimeField</span>\n    <span class=\"n\">range_type</span> <span class=\"o\">=</span> <span class=\"n\">DateTimeTZRange</span>\n    <span class=\"n\">form_field</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">DateTimeRangeField</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">db_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;tstzrange&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"DateRangeField\"><a class=\"viewcode-back\" href=\"../../../../../../ref/contrib/postgres/fields/#django.contrib.postgres.fields.DateRangeField\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">DateRangeField</span><span class=\"p\">(</span><span class=\"n\">RangeField</span><span class=\"p\">):</span>\n    <span class=\"n\">base_field</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateField</span>\n    <span class=\"n\">range_type</span> <span class=\"o\">=</span> <span class=\"n\">DateRange</span>\n    <span class=\"n\">form_field</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">DateRangeField</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">db_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;daterange&quot;</span></div>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">RangeContains</span><span class=\"p\">(</span><span class=\"n\">lookups</span><span class=\"o\">.</span><span class=\"n\">DataContains</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_prep_lookup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">,</span> <span class=\"n\">Range</span><span class=\"p\">)):</span>\n            <span class=\"k\">return</span> <span class=\"n\">Cast</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">base_field</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_prep_lookup</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">RangeField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">RangeContains</span><span class=\"p\">)</span>\n<span class=\"n\">RangeField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">lookups</span><span class=\"o\">.</span><span class=\"n\">ContainedBy</span><span class=\"p\">)</span>\n<span class=\"n\">RangeField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">lookups</span><span class=\"o\">.</span><span class=\"n\">Overlap</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">DateTimeRangeContains</span><span class=\"p\">(</span><span class=\"n\">PostgresOperatorLookup</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Lookup for Date/DateTimeRange containment to cast the rhs to the correct</span>\n<span class=\"sd\">    type.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;contains&quot;</span>\n    <span class=\"n\">postgres_operator</span> <span class=\"o\">=</span> <span class=\"n\">RangeOperators</span><span class=\"o\">.</span><span class=\"n\">CONTAINS</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">process_rhs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Transform rhs value for db lookup.</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">):</span>\n            <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rhs</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rhs</span> <span class=\"o\">=</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">resolve_expression</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">process_rhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_postgresql</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"n\">sql</span><span class=\"p\">,</span> <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_postgresql</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Cast the rhs if needed.</span>\n        <span class=\"n\">cast_sql</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Expression</span><span class=\"p\">)</span>\n            <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rhs</span><span class=\"o\">.</span><span class=\"n\">_output_field_or_none</span>\n            <span class=\"ow\">and</span>\n            <span class=\"c1\"># Skip cast if rhs has a matching range type.</span>\n            <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rhs</span><span class=\"o\">.</span><span class=\"n\">_output_field_or_none</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"o\">.</span><span class=\"n\">output_field</span><span class=\"o\">.</span><span class=\"vm\">__class__</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">):</span>\n            <span class=\"n\">cast_internal_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"o\">.</span><span class=\"n\">output_field</span><span class=\"o\">.</span><span class=\"n\">base_field</span><span class=\"o\">.</span><span class=\"n\">get_internal_type</span><span class=\"p\">()</span>\n            <span class=\"n\">cast_sql</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;::</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">data_types</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">cast_internal_type</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;</span><span class=\"si\">%s%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">sql</span><span class=\"p\">,</span> <span class=\"n\">cast_sql</span><span class=\"p\">),</span> <span class=\"n\">params</span>\n\n\n<span class=\"n\">DateRangeField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">DateTimeRangeContains</span><span class=\"p\">)</span>\n<span class=\"n\">DateTimeRangeField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">DateTimeRangeContains</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">RangeContainedBy</span><span class=\"p\">(</span><span class=\"n\">PostgresOperatorLookup</span><span class=\"p\">):</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;contained_by&quot;</span>\n    <span class=\"n\">type_mapping</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;smallint&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;int4range&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;integer&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;int4range&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;bigint&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;int8range&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;double precision&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;numrange&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;numeric&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;numrange&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;date&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;daterange&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;timestamp with time zone&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;tstzrange&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">postgres_operator</span> <span class=\"o\">=</span> <span class=\"n\">RangeOperators</span><span class=\"o\">.</span><span class=\"n\">CONTAINED_BY</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">process_rhs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"n\">rhs_params</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">process_rhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Ignore precision for DecimalFields.</span>\n        <span class=\"n\">db_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"o\">.</span><span class=\"n\">output_field</span><span class=\"o\">.</span><span class=\"n\">cast_db_type</span><span class=\"p\">(</span><span class=\"n\">connection</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;(&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">cast_type</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">type_mapping</span><span class=\"p\">[</span><span class=\"n\">db_type</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">::</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"n\">cast_type</span><span class=\"p\">),</span> <span class=\"n\">rhs_params</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">process_lhs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">lhs_params</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">process_lhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"o\">.</span><span class=\"n\">output_field</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">FloatField</span><span class=\"p\">):</span>\n            <span class=\"n\">lhs</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">::numeric&quot;</span> <span class=\"o\">%</span> <span class=\"n\">lhs</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"o\">.</span><span class=\"n\">output_field</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">SmallIntegerField</span><span class=\"p\">):</span>\n            <span class=\"n\">lhs</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">::integer&quot;</span> <span class=\"o\">%</span> <span class=\"n\">lhs</span>\n        <span class=\"k\">return</span> <span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">lhs_params</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_prep_lookup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">RangeField</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_prep_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rhs</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">RangeContainedBy</span><span class=\"p\">)</span>\n<span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateTimeField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">RangeContainedBy</span><span class=\"p\">)</span>\n<span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">RangeContainedBy</span><span class=\"p\">)</span>\n<span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">FloatField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">RangeContainedBy</span><span class=\"p\">)</span>\n<span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DecimalField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">RangeContainedBy</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@RangeField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span>\n<span class=\"k\">class</span> <span class=\"nc\">FullyLessThan</span><span class=\"p\">(</span><span class=\"n\">PostgresOperatorLookup</span><span class=\"p\">):</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;fully_lt&quot;</span>\n    <span class=\"n\">postgres_operator</span> <span class=\"o\">=</span> <span class=\"n\">RangeOperators</span><span class=\"o\">.</span><span class=\"n\">FULLY_LT</span>\n\n\n<span class=\"nd\">@RangeField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span>\n<span class=\"k\">class</span> <span class=\"nc\">FullGreaterThan</span><span class=\"p\">(</span><span class=\"n\">PostgresOperatorLookup</span><span class=\"p\">):</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;fully_gt&quot;</span>\n    <span class=\"n\">postgres_operator</span> <span class=\"o\">=</span> <span class=\"n\">RangeOperators</span><span class=\"o\">.</span><span class=\"n\">FULLY_GT</span>\n\n\n<span class=\"nd\">@RangeField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span>\n<span class=\"k\">class</span> <span class=\"nc\">NotLessThan</span><span class=\"p\">(</span><span class=\"n\">PostgresOperatorLookup</span><span class=\"p\">):</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;not_lt&quot;</span>\n    <span class=\"n\">postgres_operator</span> <span class=\"o\">=</span> <span class=\"n\">RangeOperators</span><span class=\"o\">.</span><span class=\"n\">NOT_LT</span>\n\n\n<span class=\"nd\">@RangeField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span>\n<span class=\"k\">class</span> <span class=\"nc\">NotGreaterThan</span><span class=\"p\">(</span><span class=\"n\">PostgresOperatorLookup</span><span class=\"p\">):</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;not_gt&quot;</span>\n    <span class=\"n\">postgres_operator</span> <span class=\"o\">=</span> <span class=\"n\">RangeOperators</span><span class=\"o\">.</span><span class=\"n\">NOT_GT</span>\n\n\n<span class=\"nd\">@RangeField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span>\n<span class=\"k\">class</span> <span class=\"nc\">AdjacentToLookup</span><span class=\"p\">(</span><span class=\"n\">PostgresOperatorLookup</span><span class=\"p\">):</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;adjacent_to&quot;</span>\n    <span class=\"n\">postgres_operator</span> <span class=\"o\">=</span> <span class=\"n\">RangeOperators</span><span class=\"o\">.</span><span class=\"n\">ADJACENT_TO</span>\n\n\n<span class=\"nd\">@RangeField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span>\n<span class=\"k\">class</span> <span class=\"nc\">RangeStartsWith</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;startswith&quot;</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;lower&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">output_field</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"o\">.</span><span class=\"n\">output_field</span><span class=\"o\">.</span><span class=\"n\">base_field</span>\n\n\n<span class=\"nd\">@RangeField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span>\n<span class=\"k\">class</span> <span class=\"nc\">RangeEndsWith</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;endswith&quot;</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;upper&quot;</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">output_field</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"o\">.</span><span class=\"n\">output_field</span><span class=\"o\">.</span><span class=\"n\">base_field</span>\n\n\n<span class=\"nd\">@RangeField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span>\n<span class=\"k\">class</span> <span class=\"nc\">IsEmpty</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;isempty&quot;</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;isempty&quot;</span>\n    <span class=\"n\">output_field</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BooleanField</span><span class=\"p\">()</span>\n\n\n<span class=\"nd\">@RangeField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span>\n<span class=\"k\">class</span> <span class=\"nc\">LowerInclusive</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;lower_inc&quot;</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;LOWER_INC&quot;</span>\n    <span class=\"n\">output_field</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BooleanField</span><span class=\"p\">()</span>\n\n\n<span class=\"nd\">@RangeField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span>\n<span class=\"k\">class</span> <span class=\"nc\">LowerInfinite</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;lower_inf&quot;</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;LOWER_INF&quot;</span>\n    <span class=\"n\">output_field</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BooleanField</span><span class=\"p\">()</span>\n\n\n<span class=\"nd\">@RangeField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span>\n<span class=\"k\">class</span> <span class=\"nc\">UpperInclusive</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;upper_inc&quot;</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;UPPER_INC&quot;</span>\n    <span class=\"n\">output_field</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BooleanField</span><span class=\"p\">()</span>\n\n\n<span class=\"nd\">@RangeField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span>\n<span class=\"k\">class</span> <span class=\"nc\">UpperInfinite</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;upper_inf&quot;</span>\n    <span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;UPPER_INF&quot;</span>\n    <span class=\"n\">output_field</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BooleanField</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/django/contrib/postgres/fields/ranges", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
