{"parents": [{"link": "../../../../", "title": "Module code"}, {"link": "../../../", "title": "django"}, {"link": "../", "title": "django.contrib.auth"}], "title": "django.contrib.auth.password_validation", "body": "<h1>Source code for django.contrib.auth.password_validation</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">functools</span>\n<span class=\"kn\">import</span> <span class=\"nn\">gzip</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"kn\">from</span> <span class=\"nn\">difflib</span> <span class=\"kn\">import</span> <span class=\"n\">SequenceMatcher</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.core.exceptions</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">FieldDoesNotExist</span><span class=\"p\">,</span>\n    <span class=\"n\">ImproperlyConfigured</span><span class=\"p\">,</span>\n    <span class=\"n\">ValidationError</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.functional</span> <span class=\"kn\">import</span> <span class=\"n\">cached_property</span><span class=\"p\">,</span> <span class=\"n\">lazy</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.html</span> <span class=\"kn\">import</span> <span class=\"n\">format_html</span><span class=\"p\">,</span> <span class=\"n\">format_html_join</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.module_loading</span> <span class=\"kn\">import</span> <span class=\"n\">import_string</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.translation</span> <span class=\"kn\">import</span> <span class=\"n\">gettext</span> <span class=\"k\">as</span> <span class=\"n\">_</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.translation</span> <span class=\"kn\">import</span> <span class=\"n\">ngettext</span>\n\n\n<span class=\"nd\">@functools</span><span class=\"o\">.</span><span class=\"n\">cache</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_default_password_validators</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">get_password_validators</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">AUTH_PASSWORD_VALIDATORS</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"get_password_validators\"><a class=\"viewcode-back\" href=\"../../../../../topics/auth/passwords/#django.contrib.auth.password_validation.get_password_validators\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">get_password_validators</span><span class=\"p\">(</span><span class=\"n\">validator_config</span><span class=\"p\">):</span>\n    <span class=\"n\">validators</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">validator</span> <span class=\"ow\">in</span> <span class=\"n\">validator_config</span><span class=\"p\">:</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">klass</span> <span class=\"o\">=</span> <span class=\"n\">import_string</span><span class=\"p\">(</span><span class=\"n\">validator</span><span class=\"p\">[</span><span class=\"s2\">&quot;NAME&quot;</span><span class=\"p\">])</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n            <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                <span class=\"s2\">&quot;The module in NAME could not be imported: </span><span class=\"si\">%s</span><span class=\"s2\">. Check your &quot;</span>\n                <span class=\"s2\">&quot;AUTH_PASSWORD_VALIDATORS setting.&quot;</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">raise</span> <span class=\"n\">ImproperlyConfigured</span><span class=\"p\">(</span><span class=\"n\">msg</span> <span class=\"o\">%</span> <span class=\"n\">validator</span><span class=\"p\">[</span><span class=\"s2\">&quot;NAME&quot;</span><span class=\"p\">])</span>\n        <span class=\"n\">validators</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">klass</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">validator</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;OPTIONS&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})))</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">validators</span></div>\n\n\n<div class=\"viewcode-block\" id=\"validate_password\"><a class=\"viewcode-back\" href=\"../../../../../topics/auth/passwords/#django.contrib.auth.password_validation.validate_password\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">validate_password</span><span class=\"p\">(</span><span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">password_validators</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Validate that the password meets all validator requirements.</span>\n\n<span class=\"sd\">    If the password is valid, return ``None``.</span>\n<span class=\"sd\">    If the password is invalid, raise ValidationError with all error messages.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">errors</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">if</span> <span class=\"n\">password_validators</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">password_validators</span> <span class=\"o\">=</span> <span class=\"n\">get_default_password_validators</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"n\">validator</span> <span class=\"ow\">in</span> <span class=\"n\">password_validators</span><span class=\"p\">:</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">validator</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"n\">ValidationError</span> <span class=\"k\">as</span> <span class=\"n\">error</span><span class=\"p\">:</span>\n            <span class=\"n\">errors</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">errors</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"n\">ValidationError</span><span class=\"p\">(</span><span class=\"n\">errors</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"password_changed\"><a class=\"viewcode-back\" href=\"../../../../../topics/auth/passwords/#django.contrib.auth.password_validation.password_changed\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">password_changed</span><span class=\"p\">(</span><span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">password_validators</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Inform all validators that have implemented a password_changed() method</span>\n<span class=\"sd\">    that the password has been changed.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"n\">password_validators</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">password_validators</span> <span class=\"o\">=</span> <span class=\"n\">get_default_password_validators</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"n\">validator</span> <span class=\"ow\">in</span> <span class=\"n\">password_validators</span><span class=\"p\">:</span>\n        <span class=\"n\">password_changed</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">validator</span><span class=\"p\">,</span> <span class=\"s2\">&quot;password_changed&quot;</span><span class=\"p\">,</span> <span class=\"k\">lambda</span> <span class=\"o\">*</span><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n        <span class=\"n\">password_changed</span><span class=\"p\">(</span><span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"password_validators_help_texts\"><a class=\"viewcode-back\" href=\"../../../../../topics/auth/passwords/#django.contrib.auth.password_validation.password_validators_help_texts\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">password_validators_help_texts</span><span class=\"p\">(</span><span class=\"n\">password_validators</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Return a list of all help texts of all configured validators.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">help_texts</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">if</span> <span class=\"n\">password_validators</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">password_validators</span> <span class=\"o\">=</span> <span class=\"n\">get_default_password_validators</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"n\">validator</span> <span class=\"ow\">in</span> <span class=\"n\">password_validators</span><span class=\"p\">:</span>\n        <span class=\"n\">help_texts</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">validator</span><span class=\"o\">.</span><span class=\"n\">get_help_text</span><span class=\"p\">())</span>\n    <span class=\"k\">return</span> <span class=\"n\">help_texts</span></div>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_password_validators_help_text_html</span><span class=\"p\">(</span><span class=\"n\">password_validators</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Return an HTML string with all help texts of all configured validators</span>\n<span class=\"sd\">    in an &lt;ul&gt;.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">help_texts</span> <span class=\"o\">=</span> <span class=\"n\">password_validators_help_texts</span><span class=\"p\">(</span><span class=\"n\">password_validators</span><span class=\"p\">)</span>\n    <span class=\"n\">help_items</span> <span class=\"o\">=</span> <span class=\"n\">format_html_join</span><span class=\"p\">(</span>\n        <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&lt;li&gt;</span><span class=\"si\">{}</span><span class=\"s2\">&lt;/li&gt;&quot;</span><span class=\"p\">,</span> <span class=\"p\">((</span><span class=\"n\">help_text</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">help_text</span> <span class=\"ow\">in</span> <span class=\"n\">help_texts</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">format_html</span><span class=\"p\">(</span><span class=\"s2\">&quot;&lt;ul&gt;</span><span class=\"si\">{}</span><span class=\"s2\">&lt;/ul&gt;&quot;</span><span class=\"p\">,</span> <span class=\"n\">help_items</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">help_items</span> <span class=\"k\">else</span> <span class=\"s2\">&quot;&quot;</span>\n\n\n<span class=\"n\">password_validators_help_text_html</span> <span class=\"o\">=</span> <span class=\"n\">lazy</span><span class=\"p\">(</span><span class=\"n\">_password_validators_help_text_html</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"MinimumLengthValidator\"><a class=\"viewcode-back\" href=\"../../../../../topics/auth/passwords/#django.contrib.auth.password_validation.MinimumLengthValidator\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">MinimumLengthValidator</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Validate that the password is of a minimum length.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">min_length</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">min_length</span> <span class=\"o\">=</span> <span class=\"n\">min_length</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">validate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">password</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">min_length</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">ValidationError</span><span class=\"p\">(</span>\n                <span class=\"n\">ngettext</span><span class=\"p\">(</span>\n                    <span class=\"s2\">&quot;This password is too short. It must contain at least &quot;</span>\n                    <span class=\"s2\">&quot;</span><span class=\"si\">%(min_length)d</span><span class=\"s2\"> character.&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;This password is too short. It must contain at least &quot;</span>\n                    <span class=\"s2\">&quot;</span><span class=\"si\">%(min_length)d</span><span class=\"s2\"> characters.&quot;</span><span class=\"p\">,</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">min_length</span><span class=\"p\">,</span>\n                <span class=\"p\">),</span>\n                <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"s2\">&quot;password_too_short&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;min_length&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">min_length</span><span class=\"p\">},</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_help_text</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">ngettext</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;Your password must contain at least </span><span class=\"si\">%(min_length)d</span><span class=\"s2\"> character.&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;Your password must contain at least </span><span class=\"si\">%(min_length)d</span><span class=\"s2\"> characters.&quot;</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">min_length</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"p\">{</span><span class=\"s2\">&quot;min_length&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">min_length</span><span class=\"p\">}</span></div>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">exceeds_maximum_length_ratio</span><span class=\"p\">(</span><span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"n\">max_similarity</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Test that value is within a reasonable range of password.</span>\n\n<span class=\"sd\">    The following ratio calculations are based on testing SequenceMatcher like</span>\n<span class=\"sd\">    this:</span>\n\n<span class=\"sd\">    for i in range(0,6):</span>\n<span class=\"sd\">      print(10**i, SequenceMatcher(a=&#39;A&#39;, b=&#39;A&#39;*(10**i)).quick_ratio())</span>\n\n<span class=\"sd\">    which yields:</span>\n\n<span class=\"sd\">    1 1.0</span>\n<span class=\"sd\">    10 0.18181818181818182</span>\n<span class=\"sd\">    100 0.019801980198019802</span>\n<span class=\"sd\">    1000 0.001998001998001998</span>\n<span class=\"sd\">    10000 0.00019998000199980003</span>\n<span class=\"sd\">    100000 1.999980000199998e-05</span>\n\n<span class=\"sd\">    This means a length_ratio of 10 should never yield a similarity higher than</span>\n<span class=\"sd\">    0.2, for 100 this is down to 0.02 and for 1000 it is 0.002. This can be</span>\n<span class=\"sd\">    calculated via 2 / length_ratio. As a result we avoid the potentially</span>\n<span class=\"sd\">    expensive sequence matching.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">pwd_len</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">password</span><span class=\"p\">)</span>\n    <span class=\"n\">length_bound_similarity</span> <span class=\"o\">=</span> <span class=\"n\">max_similarity</span> <span class=\"o\">/</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">pwd_len</span>\n    <span class=\"n\">value_len</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">pwd_len</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">10</span> <span class=\"o\">*</span> <span class=\"n\">value_len</span> <span class=\"ow\">and</span> <span class=\"n\">value_len</span> <span class=\"o\">&lt;</span> <span class=\"n\">length_bound_similarity</span>\n\n\n<div class=\"viewcode-block\" id=\"UserAttributeSimilarityValidator\"><a class=\"viewcode-back\" href=\"../../../../../topics/auth/passwords/#django.contrib.auth.password_validation.UserAttributeSimilarityValidator\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">UserAttributeSimilarityValidator</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Validate that the password is sufficiently different from the user&#39;s</span>\n<span class=\"sd\">    attributes.</span>\n\n<span class=\"sd\">    If no specific attributes are provided, look at a sensible list of</span>\n<span class=\"sd\">    defaults. Attributes that don&#39;t exist are ignored. Comparison is made to</span>\n<span class=\"sd\">    not only the full attribute value, but also its components, so that, for</span>\n<span class=\"sd\">    example, a password is validated against either part of an email address,</span>\n<span class=\"sd\">    as well as the full address.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">DEFAULT_USER_ATTRIBUTES</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">&quot;username&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;first_name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;last_name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;email&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">user_attributes</span><span class=\"o\">=</span><span class=\"n\">DEFAULT_USER_ATTRIBUTES</span><span class=\"p\">,</span> <span class=\"n\">max_similarity</span><span class=\"o\">=</span><span class=\"mf\">0.7</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">user_attributes</span> <span class=\"o\">=</span> <span class=\"n\">user_attributes</span>\n        <span class=\"k\">if</span> <span class=\"n\">max_similarity</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.1</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;max_similarity must be at least 0.1&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_similarity</span> <span class=\"o\">=</span> <span class=\"n\">max_similarity</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">validate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">user</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"n\">password</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">attribute_name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">user_attributes</span><span class=\"p\">:</span>\n            <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">attribute_name</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">value</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n                <span class=\"k\">continue</span>\n            <span class=\"n\">value_lower</span> <span class=\"o\">=</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n            <span class=\"n\">value_parts</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">&quot;\\W+&quot;</span><span class=\"p\">,</span> <span class=\"n\">value_lower</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"n\">value_lower</span><span class=\"p\">]</span>\n            <span class=\"k\">for</span> <span class=\"n\">value_part</span> <span class=\"ow\">in</span> <span class=\"n\">value_parts</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">exceeds_maximum_length_ratio</span><span class=\"p\">(</span>\n                    <span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_similarity</span><span class=\"p\">,</span> <span class=\"n\">value_part</span>\n                <span class=\"p\">):</span>\n                    <span class=\"k\">continue</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span>\n                    <span class=\"n\">SequenceMatcher</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"n\">value_part</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">quick_ratio</span><span class=\"p\">()</span>\n                    <span class=\"o\">&gt;=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_similarity</span>\n                <span class=\"p\">):</span>\n                    <span class=\"k\">try</span><span class=\"p\">:</span>\n                        <span class=\"n\">verbose_name</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span>\n                            <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">get_field</span><span class=\"p\">(</span><span class=\"n\">attribute_name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">verbose_name</span>\n                        <span class=\"p\">)</span>\n                    <span class=\"k\">except</span> <span class=\"n\">FieldDoesNotExist</span><span class=\"p\">:</span>\n                        <span class=\"n\">verbose_name</span> <span class=\"o\">=</span> <span class=\"n\">attribute_name</span>\n                    <span class=\"k\">raise</span> <span class=\"n\">ValidationError</span><span class=\"p\">(</span>\n                        <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s2\">&quot;The password is too similar to the </span><span class=\"si\">%(verbose_name)s</span><span class=\"s2\">.&quot;</span><span class=\"p\">),</span>\n                        <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"s2\">&quot;password_too_similar&quot;</span><span class=\"p\">,</span>\n                        <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;verbose_name&quot;</span><span class=\"p\">:</span> <span class=\"n\">verbose_name</span><span class=\"p\">},</span>\n                    <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_help_text</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">_</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;Your password can\u2019t be too similar to your other personal information.&quot;</span>\n        <span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"CommonPasswordValidator\"><a class=\"viewcode-back\" href=\"../../../../../topics/auth/passwords/#django.contrib.auth.password_validation.CommonPasswordValidator\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">CommonPasswordValidator</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Validate that the password is not a common password.</span>\n\n<span class=\"sd\">    The password is rejected if it occurs in a provided list of passwords,</span>\n<span class=\"sd\">    which may be gzipped. The list Django ships with contains 20000 common</span>\n<span class=\"sd\">    passwords (lowercased and deduplicated), created by Royce Williams:</span>\n<span class=\"sd\">    https://gist.github.com/roycewilliams/226886fd01572964e1431ac8afc999ce</span>\n<span class=\"sd\">    The password list must be lowercased to match the comparison in validate().</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"nd\">@cached_property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">DEFAULT_PASSWORD_LIST_PATH</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">parent</span> <span class=\"o\">/</span> <span class=\"s2\">&quot;common-passwords.txt.gz&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">password_list_path</span><span class=\"o\">=</span><span class=\"n\">DEFAULT_PASSWORD_LIST_PATH</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">password_list_path</span> <span class=\"ow\">is</span> <span class=\"n\">CommonPasswordValidator</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_PASSWORD_LIST_PATH</span><span class=\"p\">:</span>\n            <span class=\"n\">password_list_path</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_PASSWORD_LIST_PATH</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">with</span> <span class=\"n\">gzip</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">password_list_path</span><span class=\"p\">,</span> <span class=\"s2\">&quot;rt&quot;</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">passwords</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">f</span><span class=\"p\">}</span>\n        <span class=\"k\">except</span> <span class=\"ne\">OSError</span><span class=\"p\">:</span>\n            <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">password_list_path</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">passwords</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">f</span><span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">validate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">password</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">passwords</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">ValidationError</span><span class=\"p\">(</span>\n                <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s2\">&quot;This password is too common.&quot;</span><span class=\"p\">),</span>\n                <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"s2\">&quot;password_too_common&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_help_text</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s2\">&quot;Your password can\u2019t be a commonly used password.&quot;</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"NumericPasswordValidator\"><a class=\"viewcode-back\" href=\"../../../../../topics/auth/passwords/#django.contrib.auth.password_validation.NumericPasswordValidator\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">NumericPasswordValidator</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Validate that the password is not entirely numeric.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">validate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">password</span><span class=\"o\">.</span><span class=\"n\">isdigit</span><span class=\"p\">():</span>\n            <span class=\"k\">raise</span> <span class=\"n\">ValidationError</span><span class=\"p\">(</span>\n                <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s2\">&quot;This password is entirely numeric.&quot;</span><span class=\"p\">),</span>\n                <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"s2\">&quot;password_entirely_numeric&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_help_text</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s2\">&quot;Your password can\u2019t be entirely numeric.&quot;</span><span class=\"p\">)</span></div>\n</pre></div>", "current_page_name": "_modules/django/contrib/auth/password_validation", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}