{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "django"}], "title": "django.template.exceptions", "body": "<h1>Source code for django.template.exceptions</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">This module contains generic exceptions used by template backends. Although,</span>\n<span class=\"sd\">due to historical reasons, the Django template language also internally uses</span>\n<span class=\"sd\">these exceptions, other exceptions specific to the DTL should not be added</span>\n<span class=\"sd\">here.</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n\n\n<div class=\"viewcode-block\" id=\"TemplateDoesNotExist\"><a class=\"viewcode-back\" href=\"../../../../topics/templates/#django.template.TemplateDoesNotExist\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">TemplateDoesNotExist</span><span class=\"p\">(</span><span class=\"ne\">Exception</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    The exception used when a template does not exist. Optional arguments:</span>\n\n<span class=\"sd\">    backend</span>\n<span class=\"sd\">        The template backend class used when raising this exception.</span>\n\n<span class=\"sd\">    tried</span>\n<span class=\"sd\">        A list of sources that were tried when finding the template. This</span>\n<span class=\"sd\">        is formatted as a list of tuples containing (origin, status), where</span>\n<span class=\"sd\">        origin is an Origin object or duck type and status is a string with the</span>\n<span class=\"sd\">        reason the template wasn&#39;t found.</span>\n\n<span class=\"sd\">    chain</span>\n<span class=\"sd\">        A list of intermediate TemplateDoesNotExist exceptions. This is used to</span>\n<span class=\"sd\">        encapsulate multiple exceptions when loading templates from multiple</span>\n<span class=\"sd\">        engines.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"n\">tried</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">backend</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">chain</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">backend</span> <span class=\"o\">=</span> <span class=\"n\">backend</span>\n        <span class=\"k\">if</span> <span class=\"n\">tried</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">tried</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tried</span> <span class=\"o\">=</span> <span class=\"n\">tried</span>\n        <span class=\"k\">if</span> <span class=\"n\">chain</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">chain</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">chain</span> <span class=\"o\">=</span> <span class=\"n\">chain</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"TemplateSyntaxError\"><a class=\"viewcode-back\" href=\"../../../../topics/templates/#django.template.TemplateSyntaxError\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">TemplateSyntaxError</span><span class=\"p\">(</span><span class=\"ne\">Exception</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    The exception used for syntax errors during parsing or rendering.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">pass</span></div>\n</pre></div>", "current_page_name": "_modules/django/template/exceptions", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}