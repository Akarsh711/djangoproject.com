{"parents": [{"link": "../../../../../", "title": "Module code"}, {"link": "../../../../", "title": "django"}, {"link": "../", "title": "django.db.models.fields"}], "title": "django.db.models.fields.json", "body": "<h1>Source code for django.db.models.fields.json</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">warnings</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.core</span> <span class=\"kn\">import</span> <span class=\"n\">checks</span><span class=\"p\">,</span> <span class=\"n\">exceptions</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">NotSupportedError</span><span class=\"p\">,</span> <span class=\"n\">connections</span><span class=\"p\">,</span> <span class=\"n\">router</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">expressions</span><span class=\"p\">,</span> <span class=\"n\">lookups</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.constants</span> <span class=\"kn\">import</span> <span class=\"n\">LOOKUP_SEP</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.fields</span> <span class=\"kn\">import</span> <span class=\"n\">TextField</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.lookups</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">FieldGetDbPrepValueMixin</span><span class=\"p\">,</span>\n    <span class=\"n\">PostgresOperatorLookup</span><span class=\"p\">,</span>\n    <span class=\"n\">Transform</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.deprecation</span> <span class=\"kn\">import</span> <span class=\"n\">RemovedInDjango51Warning</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.translation</span> <span class=\"kn\">import</span> <span class=\"n\">gettext_lazy</span> <span class=\"k\">as</span> <span class=\"n\">_</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">Field</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.mixins</span> <span class=\"kn\">import</span> <span class=\"n\">CheckFieldDefaultMixin</span>\n\n<span class=\"n\">__all__</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;JSONField&quot;</span><span class=\"p\">]</span>\n\n\n<div class=\"viewcode-block\" id=\"JSONField\"><a class=\"viewcode-back\" href=\"../../../../../../ref/models/fields/#django.db.models.JSONField\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">JSONField</span><span class=\"p\">(</span><span class=\"n\">CheckFieldDefaultMixin</span><span class=\"p\">,</span> <span class=\"n\">Field</span><span class=\"p\">):</span>\n    <span class=\"n\">empty_strings_allowed</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n    <span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s2\">&quot;A JSON object&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">default_error_messages</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;invalid&quot;</span><span class=\"p\">:</span> <span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s2\">&quot;Value must be valid JSON.&quot;</span><span class=\"p\">),</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">_default_hint</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">&quot;dict&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">verbose_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">encoder</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">decoder</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">encoder</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">callable</span><span class=\"p\">(</span><span class=\"n\">encoder</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;The encoder parameter must be a callable object.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">decoder</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">callable</span><span class=\"p\">(</span><span class=\"n\">decoder</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;The decoder parameter must be a callable object.&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encoder</span> <span class=\"o\">=</span> <span class=\"n\">encoder</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">decoder</span> <span class=\"o\">=</span> <span class=\"n\">decoder</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">verbose_name</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">check</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">errors</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">check</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"n\">databases</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;databases&quot;</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"p\">[]</span>\n        <span class=\"n\">errors</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_check_supported</span><span class=\"p\">(</span><span class=\"n\">databases</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">errors</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_check_supported</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">databases</span><span class=\"p\">):</span>\n        <span class=\"n\">errors</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">db</span> <span class=\"ow\">in</span> <span class=\"n\">databases</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">allow_migrate_model</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">):</span>\n                <span class=\"k\">continue</span>\n            <span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"n\">connections</span><span class=\"p\">[</span><span class=\"n\">db</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">required_db_vendor</span>\n                <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">required_db_vendor</span> <span class=\"o\">!=</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">vendor</span>\n            <span class=\"p\">):</span>\n                <span class=\"k\">continue</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"p\">(</span>\n                <span class=\"s2\">&quot;supports_json_field&quot;</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">required_db_features</span>\n                <span class=\"ow\">or</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">supports_json_field</span>\n            <span class=\"p\">):</span>\n                <span class=\"n\">errors</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span>\n                    <span class=\"n\">checks</span><span class=\"o\">.</span><span class=\"n\">Error</span><span class=\"p\">(</span>\n                        <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\"> does not support JSONFields.&quot;</span> <span class=\"o\">%</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">display_name</span><span class=\"p\">,</span>\n                        <span class=\"n\">obj</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">,</span>\n                        <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">&quot;fields.E180&quot;</span><span class=\"p\">,</span>\n                    <span class=\"p\">)</span>\n                <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">errors</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">deconstruct</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">deconstruct</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encoder</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;encoder&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encoder</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">decoder</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;decoder&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">decoder</span>\n        <span class=\"k\">return</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">from_db_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">expression</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">value</span>\n        <span class=\"c1\"># Some backends (SQLite at least) extract non-string values in their</span>\n        <span class=\"c1\"># SQL datatypes.</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">expression</span><span class=\"p\">,</span> <span class=\"n\">KeyTransform</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">value</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">decoder</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">JSONDecodeError</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">value</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_internal_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;JSONField&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_db_prep_value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"n\">prepared</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">prepared</span><span class=\"p\">:</span>\n            <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_prep_value</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"c1\"># RemovedInDjango51Warning: When the deprecation ends, replace with:</span>\n        <span class=\"c1\"># if (</span>\n        <span class=\"c1\">#     isinstance(value, expressions.Value)</span>\n        <span class=\"c1\">#     and isinstance(value.output_field, JSONField)</span>\n        <span class=\"c1\"># ):</span>\n        <span class=\"c1\">#     value = value.value</span>\n        <span class=\"c1\"># elif hasattr(value, &quot;as_sql&quot;): ...</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">expressions</span><span class=\"o\">.</span><span class=\"n\">Value</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span>\n                <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">output_field</span><span class=\"p\">,</span> <span class=\"n\">JSONField</span>\n            <span class=\"p\">):</span>\n                <span class=\"k\">try</span><span class=\"p\">:</span>\n                    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">decoder</span><span class=\"p\">)</span>\n                <span class=\"k\">except</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">JSONDecodeError</span><span class=\"p\">:</span>\n                    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">value</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n                        <span class=\"s2\">&quot;Providing an encoded JSON string via Value() is deprecated. &quot;</span>\n                        <span class=\"sa\">f</span><span class=\"s2\">&quot;Use Value(</span><span class=\"si\">{</span><span class=\"n\">value</span><span class=\"si\">!r}</span><span class=\"s2\">, output_field=JSONField()) instead.&quot;</span><span class=\"p\">,</span>\n                        <span class=\"n\">category</span><span class=\"o\">=</span><span class=\"n\">RemovedInDjango51Warning</span><span class=\"p\">,</span>\n                    <span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">output_field</span><span class=\"p\">,</span> <span class=\"n\">JSONField</span><span class=\"p\">):</span>\n                <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">value</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">value</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"s2\">&quot;as_sql&quot;</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">value</span>\n        <span class=\"k\">return</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">ops</span><span class=\"o\">.</span><span class=\"n\">adapt_json_value</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encoder</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_db_prep_save</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">value</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_db_prep_value</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_transform</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"n\">transform</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_transform</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">transform</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">transform</span>\n        <span class=\"k\">return</span> <span class=\"n\">KeyTransformFactory</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">validate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">model_instance</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">model_instance</span><span class=\"p\">)</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encoder</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">TypeError</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">exceptions</span><span class=\"o\">.</span><span class=\"n\">ValidationError</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">error_messages</span><span class=\"p\">[</span><span class=\"s2\">&quot;invalid&quot;</span><span class=\"p\">],</span>\n                <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"s2\">&quot;invalid&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;value&quot;</span><span class=\"p\">:</span> <span class=\"n\">value</span><span class=\"p\">},</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">value_to_string</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">value_from_object</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">formfield</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">formfield</span><span class=\"p\">(</span>\n            <span class=\"o\">**</span><span class=\"p\">{</span>\n                <span class=\"s2\">&quot;form_class&quot;</span><span class=\"p\">:</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">JSONField</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;encoder&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">encoder</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;decoder&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">decoder</span><span class=\"p\">,</span>\n                <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span></div>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">compile_json_path</span><span class=\"p\">(</span><span class=\"n\">key_transforms</span><span class=\"p\">,</span> <span class=\"n\">include_root</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;$&quot;</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"n\">include_root</span> <span class=\"k\">else</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">key_transform</span> <span class=\"ow\">in</span> <span class=\"n\">key_transforms</span><span class=\"p\">:</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">num</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">key_transform</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>  <span class=\"c1\"># non-integer</span>\n            <span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;.&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">key_transform</span><span class=\"p\">))</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;[</span><span class=\"si\">%s</span><span class=\"s2\">]&quot;</span> <span class=\"o\">%</span> <span class=\"n\">num</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"s2\">&quot;&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">DataContains</span><span class=\"p\">(</span><span class=\"n\">FieldGetDbPrepValueMixin</span><span class=\"p\">,</span> <span class=\"n\">PostgresOperatorLookup</span><span class=\"p\">):</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;contains&quot;</span>\n    <span class=\"n\">postgres_operator</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;@&gt;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_sql</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">supports_json_field_contains</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">NotSupportedError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;contains lookup is not supported on this database backend.&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">lhs_params</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">process_lhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"n\">rhs_params</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">process_rhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">lhs_params</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">rhs_params</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;JSON_CONTAINS(</span><span class=\"si\">%s</span><span class=\"s2\">, </span><span class=\"si\">%s</span><span class=\"s2\">)&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">rhs</span><span class=\"p\">),</span> <span class=\"n\">params</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ContainedBy</span><span class=\"p\">(</span><span class=\"n\">FieldGetDbPrepValueMixin</span><span class=\"p\">,</span> <span class=\"n\">PostgresOperatorLookup</span><span class=\"p\">):</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;contained_by&quot;</span>\n    <span class=\"n\">postgres_operator</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&lt;@&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_sql</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">supports_json_field_contains</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">NotSupportedError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;contained_by lookup is not supported on this database backend.&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">lhs_params</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">process_lhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"n\">rhs_params</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">process_rhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">rhs_params</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">lhs_params</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;JSON_CONTAINS(</span><span class=\"si\">%s</span><span class=\"s2\">, </span><span class=\"si\">%s</span><span class=\"s2\">)&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"n\">lhs</span><span class=\"p\">),</span> <span class=\"n\">params</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">HasKeyLookup</span><span class=\"p\">(</span><span class=\"n\">PostgresOperatorLookup</span><span class=\"p\">):</span>\n    <span class=\"n\">logical_operator</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">compile_json_path_final_key</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key_transform</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Compile the final key without interpreting ints as array elements.</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;.</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">key_transform</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_sql</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Process JSON path from the left-hand side.</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">KeyTransform</span><span class=\"p\">):</span>\n            <span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">lhs_params</span><span class=\"p\">,</span> <span class=\"n\">lhs_key_transforms</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"o\">.</span><span class=\"n\">preprocess_lhs</span><span class=\"p\">(</span>\n                <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">lhs_json_path</span> <span class=\"o\">=</span> <span class=\"n\">compile_json_path</span><span class=\"p\">(</span><span class=\"n\">lhs_key_transforms</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">lhs_params</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">process_lhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n            <span class=\"n\">lhs_json_path</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;$&quot;</span>\n        <span class=\"n\">sql</span> <span class=\"o\">=</span> <span class=\"n\">template</span> <span class=\"o\">%</span> <span class=\"n\">lhs</span>\n        <span class=\"c1\"># Process JSON path from the right-hand side.</span>\n        <span class=\"n\">rhs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rhs</span>\n        <span class=\"n\">rhs_params</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">)):</span>\n            <span class=\"n\">rhs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">rhs</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">rhs</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">KeyTransform</span><span class=\"p\">):</span>\n                <span class=\"o\">*</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">rhs_key_transforms</span> <span class=\"o\">=</span> <span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">preprocess_lhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">rhs_key_transforms</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">key</span><span class=\"p\">]</span>\n            <span class=\"o\">*</span><span class=\"n\">rhs_key_transforms</span><span class=\"p\">,</span> <span class=\"n\">final_key</span> <span class=\"o\">=</span> <span class=\"n\">rhs_key_transforms</span>\n            <span class=\"n\">rhs_json_path</span> <span class=\"o\">=</span> <span class=\"n\">compile_json_path</span><span class=\"p\">(</span><span class=\"n\">rhs_key_transforms</span><span class=\"p\">,</span> <span class=\"n\">include_root</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n            <span class=\"n\">rhs_json_path</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">compile_json_path_final_key</span><span class=\"p\">(</span><span class=\"n\">final_key</span><span class=\"p\">)</span>\n            <span class=\"n\">rhs_params</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">lhs_json_path</span> <span class=\"o\">+</span> <span class=\"n\">rhs_json_path</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Add condition for each key.</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logical_operator</span><span class=\"p\">:</span>\n            <span class=\"n\">sql</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;(</span><span class=\"si\">%s</span><span class=\"s2\">)&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logical_operator</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"n\">sql</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">rhs_params</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">sql</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">lhs_params</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">rhs_params</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_mysql</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">as_sql</span><span class=\"p\">(</span>\n            <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"s2\">&quot;JSON_CONTAINS_PATH(</span><span class=\"si\">%s</span><span class=\"s2\">, &#39;one&#39;, </span><span class=\"si\">%%</span><span class=\"s2\">s)&quot;</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_oracle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"n\">sql</span><span class=\"p\">,</span> <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">as_sql</span><span class=\"p\">(</span>\n            <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"s2\">&quot;JSON_EXISTS(</span><span class=\"si\">%s</span><span class=\"s2\">, &#39;</span><span class=\"si\">%%</span><span class=\"s2\">s&#39;)&quot;</span>\n        <span class=\"p\">)</span>\n        <span class=\"c1\"># Add paths directly into SQL because path expressions cannot be passed</span>\n        <span class=\"c1\"># as bind variables on Oracle.</span>\n        <span class=\"k\">return</span> <span class=\"n\">sql</span> <span class=\"o\">%</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">),</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_postgresql</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"n\">KeyTransform</span><span class=\"p\">):</span>\n            <span class=\"o\">*</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">rhs_key_transforms</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rhs</span><span class=\"o\">.</span><span class=\"n\">preprocess_lhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">rhs_key_transforms</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span> <span class=\"o\">=</span> <span class=\"n\">KeyTransform</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rhs</span> <span class=\"o\">=</span> <span class=\"n\">rhs_key_transforms</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_postgresql</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_sqlite</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">as_sql</span><span class=\"p\">(</span>\n            <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"s2\">&quot;JSON_TYPE(</span><span class=\"si\">%s</span><span class=\"s2\">, </span><span class=\"si\">%%</span><span class=\"s2\">s) IS NOT NULL&quot;</span>\n        <span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">HasKey</span><span class=\"p\">(</span><span class=\"n\">HasKeyLookup</span><span class=\"p\">):</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;has_key&quot;</span>\n    <span class=\"n\">postgres_operator</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;?&quot;</span>\n    <span class=\"n\">prepare_rhs</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">HasKeys</span><span class=\"p\">(</span><span class=\"n\">HasKeyLookup</span><span class=\"p\">):</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;has_keys&quot;</span>\n    <span class=\"n\">postgres_operator</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;?&amp;&quot;</span>\n    <span class=\"n\">logical_operator</span> <span class=\"o\">=</span> <span class=\"s2\">&quot; AND &quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_prep_lookup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rhs</span><span class=\"p\">]</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">HasAnyKeys</span><span class=\"p\">(</span><span class=\"n\">HasKeys</span><span class=\"p\">):</span>\n    <span class=\"n\">lookup_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;has_any_keys&quot;</span>\n    <span class=\"n\">postgres_operator</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;?|&quot;</span>\n    <span class=\"n\">logical_operator</span> <span class=\"o\">=</span> <span class=\"s2\">&quot; OR &quot;</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">HasKeyOrArrayIndex</span><span class=\"p\">(</span><span class=\"n\">HasKey</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">compile_json_path_final_key</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key_transform</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">compile_json_path</span><span class=\"p\">([</span><span class=\"n\">key_transform</span><span class=\"p\">],</span> <span class=\"n\">include_root</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">CaseInsensitiveMixin</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Mixin to allow case-insensitive comparison of JSON values on MySQL.</span>\n<span class=\"sd\">    MySQL handles strings used in JSON context using the utf8mb4_bin collation.</span>\n<span class=\"sd\">    Because utf8mb4_bin is a binary collation, comparison of JSON values is</span>\n<span class=\"sd\">    case-sensitive.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">process_lhs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">lhs_params</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">process_lhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">vendor</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;mysql&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;LOWER(</span><span class=\"si\">%s</span><span class=\"s2\">)&quot;</span> <span class=\"o\">%</span> <span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">lhs_params</span>\n        <span class=\"k\">return</span> <span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">lhs_params</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">process_rhs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"n\">rhs_params</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">process_rhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">vendor</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;mysql&quot;</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;LOWER(</span><span class=\"si\">%s</span><span class=\"s2\">)&quot;</span> <span class=\"o\">%</span> <span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"n\">rhs_params</span>\n        <span class=\"k\">return</span> <span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"n\">rhs_params</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">JSONExact</span><span class=\"p\">(</span><span class=\"n\">lookups</span><span class=\"o\">.</span><span class=\"n\">Exact</span><span class=\"p\">):</span>\n    <span class=\"n\">can_use_none_as_rhs</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">process_rhs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"n\">rhs_params</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">process_rhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Treat None lookup values as null.</span>\n        <span class=\"k\">if</span> <span class=\"n\">rhs</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"ow\">and</span> <span class=\"n\">rhs_params</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]:</span>\n            <span class=\"n\">rhs_params</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;null&quot;</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">vendor</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;mysql&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">func</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;JSON_EXTRACT(</span><span class=\"si\">%s</span><span class=\"s2\">, &#39;$&#39;)&quot;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">rhs_params</span><span class=\"p\">)</span>\n            <span class=\"n\">rhs</span> <span class=\"o\">%=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"n\">rhs_params</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">JSONIContains</span><span class=\"p\">(</span><span class=\"n\">CaseInsensitiveMixin</span><span class=\"p\">,</span> <span class=\"n\">lookups</span><span class=\"o\">.</span><span class=\"n\">IContains</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"n\">JSONField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">DataContains</span><span class=\"p\">)</span>\n<span class=\"n\">JSONField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">ContainedBy</span><span class=\"p\">)</span>\n<span class=\"n\">JSONField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">HasKey</span><span class=\"p\">)</span>\n<span class=\"n\">JSONField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">HasKeys</span><span class=\"p\">)</span>\n<span class=\"n\">JSONField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">HasAnyKeys</span><span class=\"p\">)</span>\n<span class=\"n\">JSONField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">JSONExact</span><span class=\"p\">)</span>\n<span class=\"n\">JSONField</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">JSONIContains</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KeyTransform</span><span class=\"p\">(</span><span class=\"n\">Transform</span><span class=\"p\">):</span>\n    <span class=\"n\">postgres_operator</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;-&gt;&quot;</span>\n    <span class=\"n\">postgres_nested_operator</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;#&gt;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key_name</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">key_name</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">key_name</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">preprocess_lhs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"n\">key_transforms</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">key_name</span><span class=\"p\">]</span>\n        <span class=\"n\">previous</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span>\n        <span class=\"k\">while</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">previous</span><span class=\"p\">,</span> <span class=\"n\">KeyTransform</span><span class=\"p\">):</span>\n            <span class=\"n\">key_transforms</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">previous</span><span class=\"o\">.</span><span class=\"n\">key_name</span><span class=\"p\">)</span>\n            <span class=\"n\">previous</span> <span class=\"o\">=</span> <span class=\"n\">previous</span><span class=\"o\">.</span><span class=\"n\">lhs</span>\n        <span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"n\">compiler</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"n\">previous</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">vendor</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;oracle&quot;</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Escape string-formatting.</span>\n            <span class=\"n\">key_transforms</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;%&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;</span><span class=\"si\">%%</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">key_transforms</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"n\">key_transforms</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_mysql</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"n\">key_transforms</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">preprocess_lhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"n\">json_path</span> <span class=\"o\">=</span> <span class=\"n\">compile_json_path</span><span class=\"p\">(</span><span class=\"n\">key_transforms</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;JSON_EXTRACT(</span><span class=\"si\">%s</span><span class=\"s2\">, </span><span class=\"si\">%%</span><span class=\"s2\">s)&quot;</span> <span class=\"o\">%</span> <span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">json_path</span><span class=\"p\">,)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_oracle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"n\">key_transforms</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">preprocess_lhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"n\">json_path</span> <span class=\"o\">=</span> <span class=\"n\">compile_json_path</span><span class=\"p\">(</span><span class=\"n\">key_transforms</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span>\n            <span class=\"s2\">&quot;COALESCE(JSON_QUERY(</span><span class=\"si\">%s</span><span class=\"s2\">, &#39;</span><span class=\"si\">%s</span><span class=\"s2\">&#39;), JSON_VALUE(</span><span class=\"si\">%s</span><span class=\"s2\">, &#39;</span><span class=\"si\">%s</span><span class=\"s2\">&#39;))&quot;</span>\n            <span class=\"o\">%</span> <span class=\"p\">((</span><span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">json_path</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n        <span class=\"p\">),</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mi\">2</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_postgresql</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"n\">key_transforms</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">preprocess_lhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">key_transforms</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"n\">sql</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;(</span><span class=\"si\">%s</span><span class=\"s2\"> </span><span class=\"si\">%s</span><span class=\"s2\"> </span><span class=\"si\">%%</span><span class=\"s2\">s)&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">postgres_nested_operator</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">sql</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">key_transforms</span><span class=\"p\">,)</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">lookup</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">key_name</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n            <span class=\"n\">lookup</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">key_name</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;(</span><span class=\"si\">%s</span><span class=\"s2\"> </span><span class=\"si\">%s</span><span class=\"s2\"> </span><span class=\"si\">%%</span><span class=\"s2\">s)&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">postgres_operator</span><span class=\"p\">),</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">lookup</span><span class=\"p\">,)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_sqlite</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"n\">key_transforms</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">preprocess_lhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"n\">json_path</span> <span class=\"o\">=</span> <span class=\"n\">compile_json_path</span><span class=\"p\">(</span><span class=\"n\">key_transforms</span><span class=\"p\">)</span>\n        <span class=\"n\">datatype_values</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;,&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">datatype</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">datatype</span> <span class=\"ow\">in</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">ops</span><span class=\"o\">.</span><span class=\"n\">jsonfield_datatype_values</span><span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span>\n            <span class=\"s2\">&quot;(CASE WHEN JSON_TYPE(</span><span class=\"si\">%s</span><span class=\"s2\">, </span><span class=\"si\">%%</span><span class=\"s2\">s) IN (</span><span class=\"si\">%s</span><span class=\"s2\">) &quot;</span>\n            <span class=\"s2\">&quot;THEN JSON_TYPE(</span><span class=\"si\">%s</span><span class=\"s2\">, </span><span class=\"si\">%%</span><span class=\"s2\">s) ELSE JSON_EXTRACT(</span><span class=\"si\">%s</span><span class=\"s2\">, </span><span class=\"si\">%%</span><span class=\"s2\">s) END)&quot;</span>\n        <span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">datatype_values</span><span class=\"p\">,</span> <span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">lhs</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">json_path</span><span class=\"p\">,))</span> <span class=\"o\">*</span> <span class=\"mi\">3</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KeyTextTransform</span><span class=\"p\">(</span><span class=\"n\">KeyTransform</span><span class=\"p\">):</span>\n    <span class=\"n\">postgres_operator</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;-&gt;&gt;&quot;</span>\n    <span class=\"n\">postgres_nested_operator</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;#&gt;&gt;&quot;</span>\n    <span class=\"n\">output_field</span> <span class=\"o\">=</span> <span class=\"n\">TextField</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_mysql</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">mysql_is_mariadb</span><span class=\"p\">:</span>\n            <span class=\"c1\"># MariaDB doesn&#39;t support -&gt; and -&gt;&gt; operators (see MDEV-13594).</span>\n            <span class=\"n\">sql</span><span class=\"p\">,</span> <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_mysql</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;JSON_UNQUOTE(</span><span class=\"si\">%s</span><span class=\"s2\">)&quot;</span> <span class=\"o\">%</span> <span class=\"n\">sql</span><span class=\"p\">,</span> <span class=\"n\">params</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"n\">key_transforms</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">preprocess_lhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n            <span class=\"n\">json_path</span> <span class=\"o\">=</span> <span class=\"n\">compile_json_path</span><span class=\"p\">(</span><span class=\"n\">key_transforms</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;(</span><span class=\"si\">%s</span><span class=\"s2\"> -&gt;&gt; </span><span class=\"si\">%%</span><span class=\"s2\">s)&quot;</span> <span class=\"o\">%</span> <span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">json_path</span><span class=\"p\">,)</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">from_lookup</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">lookup</span><span class=\"p\">):</span>\n        <span class=\"n\">transform</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">keys</span> <span class=\"o\">=</span> <span class=\"n\">lookup</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">LOOKUP_SEP</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">keys</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Lookup must contain key or index transforms.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">key</span> <span class=\"ow\">in</span> <span class=\"n\">keys</span><span class=\"p\">:</span>\n            <span class=\"n\">transform</span> <span class=\"o\">=</span> <span class=\"bp\">cls</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">transform</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">transform</span>\n\n\n<span class=\"n\">KT</span> <span class=\"o\">=</span> <span class=\"n\">KeyTextTransform</span><span class=\"o\">.</span><span class=\"n\">from_lookup</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KeyTransformTextLookupMixin</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Mixin for combining with a lookup expecting a text lhs from a JSONField</span>\n<span class=\"sd\">    key lookup. On PostgreSQL, make use of the -&gt;&gt; operator instead of casting</span>\n<span class=\"sd\">    key values to text and performing the lookup on the resulting</span>\n<span class=\"sd\">    representation.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key_transform</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">key_transform</span><span class=\"p\">,</span> <span class=\"n\">KeyTransform</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Transform should be an instance of KeyTransform in order to &quot;</span>\n                <span class=\"s2\">&quot;use this lookup.&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"n\">key_text_transform</span> <span class=\"o\">=</span> <span class=\"n\">KeyTextTransform</span><span class=\"p\">(</span>\n            <span class=\"n\">key_transform</span><span class=\"o\">.</span><span class=\"n\">key_name</span><span class=\"p\">,</span>\n            <span class=\"o\">*</span><span class=\"n\">key_transform</span><span class=\"o\">.</span><span class=\"n\">source_expressions</span><span class=\"p\">,</span>\n            <span class=\"o\">**</span><span class=\"n\">key_transform</span><span class=\"o\">.</span><span class=\"n\">extra</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">key_text_transform</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KeyTransformIsNull</span><span class=\"p\">(</span><span class=\"n\">lookups</span><span class=\"o\">.</span><span class=\"n\">IsNull</span><span class=\"p\">):</span>\n    <span class=\"c1\"># key__isnull=False is the same as has_key=&#39;key&#39;</span>\n    <span class=\"k\">def</span> <span class=\"nf\">as_oracle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"n\">sql</span><span class=\"p\">,</span> <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"n\">HasKeyOrArrayIndex</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"o\">.</span><span class=\"n\">key_name</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">as_oracle</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rhs</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">sql</span><span class=\"p\">,</span> <span class=\"n\">params</span>\n        <span class=\"c1\"># Column doesn&#39;t have a key or IS NULL.</span>\n        <span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"n\">lhs_params</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"o\">.</span><span class=\"n\">preprocess_lhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;(NOT </span><span class=\"si\">%s</span><span class=\"s2\"> OR </span><span class=\"si\">%s</span><span class=\"s2\"> IS NULL)&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">sql</span><span class=\"p\">,</span> <span class=\"n\">lhs</span><span class=\"p\">),</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">lhs_params</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_sqlite</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;JSON_TYPE(</span><span class=\"si\">%s</span><span class=\"s2\">, </span><span class=\"si\">%%</span><span class=\"s2\">s) IS NULL&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rhs</span><span class=\"p\">:</span>\n            <span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;JSON_TYPE(</span><span class=\"si\">%s</span><span class=\"s2\">, </span><span class=\"si\">%%</span><span class=\"s2\">s) IS NOT NULL&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">HasKeyOrArrayIndex</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"o\">.</span><span class=\"n\">key_name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">as_sql</span><span class=\"p\">(</span>\n            <span class=\"n\">compiler</span><span class=\"p\">,</span>\n            <span class=\"n\">connection</span><span class=\"p\">,</span>\n            <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"n\">template</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KeyTransformIn</span><span class=\"p\">(</span><span class=\"n\">lookups</span><span class=\"o\">.</span><span class=\"n\">In</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">resolve_expression_parameter</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"n\">sql</span><span class=\"p\">,</span> <span class=\"n\">param</span><span class=\"p\">):</span>\n        <span class=\"n\">sql</span><span class=\"p\">,</span> <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">resolve_expression_parameter</span><span class=\"p\">(</span>\n            <span class=\"n\">compiler</span><span class=\"p\">,</span>\n            <span class=\"n\">connection</span><span class=\"p\">,</span>\n            <span class=\"n\">sql</span><span class=\"p\">,</span>\n            <span class=\"n\">param</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"ow\">not</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">param</span><span class=\"p\">,</span> <span class=\"s2\">&quot;as_sql&quot;</span><span class=\"p\">)</span>\n            <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">has_native_json_field</span>\n        <span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">vendor</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;oracle&quot;</span><span class=\"p\">:</span>\n                <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">param</span><span class=\"p\">)</span>\n                <span class=\"n\">sql</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">(JSON_OBJECT(&#39;value&#39; VALUE </span><span class=\"si\">%%</span><span class=\"s2\">s FORMAT JSON), &#39;$.value&#39;)&quot;</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">)):</span>\n                    <span class=\"n\">sql</span> <span class=\"o\">%=</span> <span class=\"s2\">&quot;JSON_QUERY&quot;</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">sql</span> <span class=\"o\">%=</span> <span class=\"s2\">&quot;JSON_VALUE&quot;</span>\n            <span class=\"k\">elif</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">vendor</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;mysql&quot;</span> <span class=\"ow\">or</span> <span class=\"p\">(</span>\n                <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">vendor</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;sqlite&quot;</span>\n                <span class=\"ow\">and</span> <span class=\"n\">params</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">ops</span><span class=\"o\">.</span><span class=\"n\">jsonfield_datatype_values</span>\n            <span class=\"p\">):</span>\n                <span class=\"n\">sql</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;JSON_EXTRACT(</span><span class=\"si\">%s</span><span class=\"s2\">, &#39;$&#39;)&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">vendor</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;mysql&quot;</span> <span class=\"ow\">and</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">mysql_is_mariadb</span><span class=\"p\">:</span>\n            <span class=\"n\">sql</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;JSON_UNQUOTE(</span><span class=\"si\">%s</span><span class=\"s2\">)&quot;</span> <span class=\"o\">%</span> <span class=\"n\">sql</span>\n        <span class=\"k\">return</span> <span class=\"n\">sql</span><span class=\"p\">,</span> <span class=\"n\">params</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KeyTransformExact</span><span class=\"p\">(</span><span class=\"n\">JSONExact</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">process_rhs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"n\">KeyTransform</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">lookups</span><span class=\"o\">.</span><span class=\"n\">Exact</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">process_rhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"n\">rhs_params</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">process_rhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">vendor</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;oracle&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">func</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"n\">sql</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">(JSON_OBJECT(&#39;value&#39; VALUE </span><span class=\"si\">%%</span><span class=\"s2\">s FORMAT JSON), &#39;$.value&#39;)&quot;</span>\n            <span class=\"k\">for</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">rhs_params</span><span class=\"p\">:</span>\n                <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">)):</span>\n                    <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">sql</span> <span class=\"o\">%</span> <span class=\"s2\">&quot;JSON_QUERY&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">sql</span> <span class=\"o\">%</span> <span class=\"s2\">&quot;JSON_VALUE&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">rhs</span> <span class=\"o\">%=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">vendor</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;sqlite&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">func</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"k\">for</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">rhs_params</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">ops</span><span class=\"o\">.</span><span class=\"n\">jsonfield_datatype_values</span><span class=\"p\">:</span>\n                    <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s2\">&quot;JSON_EXTRACT(</span><span class=\"si\">%s</span><span class=\"s2\">, &#39;$&#39;)&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">rhs</span> <span class=\"o\">%=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"n\">rhs_params</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_oracle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"n\">rhs_params</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">process_rhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">rhs_params</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"s2\">&quot;null&quot;</span><span class=\"p\">]:</span>\n            <span class=\"c1\"># Field has key and it&#39;s NULL.</span>\n            <span class=\"n\">has_key_expr</span> <span class=\"o\">=</span> <span class=\"n\">HasKeyOrArrayIndex</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"o\">.</span><span class=\"n\">key_name</span><span class=\"p\">)</span>\n            <span class=\"n\">has_key_sql</span><span class=\"p\">,</span> <span class=\"n\">has_key_params</span> <span class=\"o\">=</span> <span class=\"n\">has_key_expr</span><span class=\"o\">.</span><span class=\"n\">as_oracle</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n            <span class=\"n\">is_null_expr</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"o\">.</span><span class=\"n\">get_lookup</span><span class=\"p\">(</span><span class=\"s2\">&quot;isnull&quot;</span><span class=\"p\">)(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lhs</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"n\">is_null_sql</span><span class=\"p\">,</span> <span class=\"n\">is_null_params</span> <span class=\"o\">=</span> <span class=\"n\">is_null_expr</span><span class=\"o\">.</span><span class=\"n\">as_sql</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"p\">(</span>\n                <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\"> AND </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">has_key_sql</span><span class=\"p\">,</span> <span class=\"n\">is_null_sql</span><span class=\"p\">),</span>\n                <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">has_key_params</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">is_null_params</span><span class=\"p\">),</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_sql</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KeyTransformIExact</span><span class=\"p\">(</span>\n    <span class=\"n\">CaseInsensitiveMixin</span><span class=\"p\">,</span> <span class=\"n\">KeyTransformTextLookupMixin</span><span class=\"p\">,</span> <span class=\"n\">lookups</span><span class=\"o\">.</span><span class=\"n\">IExact</span>\n<span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KeyTransformIContains</span><span class=\"p\">(</span>\n    <span class=\"n\">CaseInsensitiveMixin</span><span class=\"p\">,</span> <span class=\"n\">KeyTransformTextLookupMixin</span><span class=\"p\">,</span> <span class=\"n\">lookups</span><span class=\"o\">.</span><span class=\"n\">IContains</span>\n<span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KeyTransformStartsWith</span><span class=\"p\">(</span><span class=\"n\">KeyTransformTextLookupMixin</span><span class=\"p\">,</span> <span class=\"n\">lookups</span><span class=\"o\">.</span><span class=\"n\">StartsWith</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KeyTransformIStartsWith</span><span class=\"p\">(</span>\n    <span class=\"n\">CaseInsensitiveMixin</span><span class=\"p\">,</span> <span class=\"n\">KeyTransformTextLookupMixin</span><span class=\"p\">,</span> <span class=\"n\">lookups</span><span class=\"o\">.</span><span class=\"n\">IStartsWith</span>\n<span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KeyTransformEndsWith</span><span class=\"p\">(</span><span class=\"n\">KeyTransformTextLookupMixin</span><span class=\"p\">,</span> <span class=\"n\">lookups</span><span class=\"o\">.</span><span class=\"n\">EndsWith</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KeyTransformIEndsWith</span><span class=\"p\">(</span>\n    <span class=\"n\">CaseInsensitiveMixin</span><span class=\"p\">,</span> <span class=\"n\">KeyTransformTextLookupMixin</span><span class=\"p\">,</span> <span class=\"n\">lookups</span><span class=\"o\">.</span><span class=\"n\">IEndsWith</span>\n<span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KeyTransformRegex</span><span class=\"p\">(</span><span class=\"n\">KeyTransformTextLookupMixin</span><span class=\"p\">,</span> <span class=\"n\">lookups</span><span class=\"o\">.</span><span class=\"n\">Regex</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KeyTransformIRegex</span><span class=\"p\">(</span>\n    <span class=\"n\">CaseInsensitiveMixin</span><span class=\"p\">,</span> <span class=\"n\">KeyTransformTextLookupMixin</span><span class=\"p\">,</span> <span class=\"n\">lookups</span><span class=\"o\">.</span><span class=\"n\">IRegex</span>\n<span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KeyTransformNumericLookupMixin</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">process_rhs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">):</span>\n        <span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"n\">rhs_params</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">process_rhs</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">has_native_json_field</span><span class=\"p\">:</span>\n            <span class=\"n\">rhs_params</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">rhs_params</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"n\">rhs_params</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KeyTransformLt</span><span class=\"p\">(</span><span class=\"n\">KeyTransformNumericLookupMixin</span><span class=\"p\">,</span> <span class=\"n\">lookups</span><span class=\"o\">.</span><span class=\"n\">LessThan</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KeyTransformLte</span><span class=\"p\">(</span><span class=\"n\">KeyTransformNumericLookupMixin</span><span class=\"p\">,</span> <span class=\"n\">lookups</span><span class=\"o\">.</span><span class=\"n\">LessThanOrEqual</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KeyTransformGt</span><span class=\"p\">(</span><span class=\"n\">KeyTransformNumericLookupMixin</span><span class=\"p\">,</span> <span class=\"n\">lookups</span><span class=\"o\">.</span><span class=\"n\">GreaterThan</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KeyTransformGte</span><span class=\"p\">(</span><span class=\"n\">KeyTransformNumericLookupMixin</span><span class=\"p\">,</span> <span class=\"n\">lookups</span><span class=\"o\">.</span><span class=\"n\">GreaterThanOrEqual</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"n\">KeyTransform</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">KeyTransformIn</span><span class=\"p\">)</span>\n<span class=\"n\">KeyTransform</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">KeyTransformExact</span><span class=\"p\">)</span>\n<span class=\"n\">KeyTransform</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">KeyTransformIExact</span><span class=\"p\">)</span>\n<span class=\"n\">KeyTransform</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">KeyTransformIsNull</span><span class=\"p\">)</span>\n<span class=\"n\">KeyTransform</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">KeyTransformIContains</span><span class=\"p\">)</span>\n<span class=\"n\">KeyTransform</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">KeyTransformStartsWith</span><span class=\"p\">)</span>\n<span class=\"n\">KeyTransform</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">KeyTransformIStartsWith</span><span class=\"p\">)</span>\n<span class=\"n\">KeyTransform</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">KeyTransformEndsWith</span><span class=\"p\">)</span>\n<span class=\"n\">KeyTransform</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">KeyTransformIEndsWith</span><span class=\"p\">)</span>\n<span class=\"n\">KeyTransform</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">KeyTransformRegex</span><span class=\"p\">)</span>\n<span class=\"n\">KeyTransform</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">KeyTransformIRegex</span><span class=\"p\">)</span>\n\n<span class=\"n\">KeyTransform</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">KeyTransformLt</span><span class=\"p\">)</span>\n<span class=\"n\">KeyTransform</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">KeyTransformLte</span><span class=\"p\">)</span>\n<span class=\"n\">KeyTransform</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">KeyTransformGt</span><span class=\"p\">)</span>\n<span class=\"n\">KeyTransform</span><span class=\"o\">.</span><span class=\"n\">register_lookup</span><span class=\"p\">(</span><span class=\"n\">KeyTransformGte</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KeyTransformFactory</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key_name</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">key_name</span> <span class=\"o\">=</span> <span class=\"n\">key_name</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">KeyTransform</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">key_name</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre></div>", "current_page_name": "_modules/django/db/models/fields/json", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}