{"parents": [{"link": "../../../../", "title": "Module code"}, {"link": "../../../", "title": "django"}], "title": "django.contrib.gis.measure", "body": "<h1>Source code for django.contrib.gis.measure</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"c1\"># Copyright (c) 2007, Robert Coup &lt;robert.coup@onetrackmind.co.nz&gt;</span>\n<span class=\"c1\"># All rights reserved.</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Redistribution and use in source and binary forms, with or without modification,</span>\n<span class=\"c1\"># are permitted provided that the following conditions are met:</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#   1. Redistributions of source code must retain the above copyright notice,</span>\n<span class=\"c1\">#      this list of conditions and the following disclaimer.</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#   2. Redistributions in binary form must reproduce the above copyright</span>\n<span class=\"c1\">#      notice, this list of conditions and the following disclaimer in the</span>\n<span class=\"c1\">#      documentation and/or other materials provided with the distribution.</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#   3. Neither the name of Distance nor the names of its contributors may be used</span>\n<span class=\"c1\">#      to endorse or promote products derived from this software without</span>\n<span class=\"c1\">#      specific prior written permission.</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; AND</span>\n<span class=\"c1\"># ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED</span>\n<span class=\"c1\"># WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</span>\n<span class=\"c1\"># DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR</span>\n<span class=\"c1\"># ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES</span>\n<span class=\"c1\"># (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;</span>\n<span class=\"c1\"># LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON</span>\n<span class=\"c1\"># ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT</span>\n<span class=\"c1\"># (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS</span>\n<span class=\"c1\"># SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span>\n<span class=\"c1\">#</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">Distance and Area objects to allow for sensible and convenient calculation</span>\n<span class=\"sd\">and conversions.</span>\n\n<span class=\"sd\">Authors: Robert Coup, Justin Bronn, Riccardo Di Virgilio</span>\n\n<span class=\"sd\">Inspired by GeoPy (https://github.com/geopy/geopy)</span>\n<span class=\"sd\">and Geoff Biggs&#39; PhD work on dimensioned units for robotics.</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">decimal</span> <span class=\"kn\">import</span> <span class=\"n\">Decimal</span>\n<span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"kn\">import</span> <span class=\"n\">total_ordering</span>\n\n<span class=\"n\">__all__</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;A&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Area&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;D&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Distance&quot;</span><span class=\"p\">]</span>\n\n<span class=\"n\">NUMERIC_TYPES</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">Decimal</span><span class=\"p\">)</span>\n<span class=\"n\">AREA_PREFIX</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;sq_&quot;</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">pretty_name</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"vm\">__name__</span> <span class=\"k\">if</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"vm\">__class__</span> <span class=\"o\">==</span> <span class=\"nb\">type</span> <span class=\"k\">else</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span>\n\n\n<span class=\"nd\">@total_ordering</span>\n<span class=\"k\">class</span> <span class=\"nc\">MeasureBase</span><span class=\"p\">:</span>\n    <span class=\"n\">STANDARD_UNIT</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">ALIAS</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n    <span class=\"n\">UNITS</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n    <span class=\"n\">LALIAS</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">default_unit</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_default_unit</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">default_units</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">STANDARD_UNIT</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">default_unit</span> <span class=\"ow\">and</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">default_unit</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_default_unit</span> <span class=\"o\">=</span> <span class=\"n\">default_unit</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_standard</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">STANDARD_UNIT</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_set_standard</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">STANDARD_UNIT</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"n\">standard</span> <span class=\"o\">=</span> <span class=\"nb\">property</span><span class=\"p\">(</span><span class=\"n\">_get_standard</span><span class=\"p\">,</span> <span class=\"n\">_set_standard</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__getattr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">UNITS</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">standard</span> <span class=\"o\">/</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">UNITS</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">AttributeError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Unknown unit type: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">(</span><span class=\"si\">%s</span><span class=\"s2\">=</span><span class=\"si\">%s</span><span class=\"s2\">)&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span>\n            <span class=\"n\">pretty_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">),</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_default_unit</span><span class=\"p\">,</span>\n            <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_default_unit</span><span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\"> </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_default_unit</span><span class=\"p\">),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_default_unit</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># **** Comparison methods ****</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__eq__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">standard</span> <span class=\"o\">==</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">standard</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">NotImplemented</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__hash__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">hash</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">standard</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__lt__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">standard</span> <span class=\"o\">&lt;</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">standard</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">NotImplemented</span>\n\n    <span class=\"c1\"># **** Operators methods ****</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__add__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">(</span>\n                <span class=\"n\">default_unit</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_default_unit</span><span class=\"p\">,</span>\n                <span class=\"o\">**</span><span class=\"p\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">STANDARD_UNIT</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">standard</span> <span class=\"o\">+</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">standard</span><span class=\"p\">)},</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;</span><span class=\"si\">%(class)s</span><span class=\"s2\"> must be added with </span><span class=\"si\">%(class)s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">{</span><span class=\"s2\">&quot;class&quot;</span><span class=\"p\">:</span> <span class=\"n\">pretty_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)}</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__iadd__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">standard</span> <span class=\"o\">+=</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">standard</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;</span><span class=\"si\">%(class)s</span><span class=\"s2\"> must be added with </span><span class=\"si\">%(class)s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">{</span><span class=\"s2\">&quot;class&quot;</span><span class=\"p\">:</span> <span class=\"n\">pretty_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)}</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__sub__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">(</span>\n                <span class=\"n\">default_unit</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_default_unit</span><span class=\"p\">,</span>\n                <span class=\"o\">**</span><span class=\"p\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">STANDARD_UNIT</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">standard</span> <span class=\"o\">-</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">standard</span><span class=\"p\">)},</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;</span><span class=\"si\">%(class)s</span><span class=\"s2\"> must be subtracted from </span><span class=\"si\">%(class)s</span><span class=\"s2\">&quot;</span>\n                <span class=\"o\">%</span> <span class=\"p\">{</span><span class=\"s2\">&quot;class&quot;</span><span class=\"p\">:</span> <span class=\"n\">pretty_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)}</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__isub__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">standard</span> <span class=\"o\">-=</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">standard</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;</span><span class=\"si\">%(class)s</span><span class=\"s2\"> must be subtracted from </span><span class=\"si\">%(class)s</span><span class=\"s2\">&quot;</span>\n                <span class=\"o\">%</span> <span class=\"p\">{</span><span class=\"s2\">&quot;class&quot;</span><span class=\"p\">:</span> <span class=\"n\">pretty_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)}</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__mul__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"n\">NUMERIC_TYPES</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">(</span>\n                <span class=\"n\">default_unit</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_default_unit</span><span class=\"p\">,</span>\n                <span class=\"o\">**</span><span class=\"p\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">STANDARD_UNIT</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">standard</span> <span class=\"o\">*</span> <span class=\"n\">other</span><span class=\"p\">)},</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;</span><span class=\"si\">%(class)s</span><span class=\"s2\"> must be multiplied with number&quot;</span>\n                <span class=\"o\">%</span> <span class=\"p\">{</span><span class=\"s2\">&quot;class&quot;</span><span class=\"p\">:</span> <span class=\"n\">pretty_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)}</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__imul__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"n\">NUMERIC_TYPES</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">standard</span> <span class=\"o\">*=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;</span><span class=\"si\">%(class)s</span><span class=\"s2\"> must be multiplied with number&quot;</span>\n                <span class=\"o\">%</span> <span class=\"p\">{</span><span class=\"s2\">&quot;class&quot;</span><span class=\"p\">:</span> <span class=\"n\">pretty_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)}</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__rmul__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span> <span class=\"o\">*</span> <span class=\"n\">other</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__truediv__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">standard</span> <span class=\"o\">/</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">standard</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"n\">NUMERIC_TYPES</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">(</span>\n                <span class=\"n\">default_unit</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_default_unit</span><span class=\"p\">,</span>\n                <span class=\"o\">**</span><span class=\"p\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">STANDARD_UNIT</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">standard</span> <span class=\"o\">/</span> <span class=\"n\">other</span><span class=\"p\">)},</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;</span><span class=\"si\">%(class)s</span><span class=\"s2\"> must be divided with number or </span><span class=\"si\">%(class)s</span><span class=\"s2\">&quot;</span>\n                <span class=\"o\">%</span> <span class=\"p\">{</span><span class=\"s2\">&quot;class&quot;</span><span class=\"p\">:</span> <span class=\"n\">pretty_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)}</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__itruediv__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"n\">NUMERIC_TYPES</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">standard</span> <span class=\"o\">/=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;</span><span class=\"si\">%(class)s</span><span class=\"s2\"> must be divided with number&quot;</span> <span class=\"o\">%</span> <span class=\"p\">{</span><span class=\"s2\">&quot;class&quot;</span><span class=\"p\">:</span> <span class=\"n\">pretty_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)}</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__bool__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">bool</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">standard</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">default_units</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Return the unit value and the default units specified</span>\n<span class=\"sd\">        from the given keyword arguments dictionary.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n        <span class=\"n\">default_unit</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">STANDARD_UNIT</span>\n        <span class=\"k\">for</span> <span class=\"n\">unit</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">):</span>\n                <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">unit</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">UNITS</span><span class=\"p\">:</span>\n                <span class=\"n\">val</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">UNITS</span><span class=\"p\">[</span><span class=\"n\">unit</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">value</span>\n                <span class=\"n\">default_unit</span> <span class=\"o\">=</span> <span class=\"n\">unit</span>\n            <span class=\"k\">elif</span> <span class=\"n\">unit</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ALIAS</span><span class=\"p\">:</span>\n                <span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ALIAS</span><span class=\"p\">[</span><span class=\"n\">unit</span><span class=\"p\">]</span>\n                <span class=\"n\">val</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">UNITS</span><span class=\"p\">[</span><span class=\"n\">u</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">value</span>\n                <span class=\"n\">default_unit</span> <span class=\"o\">=</span> <span class=\"n\">u</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">lower</span> <span class=\"o\">=</span> <span class=\"n\">unit</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n                <span class=\"k\">if</span> <span class=\"n\">lower</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">UNITS</span><span class=\"p\">:</span>\n                    <span class=\"n\">val</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">UNITS</span><span class=\"p\">[</span><span class=\"n\">lower</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">value</span>\n                    <span class=\"n\">default_unit</span> <span class=\"o\">=</span> <span class=\"n\">lower</span>\n                <span class=\"k\">elif</span> <span class=\"n\">lower</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">LALIAS</span><span class=\"p\">:</span>\n                    <span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">LALIAS</span><span class=\"p\">[</span><span class=\"n\">lower</span><span class=\"p\">]</span>\n                    <span class=\"n\">val</span> <span class=\"o\">+=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">UNITS</span><span class=\"p\">[</span><span class=\"n\">u</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">value</span>\n                    <span class=\"n\">default_unit</span> <span class=\"o\">=</span> <span class=\"n\">u</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"k\">raise</span> <span class=\"ne\">AttributeError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Unknown unit type: </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"n\">unit</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"n\">default_unit</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">unit_attname</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">unit_str</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Retrieve the unit attribute name for the given unit string.</span>\n<span class=\"sd\">        For example, if the given unit string is &#39;metre&#39;, return &#39;m&#39;.</span>\n<span class=\"sd\">        Raise an exception if an attribute cannot be found.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">lower</span> <span class=\"o\">=</span> <span class=\"n\">unit_str</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">unit_str</span> <span class=\"ow\">in</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">UNITS</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">unit_str</span>\n        <span class=\"k\">elif</span> <span class=\"n\">lower</span> <span class=\"ow\">in</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">UNITS</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">lower</span>\n        <span class=\"k\">elif</span> <span class=\"n\">lower</span> <span class=\"ow\">in</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">LALIAS</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">LALIAS</span><span class=\"p\">[</span><span class=\"n\">lower</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span>\n                <span class=\"s1\">&#39;Could not find a unit keyword associated with &quot;</span><span class=\"si\">%s</span><span class=\"s1\">&quot;&#39;</span> <span class=\"o\">%</span> <span class=\"n\">unit_str</span>\n            <span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"Distance\"><a class=\"viewcode-back\" href=\"../../../../../ref/contrib/gis/measure/#django.contrib.gis.measure.Distance\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Distance</span><span class=\"p\">(</span><span class=\"n\">MeasureBase</span><span class=\"p\">):</span>\n    <span class=\"n\">STANDARD_UNIT</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;m&quot;</span>\n    <span class=\"n\">UNITS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;chain&quot;</span><span class=\"p\">:</span> <span class=\"mf\">20.1168</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;chain_benoit&quot;</span><span class=\"p\">:</span> <span class=\"mf\">20.116782</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;chain_sears&quot;</span><span class=\"p\">:</span> <span class=\"mf\">20.1167645</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;british_chain_benoit&quot;</span><span class=\"p\">:</span> <span class=\"mf\">20.1167824944</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;british_chain_sears&quot;</span><span class=\"p\">:</span> <span class=\"mf\">20.1167651216</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;british_chain_sears_truncated&quot;</span><span class=\"p\">:</span> <span class=\"mf\">20.116756</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;cm&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.01</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;british_ft&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.304799471539</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;british_yd&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.914398414616</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;clarke_ft&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.3047972654</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;clarke_link&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.201166195164</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;fathom&quot;</span><span class=\"p\">:</span> <span class=\"mf\">1.8288</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;ft&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.3048</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;furlong&quot;</span><span class=\"p\">:</span> <span class=\"mf\">201.168</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;german_m&quot;</span><span class=\"p\">:</span> <span class=\"mf\">1.0000135965</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;gold_coast_ft&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.304799710181508</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;indian_yd&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.914398530744</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;inch&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.0254</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;km&quot;</span><span class=\"p\">:</span> <span class=\"mf\">1000.0</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;link&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.201168</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;link_benoit&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.20116782</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;link_sears&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.20116765</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;m&quot;</span><span class=\"p\">:</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;mi&quot;</span><span class=\"p\">:</span> <span class=\"mf\">1609.344</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;mm&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.001</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;nm&quot;</span><span class=\"p\">:</span> <span class=\"mf\">1852.0</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;nm_uk&quot;</span><span class=\"p\">:</span> <span class=\"mf\">1853.184</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;rod&quot;</span><span class=\"p\">:</span> <span class=\"mf\">5.0292</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;sears_yd&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.91439841</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;survey_ft&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.304800609601</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;um&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.000001</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;yd&quot;</span><span class=\"p\">:</span> <span class=\"mf\">0.9144</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\"># Unit aliases for `UNIT` terms encountered in Spatial Reference WKT.</span>\n    <span class=\"n\">ALIAS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;centimeter&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;cm&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;foot&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ft&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;inches&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;inch&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;kilometer&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;km&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;kilometre&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;km&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;meter&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;m&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;metre&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;m&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;micrometer&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;um&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;micrometre&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;um&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;millimeter&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;mm&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;millimetre&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;mm&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;mile&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;mi&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;yard&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;yd&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;British chain (Benoit 1895 B)&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;british_chain_benoit&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;British chain (Sears 1922)&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;british_chain_sears&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;British chain (Sears 1922 truncated)&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;british_chain_sears_truncated&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;British foot (Sears 1922)&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;british_ft&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;British foot&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;british_ft&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;British yard (Sears 1922)&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;british_yd&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;British yard&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;british_yd&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;Clarke&#39;s Foot&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;clarke_ft&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;Clarke&#39;s link&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;clarke_link&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;Chain (Benoit)&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;chain_benoit&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;Chain (Sears)&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;chain_sears&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;Foot (International)&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ft&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;Furrow Long&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;furlong&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;German legal metre&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;german_m&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;Gold Coast foot&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;gold_coast_ft&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;Indian yard&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;indian_yd&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;Link (Benoit)&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;link_benoit&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;Link (Sears)&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;link_sears&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;Nautical Mile&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;nm&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;Nautical Mile (UK)&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;nm_uk&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;US survey foot&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;survey_ft&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;U.S. Foot&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;survey_ft&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;Yard (Indian)&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;indian_yd&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;Yard (Sears)&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;sears_yd&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">LALIAS</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">():</span> <span class=\"n\">v</span> <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">ALIAS</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()}</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__mul__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">Area</span><span class=\"p\">(</span>\n                <span class=\"n\">default_unit</span><span class=\"o\">=</span><span class=\"n\">AREA_PREFIX</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_default_unit</span><span class=\"p\">,</span>\n                <span class=\"o\">**</span><span class=\"p\">{</span><span class=\"n\">AREA_PREFIX</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">STANDARD_UNIT</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">standard</span> <span class=\"o\">*</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">standard</span><span class=\"p\">)},</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"n\">NUMERIC_TYPES</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">(</span>\n                <span class=\"n\">default_unit</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_default_unit</span><span class=\"p\">,</span>\n                <span class=\"o\">**</span><span class=\"p\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">STANDARD_UNIT</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">standard</span> <span class=\"o\">*</span> <span class=\"n\">other</span><span class=\"p\">)},</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;</span><span class=\"si\">%(distance)s</span><span class=\"s2\"> must be multiplied with number or </span><span class=\"si\">%(distance)s</span><span class=\"s2\">&quot;</span>\n                <span class=\"o\">%</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;distance&quot;</span><span class=\"p\">:</span> <span class=\"n\">pretty_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">),</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Area\"><a class=\"viewcode-back\" href=\"../../../../../ref/contrib/gis/measure/#django.contrib.gis.measure.Area\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Area</span><span class=\"p\">(</span><span class=\"n\">MeasureBase</span><span class=\"p\">):</span>\n    <span class=\"n\">STANDARD_UNIT</span> <span class=\"o\">=</span> <span class=\"n\">AREA_PREFIX</span> <span class=\"o\">+</span> <span class=\"n\">Distance</span><span class=\"o\">.</span><span class=\"n\">STANDARD_UNIT</span>\n    <span class=\"c1\"># Getting the square units values and the alias dictionary.</span>\n    <span class=\"n\">UNITS</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;</span><span class=\"si\">%s%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">AREA_PREFIX</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">):</span> <span class=\"n\">v</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">Distance</span><span class=\"o\">.</span><span class=\"n\">UNITS</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()}</span>\n    <span class=\"n\">ALIAS</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"s2\">&quot;</span><span class=\"si\">%s%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">AREA_PREFIX</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">Distance</span><span class=\"o\">.</span><span class=\"n\">ALIAS</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()}</span>\n    <span class=\"n\">LALIAS</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">():</span> <span class=\"n\">v</span> <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">ALIAS</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()}</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__truediv__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"n\">NUMERIC_TYPES</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">(</span>\n                <span class=\"n\">default_unit</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_default_unit</span><span class=\"p\">,</span>\n                <span class=\"o\">**</span><span class=\"p\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">STANDARD_UNIT</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">standard</span> <span class=\"o\">/</span> <span class=\"n\">other</span><span class=\"p\">)},</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;</span><span class=\"si\">%(class)s</span><span class=\"s2\"> must be divided by a number&quot;</span> <span class=\"o\">%</span> <span class=\"p\">{</span><span class=\"s2\">&quot;class&quot;</span><span class=\"p\">:</span> <span class=\"n\">pretty_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)}</span>\n            <span class=\"p\">)</span></div>\n\n\n<span class=\"c1\"># Shortcuts</span>\n<span class=\"n\">D</span> <span class=\"o\">=</span> <span class=\"n\">Distance</span>\n<span class=\"n\">A</span> <span class=\"o\">=</span> <span class=\"n\">Area</span>\n</pre></div>", "current_page_name": "_modules/django/contrib/gis/measure", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
