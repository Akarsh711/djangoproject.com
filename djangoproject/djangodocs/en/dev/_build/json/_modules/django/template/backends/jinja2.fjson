{"parents": [{"link": "../../../../", "title": "Module code"}, {"link": "../../../", "title": "django"}], "title": "django.template.backends.jinja2", "body": "<h1>Source code for django.template.backends.jinja2</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">jinja2</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.template</span> <span class=\"kn\">import</span> <span class=\"n\">TemplateDoesNotExist</span><span class=\"p\">,</span> <span class=\"n\">TemplateSyntaxError</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.functional</span> <span class=\"kn\">import</span> <span class=\"n\">cached_property</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.module_loading</span> <span class=\"kn\">import</span> <span class=\"n\">import_string</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.base</span> <span class=\"kn\">import</span> <span class=\"n\">BaseEngine</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.utils</span> <span class=\"kn\">import</span> <span class=\"n\">csrf_input_lazy</span><span class=\"p\">,</span> <span class=\"n\">csrf_token_lazy</span>\n\n\n<div class=\"viewcode-block\" id=\"Jinja2\"><a class=\"viewcode-back\" href=\"../../../../../topics/templates/#django.template.backends.jinja2.Jinja2\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Jinja2</span><span class=\"p\">(</span><span class=\"n\">BaseEngine</span><span class=\"p\">):</span>\n    <span class=\"n\">app_dirname</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;jinja2&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">):</span>\n        <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"n\">params</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n        <span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"n\">params</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;OPTIONS&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context_processors</span> <span class=\"o\">=</span> <span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;context_processors&quot;</span><span class=\"p\">,</span> <span class=\"p\">[])</span>\n\n        <span class=\"n\">environment</span> <span class=\"o\">=</span> <span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"s2\">&quot;environment&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;jinja2.Environment&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">environment_cls</span> <span class=\"o\">=</span> <span class=\"n\">import_string</span><span class=\"p\">(</span><span class=\"n\">environment</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;loader&quot;</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">options</span><span class=\"p\">:</span>\n            <span class=\"n\">options</span><span class=\"p\">[</span><span class=\"s2\">&quot;loader&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">jinja2</span><span class=\"o\">.</span><span class=\"n\">FileSystemLoader</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">template_dirs</span><span class=\"p\">)</span>\n        <span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">setdefault</span><span class=\"p\">(</span><span class=\"s2\">&quot;autoescape&quot;</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">setdefault</span><span class=\"p\">(</span><span class=\"s2\">&quot;auto_reload&quot;</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n        <span class=\"n\">options</span><span class=\"o\">.</span><span class=\"n\">setdefault</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;undefined&quot;</span><span class=\"p\">,</span> <span class=\"n\">jinja2</span><span class=\"o\">.</span><span class=\"n\">DebugUndefined</span> <span class=\"k\">if</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span> <span class=\"k\">else</span> <span class=\"n\">jinja2</span><span class=\"o\">.</span><span class=\"n\">Undefined</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">environment_cls</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">options</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">from_string</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">template_code</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">Template</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">from_string</span><span class=\"p\">(</span><span class=\"n\">template_code</span><span class=\"p\">),</span> <span class=\"bp\">self</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_template</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">template_name</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">Template</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">get_template</span><span class=\"p\">(</span><span class=\"n\">template_name</span><span class=\"p\">),</span> <span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"n\">jinja2</span><span class=\"o\">.</span><span class=\"n\">TemplateNotFound</span> <span class=\"k\">as</span> <span class=\"n\">exc</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">TemplateDoesNotExist</span><span class=\"p\">(</span><span class=\"n\">exc</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">backend</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"kn\">from</span> <span class=\"nn\">exc</span>\n        <span class=\"k\">except</span> <span class=\"n\">jinja2</span><span class=\"o\">.</span><span class=\"n\">TemplateSyntaxError</span> <span class=\"k\">as</span> <span class=\"n\">exc</span><span class=\"p\">:</span>\n            <span class=\"n\">new</span> <span class=\"o\">=</span> <span class=\"n\">TemplateSyntaxError</span><span class=\"p\">(</span><span class=\"n\">exc</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"p\">)</span>\n            <span class=\"n\">new</span><span class=\"o\">.</span><span class=\"n\">template_debug</span> <span class=\"o\">=</span> <span class=\"n\">get_exception_info</span><span class=\"p\">(</span><span class=\"n\">exc</span><span class=\"p\">)</span>\n            <span class=\"k\">raise</span> <span class=\"n\">new</span> <span class=\"kn\">from</span> <span class=\"nn\">exc</span>\n\n    <span class=\"nd\">@cached_property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">template_context_processors</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">import_string</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">path</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context_processors</span><span class=\"p\">]</span></div>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Template</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">,</span> <span class=\"n\">backend</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"n\">template</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">backend</span> <span class=\"o\">=</span> <span class=\"n\">backend</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">origin</span> <span class=\"o\">=</span> <span class=\"n\">Origin</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"n\">filename</span><span class=\"p\">,</span>\n            <span class=\"n\">template_name</span><span class=\"o\">=</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">render</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">context</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">if</span> <span class=\"n\">request</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s2\">&quot;request&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">request</span>\n            <span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s2\">&quot;csrf_input&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">csrf_input_lazy</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n            <span class=\"n\">context</span><span class=\"p\">[</span><span class=\"s2\">&quot;csrf_token&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">csrf_token_lazy</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">context_processor</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">backend</span><span class=\"o\">.</span><span class=\"n\">template_context_processors</span><span class=\"p\">:</span>\n                <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">context_processor</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">))</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"n\">jinja2</span><span class=\"o\">.</span><span class=\"n\">TemplateSyntaxError</span> <span class=\"k\">as</span> <span class=\"n\">exc</span><span class=\"p\">:</span>\n            <span class=\"n\">new</span> <span class=\"o\">=</span> <span class=\"n\">TemplateSyntaxError</span><span class=\"p\">(</span><span class=\"n\">exc</span><span class=\"o\">.</span><span class=\"n\">args</span><span class=\"p\">)</span>\n            <span class=\"n\">new</span><span class=\"o\">.</span><span class=\"n\">template_debug</span> <span class=\"o\">=</span> <span class=\"n\">get_exception_info</span><span class=\"p\">(</span><span class=\"n\">exc</span><span class=\"p\">)</span>\n            <span class=\"k\">raise</span> <span class=\"n\">new</span> <span class=\"kn\">from</span> <span class=\"nn\">exc</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Origin</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    A container to hold debug information as described in the template API</span>\n<span class=\"sd\">    documentation.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">template_name</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"n\">template_name</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">get_exception_info</span><span class=\"p\">(</span><span class=\"n\">exception</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Format exception information for display on the debug page using the</span>\n<span class=\"sd\">    structure described in the template API documentation.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">context_lines</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n    <span class=\"n\">lineno</span> <span class=\"o\">=</span> <span class=\"n\">exception</span><span class=\"o\">.</span><span class=\"n\">lineno</span>\n    <span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">exception</span><span class=\"o\">.</span><span class=\"n\">source</span>\n    <span class=\"k\">if</span> <span class=\"n\">source</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">exception_file</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">exception</span><span class=\"o\">.</span><span class=\"n\">filename</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">exception_file</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n            <span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">exception_file</span><span class=\"o\">.</span><span class=\"n\">read_text</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">source</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">),</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n        <span class=\"n\">during</span> <span class=\"o\">=</span> <span class=\"n\">lines</span><span class=\"p\">[</span><span class=\"n\">lineno</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">lines</span><span class=\"p\">)</span>\n        <span class=\"n\">top</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">lineno</span> <span class=\"o\">-</span> <span class=\"n\">context_lines</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">bottom</span> <span class=\"o\">=</span> <span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">total</span><span class=\"p\">,</span> <span class=\"n\">lineno</span> <span class=\"o\">+</span> <span class=\"n\">context_lines</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">during</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"n\">lines</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"n\">top</span> <span class=\"o\">=</span> <span class=\"n\">bottom</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"n\">exception</span><span class=\"o\">.</span><span class=\"n\">filename</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;message&quot;</span><span class=\"p\">:</span> <span class=\"n\">exception</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;source_lines&quot;</span><span class=\"p\">:</span> <span class=\"n\">lines</span><span class=\"p\">[</span><span class=\"n\">top</span><span class=\"p\">:</span><span class=\"n\">bottom</span><span class=\"p\">],</span>\n        <span class=\"s2\">&quot;line&quot;</span><span class=\"p\">:</span> <span class=\"n\">lineno</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;before&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;during&quot;</span><span class=\"p\">:</span> <span class=\"n\">during</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;after&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;total&quot;</span><span class=\"p\">:</span> <span class=\"n\">total</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;top&quot;</span><span class=\"p\">:</span> <span class=\"n\">top</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;bottom&quot;</span><span class=\"p\">:</span> <span class=\"n\">bottom</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n</pre></div>", "current_page_name": "_modules/django/template/backends/jinja2", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
