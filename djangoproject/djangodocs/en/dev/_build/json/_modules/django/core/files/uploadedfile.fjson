{"parents": [{"link": "../../../../", "title": "Module code"}, {"link": "../../../", "title": "django"}], "title": "django.core.files.uploadedfile", "body": "<h1>Source code for django.core.files.uploadedfile</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">Classes representing uploaded files.</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">io</span> <span class=\"kn\">import</span> <span class=\"n\">BytesIO</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.core.files</span> <span class=\"kn\">import</span> <span class=\"n\">temp</span> <span class=\"k\">as</span> <span class=\"n\">tempfile</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.core.files.base</span> <span class=\"kn\">import</span> <span class=\"n\">File</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.core.files.utils</span> <span class=\"kn\">import</span> <span class=\"n\">validate_file_name</span>\n\n<span class=\"n\">__all__</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"s2\">&quot;UploadedFile&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;TemporaryUploadedFile&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;InMemoryUploadedFile&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;SimpleUploadedFile&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"UploadedFile\"><a class=\"viewcode-back\" href=\"../../../../../ref/files/uploads/#django.core.files.uploadedfile.UploadedFile\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">UploadedFile</span><span class=\"p\">(</span><span class=\"n\">File</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    An abstract uploaded file (``TemporaryUploadedFile`` and</span>\n<span class=\"sd\">    ``InMemoryUploadedFile`` are the built-in concrete subclasses).</span>\n\n<span class=\"sd\">    An ``UploadedFile`` object behaves somewhat like a file object and</span>\n<span class=\"sd\">    represents some file data that the user submitted with a form.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">file</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">content_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">charset</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">content_type_extra</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"n\">size</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">content_type</span> <span class=\"o\">=</span> <span class=\"n\">content_type</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">charset</span> <span class=\"o\">=</span> <span class=\"n\">charset</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">content_type_extra</span> <span class=\"o\">=</span> <span class=\"n\">content_type_extra</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;&lt;</span><span class=\"si\">%s</span><span class=\"s2\">: </span><span class=\"si\">%s</span><span class=\"s2\"> (</span><span class=\"si\">%s</span><span class=\"s2\">)&gt;&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">content_type</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_set_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Sanitize the file name so that it can&#39;t be dangerous.</span>\n        <span class=\"k\">if</span> <span class=\"n\">name</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Just use the basename of the file -- anything else is dangerous.</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">basename</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># File names longer than 255 characters can cause problems on older OSes.</span>\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">255</span><span class=\"p\">:</span>\n                <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">ext</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n                <span class=\"n\">ext</span> <span class=\"o\">=</span> <span class=\"n\">ext</span><span class=\"p\">[:</span><span class=\"mi\">255</span><span class=\"p\">]</span>\n                <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span><span class=\"p\">[:</span> <span class=\"mi\">255</span> <span class=\"o\">-</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">ext</span><span class=\"p\">)]</span> <span class=\"o\">+</span> <span class=\"n\">ext</span>\n\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">validate_file_name</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"nb\">property</span><span class=\"p\">(</span><span class=\"n\">_get_name</span><span class=\"p\">,</span> <span class=\"n\">_set_name</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"TemporaryUploadedFile\"><a class=\"viewcode-back\" href=\"../../../../../ref/files/uploads/#django.core.files.uploadedfile.TemporaryUploadedFile\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">TemporaryUploadedFile</span><span class=\"p\">(</span><span class=\"n\">UploadedFile</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    A file uploaded to a temporary location (i.e. stream-to-disk).</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">content_type</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">,</span> <span class=\"n\">charset</span><span class=\"p\">,</span> <span class=\"n\">content_type_extra</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">ext</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"n\">tempfile</span><span class=\"o\">.</span><span class=\"n\">NamedTemporaryFile</span><span class=\"p\">(</span>\n            <span class=\"n\">suffix</span><span class=\"o\">=</span><span class=\"s2\">&quot;.upload&quot;</span> <span class=\"o\">+</span> <span class=\"n\">ext</span><span class=\"p\">,</span> <span class=\"nb\">dir</span><span class=\"o\">=</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">FILE_UPLOAD_TEMP_DIR</span>\n        <span class=\"p\">)</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">content_type</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">,</span> <span class=\"n\">charset</span><span class=\"p\">,</span> <span class=\"n\">content_type_extra</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"TemporaryUploadedFile.temporary_file_path\"><a class=\"viewcode-back\" href=\"../../../../../ref/files/uploads/#django.core.files.uploadedfile.TemporaryUploadedFile.temporary_file_path\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">temporary_file_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return the full path of this file.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">name</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">close</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n        <span class=\"k\">except</span> <span class=\"ne\">FileNotFoundError</span><span class=\"p\">:</span>\n            <span class=\"c1\"># The file was moved or deleted before the tempfile could unlink</span>\n            <span class=\"c1\"># it. Still sets self.file.close_called and calls</span>\n            <span class=\"c1\"># self.file.file.close() before the exception.</span>\n            <span class=\"k\">pass</span></div>\n\n\n<div class=\"viewcode-block\" id=\"InMemoryUploadedFile\"><a class=\"viewcode-back\" href=\"../../../../../ref/files/uploads/#django.core.files.uploadedfile.InMemoryUploadedFile\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">InMemoryUploadedFile</span><span class=\"p\">(</span><span class=\"n\">UploadedFile</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    A file uploaded into memory (i.e. stream-to-memory).</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">file</span><span class=\"p\">,</span>\n        <span class=\"n\">field_name</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"p\">,</span>\n        <span class=\"n\">content_type</span><span class=\"p\">,</span>\n        <span class=\"n\">size</span><span class=\"p\">,</span>\n        <span class=\"n\">charset</span><span class=\"p\">,</span>\n        <span class=\"n\">content_type_extra</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">content_type</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">,</span> <span class=\"n\">charset</span><span class=\"p\">,</span> <span class=\"n\">content_type_extra</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">field_name</span> <span class=\"o\">=</span> <span class=\"n\">field_name</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">open</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">seek</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">chunks</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">chunk_size</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">seek</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"k\">yield</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">multiple_chunks</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">chunk_size</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Since it&#39;s in memory, we&#39;ll never have multiple chunks.</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">SimpleUploadedFile</span><span class=\"p\">(</span><span class=\"n\">InMemoryUploadedFile</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    A simple representation of a file, which just has content, size, and a name.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">content</span><span class=\"p\">,</span> <span class=\"n\">content_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;text/plain&quot;</span><span class=\"p\">):</span>\n        <span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">content</span> <span class=\"ow\">or</span> <span class=\"sa\">b</span><span class=\"s2\">&quot;&quot;</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"n\">BytesIO</span><span class=\"p\">(</span><span class=\"n\">content</span><span class=\"p\">),</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">content_type</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">content</span><span class=\"p\">),</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">from_dict</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">file_dict</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Create a SimpleUploadedFile object from a dictionary with keys:</span>\n<span class=\"sd\">           - filename</span>\n<span class=\"sd\">           - content-type</span>\n<span class=\"sd\">           - content</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">cls</span><span class=\"p\">(</span>\n            <span class=\"n\">file_dict</span><span class=\"p\">[</span><span class=\"s2\">&quot;filename&quot;</span><span class=\"p\">],</span>\n            <span class=\"n\">file_dict</span><span class=\"p\">[</span><span class=\"s2\">&quot;content&quot;</span><span class=\"p\">],</span>\n            <span class=\"n\">file_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;content-type&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;text/plain&quot;</span><span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n</pre></div>", "current_page_name": "_modules/django/core/files/uploadedfile", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}