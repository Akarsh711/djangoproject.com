{"parents": [{"link": "../../../../", "title": "Module code"}, {"link": "../../../", "title": "django"}], "title": "django.db.models.manager", "body": "<h1>Source code for django.db.models.manager</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">copy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">inspect</span>\n<span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"kn\">import</span> <span class=\"n\">wraps</span>\n<span class=\"kn\">from</span> <span class=\"nn\">importlib</span> <span class=\"kn\">import</span> <span class=\"n\">import_module</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">router</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.query</span> <span class=\"kn\">import</span> <span class=\"n\">QuerySet</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">BaseManager</span><span class=\"p\">:</span>\n    <span class=\"c1\"># To retain order, track each time a Manager instance is created.</span>\n    <span class=\"n\">creation_counter</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n    <span class=\"c1\"># Set to True for the &#39;objects&#39; managers that are automatically created.</span>\n    <span class=\"n\">auto_created</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"c1\">#: If set to True the manager will be serialized into migrations and will</span>\n    <span class=\"c1\">#: thus be available in e.g. RunPython operations.</span>\n    <span class=\"n\">use_in_migrations</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__new__</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Capture the arguments to make returning them trivial.</span>\n        <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__new__</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">)</span>\n        <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">_constructor_args</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">obj</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_set_creation_counter</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_db</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hints</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Return &quot;app_label.model_label.manager_name&quot;.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">.</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__class_getitem__</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">cls</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">deconstruct</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Return a 5-tuple of the form (as_manager (True), manager_class,</span>\n<span class=\"sd\">        queryset_class, args, kwargs).</span>\n\n<span class=\"sd\">        Raise a ValueError if the manager is dynamically generated.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">qs_class</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_queryset_class</span>\n        <span class=\"k\">if</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_built_with_as_manager&quot;</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">):</span>\n            <span class=\"c1\"># using MyQuerySet.as_manager()</span>\n            <span class=\"k\">return</span> <span class=\"p\">(</span>\n                <span class=\"kc\">True</span><span class=\"p\">,</span>  <span class=\"c1\"># as_manager</span>\n                <span class=\"kc\">None</span><span class=\"p\">,</span>  <span class=\"c1\"># manager_class</span>\n                <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">.</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">qs_class</span><span class=\"o\">.</span><span class=\"vm\">__module__</span><span class=\"p\">,</span> <span class=\"n\">qs_class</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">),</span>  <span class=\"c1\"># qs_class</span>\n                <span class=\"kc\">None</span><span class=\"p\">,</span>  <span class=\"c1\"># args</span>\n                <span class=\"kc\">None</span><span class=\"p\">,</span>  <span class=\"c1\"># kwargs</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">module_name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__module__</span>\n            <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span>\n            <span class=\"c1\"># Make sure it&#39;s actually there and not an inner class</span>\n            <span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">import_module</span><span class=\"p\">(</span><span class=\"n\">module_name</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n                <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                    <span class=\"s2\">&quot;Could not find manager </span><span class=\"si\">%s</span><span class=\"s2\"> in </span><span class=\"si\">%s</span><span class=\"s2\">.</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span>\n                    <span class=\"s2\">&quot;Please note that you need to inherit from managers you &quot;</span>\n                    <span class=\"s2\">&quot;dynamically generated with &#39;from_queryset()&#39;.&quot;</span>\n                    <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">module_name</span><span class=\"p\">)</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"p\">(</span>\n                <span class=\"kc\">False</span><span class=\"p\">,</span>  <span class=\"c1\"># as_manager</span>\n                <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">.</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">module_name</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">),</span>  <span class=\"c1\"># manager_class</span>\n                <span class=\"kc\">None</span><span class=\"p\">,</span>  <span class=\"c1\"># qs_class</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_constructor_args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span>  <span class=\"c1\"># args</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_constructor_args</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span>  <span class=\"c1\"># kwargs</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">check</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">[]</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_get_queryset_methods</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">queryset_class</span><span class=\"p\">):</span>\n        <span class=\"k\">def</span> <span class=\"nf\">create_method</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"p\">):</span>\n            <span class=\"nd\">@wraps</span><span class=\"p\">(</span><span class=\"n\">method</span><span class=\"p\">)</span>\n            <span class=\"k\">def</span> <span class=\"nf\">manager_method</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n                <span class=\"k\">return</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_queryset</span><span class=\"p\">(),</span> <span class=\"n\">name</span><span class=\"p\">)(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">manager_method</span>\n\n        <span class=\"n\">new_methods</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">method</span> <span class=\"ow\">in</span> <span class=\"n\">inspect</span><span class=\"o\">.</span><span class=\"n\">getmembers</span><span class=\"p\">(</span>\n            <span class=\"n\">queryset_class</span><span class=\"p\">,</span> <span class=\"n\">predicate</span><span class=\"o\">=</span><span class=\"n\">inspect</span><span class=\"o\">.</span><span class=\"n\">isfunction</span>\n        <span class=\"p\">):</span>\n            <span class=\"c1\"># Only copy missing methods.</span>\n            <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n                <span class=\"k\">continue</span>\n            <span class=\"c1\"># Only copy public methods or methods with the attribute</span>\n            <span class=\"c1\"># queryset_only=False.</span>\n            <span class=\"n\">queryset_only</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">method</span><span class=\"p\">,</span> <span class=\"s2\">&quot;queryset_only&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">queryset_only</span> <span class=\"ow\">or</span> <span class=\"p\">(</span><span class=\"n\">queryset_only</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;_&quot;</span><span class=\"p\">)):</span>\n                <span class=\"k\">continue</span>\n            <span class=\"c1\"># Copy the method onto the manager.</span>\n            <span class=\"n\">new_methods</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">create_method</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">new_methods</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">from_queryset</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">queryset_class</span><span class=\"p\">,</span> <span class=\"n\">class_name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">class_name</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">class_name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">From</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"n\">queryset_class</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">type</span><span class=\"p\">(</span>\n            <span class=\"n\">class_name</span><span class=\"p\">,</span>\n            <span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,),</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;_queryset_class&quot;</span><span class=\"p\">:</span> <span class=\"n\">queryset_class</span><span class=\"p\">,</span>\n                <span class=\"o\">**</span><span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">_get_queryset_methods</span><span class=\"p\">(</span><span class=\"n\">queryset_class</span><span class=\"p\">),</span>\n            <span class=\"p\">},</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">contribute_to_class</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"ow\">or</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"bp\">cls</span>\n\n        <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">ManagerDescriptor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">))</span>\n\n        <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">add_manager</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_set_creation_counter</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Set the creation counter value for this instance and increment the</span>\n<span class=\"sd\">        class-level copy.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">creation_counter</span> <span class=\"o\">=</span> <span class=\"n\">BaseManager</span><span class=\"o\">.</span><span class=\"n\">creation_counter</span>\n        <span class=\"n\">BaseManager</span><span class=\"o\">.</span><span class=\"n\">creation_counter</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">db_manager</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">using</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">hints</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">_db</span> <span class=\"o\">=</span> <span class=\"n\">using</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_db</span>\n        <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">_hints</span> <span class=\"o\">=</span> <span class=\"n\">hints</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hints</span>\n        <span class=\"k\">return</span> <span class=\"n\">obj</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">db</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_db</span> <span class=\"ow\">or</span> <span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">db_for_read</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hints</span><span class=\"p\">)</span>\n\n    <span class=\"c1\">#######################</span>\n    <span class=\"c1\"># PROXIES TO QUERYSET #</span>\n    <span class=\"c1\">#######################</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_queryset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Return a new QuerySet object. Subclasses can override this method to</span>\n<span class=\"sd\">        customize the behavior of the Manager.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_queryset_class</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">using</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_db</span><span class=\"p\">,</span> <span class=\"n\">hints</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_hints</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">all</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># We can&#39;t proxy this method through the `QuerySet` like we do for the</span>\n        <span class=\"c1\"># rest of the `QuerySet` methods. This is because `QuerySet.all()`</span>\n        <span class=\"c1\"># works by creating a &quot;copy&quot; of the current queryset and in making said</span>\n        <span class=\"c1\"># copy, all the cached `prefetch_related` lookups are lost. See the</span>\n        <span class=\"c1\"># implementation of `RelatedManager.get_queryset()` for a better</span>\n        <span class=\"c1\"># understanding of how this comes into play.</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_queryset</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__eq__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span>\n            <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">)</span>\n            <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_constructor_args</span> <span class=\"o\">==</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">_constructor_args</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__hash__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"Manager\"><a class=\"viewcode-back\" href=\"../../../../../topics/db/managers/#django.db.models.Manager\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Manager</span><span class=\"p\">(</span><span class=\"n\">BaseManager</span><span class=\"o\">.</span><span class=\"n\">from_queryset</span><span class=\"p\">(</span><span class=\"n\">QuerySet</span><span class=\"p\">)):</span>\n    <span class=\"k\">pass</span></div>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ManagerDescriptor</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">manager</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">manager</span> <span class=\"o\">=</span> <span class=\"n\">manager</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__get__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"bp\">cls</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">instance</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">AttributeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Manager isn&#39;t accessible via </span><span class=\"si\">%s</span><span class=\"s2\"> instances&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"vm\">__name__</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">abstract</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">AttributeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Manager isn&#39;t available; </span><span class=\"si\">%s</span><span class=\"s2\"> is abstract&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">object_name</span><span class=\"p\">,)</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">swapped</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">AttributeError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Manager isn&#39;t available; &#39;</span><span class=\"si\">%s</span><span class=\"s2\">&#39; has been swapped for &#39;</span><span class=\"si\">%s</span><span class=\"s2\">&#39;&quot;</span>\n                <span class=\"o\">%</span> <span class=\"p\">(</span>\n                    <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"p\">,</span>\n                    <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">swapped</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">managers_map</span><span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">]</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">EmptyManager</span><span class=\"p\">(</span><span class=\"n\">Manager</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">model</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_queryset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_queryset</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">none</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/django/db/models/manager", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}