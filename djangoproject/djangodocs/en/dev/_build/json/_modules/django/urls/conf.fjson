{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "django"}], "title": "django.urls.conf", "body": "<h1>Source code for django.urls.conf</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"sd\">&quot;&quot;&quot;Functions for use in URLsconfs.&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"kn\">import</span> <span class=\"n\">partial</span>\n<span class=\"kn\">from</span> <span class=\"nn\">importlib</span> <span class=\"kn\">import</span> <span class=\"n\">import_module</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.core.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">ImproperlyConfigured</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.resolvers</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">LocalePrefixPattern</span><span class=\"p\">,</span>\n    <span class=\"n\">RegexPattern</span><span class=\"p\">,</span>\n    <span class=\"n\">RoutePattern</span><span class=\"p\">,</span>\n    <span class=\"n\">URLPattern</span><span class=\"p\">,</span>\n    <span class=\"n\">URLResolver</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"include\"><a class=\"viewcode-back\" href=\"../../../../ref/urls/#django.urls.include\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">include</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">,</span> <span class=\"n\">namespace</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"n\">app_name</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Callable returning a namespace hint.</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">urlconf_module</span><span class=\"p\">,</span> <span class=\"n\">app_name</span> <span class=\"o\">=</span> <span class=\"n\">arg</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ValueError</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">namespace</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"n\">ImproperlyConfigured</span><span class=\"p\">(</span>\n                    <span class=\"s2\">&quot;Cannot override the namespace for a dynamic module that &quot;</span>\n                    <span class=\"s2\">&quot;provides a namespace.&quot;</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">raise</span> <span class=\"n\">ImproperlyConfigured</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Passing a </span><span class=\"si\">%d</span><span class=\"s2\">-tuple to include() is not supported. Pass a &quot;</span>\n                <span class=\"s2\">&quot;2-tuple containing the list of patterns and app_name, and &quot;</span>\n                <span class=\"s2\">&quot;provide the namespace argument to include() instead.&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"c1\"># No namespace hint - use manually provided namespace.</span>\n        <span class=\"n\">urlconf_module</span> <span class=\"o\">=</span> <span class=\"n\">arg</span>\n\n    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">urlconf_module</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"n\">urlconf_module</span> <span class=\"o\">=</span> <span class=\"n\">import_module</span><span class=\"p\">(</span><span class=\"n\">urlconf_module</span><span class=\"p\">)</span>\n    <span class=\"n\">patterns</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">urlconf_module</span><span class=\"p\">,</span> <span class=\"s2\">&quot;urlpatterns&quot;</span><span class=\"p\">,</span> <span class=\"n\">urlconf_module</span><span class=\"p\">)</span>\n    <span class=\"n\">app_name</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">urlconf_module</span><span class=\"p\">,</span> <span class=\"s2\">&quot;app_name&quot;</span><span class=\"p\">,</span> <span class=\"n\">app_name</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">namespace</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">app_name</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"n\">ImproperlyConfigured</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;Specifying a namespace in include() without providing an app_name &quot;</span>\n            <span class=\"s2\">&quot;is not supported. Set the app_name attribute in the included &quot;</span>\n            <span class=\"s2\">&quot;module, or pass a 2-tuple containing the list of patterns and &quot;</span>\n            <span class=\"s2\">&quot;app_name instead.&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n    <span class=\"n\">namespace</span> <span class=\"o\">=</span> <span class=\"n\">namespace</span> <span class=\"ow\">or</span> <span class=\"n\">app_name</span>\n    <span class=\"c1\"># Make sure the patterns can be iterated through (without this, some</span>\n    <span class=\"c1\"># testcases will break).</span>\n    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">patterns</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">)):</span>\n        <span class=\"k\">for</span> <span class=\"n\">url_pattern</span> <span class=\"ow\">in</span> <span class=\"n\">patterns</span><span class=\"p\">:</span>\n            <span class=\"n\">pattern</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">url_pattern</span><span class=\"p\">,</span> <span class=\"s2\">&quot;pattern&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"p\">,</span> <span class=\"n\">LocalePrefixPattern</span><span class=\"p\">):</span>\n                <span class=\"k\">raise</span> <span class=\"n\">ImproperlyConfigured</span><span class=\"p\">(</span>\n                    <span class=\"s2\">&quot;Using i18n_patterns in an included URLconf is not allowed.&quot;</span>\n                <span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">urlconf_module</span><span class=\"p\">,</span> <span class=\"n\">app_name</span><span class=\"p\">,</span> <span class=\"n\">namespace</span><span class=\"p\">)</span></div>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_path</span><span class=\"p\">(</span><span class=\"n\">route</span><span class=\"p\">,</span> <span class=\"n\">view</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">Pattern</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">django.views</span> <span class=\"kn\">import</span> <span class=\"n\">View</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">kwargs</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;kwargs argument must be a dict, but got </span><span class=\"si\">{</span><span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"si\">}</span><span class=\"s2\">.&quot;</span>\n        <span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">view</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">)):</span>\n        <span class=\"c1\"># For include(...) processing.</span>\n        <span class=\"n\">pattern</span> <span class=\"o\">=</span> <span class=\"n\">Pattern</span><span class=\"p\">(</span><span class=\"n\">route</span><span class=\"p\">,</span> <span class=\"n\">is_endpoint</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"n\">urlconf_module</span><span class=\"p\">,</span> <span class=\"n\">app_name</span><span class=\"p\">,</span> <span class=\"n\">namespace</span> <span class=\"o\">=</span> <span class=\"n\">view</span>\n        <span class=\"k\">return</span> <span class=\"n\">URLResolver</span><span class=\"p\">(</span>\n            <span class=\"n\">pattern</span><span class=\"p\">,</span>\n            <span class=\"n\">urlconf_module</span><span class=\"p\">,</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">,</span>\n            <span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"n\">app_name</span><span class=\"p\">,</span>\n            <span class=\"n\">namespace</span><span class=\"o\">=</span><span class=\"n\">namespace</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"n\">callable</span><span class=\"p\">(</span><span class=\"n\">view</span><span class=\"p\">):</span>\n        <span class=\"n\">pattern</span> <span class=\"o\">=</span> <span class=\"n\">Pattern</span><span class=\"p\">(</span><span class=\"n\">route</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">is_endpoint</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">URLPattern</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"p\">,</span> <span class=\"n\">view</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">view</span><span class=\"p\">,</span> <span class=\"n\">View</span><span class=\"p\">):</span>\n        <span class=\"n\">view_cls_name</span> <span class=\"o\">=</span> <span class=\"n\">view</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;view must be a callable, pass </span><span class=\"si\">{</span><span class=\"n\">view_cls_name</span><span class=\"si\">}</span><span class=\"s2\">.as_view(), not &quot;</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">view_cls_name</span><span class=\"si\">}</span><span class=\"s2\">().&quot;</span>\n        <span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">TypeError</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;view must be a callable or a list/tuple in the case of include().&quot;</span>\n        <span class=\"p\">)</span>\n\n\n<span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">_path</span><span class=\"p\">,</span> <span class=\"n\">Pattern</span><span class=\"o\">=</span><span class=\"n\">RoutePattern</span><span class=\"p\">)</span>\n<span class=\"n\">re_path</span> <span class=\"o\">=</span> <span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">_path</span><span class=\"p\">,</span> <span class=\"n\">Pattern</span><span class=\"o\">=</span><span class=\"n\">RegexPattern</span><span class=\"p\">)</span>\n</pre></div>", "current_page_name": "_modules/django/urls/conf", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
