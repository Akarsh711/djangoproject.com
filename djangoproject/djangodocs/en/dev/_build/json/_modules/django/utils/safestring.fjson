{"parents": [{"link": "../../../", "title": "Module code"}, {"link": "../../", "title": "django"}], "title": "django.utils.safestring", "body": "<h1>Source code for django.utils.safestring</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">Functions for working with &quot;safe strings&quot;: strings that can be displayed safely</span>\n<span class=\"sd\">without further escaping in HTML. Marking something as a &quot;safe string&quot; means</span>\n<span class=\"sd\">that the producer of the string has already turned characters that should not</span>\n<span class=\"sd\">be interpreted by the HTML engine (e.g. &#39;&lt;&#39;) into the appropriate entities.</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"kn\">import</span> <span class=\"n\">wraps</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.functional</span> <span class=\"kn\">import</span> <span class=\"n\">keep_lazy</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">SafeData</span><span class=\"p\">:</span>\n    <span class=\"vm\">__slots__</span> <span class=\"o\">=</span> <span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__html__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Return the html representation of a string for interoperability.</span>\n\n<span class=\"sd\">        This allows other template engines to understand Django&#39;s SafeData.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span>\n\n\n<div class=\"viewcode-block\" id=\"SafeString\"><a class=\"viewcode-back\" href=\"../../../../ref/utils/#django.utils.safestring.SafeString\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">SafeString</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">SafeData</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    A str subclass that has been specifically marked as &quot;safe&quot; for HTML output</span>\n<span class=\"sd\">    purposes.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"vm\">__slots__</span> <span class=\"o\">=</span> <span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__add__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">rhs</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Concatenating a safe string with another safe bytestring or</span>\n<span class=\"sd\">        safe string is safe. Otherwise, the result is no longer safe.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__add__</span><span class=\"p\">(</span><span class=\"n\">rhs</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">rhs</span><span class=\"p\">,</span> <span class=\"n\">SafeData</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">SafeString</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">t</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span></div>\n\n\n<span class=\"n\">SafeText</span> <span class=\"o\">=</span> <span class=\"n\">SafeString</span>  <span class=\"c1\"># For backwards compatibility since Django 2.0.</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_safety_decorator</span><span class=\"p\">(</span><span class=\"n\">safety_marker</span><span class=\"p\">,</span> <span class=\"n\">func</span><span class=\"p\">):</span>\n    <span class=\"nd\">@wraps</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">wrapper</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">safety_marker</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">))</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">wrapper</span>\n\n\n<div class=\"viewcode-block\" id=\"mark_safe\"><a class=\"viewcode-back\" href=\"../../../../ref/utils/#django.utils.safestring.mark_safe\">[docs]</a><span class=\"nd\">@keep_lazy</span><span class=\"p\">(</span><span class=\"n\">SafeString</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">mark_safe</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Explicitly mark a string as safe for (HTML) output purposes. The returned</span>\n<span class=\"sd\">    object can be used everywhere a string is appropriate.</span>\n\n<span class=\"sd\">    If used on a method as a decorator, mark the returned data as safe.</span>\n\n<span class=\"sd\">    Can be called multiple times on a single string.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"s2\">&quot;__html__&quot;</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">s</span>\n    <span class=\"k\">if</span> <span class=\"n\">callable</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">_safety_decorator</span><span class=\"p\">(</span><span class=\"n\">mark_safe</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">SafeString</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span></div>\n</pre></div>", "current_page_name": "_modules/django/utils/safestring", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}