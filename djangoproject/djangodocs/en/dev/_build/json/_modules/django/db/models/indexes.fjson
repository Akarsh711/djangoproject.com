{"parents": [{"link": "../../../../", "title": "Module code"}, {"link": "../../../", "title": "django"}], "title": "django.db.models.indexes", "body": "<h1>Source code for django.db.models.indexes</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">types</span> <span class=\"kn\">import</span> <span class=\"n\">NoneType</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.backends.utils</span> <span class=\"kn\">import</span> <span class=\"n\">names_digest</span><span class=\"p\">,</span> <span class=\"n\">split_identifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.expressions</span> <span class=\"kn\">import</span> <span class=\"n\">Col</span><span class=\"p\">,</span> <span class=\"n\">ExpressionList</span><span class=\"p\">,</span> <span class=\"n\">F</span><span class=\"p\">,</span> <span class=\"n\">Func</span><span class=\"p\">,</span> <span class=\"n\">OrderBy</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.functions</span> <span class=\"kn\">import</span> <span class=\"n\">Collate</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.query_utils</span> <span class=\"kn\">import</span> <span class=\"n\">Q</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.sql</span> <span class=\"kn\">import</span> <span class=\"n\">Query</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.functional</span> <span class=\"kn\">import</span> <span class=\"n\">partition</span>\n\n<span class=\"n\">__all__</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Index&quot;</span><span class=\"p\">]</span>\n\n\n<div class=\"viewcode-block\" id=\"Index\"><a class=\"viewcode-back\" href=\"../../../../../ref/models/indexes/#django.db.models.Index\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Index</span><span class=\"p\">:</span>\n    <span class=\"n\">suffix</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;idx&quot;</span>\n    <span class=\"c1\"># The max length of the name of the index (restricted to 30 for</span>\n    <span class=\"c1\"># cross-database compatibility with Oracle)</span>\n    <span class=\"n\">max_name_length</span> <span class=\"o\">=</span> <span class=\"mi\">30</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"o\">*</span><span class=\"n\">expressions</span><span class=\"p\">,</span>\n        <span class=\"n\">fields</span><span class=\"o\">=</span><span class=\"p\">(),</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">db_tablespace</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">opclasses</span><span class=\"o\">=</span><span class=\"p\">(),</span>\n        <span class=\"n\">condition</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">include</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">opclasses</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;An index must be named to use opclasses.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">condition</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"n\">Q</span><span class=\"p\">)):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Index.condition must be a Q instance.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">condition</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;An index must be named to use condition.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">)):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Index.fields must be a list or tuple.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">opclasses</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">)):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Index.opclasses must be a list or tuple.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">expressions</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">fields</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;At least one field or expression is required to define an index.&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">expressions</span> <span class=\"ow\">and</span> <span class=\"n\">fields</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Index.fields and expressions are mutually exclusive.&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">expressions</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;An index must be named to use expressions.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">expressions</span> <span class=\"ow\">and</span> <span class=\"n\">opclasses</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Index.opclasses cannot be used with expressions. Use &quot;</span>\n                <span class=\"s2\">&quot;django.contrib.postgres.indexes.OpClass() instead.&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">opclasses</span> <span class=\"ow\">and</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">opclasses</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Index.fields and Index.opclasses must have the same number of &quot;</span>\n                <span class=\"s2\">&quot;elements.&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">fields</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"nb\">all</span><span class=\"p\">(</span><span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">field</span> <span class=\"ow\">in</span> <span class=\"n\">fields</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Index.fields must contain only strings with field names.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">include</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">name</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;A covering index must be named.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">include</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">)):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Index.include must be a list or tuple.&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">)</span>\n        <span class=\"c1\"># A list of 2-tuple with the field name and ordering (&#39;&#39; or &#39;DESC&#39;).</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields_orders</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"p\">(</span><span class=\"n\">field_name</span><span class=\"o\">.</span><span class=\"n\">removeprefix</span><span class=\"p\">(</span><span class=\"s2\">&quot;-&quot;</span><span class=\"p\">),</span> <span class=\"s2\">&quot;DESC&quot;</span> <span class=\"k\">if</span> <span class=\"n\">field_name</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;-&quot;</span><span class=\"p\">)</span> <span class=\"k\">else</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">field_name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields</span>\n        <span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">db_tablespace</span> <span class=\"o\">=</span> <span class=\"n\">db_tablespace</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">opclasses</span> <span class=\"o\">=</span> <span class=\"n\">opclasses</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">condition</span> <span class=\"o\">=</span> <span class=\"n\">condition</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">include</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">include</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">include</span> <span class=\"k\">else</span> <span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">expressions</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span>\n            <span class=\"n\">F</span><span class=\"p\">(</span><span class=\"n\">expression</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">expression</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"k\">else</span> <span class=\"n\">expression</span>\n            <span class=\"k\">for</span> <span class=\"n\">expression</span> <span class=\"ow\">in</span> <span class=\"n\">expressions</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">contains_expressions</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">bool</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">expressions</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_condition_sql</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">condition</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n        <span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">Query</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">alias_cols</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"n\">where</span> <span class=\"o\">=</span> <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">build_where</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">condition</span><span class=\"p\">)</span>\n        <span class=\"n\">compiler</span> <span class=\"o\">=</span> <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">get_compiler</span><span class=\"p\">(</span><span class=\"n\">connection</span><span class=\"o\">=</span><span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"n\">sql</span><span class=\"p\">,</span> <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"n\">where</span><span class=\"o\">.</span><span class=\"n\">as_sql</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">sql</span> <span class=\"o\">%</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">quote_value</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">params</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">create_sql</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">using</span><span class=\"o\">=</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">include</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">get_field</span><span class=\"p\">(</span><span class=\"n\">field_name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">column</span> <span class=\"k\">for</span> <span class=\"n\">field_name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">include</span>\n        <span class=\"p\">]</span>\n        <span class=\"n\">condition</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_condition_sql</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">expressions</span><span class=\"p\">:</span>\n            <span class=\"n\">index_expressions</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n            <span class=\"k\">for</span> <span class=\"n\">expression</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">expressions</span><span class=\"p\">:</span>\n                <span class=\"n\">index_expression</span> <span class=\"o\">=</span> <span class=\"n\">IndexExpression</span><span class=\"p\">(</span><span class=\"n\">expression</span><span class=\"p\">)</span>\n                <span class=\"n\">index_expression</span><span class=\"o\">.</span><span class=\"n\">set_wrapper_classes</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"p\">)</span>\n                <span class=\"n\">index_expressions</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">index_expression</span><span class=\"p\">)</span>\n            <span class=\"n\">expressions</span> <span class=\"o\">=</span> <span class=\"n\">ExpressionList</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">index_expressions</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">resolve_expression</span><span class=\"p\">(</span>\n                <span class=\"n\">Query</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">alias_cols</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n            <span class=\"n\">col_suffixes</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">get_field</span><span class=\"p\">(</span><span class=\"n\">field_name</span><span class=\"p\">)</span>\n                <span class=\"k\">for</span> <span class=\"n\">field_name</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields_orders</span>\n            <span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">supports_index_column_ordering</span><span class=\"p\">:</span>\n                <span class=\"n\">col_suffixes</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">order</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">order</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields_orders</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">col_suffixes</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields_orders</span><span class=\"p\">)</span>\n            <span class=\"n\">expressions</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">return</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">_create_index_sql</span><span class=\"p\">(</span>\n            <span class=\"n\">model</span><span class=\"p\">,</span>\n            <span class=\"n\">fields</span><span class=\"o\">=</span><span class=\"n\">fields</span><span class=\"p\">,</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"n\">using</span><span class=\"o\">=</span><span class=\"n\">using</span><span class=\"p\">,</span>\n            <span class=\"n\">db_tablespace</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">db_tablespace</span><span class=\"p\">,</span>\n            <span class=\"n\">col_suffixes</span><span class=\"o\">=</span><span class=\"n\">col_suffixes</span><span class=\"p\">,</span>\n            <span class=\"n\">opclasses</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">opclasses</span><span class=\"p\">,</span>\n            <span class=\"n\">condition</span><span class=\"o\">=</span><span class=\"n\">condition</span><span class=\"p\">,</span>\n            <span class=\"n\">include</span><span class=\"o\">=</span><span class=\"n\">include</span><span class=\"p\">,</span>\n            <span class=\"n\">expressions</span><span class=\"o\">=</span><span class=\"n\">expressions</span><span class=\"p\">,</span>\n            <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">remove_sql</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">_delete_index_sql</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">deconstruct</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">.</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__module__</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n        <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;django.db.models.indexes&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;django.db.models&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">}</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;fields&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">db_tablespace</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;db_tablespace&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">db_tablespace</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">opclasses</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;opclasses&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">opclasses</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">condition</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;condition&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">condition</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">include</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;include&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">include</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">expressions</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">clone</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;Create a copy of this Index.&quot;&quot;&quot;</span>\n        <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deconstruct</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">set_name_with_model</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Generate a unique name for the index.</span>\n\n<span class=\"sd\">        The name is divided into 3 parts - table name (12 chars), field name</span>\n<span class=\"sd\">        (8 chars) and unique hash + suffix (10 chars). Each part is made to</span>\n<span class=\"sd\">        fit its size by truncating the excess length.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">table_name</span> <span class=\"o\">=</span> <span class=\"n\">split_identifier</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">db_table</span><span class=\"p\">)</span>\n        <span class=\"n\">column_names</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">get_field</span><span class=\"p\">(</span><span class=\"n\">field_name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">column</span>\n            <span class=\"k\">for</span> <span class=\"n\">field_name</span><span class=\"p\">,</span> <span class=\"n\">order</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields_orders</span>\n        <span class=\"p\">]</span>\n        <span class=\"n\">column_names_with_order</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"p\">((</span><span class=\"s2\">&quot;-</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"k\">if</span> <span class=\"n\">order</span> <span class=\"k\">else</span> <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"n\">column_name</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">column_name</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">field_name</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span>\n                <span class=\"n\">column_names</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields_orders</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">]</span>\n        <span class=\"c1\"># The length of the parts of the name is based on the default max</span>\n        <span class=\"c1\"># length of 30 characters.</span>\n        <span class=\"n\">hash_data</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">table_name</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">column_names_with_order</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">suffix</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">_</span><span class=\"si\">%s</span><span class=\"s2\">_</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span>\n            <span class=\"n\">table_name</span><span class=\"p\">[:</span><span class=\"mi\">11</span><span class=\"p\">],</span>\n            <span class=\"n\">column_names</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][:</span><span class=\"mi\">7</span><span class=\"p\">],</span>\n            <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">_</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">names_digest</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">hash_data</span><span class=\"p\">,</span> <span class=\"n\">length</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">suffix</span><span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">max_name_length</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Index too long for multiple database support. Is self.suffix &quot;</span>\n                <span class=\"s2\">&quot;longer than 3 characters?&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;_&quot;</span> <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">isdigit</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;D</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;&lt;</span><span class=\"si\">%s</span><span class=\"s2\">:</span><span class=\"si\">%s%s%s%s%s%s%s</span><span class=\"s2\">&gt;&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__qualname__</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields</span> <span class=\"k\">else</span> <span class=\"s2\">&quot; fields=</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;&quot;</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">expressions</span> <span class=\"k\">else</span> <span class=\"s2\">&quot; expressions=</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">expressions</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;&quot;</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"k\">else</span> <span class=\"s2\">&quot; name=</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;&quot;</span>\n            <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">db_tablespace</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span>\n            <span class=\"k\">else</span> <span class=\"s2\">&quot; db_tablespace=</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">db_tablespace</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;&quot;</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">condition</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"s2\">&quot; condition=</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">condition</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">include</span> <span class=\"k\">else</span> <span class=\"s2\">&quot; include=</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">include</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;&quot;</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">opclasses</span> <span class=\"k\">else</span> <span class=\"s2\">&quot; opclasses=</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">opclasses</span><span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__eq__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span> <span class=\"o\">==</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deconstruct</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">deconstruct</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"bp\">NotImplemented</span></div>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">IndexExpression</span><span class=\"p\">(</span><span class=\"n\">Func</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;Order and wrap expressions for CREATE INDEX statements.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">%(expressions)s</span><span class=\"s2\">&quot;</span>\n    <span class=\"n\">wrapper_classes</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">OrderBy</span><span class=\"p\">,</span> <span class=\"n\">Collate</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">set_wrapper_classes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Some databases (e.g. MySQL) treats COLLATE as an indexed expression.</span>\n        <span class=\"k\">if</span> <span class=\"n\">connection</span> <span class=\"ow\">and</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">collate_as_index_expression</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">wrapper_classes</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"n\">wrapper_cls</span>\n                    <span class=\"k\">for</span> <span class=\"n\">wrapper_cls</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">wrapper_classes</span>\n                    <span class=\"k\">if</span> <span class=\"n\">wrapper_cls</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"n\">Collate</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">register_wrappers</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">wrapper_classes</span><span class=\"p\">):</span>\n        <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">wrapper_classes</span> <span class=\"o\">=</span> <span class=\"n\">wrapper_classes</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">resolve_expression</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">allow_joins</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">reuse</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">summarize</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">for_save</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"n\">expressions</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">())</span>\n        <span class=\"c1\"># Split expressions and wrappers.</span>\n        <span class=\"n\">index_expressions</span><span class=\"p\">,</span> <span class=\"n\">wrappers</span> <span class=\"o\">=</span> <span class=\"n\">partition</span><span class=\"p\">(</span>\n            <span class=\"k\">lambda</span> <span class=\"n\">e</span><span class=\"p\">:</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">wrapper_classes</span><span class=\"p\">),</span>\n            <span class=\"n\">expressions</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">wrapper_types</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">wrapper</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">wrapper</span> <span class=\"ow\">in</span> <span class=\"n\">wrappers</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">wrapper_types</span><span class=\"p\">)</span> <span class=\"o\">!=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">wrapper_types</span><span class=\"p\">)):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Multiple references to </span><span class=\"si\">%s</span><span class=\"s2\"> can&#39;t be used in an indexed &quot;</span>\n                <span class=\"s2\">&quot;expression.&quot;</span>\n                <span class=\"o\">%</span> <span class=\"s2\">&quot;, &quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span>\n                    <span class=\"p\">[</span><span class=\"n\">wrapper_cls</span><span class=\"o\">.</span><span class=\"vm\">__qualname__</span> <span class=\"k\">for</span> <span class=\"n\">wrapper_cls</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">wrapper_classes</span><span class=\"p\">]</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">expressions</span><span class=\"p\">[</span><span class=\"mi\">1</span> <span class=\"p\">:</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">wrappers</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">wrappers</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\"> must be topmost expressions in an indexed expression.&quot;</span>\n                <span class=\"o\">%</span> <span class=\"s2\">&quot;, &quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span>\n                    <span class=\"p\">[</span><span class=\"n\">wrapper_cls</span><span class=\"o\">.</span><span class=\"vm\">__qualname__</span> <span class=\"k\">for</span> <span class=\"n\">wrapper_cls</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">wrapper_classes</span><span class=\"p\">]</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n        <span class=\"c1\"># Wrap expressions in parentheses if they are not column references.</span>\n        <span class=\"n\">root_expression</span> <span class=\"o\">=</span> <span class=\"n\">index_expressions</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">resolve_root_expression</span> <span class=\"o\">=</span> <span class=\"n\">root_expression</span><span class=\"o\">.</span><span class=\"n\">resolve_expression</span><span class=\"p\">(</span>\n            <span class=\"n\">query</span><span class=\"p\">,</span>\n            <span class=\"n\">allow_joins</span><span class=\"p\">,</span>\n            <span class=\"n\">reuse</span><span class=\"p\">,</span>\n            <span class=\"n\">summarize</span><span class=\"p\">,</span>\n            <span class=\"n\">for_save</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">resolve_root_expression</span><span class=\"p\">,</span> <span class=\"n\">Col</span><span class=\"p\">):</span>\n            <span class=\"n\">root_expression</span> <span class=\"o\">=</span> <span class=\"n\">Func</span><span class=\"p\">(</span><span class=\"n\">root_expression</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"s2\">&quot;(</span><span class=\"si\">%(expressions)s</span><span class=\"s2\">)&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">wrappers</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Order wrappers and set their expressions.</span>\n            <span class=\"n\">wrappers</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span>\n                <span class=\"n\">wrappers</span><span class=\"p\">,</span>\n                <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">w</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">wrapper_classes</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">)),</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">wrappers</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">wrapper</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">wrapper</span> <span class=\"ow\">in</span> <span class=\"n\">wrappers</span><span class=\"p\">]</span>\n            <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">wrapper</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">wrappers</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]):</span>\n                <span class=\"n\">wrapper</span><span class=\"o\">.</span><span class=\"n\">set_source_expressions</span><span class=\"p\">([</span><span class=\"n\">wrappers</span><span class=\"p\">[</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]])</span>\n            <span class=\"c1\"># Set the root expression on the deepest wrapper.</span>\n            <span class=\"n\">wrappers</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_source_expressions</span><span class=\"p\">([</span><span class=\"n\">root_expression</span><span class=\"p\">])</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_source_expressions</span><span class=\"p\">([</span><span class=\"n\">wrappers</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]])</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Use the root expression, if there are no wrappers.</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_source_expressions</span><span class=\"p\">([</span><span class=\"n\">root_expression</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">resolve_expression</span><span class=\"p\">(</span>\n            <span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">allow_joins</span><span class=\"p\">,</span> <span class=\"n\">reuse</span><span class=\"p\">,</span> <span class=\"n\">summarize</span><span class=\"p\">,</span> <span class=\"n\">for_save</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">as_sqlite</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Casting to numeric is unnecessary.</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">as_sql</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">extra_context</span><span class=\"p\">)</span>\n</pre></div>", "current_page_name": "_modules/django/db/models/indexes", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}