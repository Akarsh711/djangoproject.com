{"parents": [{"link": "../../../../", "title": "Module code"}, {"link": "../../../", "title": "django"}], "title": "django.views.decorators.http", "body": "<h1>Source code for django.views.decorators.http</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">Decorators for views based on HTTP headers.</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"kn\">import</span> <span class=\"n\">wraps</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.http</span> <span class=\"kn\">import</span> <span class=\"n\">HttpResponseNotAllowed</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.middleware.http</span> <span class=\"kn\">import</span> <span class=\"n\">ConditionalGetMiddleware</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils</span> <span class=\"kn\">import</span> <span class=\"n\">timezone</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.cache</span> <span class=\"kn\">import</span> <span class=\"n\">get_conditional_response</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">decorator_from_middleware</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.http</span> <span class=\"kn\">import</span> <span class=\"n\">http_date</span><span class=\"p\">,</span> <span class=\"n\">quote_etag</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.log</span> <span class=\"kn\">import</span> <span class=\"n\">log_response</span>\n\n<span class=\"n\">conditional_page</span> <span class=\"o\">=</span> <span class=\"n\">decorator_from_middleware</span><span class=\"p\">(</span><span class=\"n\">ConditionalGetMiddleware</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"require_http_methods\"><a class=\"viewcode-back\" href=\"../../../../../topics/http/decorators/#django.views.decorators.http.require_http_methods\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">require_http_methods</span><span class=\"p\">(</span><span class=\"n\">request_method_list</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Decorator to make a view only accept particular request methods.  Usage::</span>\n\n<span class=\"sd\">        @require_http_methods([&quot;GET&quot;, &quot;POST&quot;])</span>\n<span class=\"sd\">        def my_view(request):</span>\n<span class=\"sd\">            # I can assume now that only GET or POST requests make it this far</span>\n<span class=\"sd\">            # ...</span>\n\n<span class=\"sd\">    Note that request methods should be in uppercase.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">decorator</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">):</span>\n        <span class=\"nd\">@wraps</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">)</span>\n        <span class=\"k\">def</span> <span class=\"nf\">inner</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">method</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">request_method_list</span><span class=\"p\">:</span>\n                <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">HttpResponseNotAllowed</span><span class=\"p\">(</span><span class=\"n\">request_method_list</span><span class=\"p\">)</span>\n                <span class=\"n\">log_response</span><span class=\"p\">(</span>\n                    <span class=\"s2\">&quot;Method Not Allowed (</span><span class=\"si\">%s</span><span class=\"s2\">): </span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n                    <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">method</span><span class=\"p\">,</span>\n                    <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">,</span>\n                    <span class=\"n\">response</span><span class=\"o\">=</span><span class=\"n\">response</span><span class=\"p\">,</span>\n                    <span class=\"n\">request</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"n\">response</span>\n            <span class=\"k\">return</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">inner</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">decorator</span></div>\n\n\n<span class=\"n\">require_GET</span> <span class=\"o\">=</span> <span class=\"n\">require_http_methods</span><span class=\"p\">([</span><span class=\"s2\">&quot;GET&quot;</span><span class=\"p\">])</span>\n<span class=\"n\">require_GET</span><span class=\"o\">.</span><span class=\"vm\">__doc__</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Decorator to require that a view only accepts the GET method.&quot;</span>\n\n<span class=\"n\">require_POST</span> <span class=\"o\">=</span> <span class=\"n\">require_http_methods</span><span class=\"p\">([</span><span class=\"s2\">&quot;POST&quot;</span><span class=\"p\">])</span>\n<span class=\"n\">require_POST</span><span class=\"o\">.</span><span class=\"vm\">__doc__</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Decorator to require that a view only accepts the POST method.&quot;</span>\n\n<span class=\"n\">require_safe</span> <span class=\"o\">=</span> <span class=\"n\">require_http_methods</span><span class=\"p\">([</span><span class=\"s2\">&quot;GET&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;HEAD&quot;</span><span class=\"p\">])</span>\n<span class=\"n\">require_safe</span><span class=\"o\">.</span><span class=\"vm\">__doc__</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"s2\">&quot;Decorator to require that a view only accepts safe methods: GET and HEAD.&quot;</span>\n<span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"condition\"><a class=\"viewcode-back\" href=\"../../../../../topics/http/decorators/#django.views.decorators.http.condition\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">condition</span><span class=\"p\">(</span><span class=\"n\">etag_func</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">last_modified_func</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Decorator to support conditional retrieval (or change) for a view</span>\n<span class=\"sd\">    function.</span>\n\n<span class=\"sd\">    The parameters are callables to compute the ETag and last modified time for</span>\n<span class=\"sd\">    the requested resource, respectively. The callables are passed the same</span>\n<span class=\"sd\">    parameters as the view itself. The ETag function should return a string (or</span>\n<span class=\"sd\">    None if the resource doesn&#39;t exist), while the last_modified function</span>\n<span class=\"sd\">    should return a datetime object (or None if the resource doesn&#39;t exist).</span>\n\n<span class=\"sd\">    The ETag function should return a complete ETag, including quotes (e.g.</span>\n<span class=\"sd\">    &#39;&quot;etag&quot;&#39;), since that&#39;s the only way to distinguish between weak and strong</span>\n<span class=\"sd\">    ETags. If an unquoted ETag is returned (e.g. &#39;etag&#39;), it will be converted</span>\n<span class=\"sd\">    to a strong ETag by adding quotes.</span>\n\n<span class=\"sd\">    This decorator will either pass control to the wrapped view function or</span>\n<span class=\"sd\">    return an HTTP 304 response (unmodified) or 412 response (precondition</span>\n<span class=\"sd\">    failed), depending upon the request method. In either case, the decorator</span>\n<span class=\"sd\">    will add the generated ETag and Last-Modified headers to the response if</span>\n<span class=\"sd\">    the headers aren&#39;t already set and if the request&#39;s method is safe.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">decorator</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">):</span>\n        <span class=\"nd\">@wraps</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">)</span>\n        <span class=\"k\">def</span> <span class=\"nf\">inner</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n            <span class=\"c1\"># Compute values (if any) for the requested resource.</span>\n            <span class=\"n\">res_last_modified</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n            <span class=\"k\">if</span> <span class=\"n\">last_modified_func</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">dt</span> <span class=\"o\">:=</span> <span class=\"n\">last_modified_func</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n                    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">is_aware</span><span class=\"p\">(</span><span class=\"n\">dt</span><span class=\"p\">):</span>\n                        <span class=\"n\">dt</span> <span class=\"o\">=</span> <span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">make_aware</span><span class=\"p\">(</span><span class=\"n\">dt</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">utc</span><span class=\"p\">)</span>\n                    <span class=\"n\">res_last_modified</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">timestamp</span><span class=\"p\">())</span>\n            <span class=\"c1\"># The value from etag_func() could be quoted or unquoted.</span>\n            <span class=\"n\">res_etag</span> <span class=\"o\">=</span> <span class=\"n\">etag_func</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">etag_func</span> <span class=\"k\">else</span> <span class=\"kc\">None</span>\n            <span class=\"n\">res_etag</span> <span class=\"o\">=</span> <span class=\"n\">quote_etag</span><span class=\"p\">(</span><span class=\"n\">res_etag</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">res_etag</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"kc\">None</span>\n            <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">get_conditional_response</span><span class=\"p\">(</span>\n                <span class=\"n\">request</span><span class=\"p\">,</span>\n                <span class=\"n\">etag</span><span class=\"o\">=</span><span class=\"n\">res_etag</span><span class=\"p\">,</span>\n                <span class=\"n\">last_modified</span><span class=\"o\">=</span><span class=\"n\">res_last_modified</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">response</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n            <span class=\"c1\"># Set relevant headers on the response if they don&#39;t already exist</span>\n            <span class=\"c1\"># and if the request method is safe.</span>\n            <span class=\"k\">if</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">method</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s2\">&quot;GET&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;HEAD&quot;</span><span class=\"p\">):</span>\n                <span class=\"k\">if</span> <span class=\"n\">res_last_modified</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">has_header</span><span class=\"p\">(</span><span class=\"s2\">&quot;Last-Modified&quot;</span><span class=\"p\">):</span>\n                    <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"s2\">&quot;Last-Modified&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">http_date</span><span class=\"p\">(</span><span class=\"n\">res_last_modified</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">res_etag</span><span class=\"p\">:</span>\n                    <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">setdefault</span><span class=\"p\">(</span><span class=\"s2\">&quot;ETag&quot;</span><span class=\"p\">,</span> <span class=\"n\">res_etag</span><span class=\"p\">)</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">response</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">inner</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">decorator</span></div>\n\n\n<span class=\"c1\"># Shortcut decorators for common cases based on ETag or Last-Modified only</span>\n<div class=\"viewcode-block\" id=\"etag\"><a class=\"viewcode-back\" href=\"../../../../../topics/http/decorators/#django.views.decorators.http.etag\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">etag</span><span class=\"p\">(</span><span class=\"n\">etag_func</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">condition</span><span class=\"p\">(</span><span class=\"n\">etag_func</span><span class=\"o\">=</span><span class=\"n\">etag_func</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"last_modified\"><a class=\"viewcode-back\" href=\"../../../../../topics/http/decorators/#django.views.decorators.http.last_modified\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">last_modified</span><span class=\"p\">(</span><span class=\"n\">last_modified_func</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">condition</span><span class=\"p\">(</span><span class=\"n\">last_modified_func</span><span class=\"o\">=</span><span class=\"n\">last_modified_func</span><span class=\"p\">)</span></div>\n</pre></div>", "current_page_name": "_modules/django/views/decorators/http", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
