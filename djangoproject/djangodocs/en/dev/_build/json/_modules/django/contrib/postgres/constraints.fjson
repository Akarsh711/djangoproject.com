{"parents": [{"link": "../../../../", "title": "Module code"}, {"link": "../../../", "title": "django"}], "title": "django.contrib.postgres.constraints", "body": "<h1>Source code for django.contrib.postgres.constraints</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">types</span> <span class=\"kn\">import</span> <span class=\"n\">NoneType</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.contrib.postgres.indexes</span> <span class=\"kn\">import</span> <span class=\"n\">OpClass</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.core.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">ValidationError</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">DEFAULT_DB_ALIAS</span><span class=\"p\">,</span> <span class=\"n\">NotSupportedError</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.backends.ddl_references</span> <span class=\"kn\">import</span> <span class=\"n\">Expressions</span><span class=\"p\">,</span> <span class=\"n\">Statement</span><span class=\"p\">,</span> <span class=\"n\">Table</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">BaseConstraint</span><span class=\"p\">,</span> <span class=\"n\">Deferrable</span><span class=\"p\">,</span> <span class=\"n\">F</span><span class=\"p\">,</span> <span class=\"n\">Q</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.expressions</span> <span class=\"kn\">import</span> <span class=\"n\">Exists</span><span class=\"p\">,</span> <span class=\"n\">ExpressionList</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.indexes</span> <span class=\"kn\">import</span> <span class=\"n\">IndexExpression</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.lookups</span> <span class=\"kn\">import</span> <span class=\"n\">PostgresOperatorLookup</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models.sql</span> <span class=\"kn\">import</span> <span class=\"n\">Query</span>\n\n<span class=\"n\">__all__</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;ExclusionConstraint&quot;</span><span class=\"p\">]</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExclusionConstraintExpression</span><span class=\"p\">(</span><span class=\"n\">IndexExpression</span><span class=\"p\">):</span>\n    <span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">%(expressions)s</span><span class=\"s2\"> WITH </span><span class=\"si\">%(operator)s</span><span class=\"s2\">&quot;</span>\n\n\n<div class=\"viewcode-block\" id=\"ExclusionConstraint\"><a class=\"viewcode-back\" href=\"../../../../../ref/contrib/postgres/constraints/#django.contrib.postgres.constraints.ExclusionConstraint\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ExclusionConstraint</span><span class=\"p\">(</span><span class=\"n\">BaseConstraint</span><span class=\"p\">):</span>\n    <span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"s2\">&quot;CONSTRAINT </span><span class=\"si\">%(name)s</span><span class=\"s2\"> EXCLUDE USING </span><span class=\"si\">%(index_type)s</span><span class=\"s2\"> &quot;</span>\n        <span class=\"s2\">&quot;(</span><span class=\"si\">%(expressions)s</span><span class=\"s2\">)</span><span class=\"si\">%(include)s%(where)s%(deferrable)s</span><span class=\"s2\">&quot;</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"o\">*</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"p\">,</span>\n        <span class=\"n\">expressions</span><span class=\"p\">,</span>\n        <span class=\"n\">index_type</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">condition</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">deferrable</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">include</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">violation_error_code</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">violation_error_message</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">index_type</span> <span class=\"ow\">and</span> <span class=\"n\">index_type</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">{</span><span class=\"s2\">&quot;gist&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;spgist&quot;</span><span class=\"p\">}:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Exclusion constraints only support GiST or SP-GiST indexes.&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">expressions</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;At least one expression is required to define an exclusion &quot;</span>\n                <span class=\"s2\">&quot;constraint.&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">all</span><span class=\"p\">(</span>\n            <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">expr</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">))</span> <span class=\"ow\">and</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">expr</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">2</span> <span class=\"k\">for</span> <span class=\"n\">expr</span> <span class=\"ow\">in</span> <span class=\"n\">expressions</span>\n        <span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;The expressions must be a list of 2-tuples.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">condition</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"n\">Q</span><span class=\"p\">)):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;ExclusionConstraint.condition must be a Q instance.&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">deferrable</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"n\">Deferrable</span><span class=\"p\">)):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;ExclusionConstraint.deferrable must be a Deferrable instance.&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">include</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">)):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;ExclusionConstraint.include must be a list or tuple.&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">expressions</span> <span class=\"o\">=</span> <span class=\"n\">expressions</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index_type</span> <span class=\"o\">=</span> <span class=\"n\">index_type</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;GIST&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">condition</span> <span class=\"o\">=</span> <span class=\"n\">condition</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deferrable</span> <span class=\"o\">=</span> <span class=\"n\">deferrable</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">include</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">include</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">include</span> <span class=\"k\">else</span> <span class=\"p\">()</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span>\n            <span class=\"n\">violation_error_code</span><span class=\"o\">=</span><span class=\"n\">violation_error_code</span><span class=\"p\">,</span>\n            <span class=\"n\">violation_error_message</span><span class=\"o\">=</span><span class=\"n\">violation_error_message</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_expressions</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">):</span>\n        <span class=\"n\">expressions</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">idx</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">expression</span><span class=\"p\">,</span> <span class=\"n\">operator</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">expressions</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">expression</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n                <span class=\"n\">expression</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"p\">(</span><span class=\"n\">expression</span><span class=\"p\">)</span>\n            <span class=\"n\">expression</span> <span class=\"o\">=</span> <span class=\"n\">ExclusionConstraintExpression</span><span class=\"p\">(</span><span class=\"n\">expression</span><span class=\"p\">,</span> <span class=\"n\">operator</span><span class=\"o\">=</span><span class=\"n\">operator</span><span class=\"p\">)</span>\n            <span class=\"n\">expression</span><span class=\"o\">.</span><span class=\"n\">set_wrapper_classes</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"p\">)</span>\n            <span class=\"n\">expressions</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">expression</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">ExpressionList</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">expressions</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">resolve_expression</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_condition_sql</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">condition</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n        <span class=\"n\">where</span> <span class=\"o\">=</span> <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">build_where</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">condition</span><span class=\"p\">)</span>\n        <span class=\"n\">sql</span><span class=\"p\">,</span> <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"n\">where</span><span class=\"o\">.</span><span class=\"n\">as_sql</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">sql</span> <span class=\"o\">%</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">quote_value</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">params</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">constraint_sql</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">):</span>\n        <span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">Query</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">alias_cols</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"n\">compiler</span> <span class=\"o\">=</span> <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">get_compiler</span><span class=\"p\">(</span><span class=\"n\">connection</span><span class=\"o\">=</span><span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"p\">)</span>\n        <span class=\"n\">expressions</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_expressions</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">)</span>\n        <span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">db_table</span>\n        <span class=\"n\">condition</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_condition_sql</span><span class=\"p\">(</span><span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">)</span>\n        <span class=\"n\">include</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">get_field</span><span class=\"p\">(</span><span class=\"n\">field_name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">column</span> <span class=\"k\">for</span> <span class=\"n\">field_name</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">include</span>\n        <span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">Statement</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">,</span>\n            <span class=\"n\">table</span><span class=\"o\">=</span><span class=\"n\">Table</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">quote_name</span><span class=\"p\">),</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">quote_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">),</span>\n            <span class=\"n\">index_type</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index_type</span><span class=\"p\">,</span>\n            <span class=\"n\">expressions</span><span class=\"o\">=</span><span class=\"n\">Expressions</span><span class=\"p\">(</span>\n                <span class=\"n\">table</span><span class=\"p\">,</span> <span class=\"n\">expressions</span><span class=\"p\">,</span> <span class=\"n\">compiler</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">quote_value</span>\n            <span class=\"p\">),</span>\n            <span class=\"n\">where</span><span class=\"o\">=</span><span class=\"s2\">&quot; WHERE (</span><span class=\"si\">%s</span><span class=\"s2\">)&quot;</span> <span class=\"o\">%</span> <span class=\"n\">condition</span> <span class=\"k\">if</span> <span class=\"n\">condition</span> <span class=\"k\">else</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">include</span><span class=\"o\">=</span><span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">_index_include_sql</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">),</span>\n            <span class=\"n\">deferrable</span><span class=\"o\">=</span><span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">_deferrable_constraint_sql</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deferrable</span><span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">create_sql</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">check_supported</span><span class=\"p\">(</span><span class=\"n\">schema_editor</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">Statement</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;ALTER TABLE </span><span class=\"si\">%(table)s</span><span class=\"s2\"> ADD </span><span class=\"si\">%(constraint)s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">table</span><span class=\"o\">=</span><span class=\"n\">Table</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"o\">.</span><span class=\"n\">db_table</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">quote_name</span><span class=\"p\">),</span>\n            <span class=\"n\">constraint</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">constraint_sql</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">remove_sql</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">_delete_constraint_sql</span><span class=\"p\">(</span>\n            <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">sql_delete_check</span><span class=\"p\">,</span>\n            <span class=\"n\">model</span><span class=\"p\">,</span>\n            <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">quote_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">check_supported</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">schema_editor</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">include</span>\n            <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index_type</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;spgist&quot;</span>\n            <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">schema_editor</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">supports_covering_spgist_indexes</span>\n        <span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"n\">NotSupportedError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Covering exclusion constraints using an SP-GiST index &quot;</span>\n                <span class=\"s2\">&quot;require PostgreSQL 14+.&quot;</span>\n            <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">deconstruct</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">deconstruct</span><span class=\"p\">()</span>\n        <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;expressions&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">expressions</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">condition</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;condition&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">condition</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index_type</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;gist&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;index_type&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index_type</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deferrable</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;deferrable&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deferrable</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">include</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;include&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">include</span>\n        <span class=\"k\">return</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">kwargs</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__eq__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">name</span>\n                <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index_type</span> <span class=\"o\">==</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">index_type</span>\n                <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">expressions</span> <span class=\"o\">==</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">expressions</span>\n                <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">condition</span> <span class=\"o\">==</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">condition</span>\n                <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deferrable</span> <span class=\"o\">==</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">deferrable</span>\n                <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">include</span> <span class=\"o\">==</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">include</span>\n                <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">violation_error_code</span> <span class=\"o\">==</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">violation_error_code</span>\n                <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">violation_error_message</span> <span class=\"o\">==</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"n\">violation_error_message</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__eq__</span><span class=\"p\">(</span><span class=\"n\">other</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;&lt;</span><span class=\"si\">%s</span><span class=\"s2\">: index_type=</span><span class=\"si\">%s</span><span class=\"s2\"> expressions=</span><span class=\"si\">%s</span><span class=\"s2\"> name=</span><span class=\"si\">%s%s%s%s%s%s</span><span class=\"s2\">&gt;&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__qualname__</span><span class=\"p\">,</span>\n            <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index_type</span><span class=\"p\">),</span>\n            <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">expressions</span><span class=\"p\">),</span>\n            <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">),</span>\n            <span class=\"s2\">&quot;&quot;</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">condition</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"s2\">&quot; condition=</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">condition</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deferrable</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"s2\">&quot; deferrable=</span><span class=\"si\">%r</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deferrable</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;&quot;</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">include</span> <span class=\"k\">else</span> <span class=\"s2\">&quot; include=</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">include</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span>\n                <span class=\"s2\">&quot;&quot;</span>\n                <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">violation_error_code</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span>\n                <span class=\"k\">else</span> <span class=\"s2\">&quot; violation_error_code=</span><span class=\"si\">%r</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">violation_error_code</span>\n            <span class=\"p\">),</span>\n            <span class=\"p\">(</span>\n                <span class=\"s2\">&quot;&quot;</span>\n                <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">violation_error_message</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span>\n                <span class=\"ow\">or</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">violation_error_message</span> <span class=\"o\">==</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">default_violation_error_message</span>\n                <span class=\"k\">else</span> <span class=\"s2\">&quot; violation_error_message=</span><span class=\"si\">%r</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">violation_error_message</span>\n            <span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">validate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">exclude</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">using</span><span class=\"o\">=</span><span class=\"n\">DEFAULT_DB_ALIAS</span><span class=\"p\">):</span>\n        <span class=\"n\">queryset</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_default_manager</span><span class=\"o\">.</span><span class=\"n\">using</span><span class=\"p\">(</span><span class=\"n\">using</span><span class=\"p\">)</span>\n        <span class=\"n\">replacement_map</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">_get_field_value_map</span><span class=\"p\">(</span>\n            <span class=\"n\">meta</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"p\">,</span> <span class=\"n\">exclude</span><span class=\"o\">=</span><span class=\"n\">exclude</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">replacements</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">F</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">):</span> <span class=\"n\">value</span> <span class=\"k\">for</span> <span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">replacement_map</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()}</span>\n        <span class=\"n\">lookups</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">idx</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">expression</span><span class=\"p\">,</span> <span class=\"n\">operator</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">expressions</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">expression</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n                <span class=\"n\">expression</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"p\">(</span><span class=\"n\">expression</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">exclude</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">expression</span><span class=\"p\">,</span> <span class=\"n\">F</span><span class=\"p\">):</span>\n                    <span class=\"k\">if</span> <span class=\"n\">expression</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">exclude</span><span class=\"p\">:</span>\n                        <span class=\"k\">return</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"k\">for</span> <span class=\"n\">expr</span> <span class=\"ow\">in</span> <span class=\"n\">expression</span><span class=\"o\">.</span><span class=\"n\">flatten</span><span class=\"p\">():</span>\n                        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">expr</span><span class=\"p\">,</span> <span class=\"n\">F</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">expr</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">exclude</span><span class=\"p\">:</span>\n                            <span class=\"k\">return</span>\n            <span class=\"n\">rhs_expression</span> <span class=\"o\">=</span> <span class=\"n\">expression</span><span class=\"o\">.</span><span class=\"n\">replace_expressions</span><span class=\"p\">(</span><span class=\"n\">replacements</span><span class=\"p\">)</span>\n            <span class=\"c1\"># Remove OpClass because it only has sense during the constraint</span>\n            <span class=\"c1\"># creation.</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">expression</span><span class=\"p\">,</span> <span class=\"n\">OpClass</span><span class=\"p\">):</span>\n                <span class=\"n\">expression</span> <span class=\"o\">=</span> <span class=\"n\">expression</span><span class=\"o\">.</span><span class=\"n\">get_source_expressions</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">rhs_expression</span><span class=\"p\">,</span> <span class=\"n\">OpClass</span><span class=\"p\">):</span>\n                <span class=\"n\">rhs_expression</span> <span class=\"o\">=</span> <span class=\"n\">rhs_expression</span><span class=\"o\">.</span><span class=\"n\">get_source_expressions</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"n\">lookup</span> <span class=\"o\">=</span> <span class=\"n\">PostgresOperatorLookup</span><span class=\"p\">(</span><span class=\"n\">lhs</span><span class=\"o\">=</span><span class=\"n\">expression</span><span class=\"p\">,</span> <span class=\"n\">rhs</span><span class=\"o\">=</span><span class=\"n\">rhs_expression</span><span class=\"p\">)</span>\n            <span class=\"n\">lookup</span><span class=\"o\">.</span><span class=\"n\">postgres_operator</span> <span class=\"o\">=</span> <span class=\"n\">operator</span>\n            <span class=\"n\">lookups</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">lookup</span><span class=\"p\">)</span>\n        <span class=\"n\">queryset</span> <span class=\"o\">=</span> <span class=\"n\">queryset</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">lookups</span><span class=\"p\">)</span>\n        <span class=\"n\">model_class_pk</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">_get_pk_val</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_meta</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">_state</span><span class=\"o\">.</span><span class=\"n\">adding</span> <span class=\"ow\">and</span> <span class=\"n\">model_class_pk</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">queryset</span> <span class=\"o\">=</span> <span class=\"n\">queryset</span><span class=\"o\">.</span><span class=\"n\">exclude</span><span class=\"p\">(</span><span class=\"n\">pk</span><span class=\"o\">=</span><span class=\"n\">model_class_pk</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">condition</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">queryset</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n                <span class=\"k\">raise</span> <span class=\"n\">ValidationError</span><span class=\"p\">(</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_violation_error_message</span><span class=\"p\">(),</span> <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">violation_error_code</span>\n                <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">condition</span> <span class=\"o\">&amp;</span> <span class=\"n\">Exists</span><span class=\"p\">(</span><span class=\"n\">queryset</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">condition</span><span class=\"p\">)))</span><span class=\"o\">.</span><span class=\"n\">check</span><span class=\"p\">(</span>\n                <span class=\"n\">replacement_map</span><span class=\"p\">,</span> <span class=\"n\">using</span><span class=\"o\">=</span><span class=\"n\">using</span>\n            <span class=\"p\">):</span>\n                <span class=\"k\">raise</span> <span class=\"n\">ValidationError</span><span class=\"p\">(</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_violation_error_message</span><span class=\"p\">(),</span> <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">violation_error_code</span>\n                <span class=\"p\">)</span></div>\n</pre></div>", "current_page_name": "_modules/django/contrib/postgres/constraints", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}