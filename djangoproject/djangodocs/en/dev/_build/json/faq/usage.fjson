{"parents": [{"link": "../", "title": "Django FAQ"}], "prev": {"link": "../install/", "title": "FAQ: Installation"}, "next": {"link": "../help/", "title": "FAQ: Getting Help"}, "title": "FAQ: Using Django", "meta": {}, "body": "<div class=\"section\" id=\"s-faq-using-django\">\n<span id=\"faq-using-django\"></span><h1>FAQ: Using Django<a class=\"headerlink\" href=\"#faq-using-django\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"s-why-do-i-get-an-error-about-importing-django-settings-module\">\n<span id=\"why-do-i-get-an-error-about-importing-django-settings-module\"></span><h2>Why do I get an error about importing <span class=\"target\" id=\"index-0\"></span><a class=\"reference internal\" href=\"../../topics/settings/#envvar-DJANGO_SETTINGS_MODULE\"><code class=\"xref std std-envvar docutils literal notranslate\"><span class=\"pre\">DJANGO_SETTINGS_MODULE</span></code></a>?<a class=\"headerlink\" href=\"#why-do-i-get-an-error-about-importing-django-settings-module\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Make sure that:</p>\n<ul class=\"simple\">\n<li>The environment variable <span class=\"target\" id=\"index-1\"></span><a class=\"reference internal\" href=\"../../topics/settings/#envvar-DJANGO_SETTINGS_MODULE\"><code class=\"xref std std-envvar docutils literal notranslate\"><span class=\"pre\">DJANGO_SETTINGS_MODULE</span></code></a> is set to a\nfully-qualified Python module (i.e. <code class=\"docutils literal notranslate\"><span class=\"pre\">mysite.settings</span></code>).</li>\n<li>Said module is on <code class=\"docutils literal notranslate\"><span class=\"pre\">sys.path</span></code> (<code class=\"docutils literal notranslate\"><span class=\"pre\">import</span> <span class=\"pre\">mysite.settings</span></code> should work).</li>\n<li>The module doesn\u2019t contain syntax errors.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-i-can-t-stand-your-template-language-do-i-have-to-use-it\">\n<span id=\"i-can-t-stand-your-template-language-do-i-have-to-use-it\"></span><h2>I can\u2019t stand your template language. Do I have to use it?<a class=\"headerlink\" href=\"#i-can-t-stand-your-template-language-do-i-have-to-use-it\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>We happen to think our template engine is the best thing since chunky bacon,\nbut we recognize that choosing a template language runs close to religion.\nThere\u2019s nothing about Django that requires using the template language, so\nif you\u2019re attached to Jinja2, Mako, or whatever, feel free to use those.</p>\n</div>\n<div class=\"section\" id=\"s-do-i-have-to-use-your-model-database-layer\">\n<span id=\"do-i-have-to-use-your-model-database-layer\"></span><h2>Do I have to use your model/database layer?<a class=\"headerlink\" href=\"#do-i-have-to-use-your-model-database-layer\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Nope. Just like the template system, the model/database layer is decoupled from\nthe rest of the framework.</p>\n<p>The one exception is: If you use a different database library, you won\u2019t get to\nuse Django\u2019s automatically-generated admin site. That app is coupled to the\nDjango database layer.</p>\n</div>\n<div class=\"section\" id=\"s-how-do-i-use-image-and-file-fields\">\n<span id=\"how-do-i-use-image-and-file-fields\"></span><h2>How do I use image and file fields?<a class=\"headerlink\" href=\"#how-do-i-use-image-and-file-fields\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Using a <a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.FileField\" title=\"django.db.models.FileField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FileField</span></code></a> or an\n<a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.ImageField\" title=\"django.db.models.ImageField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ImageField</span></code></a> in a model takes a few steps:</p>\n<ol class=\"arabic simple\">\n<li>In your settings file, you\u2019ll need to define <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-MEDIA_ROOT\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">MEDIA_ROOT</span></code></a> as\nthe full path to a directory where you\u2019d like Django to store uploaded\nfiles. (For performance, these files are not stored in the database.)\nDefine <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-MEDIA_URL\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">MEDIA_URL</span></code></a> as the base public URL of that directory.\nMake sure that this directory is writable by the web server\u2019s user\naccount.</li>\n<li>Add the <a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.FileField\" title=\"django.db.models.FileField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">FileField</span></code></a> or\n<a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.ImageField\" title=\"django.db.models.ImageField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ImageField</span></code></a> to your model, defining the\n<a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.FileField.upload_to\" title=\"django.db.models.FileField.upload_to\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">upload_to</span></code></a> option to specify a\nsubdirectory of <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-MEDIA_ROOT\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">MEDIA_ROOT</span></code></a> to use for uploaded files.</li>\n<li>All that will be stored in your database is a path to the file\n(relative to <a class=\"reference internal\" href=\"../../ref/settings/#std-setting-MEDIA_ROOT\"><code class=\"xref std std-setting docutils literal notranslate\"><span class=\"pre\">MEDIA_ROOT</span></code></a>). You\u2019ll most likely want to use the\nconvenience <a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.fields.files.FieldFile.url\" title=\"django.db.models.fields.files.FieldFile.url\"><code class=\"xref py py-attr docutils literal notranslate\"><span class=\"pre\">url</span></code></a> attribute\nprovided by Django. For example, if your\n<a class=\"reference internal\" href=\"../../ref/models/fields/#django.db.models.ImageField\" title=\"django.db.models.ImageField\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ImageField</span></code></a> is called <code class=\"docutils literal notranslate\"><span class=\"pre\">mug_shot</span></code>, you can get\nthe absolute path to your image in a template with\n<code class=\"docutils literal notranslate\"><span class=\"pre\">{{</span> <span class=\"pre\">object.mug_shot.url</span> <span class=\"pre\">}}</span></code>.</li>\n</ol>\n</div>\n<div class=\"section\" id=\"s-how-do-i-make-a-variable-available-to-all-my-templates\">\n<span id=\"how-do-i-make-a-variable-available-to-all-my-templates\"></span><h2>How do I make a variable available to all my templates?<a class=\"headerlink\" href=\"#how-do-i-make-a-variable-available-to-all-my-templates\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Sometimes your templates all need the same thing. A common example would be\ndynamically generated menus. At first glance, it seems logical to add a common\ndictionary to the template context.</p>\n<p>The best way to do this in Django is to use a <code class=\"docutils literal notranslate\"><span class=\"pre\">RequestContext</span></code>. Details on\nhow to do this are here: <a class=\"reference internal\" href=\"../../ref/templates/api/#subclassing-context-requestcontext\"><span class=\"std std-ref\">Using RequestContext</span></a>.</p>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["faq/help", "FAQ: Getting Help", "N", "next"], ["faq/install", "FAQ: Installation", "P", "previous"]], "sourcename": "faq/usage.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">FAQ: Using Django</a><ul>\n<li><a class=\"reference internal\" href=\"#why-do-i-get-an-error-about-importing-django-settings-module\">Why do I get an error about importing <code class=\"xref std std-envvar docutils literal notranslate\"><span class=\"pre\">DJANGO_SETTINGS_MODULE</span></code>?</a></li>\n<li><a class=\"reference internal\" href=\"#i-can-t-stand-your-template-language-do-i-have-to-use-it\">I can\u2019t stand your template language. Do I have to use it?</a></li>\n<li><a class=\"reference internal\" href=\"#do-i-have-to-use-your-model-database-layer\">Do I have to use your model/database layer?</a></li>\n<li><a class=\"reference internal\" href=\"#how-do-i-use-image-and-file-fields\">How do I use image and file fields?</a></li>\n<li><a class=\"reference internal\" href=\"#how-do-i-make-a-variable-available-to-all-my-templates\">How do I make a variable available to all my templates?</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "faq/usage", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": false}
