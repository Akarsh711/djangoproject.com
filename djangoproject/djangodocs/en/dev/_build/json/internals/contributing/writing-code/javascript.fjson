{"parents": [{"link": "../../../", "title": "Django internals"}, {"link": "../../", "title": "Contributing to Django"}, {"link": "../", "title": "Writing code"}], "prev": {"link": "../working-with-git/", "title": "Working with Git and GitHub"}, "next": {"link": "../../writing-documentation/", "title": "Writing documentation"}, "title": "JavaScript", "meta": {}, "body": "<div class=\"section\" id=\"s-javascript\">\n<span id=\"javascript\"></span><h1>JavaScript<a class=\"headerlink\" href=\"#javascript\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>While most of Django core is Python, the <code class=\"docutils literal notranslate\"><span class=\"pre\">admin</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">gis</span></code> contrib apps\ncontain JavaScript code.</p>\n<p>Please follow these coding standards when writing JavaScript code for inclusion\nin Django.</p>\n<div class=\"section\" id=\"s-code-style\">\n<span id=\"code-style\"></span><h2>Code style<a class=\"headerlink\" href=\"#code-style\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul class=\"simple\">\n<li>Please conform to the indentation style dictated in the <code class=\"docutils literal notranslate\"><span class=\"pre\">.editorconfig</span></code>\nfile. We recommend using a text editor with <a class=\"reference external\" href=\"https://editorconfig.org/\">EditorConfig</a> support to avoid\nindentation and whitespace issues. Most of the JavaScript files use 4 spaces\nfor indentation, but there are some exceptions.</li>\n<li>When naming variables, use <code class=\"docutils literal notranslate\"><span class=\"pre\">camelCase</span></code> instead of <code class=\"docutils literal notranslate\"><span class=\"pre\">underscore_case</span></code>.\nDifferent JavaScript files sometimes use a different code style. Please try to\nconform to the code style of each file.</li>\n<li>Use the <a class=\"reference external\" href=\"https://eslint.org/\">ESLint</a> code linter to check your code for bugs and style errors.\nESLint will be run when you run the JavaScript tests. We also recommended\ninstalling a ESLint plugin in your text editor.</li>\n<li>Where possible, write code that will work even if the page structure is later\nchanged with JavaScript. For instance, when binding a click handler, use\n<code class=\"docutils literal notranslate\"><span class=\"pre\">$('body').on('click',</span> <span class=\"pre\">selector,</span> <span class=\"pre\">func)</span></code> instead of\n<code class=\"docutils literal notranslate\"><span class=\"pre\">$(selector).click(func)</span></code>. This makes it easier for projects to extend\nDjango\u2019s default behavior with JavaScript.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-javascript-patches\">\n<span id=\"s-id1\"></span><span id=\"javascript-patches\"></span><span id=\"id1\"></span><h2>JavaScript patches<a class=\"headerlink\" href=\"#javascript-patches\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Django\u2019s admin system leverages the jQuery framework to increase the\ncapabilities of the admin interface. In conjunction, there is an emphasis on\nadmin JavaScript performance and minimizing overall admin media file size.</p>\n</div>\n<div class=\"section\" id=\"s-javascript-tests\">\n<span id=\"s-id2\"></span><span id=\"javascript-tests\"></span><span id=\"id2\"></span><h2>JavaScript tests<a class=\"headerlink\" href=\"#javascript-tests\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Django\u2019s JavaScript tests can be run in a browser or from the command line.\nThe tests are located in a top level <a class=\"reference external\" href=\"https://github.com/django/django/blob/main/js_tests\">js_tests</a> directory.</p>\n<div class=\"section\" id=\"s-writing-tests\">\n<span id=\"writing-tests\"></span><h3>Writing tests<a class=\"headerlink\" href=\"#writing-tests\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Django\u2019s JavaScript tests use <a class=\"reference external\" href=\"https://qunitjs.com/\">QUnit</a>. Here is an example test module:</p>\n<div class=\"highlight-javascript notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nx\">QUnit</span><span class=\"p\">.</span><span class=\"nx\">module</span><span class=\"p\">(</span><span class=\"s1\">&#39;magicTricks&#39;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">beforeEach</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kd\">function</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">const</span><span class=\"w\"> </span><span class=\"nx\">$</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">django</span><span class=\"p\">.</span><span class=\"nx\">jQuery</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\">&#39;#qunit-fixture&#39;</span><span class=\"p\">).</span><span class=\"nx\">append</span><span class=\"p\">(</span><span class=\"s1\">&#39;&lt;button class=&quot;button&quot;&gt;&lt;/button&gt;&#39;</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">});</span><span class=\"w\"></span>\n\n<span class=\"nx\">QUnit</span><span class=\"p\">.</span><span class=\"nx\">test</span><span class=\"p\">(</span><span class=\"s1\">&#39;removeOnClick removes button on click&#39;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">assert</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">const</span><span class=\"w\"> </span><span class=\"nx\">$</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">django</span><span class=\"p\">.</span><span class=\"nx\">jQuery</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">removeOnClick</span><span class=\"p\">(</span><span class=\"s1\">&#39;.button&#39;</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">assert</span><span class=\"p\">.</span><span class=\"nx\">equal</span><span class=\"p\">(</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\">&#39;.button&#39;</span><span class=\"p\">).</span><span class=\"nx\">length</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">1</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\">&#39;.button&#39;</span><span class=\"p\">).</span><span class=\"nx\">click</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">assert</span><span class=\"p\">.</span><span class=\"nx\">equal</span><span class=\"p\">(</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\">&#39;.button&#39;</span><span class=\"p\">).</span><span class=\"nx\">length</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">0</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">});</span><span class=\"w\"></span>\n\n<span class=\"nx\">QUnit</span><span class=\"p\">.</span><span class=\"nx\">test</span><span class=\"p\">(</span><span class=\"s1\">&#39;copyOnClick adds button on click&#39;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">assert</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">const</span><span class=\"w\"> </span><span class=\"nx\">$</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nx\">django</span><span class=\"p\">.</span><span class=\"nx\">jQuery</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">copyOnClick</span><span class=\"p\">(</span><span class=\"s1\">&#39;.button&#39;</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">assert</span><span class=\"p\">.</span><span class=\"nx\">equal</span><span class=\"p\">(</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\">&#39;.button&#39;</span><span class=\"p\">).</span><span class=\"nx\">length</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">1</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\">&#39;.button&#39;</span><span class=\"p\">).</span><span class=\"nx\">click</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">assert</span><span class=\"p\">.</span><span class=\"nx\">equal</span><span class=\"p\">(</span><span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\">&#39;.button&#39;</span><span class=\"p\">).</span><span class=\"nx\">length</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mf\">2</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">});</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<p>Please consult the <code class=\"docutils literal notranslate\"><span class=\"pre\">QUnit</span></code> documentation for information on the types of\n<a class=\"reference external\" href=\"https://api.qunitjs.com/assert/\">assertions supported by QUnit</a>.</p>\n</div>\n<div class=\"section\" id=\"s-running-tests\">\n<span id=\"running-tests\"></span><h3>Running tests<a class=\"headerlink\" href=\"#running-tests\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The JavaScript tests may be run from a web browser or from the command line.</p>\n<div class=\"section\" id=\"s-testing-from-a-web-browser\">\n<span id=\"testing-from-a-web-browser\"></span><h4>Testing from a web browser<a class=\"headerlink\" href=\"#testing-from-a-web-browser\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>To run the tests from a web browser, open up <a class=\"reference external\" href=\"https://github.com/django/django/blob/main/js_tests/tests.html\">js_tests/tests.html</a> in your\nbrowser.</p>\n<p>To measure code coverage when running the tests, you need to view that file\nover HTTP. To view code coverage:</p>\n<ul class=\"simple\">\n<li>Execute <code class=\"docutils literal notranslate\"><span class=\"pre\">python</span> <span class=\"pre\">-m</span> <span class=\"pre\">http.server</span></code> from the root directory (not from inside\n<code class=\"docutils literal notranslate\"><span class=\"pre\">js_tests</span></code>).</li>\n<li>Open <a class=\"reference external\" href=\"http://localhost:8000/js_tests/tests.html\">http://localhost:8000/js_tests/tests.html</a> in your web browser.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"s-testing-from-the-command-line\">\n<span id=\"testing-from-the-command-line\"></span><h4>Testing from the command line<a class=\"headerlink\" href=\"#testing-from-the-command-line\" title=\"Permalink to this headline\">\u00b6</a></h4>\n<p>To run the tests from the command line, you need to have <a class=\"reference external\" href=\"https://nodejs.org/\">Node.js</a> installed.</p>\n<p>After installing <code class=\"docutils literal notranslate\"><span class=\"pre\">Node.js</span></code>, install the JavaScript test dependencies by\nrunning the following from the root of your Django checkout:</p>\n<div class=\"console-block\" id=\"console-block-0\">\n<input class=\"c-tab-unix\" id=\"c-tab-0-unix\" type=\"radio\" name=\"console-0\" checked>\n<label for=\"c-tab-0-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-0-win\" type=\"radio\" name=\"console-0\">\n<label for=\"c-tab-0-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-0-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>npm install\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-0-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> npm install\n</pre></div>\n</section>\n</div>\n<p>Then run the tests with:</p>\n<div class=\"console-block\" id=\"console-block-1\">\n<input class=\"c-tab-unix\" id=\"c-tab-1-unix\" type=\"radio\" name=\"console-1\" checked>\n<label for=\"c-tab-1-unix\" title=\"Linux/macOS\">&#xf17c/&#xf179</label>\n<input class=\"c-tab-win\" id=\"c-tab-1-win\" type=\"radio\" name=\"console-1\">\n<label for=\"c-tab-1-win\" title=\"Windows\">&#xf17a</label>\n<section class=\"c-content-unix\" id=\"c-content-1-unix\">\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$ </span>npm <span class=\"nb\">test</span>\n</pre></div>\n</div>\n</section>\n<section class=\"c-content-win\" id=\"c-content-1-win\">\n<div class=\"highlight\"><pre><span></span><span class=\"gp\">...\\&gt;</span> npm test\n</pre></div>\n</section>\n</div>\n</div>\n</div>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["internals/contributing/writing-documentation", "Writing documentation", "N", "next"], ["internals/contributing/writing-code/working-with-git", "Working with Git and GitHub", "P", "previous"]], "sourcename": "internals/contributing/writing-code/javascript.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">JavaScript</a><ul>\n<li><a class=\"reference internal\" href=\"#code-style\">Code style</a></li>\n<li><a class=\"reference internal\" href=\"#javascript-patches\">JavaScript patches</a></li>\n<li><a class=\"reference internal\" href=\"#javascript-tests\">JavaScript tests</a><ul>\n<li><a class=\"reference internal\" href=\"#writing-tests\">Writing tests</a></li>\n<li><a class=\"reference internal\" href=\"#running-tests\">Running tests</a><ul>\n<li><a class=\"reference internal\" href=\"#testing-from-a-web-browser\">Testing from a web browser</a></li>\n<li><a class=\"reference internal\" href=\"#testing-from-the-command-line\">Testing from the command line</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".txt", "current_page_name": "internals/contributing/writing-code/javascript", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.13", "include_console_assets": true}